{
  "version": 3,
  "sources": ["../../node_modules/tslib/tslib.js", "../../node_modules/tslib/modules/index.js", "../../node_modules/@lit/reactive-element/src/decorators/custom-element.ts", "../../node_modules/@lit/reactive-element/src/decorators/property.ts", "../../node_modules/@lit/reactive-element/src/decorators/state.ts", "../../node_modules/@lit/reactive-element/src/decorators/base.ts", "../../node_modules/@lit/reactive-element/src/decorators/query.ts", "../../node_modules/@lit/reactive-element/src/decorators/query-all.ts", "../../node_modules/@lit/reactive-element/src/decorators/query-async.ts", "../../node_modules/@lit/reactive-element/src/decorators/query-assigned-elements.ts", "../../node_modules/@lit/reactive-element/src/decorators/query-assigned-nodes.ts", "../../node_modules/@lit-labs/ssr-dom-shim/src/lib/element-internals.ts", "../../node_modules/@lit-labs/ssr-dom-shim/src/index.ts", "../../node_modules/@lit/reactive-element/src/css-tag.ts", "../../node_modules/@lit/reactive-element/src/reactive-element.ts", "../../node_modules/lit-html/src/lit-html.ts", "../../node_modules/lit-element/src/lit-element.ts", "../../node_modules/lit-html/src/is-server.ts", "../../elevation/internal/elevation.ts", "../../elevation/internal/elevation-styles.ts", "../../elevation/elevation.ts", "../../internal/controller/attachable-controller.ts", "../../focus/internal/focus-ring.ts", "../../focus/internal/focus-ring-styles.ts", "../../focus/md-focus-ring.ts", "../../node_modules/lit-html/src/directive.ts", "../../node_modules/lit-html/src/directives/class-map.ts", "../../internal/motion/animation.ts", "../../ripple/internal/ripple.ts", "../../ripple/internal/ripple-styles.ts", "../../ripple/ripple.ts", "../../internal/aria/aria.ts", "../../internal/aria/delegate.ts", "../../labs/behaviors/element-internals.ts", "../../internal/controller/form-submitter.ts", "../../internal/events/form-label-activation.ts", "../../button/internal/button.ts", "../../button/internal/elevated-button.ts", "../../button/internal/elevated-styles.ts", "../../button/internal/shared-elevation-styles.ts", "../../button/internal/shared-styles.ts", "../../button/elevated-button.ts", "../../button/internal/filled-button.ts", "../../button/internal/filled-styles.ts", "../../button/filled-button.ts", "../../button/internal/filled-tonal-button.ts", "../../button/internal/filled-tonal-styles.ts", "../../button/filled-tonal-button.ts", "../../button/internal/outlined-button.ts", "../../button/internal/outlined-styles.ts", "../../button/outlined-button.ts", "../../button/internal/text-button.ts", "../../button/internal/text-styles.ts", "../../button/text-button.ts", "../../internal/events/redispatch-event.ts", "../../labs/behaviors/constraint-validation.ts", "../../labs/behaviors/form-associated.ts", "../../labs/behaviors/validators/validator.ts", "../../labs/behaviors/validators/checkbox-validator.ts", "../../checkbox/internal/checkbox.ts", "../../checkbox/internal/checkbox-styles.ts", "../../checkbox/checkbox.ts", "../../chips/internal/chip.ts", "../../chips/internal/assist-chip.ts", "../../chips/internal/assist-styles.ts", "../../chips/internal/elevated-styles.ts", "../../chips/internal/shared-styles.ts", "../../chips/assist-chip.ts", "../../chips/internal/chip-set.ts", "../../chips/internal/chip-set-styles.ts", "../../chips/chip-set.ts", "../../chips/internal/multi-action-chip.ts", "../../chips/internal/trailing-icons.ts", "../../chips/internal/filter-chip.ts", "../../chips/internal/filter-styles.ts", "../../chips/internal/selectable-styles.ts", "../../chips/internal/trailing-icon-styles.ts", "../../chips/filter-chip.ts", "../../chips/internal/input-chip.ts", "../../chips/internal/input-styles.ts", "../../chips/input-chip.ts", "../../chips/internal/suggestion-chip.ts", "../../chips/internal/suggestion-styles.ts", "../../chips/suggestion-chip.ts", "../../divider/internal/divider.ts", "../../divider/internal/divider-styles.ts", "../../divider/divider.ts", "../../dialog/internal/animations.ts", "../../dialog/internal/dialog.ts", "../../dialog/internal/dialog-styles.ts", "../../dialog/dialog.ts", "../../fab/internal/shared.ts", "../../fab/internal/fab.ts", "../../fab/internal/fab-branded-styles.ts", "../../fab/internal/forced-colors-styles.ts", "../../fab/internal/shared-styles.ts", "../../fab/branded-fab.ts", "../../fab/internal/fab-styles.ts", "../../fab/fab.ts", "../../field/internal/field.ts", "../../field/internal/filled-field.ts", "../../field/internal/filled-styles.ts", "../../field/internal/shared-styles.ts", "../../field/filled-field.ts", "../../field/internal/outlined-field.ts", "../../field/internal/outlined-styles.ts", "../../field/outlined-field.ts", "../../icon/internal/icon.ts", "../../icon/internal/icon-styles.ts", "../../icon/icon.ts", "../../iconbutton/internal/filled-styles.ts", "../../node_modules/lit-html/src/static.ts", "../../internal/controller/is-rtl.ts", "../../iconbutton/internal/icon-button.ts", "../../iconbutton/internal/shared-styles.ts", "../../iconbutton/filled-icon-button.ts", "../../iconbutton/internal/filled-tonal-styles.ts", "../../iconbutton/filled-tonal-icon-button.ts", "../../iconbutton/internal/standard-styles.ts", "../../iconbutton/icon-button.ts", "../../iconbutton/internal/outlined-styles.ts", "../../iconbutton/outlined-icon-button.ts", "../../list/internal/list-navigation-helpers.ts", "../../list/internal/list-controller.ts", "../../list/internal/list.ts", "../../list/internal/list-styles.ts", "../../list/list.ts", "../../labs/item/internal/item.ts", "../../labs/item/internal/item-styles.ts", "../../labs/item/item.ts", "../../list/internal/listitem/list-item.ts", "../../list/internal/listitem/list-item-styles.ts", "../../list/list-item.ts", "../../node_modules/lit-html/src/directives/style-map.ts", "../../menu/internal/controllers/shared.ts", "../../menu/internal/controllers/surfacePositionController.ts", "../../menu/internal/controllers/typeaheadController.ts", "../../menu/internal/menu.ts", "../../menu/internal/menu-styles.ts", "../../menu/menu.ts", "../../menu/internal/controllers/menuItemController.ts", "../../menu/internal/menuitem/menu-item.ts", "../../menu/internal/menuitem/menu-item-styles.ts", "../../menu/menu-item.ts", "../../menu/internal/submenu/sub-menu.ts", "../../menu/internal/submenu/sub-menu-styles.ts", "../../menu/sub-menu.ts", "../../progress/internal/progress.ts", "../../progress/internal/circular-progress.ts", "../../progress/internal/circular-progress-styles.ts", "../../progress/circular-progress.ts", "../../progress/internal/linear-progress.ts", "../../progress/internal/linear-progress-styles.ts", "../../progress/linear-progress.ts", "../../labs/behaviors/focusable.ts", "../../labs/behaviors/validators/radio-validator.ts", "../../radio/internal/single-selection-controller.ts", "../../radio/internal/radio.ts", "../../radio/internal/radio-styles.ts", "../../radio/radio.ts", "../../labs/behaviors/on-report-validity.ts", "../../labs/behaviors/validators/select-validator.ts", "../../select/internal/shared.ts", "../../select/internal/select.ts", "../../select/internal/filled-select.ts", "../../select/internal/filled-select-styles.ts", "../../select/internal/shared-styles.ts", "../../select/filled-select.ts", "../../select/internal/outlined-select.ts", "../../select/internal/outlined-select-styles.ts", "../../select/outlined-select.ts", "../../select/internal/selectoption/selectOptionController.ts", "../../select/internal/selectoption/select-option.ts", "../../select/select-option.ts", "../../slider/internal/forced-colors-styles.ts", "../../node_modules/lit-html/src/directives/when.ts", "../../slider/internal/slider.ts", "../../slider/internal/slider-styles.ts", "../../slider/slider.ts", "../../switch/internal/switch.ts", "../../switch/internal/switch-styles.ts", "../../switch/switch.ts", "../../tabs/internal/tab.ts", "../../tabs/internal/primary-tab.ts", "../../tabs/internal/primary-tab-styles.ts", "../../tabs/internal/tab-styles.ts", "../../tabs/primary-tab.ts", "../../tabs/internal/secondary-tab.ts", "../../tabs/internal/secondary-tab-styles.ts", "../../tabs/secondary-tab.ts", "../../tabs/internal/tabs.ts", "../../tabs/internal/tabs-styles.ts", "../../tabs/tabs.ts", "../../textfield/internal/filled-styles.ts", "../../node_modules/lit-html/src/directive-helpers.ts", "../../node_modules/lit-html/src/directives/live.ts", "../../internal/controller/string-converter.ts", "../../labs/behaviors/validators/text-field-validator.ts", "../../textfield/internal/text-field.ts", "../../textfield/internal/filled-text-field.ts", "../../textfield/internal/shared-styles.ts", "../../textfield/filled-text-field.ts", "../../textfield/internal/outlined-styles.ts", "../../textfield/internal/outlined-text-field.ts", "../../textfield/outlined-text-field.ts", "../src/components/catalog-component-header.ts", "../src/components/catalog-component-header-title.ts", "../../node_modules/lit-html/src/async-directive.ts", "../../node_modules/@lit-labs/motion/src/animate-controller.ts", "../../node_modules/@lit-labs/motion/src/animate.ts", "../../node_modules/@lit-labs/motion/src/position.ts", "../../node_modules/@preact/signals-core/src/index.ts", "../src/signals/signal-element.ts", "../src/signals/drawer-open-state.ts", "../src/signals/inert.ts", "../src/components/nav-drawer.ts", "../../labs/segmentedbutton/internal/segmented-button.ts", "../../labs/segmentedbutton/internal/outlined-segmented-button.ts", "../../labs/segmentedbutton/internal/outlined-styles.ts", "../../labs/segmentedbutton/internal/shared-styles.ts", "../../labs/segmentedbutton/outlined-segmented-button.ts", "../../labs/segmentedbuttonset/internal/segmented-button-set.ts", "../../labs/segmentedbuttonset/internal/outlined-segmented-button-set.ts", "../../labs/segmentedbuttonset/internal/outlined-styles.ts", "../../labs/segmentedbuttonset/internal/shared-styles.ts", "../../labs/segmentedbuttonset/outlined-segmented-button-set.ts", "../src/components/copy-code-button.ts", "../../node_modules/@material/material-color-utilities/utils/math_utils.ts", "../../node_modules/@material/material-color-utilities/utils/color_utils.ts", "../../node_modules/@material/material-color-utilities/hct/viewing_conditions.ts", "../../node_modules/@material/material-color-utilities/hct/cam16.ts", "../../node_modules/@material/material-color-utilities/hct/hct_solver.ts", "../../node_modules/@material/material-color-utilities/hct/hct.ts", "../../node_modules/@material/material-color-utilities/contrast/contrast.ts", "../../node_modules/@material/material-color-utilities/dislike/dislike_analyzer.ts", "../../node_modules/@material/material-color-utilities/dynamiccolor/dynamic_color.ts", "../../node_modules/@material/material-color-utilities/scheme/variant.ts", "../../node_modules/@material/material-color-utilities/dynamiccolor/contrast_curve.ts", "../../node_modules/@material/material-color-utilities/dynamiccolor/tone_delta_pair.ts", "../../node_modules/@material/material-color-utilities/dynamiccolor/material_dynamic_colors.ts", "../../node_modules/@material/material-color-utilities/palettes/tonal_palette.ts", "../../node_modules/@material/material-color-utilities/scheme/dynamic_scheme.ts", "../../node_modules/@material/material-color-utilities/scheme/scheme_expressive.ts", "../../node_modules/@material/material-color-utilities/scheme/scheme_vibrant.ts", "../../node_modules/@material/material-color-utilities/score/score.ts", "../../node_modules/@material/material-color-utilities/utils/string_utils.ts", "../src/utils/material-color-helpers.ts", "../src/components/hct-slider.ts", "../src/types/color-events.ts", "../src/utils/theme.ts", "../src/components/theme-changer.ts", "../src/svg/material-design-logo.ts", "../src/components/top-app-bar.ts", "../src/components/drag-playground.ts"],
  "sourcesContent": ["/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global global, define, System, Reflect, Promise */\r\nvar __extends;\r\nvar __assign;\r\nvar __rest;\r\nvar __decorate;\r\nvar __param;\r\nvar __esDecorate;\r\nvar __runInitializers;\r\nvar __propKey;\r\nvar __setFunctionName;\r\nvar __metadata;\r\nvar __awaiter;\r\nvar __generator;\r\nvar __exportStar;\r\nvar __values;\r\nvar __read;\r\nvar __spread;\r\nvar __spreadArrays;\r\nvar __spreadArray;\r\nvar __await;\r\nvar __asyncGenerator;\r\nvar __asyncDelegator;\r\nvar __asyncValues;\r\nvar __makeTemplateObject;\r\nvar __importStar;\r\nvar __importDefault;\r\nvar __classPrivateFieldGet;\r\nvar __classPrivateFieldSet;\r\nvar __classPrivateFieldIn;\r\nvar __createBinding;\r\n(function (factory) {\r\n    var root = typeof global === \"object\" ? global : typeof self === \"object\" ? self : typeof this === \"object\" ? this : {};\r\n    if (typeof define === \"function\" && define.amd) {\r\n        define(\"tslib\", [\"exports\"], function (exports) { factory(createExporter(root, createExporter(exports))); });\r\n    }\r\n    else if (typeof module === \"object\" && typeof module.exports === \"object\") {\r\n        factory(createExporter(root, createExporter(module.exports)));\r\n    }\r\n    else {\r\n        factory(createExporter(root));\r\n    }\r\n    function createExporter(exports, previous) {\r\n        if (exports !== root) {\r\n            if (typeof Object.create === \"function\") {\r\n                Object.defineProperty(exports, \"__esModule\", { value: true });\r\n            }\r\n            else {\r\n                exports.__esModule = true;\r\n            }\r\n        }\r\n        return function (id, v) { return exports[id] = previous ? previous(id, v) : v; };\r\n    }\r\n})\r\n(function (exporter) {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n\r\n    __extends = function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n\r\n    __assign = Object.assign || function (t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n\r\n    __rest = function (s, e) {\r\n        var t = {};\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n            t[p] = s[p];\r\n        if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                    t[p[i]] = s[p[i]];\r\n            }\r\n        return t;\r\n    };\r\n\r\n    __decorate = function (decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    };\r\n\r\n    __param = function (paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    };\r\n\r\n    __esDecorate = function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\r\n        function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\r\n        var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\r\n        var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\r\n        var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\r\n        var _, done = false;\r\n        for (var i = decorators.length - 1; i >= 0; i--) {\r\n            var context = {};\r\n            for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\r\n            for (var p in contextIn.access) context.access[p] = contextIn.access[p];\r\n            context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\r\n            var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\r\n            if (kind === \"accessor\") {\r\n                if (result === void 0) continue;\r\n                if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\r\n                if (_ = accept(result.get)) descriptor.get = _;\r\n                if (_ = accept(result.set)) descriptor.set = _;\r\n                if (_ = accept(result.init)) initializers.unshift(_);\r\n            }\r\n            else if (_ = accept(result)) {\r\n                if (kind === \"field\") initializers.unshift(_);\r\n                else descriptor[key] = _;\r\n            }\r\n        }\r\n        if (target) Object.defineProperty(target, contextIn.name, descriptor);\r\n        done = true;\r\n    };\r\n\r\n    __runInitializers = function (thisArg, initializers, value) {\r\n        var useValue = arguments.length > 2;\r\n        for (var i = 0; i < initializers.length; i++) {\r\n            value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\r\n        }\r\n        return useValue ? value : void 0;\r\n    };\r\n\r\n    __propKey = function (x) {\r\n        return typeof x === \"symbol\" ? x : \"\".concat(x);\r\n    };\r\n\r\n    __setFunctionName = function (f, name, prefix) {\r\n        if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\r\n        return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\r\n    };\r\n\r\n    __metadata = function (metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    };\r\n\r\n    __awaiter = function (thisArg, _arguments, P, generator) {\r\n        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n        return new (P || (P = Promise))(function (resolve, reject) {\r\n            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n            function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n        });\r\n    };\r\n\r\n    __generator = function (thisArg, body) {\r\n        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n        function verb(n) { return function (v) { return step([n, v]); }; }\r\n        function step(op) {\r\n            if (f) throw new TypeError(\"Generator is already executing.\");\r\n            while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n                if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n                if (y = 0, t) op = [op[0] & 2, t.value];\r\n                switch (op[0]) {\r\n                    case 0: case 1: t = op; break;\r\n                    case 4: _.label++; return { value: op[1], done: false };\r\n                    case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                    case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                    default:\r\n                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                        if (t[2]) _.ops.pop();\r\n                        _.trys.pop(); continue;\r\n                }\r\n                op = body.call(thisArg, _);\r\n            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n        }\r\n    };\r\n\r\n    __exportStar = function(m, o) {\r\n        for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n    };\r\n\r\n    __createBinding = Object.create ? (function(o, m, k, k2) {\r\n        if (k2 === undefined) k2 = k;\r\n        var desc = Object.getOwnPropertyDescriptor(m, k);\r\n        if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n            desc = { enumerable: true, get: function() { return m[k]; } };\r\n        }\r\n        Object.defineProperty(o, k2, desc);\r\n    }) : (function(o, m, k, k2) {\r\n        if (k2 === undefined) k2 = k;\r\n        o[k2] = m[k];\r\n    });\r\n\r\n    __values = function (o) {\r\n        var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n        if (m) return m.call(o);\r\n        if (o && typeof o.length === \"number\") return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n        throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n    };\r\n\r\n    __read = function (o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    };\r\n\r\n    /** @deprecated */\r\n    __spread = function () {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    };\r\n\r\n    /** @deprecated */\r\n    __spreadArrays = function () {\r\n        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n        for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n                r[k] = a[j];\r\n        return r;\r\n    };\r\n\r\n    __spreadArray = function (to, from, pack) {\r\n        if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n            if (ar || !(i in from)) {\r\n                if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n                ar[i] = from[i];\r\n            }\r\n        }\r\n        return to.concat(ar || Array.prototype.slice.call(from));\r\n    };\r\n\r\n    __await = function (v) {\r\n        return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n    };\r\n\r\n    __asyncGenerator = function (thisArg, _arguments, generator) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n        return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n        function fulfill(value) { resume(\"next\", value); }\r\n        function reject(value) { resume(\"throw\", value); }\r\n        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n    };\r\n\r\n    __asyncDelegator = function (o) {\r\n        var i, p;\r\n        return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\r\n    };\r\n\r\n    __asyncValues = function (o) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var m = o[Symbol.asyncIterator], i;\r\n        return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n    };\r\n\r\n    __makeTemplateObject = function (cooked, raw) {\r\n        if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n        return cooked;\r\n    };\r\n\r\n    var __setModuleDefault = Object.create ? (function(o, v) {\r\n        Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n    }) : function(o, v) {\r\n        o[\"default\"] = v;\r\n    };\r\n\r\n    __importStar = function (mod) {\r\n        if (mod && mod.__esModule) return mod;\r\n        var result = {};\r\n        if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n        __setModuleDefault(result, mod);\r\n        return result;\r\n    };\r\n\r\n    __importDefault = function (mod) {\r\n        return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n    };\r\n\r\n    __classPrivateFieldGet = function (receiver, state, kind, f) {\r\n        if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n        if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n        return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n    };\r\n\r\n    __classPrivateFieldSet = function (receiver, state, value, kind, f) {\r\n        if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n        if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n        if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n        return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n    };\r\n\r\n    __classPrivateFieldIn = function (state, receiver) {\r\n        if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n        return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n    };\r\n\r\n    exporter(\"__extends\", __extends);\r\n    exporter(\"__assign\", __assign);\r\n    exporter(\"__rest\", __rest);\r\n    exporter(\"__decorate\", __decorate);\r\n    exporter(\"__param\", __param);\r\n    exporter(\"__esDecorate\", __esDecorate);\r\n    exporter(\"__runInitializers\", __runInitializers);\r\n    exporter(\"__propKey\", __propKey);\r\n    exporter(\"__setFunctionName\", __setFunctionName);\r\n    exporter(\"__metadata\", __metadata);\r\n    exporter(\"__awaiter\", __awaiter);\r\n    exporter(\"__generator\", __generator);\r\n    exporter(\"__exportStar\", __exportStar);\r\n    exporter(\"__createBinding\", __createBinding);\r\n    exporter(\"__values\", __values);\r\n    exporter(\"__read\", __read);\r\n    exporter(\"__spread\", __spread);\r\n    exporter(\"__spreadArrays\", __spreadArrays);\r\n    exporter(\"__spreadArray\", __spreadArray);\r\n    exporter(\"__await\", __await);\r\n    exporter(\"__asyncGenerator\", __asyncGenerator);\r\n    exporter(\"__asyncDelegator\", __asyncDelegator);\r\n    exporter(\"__asyncValues\", __asyncValues);\r\n    exporter(\"__makeTemplateObject\", __makeTemplateObject);\r\n    exporter(\"__importStar\", __importStar);\r\n    exporter(\"__importDefault\", __importDefault);\r\n    exporter(\"__classPrivateFieldGet\", __classPrivateFieldGet);\r\n    exporter(\"__classPrivateFieldSet\", __classPrivateFieldSet);\r\n    exporter(\"__classPrivateFieldIn\", __classPrivateFieldIn);\r\n});\r\n", "import tslib from '../tslib.js';\r\nconst {\r\n    __extends,\r\n    __assign,\r\n    __rest,\r\n    __decorate,\r\n    __param,\r\n    __esDecorate,\r\n    __runInitializers,\r\n    __propKey,\r\n    __setFunctionName,\r\n    __metadata,\r\n    __awaiter,\r\n    __generator,\r\n    __exportStar,\r\n    __createBinding,\r\n    __values,\r\n    __read,\r\n    __spread,\r\n    __spreadArrays,\r\n    __spreadArray,\r\n    __await,\r\n    __asyncGenerator,\r\n    __asyncDelegator,\r\n    __asyncValues,\r\n    __makeTemplateObject,\r\n    __importStar,\r\n    __importDefault,\r\n    __classPrivateFieldGet,\r\n    __classPrivateFieldSet,\r\n    __classPrivateFieldIn,\r\n} = tslib;\r\nexport {\r\n    __extends,\r\n    __assign,\r\n    __rest,\r\n    __decorate,\r\n    __param,\r\n    __esDecorate,\r\n    __runInitializers,\r\n    __propKey,\r\n    __setFunctionName,\r\n    __metadata,\r\n    __awaiter,\r\n    __generator,\r\n    __exportStar,\r\n    __createBinding,\r\n    __values,\r\n    __read,\r\n    __spread,\r\n    __spreadArrays,\r\n    __spreadArray,\r\n    __await,\r\n    __asyncGenerator,\r\n    __asyncDelegator,\r\n    __asyncValues,\r\n    __makeTemplateObject,\r\n    __importStar,\r\n    __importDefault,\r\n    __classPrivateFieldGet,\r\n    __classPrivateFieldSet,\r\n    __classPrivateFieldIn,\r\n};\r\nexport default tslib;\r\n", "/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/*\n * IMPORTANT: For compatibility with tsickle and the Closure JS compiler, all\n * property decorators (but not class decorators) in this file that have\n * an @ExportDecoratedItems annotation must be defined as a regular function,\n * not an arrow function.\n */\nimport {Constructor, ClassDescriptor} from './base.js';\n\n/**\n * Allow for custom element classes with private constructors\n */\ntype CustomElementClass = Omit<typeof HTMLElement, 'new'>;\n\nconst legacyCustomElement = (tagName: string, clazz: CustomElementClass) => {\n  customElements.define(tagName, clazz as CustomElementConstructor);\n  // Cast as any because TS doesn't recognize the return type as being a\n  // subtype of the decorated class when clazz is typed as\n  // `Constructor<HTMLElement>` for some reason.\n  // `Constructor<HTMLElement>` is helpful to make sure the decorator is\n  // applied to elements however.\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return clazz as any;\n};\n\nconst standardCustomElement = (\n  tagName: string,\n  descriptor: ClassDescriptor\n) => {\n  const {kind, elements} = descriptor;\n  return {\n    kind,\n    elements,\n    // This callback is called once the class is otherwise fully defined\n    finisher(clazz: Constructor<HTMLElement>) {\n      customElements.define(tagName, clazz);\n    },\n  };\n};\n\n/**\n * Class decorator factory that defines the decorated class as a custom element.\n *\n * ```js\n * @customElement('my-element')\n * class MyElement extends LitElement {\n *   render() {\n *     return html``;\n *   }\n * }\n * ```\n * @category Decorator\n * @param tagName The tag name of the custom element to define.\n */\nexport const customElement =\n  (tagName: string) =>\n  (classOrDescriptor: CustomElementClass | ClassDescriptor) =>\n    typeof classOrDescriptor === 'function'\n      ? legacyCustomElement(tagName, classOrDescriptor)\n      : standardCustomElement(tagName, classOrDescriptor as ClassDescriptor);\n", "/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/*\n * IMPORTANT: For compatibility with tsickle and the Closure JS compiler, all\n * property decorators (but not class decorators) in this file that have\n * an @ExportDecoratedItems annotation must be defined as a regular function,\n * not an arrow function.\n */\nimport {PropertyDeclaration, ReactiveElement} from '../reactive-element.js';\nimport {ClassElement} from './base.js';\n\nconst standardProperty = (\n  options: PropertyDeclaration,\n  element: ClassElement\n) => {\n  // When decorating an accessor, pass it through and add property metadata.\n  // Note, the `hasOwnProperty` check in `createProperty` ensures we don't\n  // stomp over the user's accessor.\n  if (\n    element.kind === 'method' &&\n    element.descriptor &&\n    !('value' in element.descriptor)\n  ) {\n    return {\n      ...element,\n      finisher(clazz: typeof ReactiveElement) {\n        clazz.createProperty(element.key, options);\n      },\n    };\n  } else {\n    // createProperty() takes care of defining the property, but we still\n    // must return some kind of descriptor, so return a descriptor for an\n    // unused prototype field. The finisher calls createProperty().\n    return {\n      kind: 'field',\n      key: Symbol(),\n      placement: 'own',\n      descriptor: {},\n      // store the original key so subsequent decorators have access to it.\n      originalKey: element.key,\n      // When @babel/plugin-proposal-decorators implements initializers,\n      // do this instead of the initializer below. See:\n      // https://github.com/babel/babel/issues/9260 extras: [\n      //   {\n      //     kind: 'initializer',\n      //     placement: 'own',\n      //     initializer: descriptor.initializer,\n      //   }\n      // ],\n      initializer(this: {[key: string]: unknown}) {\n        if (typeof element.initializer === 'function') {\n          this[element.key as string] = element.initializer.call(this);\n        }\n      },\n      finisher(clazz: typeof ReactiveElement) {\n        clazz.createProperty(element.key, options);\n      },\n    };\n  }\n};\n\nconst legacyProperty = (\n  options: PropertyDeclaration,\n  proto: Object,\n  name: PropertyKey\n) => {\n  (proto.constructor as typeof ReactiveElement).createProperty(name, options);\n};\n\n/**\n * A property decorator which creates a reactive property that reflects a\n * corresponding attribute value. When a decorated property is set\n * the element will update and render. A {@linkcode PropertyDeclaration} may\n * optionally be supplied to configure property features.\n *\n * This decorator should only be used for public fields. As public fields,\n * properties should be considered as primarily settable by element users,\n * either via attribute or the property itself.\n *\n * Generally, properties that are changed by the element should be private or\n * protected fields and should use the {@linkcode state} decorator.\n *\n * However, sometimes element code does need to set a public property. This\n * should typically only be done in response to user interaction, and an event\n * should be fired informing the user; for example, a checkbox sets its\n * `checked` property when clicked and fires a `changed` event. Mutating public\n * properties should typically not be done for non-primitive (object or array)\n * properties. In other cases when an element needs to manage state, a private\n * property decorated via the {@linkcode state} decorator should be used. When\n * needed, state properties can be initialized via public properties to\n * facilitate complex interactions.\n *\n * ```ts\n * class MyElement {\n *   @property({ type: Boolean })\n *   clicked = false;\n * }\n * ```\n * @category Decorator\n * @ExportDecoratedItems\n */\nexport function property(options?: PropertyDeclaration) {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return (protoOrDescriptor: Object | ClassElement, name?: PropertyKey): any =>\n    name !== undefined\n      ? legacyProperty(options!, protoOrDescriptor as Object, name)\n      : standardProperty(options!, protoOrDescriptor as ClassElement);\n}\n", "/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/*\n * IMPORTANT: For compatibility with tsickle and the Closure JS compiler, all\n * property decorators (but not class decorators) in this file that have\n * an @ExportDecoratedItems annotation must be defined as a regular function,\n * not an arrow function.\n */\n\nimport {property} from './property.js';\n\nexport interface InternalPropertyDeclaration<Type = unknown> {\n  /**\n   * A function that indicates if a property should be considered changed when\n   * it is set. The function should take the `newValue` and `oldValue` and\n   * return `true` if an update should be requested.\n   */\n  hasChanged?(value: Type, oldValue: Type): boolean;\n}\n\n/**\n * Declares a private or protected reactive property that still triggers\n * updates to the element when it changes. It does not reflect from the\n * corresponding attribute.\n *\n * Properties declared this way must not be used from HTML or HTML templating\n * systems, they're solely for properties internal to the element. These\n * properties may be renamed by optimization tools like closure compiler.\n * @category Decorator\n */\nexport function state(options?: InternalPropertyDeclaration) {\n  return property({\n    ...options,\n    state: true,\n  });\n}\n", "/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {ReactiveElement} from '../reactive-element.js';\n\n/**\n * Generates a public interface type that removes private and protected fields.\n * This allows accepting otherwise compatible versions of the type (e.g. from\n * multiple copies of the same package in `node_modules`).\n */\nexport type Interface<T> = {\n  [K in keyof T]: T[K];\n};\n\nexport type Constructor<T> = {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  new (...args: any[]): T;\n};\n\n// From the TC39 Decorators proposal\nexport interface ClassDescriptor {\n  kind: 'class';\n  elements: ClassElement[];\n  finisher?: <T>(clazz: Constructor<T>) => void | Constructor<T>;\n}\n\n// From the TC39 Decorators proposal\nexport interface ClassElement {\n  kind: 'field' | 'method';\n  key: PropertyKey;\n  placement: 'static' | 'prototype' | 'own';\n  initializer?: Function;\n  extras?: ClassElement[];\n  finisher?: <T>(clazz: Constructor<T>) => void | Constructor<T>;\n  descriptor?: PropertyDescriptor;\n}\n\nexport const legacyPrototypeMethod = (\n  descriptor: PropertyDescriptor,\n  proto: Object,\n  name: PropertyKey\n) => {\n  Object.defineProperty(proto, name, descriptor);\n};\n\nexport const standardPrototypeMethod = (\n  descriptor: PropertyDescriptor,\n  element: ClassElement\n) => ({\n  kind: 'method',\n  placement: 'prototype',\n  key: element.key,\n  descriptor,\n});\n\n/**\n * Helper for decorating a property that is compatible with both TypeScript\n * and Babel decorators. The optional `finisher` can be used to perform work on\n * the class. The optional `descriptor` should return a PropertyDescriptor\n * to install for the given property.\n *\n * @param finisher {function} Optional finisher method; receives the element\n * constructor and property key as arguments and has no return value.\n * @param descriptor {function} Optional descriptor method; receives the\n * property key as an argument and returns a property descriptor to define for\n * the given property.\n * @returns {ClassElement|void}\n */\nexport const decorateProperty =\n  ({\n    finisher,\n    descriptor,\n  }: {\n    finisher?:\n      | ((ctor: typeof ReactiveElement, property: PropertyKey) => void)\n      | null;\n    descriptor?: (property: PropertyKey) => PropertyDescriptor;\n  }) =>\n  (\n    protoOrDescriptor: Interface<ReactiveElement> | ClassElement,\n    name?: PropertyKey\n    // Note TypeScript requires the return type to be `void|any`\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  ): void | any => {\n    // TypeScript / Babel legacy mode\n    if (name !== undefined) {\n      const ctor = (protoOrDescriptor as ReactiveElement)\n        .constructor as typeof ReactiveElement;\n      if (descriptor !== undefined) {\n        Object.defineProperty(protoOrDescriptor, name, descriptor(name));\n      }\n      finisher?.(ctor, name!);\n      // Babel standard mode\n    } else {\n      // Note, the @property decorator saves `key` as `originalKey`\n      // so try to use it here.\n      const key =\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (protoOrDescriptor as any).originalKey ??\n        (protoOrDescriptor as ClassElement).key;\n      const info: ClassElement =\n        descriptor != undefined\n          ? {\n              kind: 'method',\n              placement: 'prototype',\n              key,\n              descriptor: descriptor((protoOrDescriptor as ClassElement).key),\n            }\n          : {...(protoOrDescriptor as ClassElement), key};\n      if (finisher != undefined) {\n        info.finisher = function <ReactiveElement>(\n          ctor: Constructor<ReactiveElement>\n        ) {\n          finisher(ctor as unknown as typeof ReactiveElement, key);\n        };\n      }\n      return info;\n    }\n  };\n", "/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/*\n * IMPORTANT: For compatibility with tsickle and the Closure JS compiler, all\n * property decorators (but not class decorators) in this file that have\n * an @ExportDecoratedItems annotation must be defined as a regular function,\n * not an arrow function.\n */\n\nimport {ReactiveElement} from '../reactive-element.js';\nimport {decorateProperty} from './base.js';\n\n/**\n * A property decorator that converts a class property into a getter that\n * executes a querySelector on the element's renderRoot.\n *\n * @param selector A DOMString containing one or more selectors to match.\n * @param cache An optional boolean which when true performs the DOM query only\n *     once and caches the result.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector\n *\n * ```ts\n * class MyElement {\n *   @query('#first')\n *   first: HTMLDivElement;\n *\n *   render() {\n *     return html`\n *       <div id=\"first\"></div>\n *       <div id=\"second\"></div>\n *     `;\n *   }\n * }\n * ```\n * @category Decorator\n */\nexport function query(selector: string, cache?: boolean) {\n  return decorateProperty({\n    descriptor: (name: PropertyKey) => {\n      const descriptor = {\n        get(this: ReactiveElement) {\n          return this.renderRoot?.querySelector(selector) ?? null;\n        },\n        enumerable: true,\n        configurable: true,\n      };\n      if (cache) {\n        const key = typeof name === 'symbol' ? Symbol() : `__${name}`;\n        descriptor.get = function (this: ReactiveElement) {\n          if (\n            (this as unknown as {[key: string]: Element | null})[\n              key as string\n            ] === undefined\n          ) {\n            (this as unknown as {[key: string]: Element | null})[\n              key as string\n            ] = this.renderRoot?.querySelector(selector) ?? null;\n          }\n          return (this as unknown as {[key: string]: Element | null})[\n            key as string\n          ];\n        };\n      }\n      return descriptor;\n    },\n  });\n}\n", "/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/*\n * IMPORTANT: For compatibility with tsickle and the Closure JS compiler, all\n * property decorators (but not class decorators) in this file that have\n * an @ExportDecoratedItems annotation must be defined as a regular function,\n * not an arrow function.\n */\n\nimport {ReactiveElement} from '../reactive-element.js';\nimport {decorateProperty} from './base.js';\n\n/**\n * A property decorator that converts a class property into a getter\n * that executes a querySelectorAll on the element's renderRoot.\n *\n * @param selector A DOMString containing one or more selectors to match.\n *\n * See:\n * https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelectorAll\n *\n * ```ts\n * class MyElement {\n *   @queryAll('div')\n *   divs: NodeListOf<HTMLDivElement>;\n *\n *   render() {\n *     return html`\n *       <div id=\"first\"></div>\n *       <div id=\"second\"></div>\n *     `;\n *   }\n * }\n * ```\n * @category Decorator\n */\nexport function queryAll(selector: string) {\n  return decorateProperty({\n    descriptor: (_name: PropertyKey) => ({\n      get(this: ReactiveElement) {\n        return this.renderRoot?.querySelectorAll(selector) ?? [];\n      },\n      enumerable: true,\n      configurable: true,\n    }),\n  });\n}\n", "/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/*\n * IMPORTANT: For compatibility with tsickle and the Closure JS compiler, all\n * property decorators (but not class decorators) in this file that have\n * an @ExportDecoratedItems annotation must be defined as a regular function,\n * not an arrow function.\n */\n\nimport {ReactiveElement} from '../reactive-element.js';\nimport {decorateProperty} from './base.js';\n\n// Note, in the future, we may extend this decorator to support the use case\n// where the queried element may need to do work to become ready to interact\n// with (e.g. load some implementation code). If so, we might elect to\n// add a second argument defining a function that can be run to make the\n// queried element loaded/updated/ready.\n/**\n * A property decorator that converts a class property into a getter that\n * returns a promise that resolves to the result of a querySelector on the\n * element's renderRoot done after the element's `updateComplete` promise\n * resolves. When the queried property may change with element state, this\n * decorator can be used instead of requiring users to await the\n * `updateComplete` before accessing the property.\n *\n * @param selector A DOMString containing one or more selectors to match.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector\n *\n * ```ts\n * class MyElement {\n *   @queryAsync('#first')\n *   first: Promise<HTMLDivElement>;\n *\n *   render() {\n *     return html`\n *       <div id=\"first\"></div>\n *       <div id=\"second\"></div>\n *     `;\n *   }\n * }\n *\n * // external usage\n * async doSomethingWithFirst() {\n *  (await aMyElement.first).doSomething();\n * }\n * ```\n * @category Decorator\n */\nexport function queryAsync(selector: string) {\n  return decorateProperty({\n    descriptor: (_name: PropertyKey) => ({\n      async get(this: ReactiveElement) {\n        await this.updateComplete;\n        return this.renderRoot?.querySelector(selector);\n      },\n      enumerable: true,\n      configurable: true,\n    }),\n  });\n}\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/*\n * IMPORTANT: For compatibility with tsickle and the Closure JS compiler, all\n * property decorators (but not class decorators) in this file that have\n * an @ExportDecoratedItems annotation must be defined as a regular function,\n * not an arrow function.\n */\n\nimport {decorateProperty} from './base.js';\n\nimport type {ReactiveElement} from '../reactive-element.js';\nimport type {QueryAssignedNodesOptions} from './query-assigned-nodes.js';\n\nconst NODE_MODE = false;\nconst global = NODE_MODE ? globalThis : window;\n\n/**\n * A tiny module scoped polyfill for HTMLSlotElement.assignedElements.\n */\nconst slotAssignedElements =\n  global.HTMLSlotElement?.prototype.assignedElements != null\n    ? (slot: HTMLSlotElement, opts?: AssignedNodesOptions) =>\n        slot.assignedElements(opts)\n    : (slot: HTMLSlotElement, opts?: AssignedNodesOptions) =>\n        slot\n          .assignedNodes(opts)\n          .filter(\n            (node): node is Element => node.nodeType === Node.ELEMENT_NODE\n          );\n\n/**\n * Options for the {@linkcode queryAssignedElements} decorator. Extends the\n * options that can be passed into\n * [HTMLSlotElement.assignedElements](https://developer.mozilla.org/en-US/docs/Web/API/HTMLSlotElement/assignedElements).\n */\nexport interface QueryAssignedElementsOptions\n  extends QueryAssignedNodesOptions {\n  /**\n   * CSS selector used to filter the elements returned. For example, a selector\n   * of `\".item\"` will only include elements with the `item` class.\n   */\n  selector?: string;\n}\n\n/**\n * A property decorator that converts a class property into a getter that\n * returns the `assignedElements` of the given `slot`. Provides a declarative\n * way to use\n * [`HTMLSlotElement.assignedElements`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLSlotElement/assignedElements).\n *\n * Can be passed an optional {@linkcode QueryAssignedElementsOptions} object.\n *\n * Example usage:\n * ```ts\n * class MyElement {\n *   @queryAssignedElements({ slot: 'list' })\n *   listItems!: Array<HTMLElement>;\n *   @queryAssignedElements()\n *   unnamedSlotEls!: Array<HTMLElement>;\n *\n *   render() {\n *     return html`\n *       <slot name=\"list\"></slot>\n *       <slot></slot>\n *     `;\n *   }\n * }\n * ```\n *\n * Note, the type of this property should be annotated as `Array<HTMLElement>`.\n *\n * @category Decorator\n */\nexport function queryAssignedElements(options?: QueryAssignedElementsOptions) {\n  const {slot, selector} = options ?? {};\n  return decorateProperty({\n    descriptor: (_name: PropertyKey) => ({\n      get(this: ReactiveElement) {\n        const slotSelector = `slot${slot ? `[name=${slot}]` : ':not([name])'}`;\n        const slotEl =\n          this.renderRoot?.querySelector<HTMLSlotElement>(slotSelector);\n        const elements =\n          slotEl != null ? slotAssignedElements(slotEl, options) : [];\n        if (selector) {\n          return elements.filter((node) => node.matches(selector));\n        }\n        return elements;\n      },\n      enumerable: true,\n      configurable: true,\n    }),\n  });\n}\n", "/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/*\n * IMPORTANT: For compatibility with tsickle and the Closure JS compiler, all\n * property decorators (but not class decorators) in this file that have\n * an @ExportDecoratedItems annotation must be defined as a regular function,\n * not an arrow function.\n */\n\nimport {decorateProperty} from './base.js';\nimport {queryAssignedElements} from './query-assigned-elements.js';\n\nimport type {ReactiveElement} from '../reactive-element.js';\n\n/**\n * Options for the {@linkcode queryAssignedNodes} decorator. Extends the options\n * that can be passed into [HTMLSlotElement.assignedNodes](https://developer.mozilla.org/en-US/docs/Web/API/HTMLSlotElement/assignedNodes).\n */\nexport interface QueryAssignedNodesOptions extends AssignedNodesOptions {\n  /**\n   * Name of the slot to query. Leave empty for the default slot.\n   */\n  slot?: string;\n}\n\n// TypeScript requires the decorator return type to be `void|any`.\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype TSDecoratorReturnType = void | any;\n\n/**\n * A property decorator that converts a class property into a getter that\n * returns the `assignedNodes` of the given `slot`.\n *\n * Can be passed an optional {@linkcode QueryAssignedNodesOptions} object.\n *\n * Example usage:\n * ```ts\n * class MyElement {\n *   @queryAssignedNodes({slot: 'list', flatten: true})\n *   listItems!: Array<Node>;\n *\n *   render() {\n *     return html`\n *       <slot name=\"list\"></slot>\n *     `;\n *   }\n * }\n * ```\n *\n * Note the type of this property should be annotated as `Array<Node>`.\n *\n * @category Decorator\n */\nexport function queryAssignedNodes(\n  options?: QueryAssignedNodesOptions\n): TSDecoratorReturnType;\n\n/**\n * A property decorator that converts a class property into a getter that\n * returns the `assignedNodes` of the given named `slot`.\n *\n * Example usage:\n * ```ts\n * class MyElement {\n *   @queryAssignedNodes('list', true, '.item')\n *   listItems!: Array<HTMLElement>;\n *\n *   render() {\n *     return html`\n *       <slot name=\"list\"></slot>\n *     `;\n *   }\n * }\n * ```\n *\n * Note the type of this property should be annotated as `Array<Node>` if used\n * without a `selector` or `Array<HTMLElement>` if a selector is provided.\n * Use {@linkcode queryAssignedElements @queryAssignedElements} to list only\n * elements, and optionally filter the element list using a CSS selector.\n *\n * @param slotName A string name of the slot.\n * @param flatten A boolean which when true flattens the assigned nodes,\n *     meaning any assigned nodes that are slot elements are replaced with their\n *     assigned nodes.\n * @param selector A CSS selector used to filter the elements returned.\n *\n * @category Decorator\n * @deprecated Prefer passing in a single options object, i.e. `{slot: 'list'}`.\n * If using `selector` please use `@queryAssignedElements`.\n * `@queryAssignedNodes('', false, '.item')` is functionally identical to\n * `@queryAssignedElements({slot: '', flatten: false, selector: '.item'})` or\n * `@queryAssignedElements({selector: '.item'})`.\n */\nexport function queryAssignedNodes(\n  slotName?: string,\n  flatten?: boolean,\n  selector?: string\n): TSDecoratorReturnType;\n\nexport function queryAssignedNodes(\n  slotOrOptions?: string | QueryAssignedNodesOptions,\n  flatten?: boolean,\n  selector?: string\n) {\n  // Normalize the overloaded arguments.\n  let slot = slotOrOptions;\n  let assignedNodesOptions: AssignedNodesOptions;\n  if (typeof slotOrOptions === 'object') {\n    slot = slotOrOptions.slot;\n    assignedNodesOptions = slotOrOptions;\n  } else {\n    assignedNodesOptions = {flatten};\n  }\n\n  // For backwards compatibility, queryAssignedNodes with a selector behaves\n  // exactly like queryAssignedElements with a selector.\n  if (selector) {\n    return queryAssignedElements({\n      slot: slot as string,\n      flatten,\n      selector,\n    });\n  }\n\n  return decorateProperty({\n    descriptor: (_name: PropertyKey) => ({\n      get(this: ReactiveElement) {\n        const slotSelector = `slot${slot ? `[name=${slot}]` : ':not([name])'}`;\n        const slotEl =\n          this.renderRoot?.querySelector<HTMLSlotElement>(slotSelector);\n        return slotEl?.assignedNodes(assignedNodesOptions) ?? [];\n      },\n      enumerable: true,\n      configurable: true,\n    }),\n  });\n}\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n// As of TypeScript 4.7.4, `ARIAMixin` is missing the following properties\n// https://w3c.github.io/aria/#state_prop_def\ndeclare global {\n  interface ARIAMixin {\n    ariaBraileLabel: string | null;\n    ariaBraileRoleDescription: string | null;\n    ariaDescription: string | null;\n    ariaInvalid: string | null;\n    role: string | null;\n  }\n}\n\ntype ARIAAttributeMap = {\n  [K in keyof ARIAMixin]: string;\n};\n\n/**\n * Map of ARIAMixin properties to attributes\n */\nexport const ariaMixinAttributes: ARIAAttributeMap = {\n  ariaAtomic: 'aria-atomic',\n  ariaAutoComplete: 'aria-autocomplete',\n  ariaBraileLabel: 'aria-brailelabel',\n  ariaBraileRoleDescription: 'aria-braileroledescription',\n  ariaBusy: 'aria-busy',\n  ariaChecked: 'aria-checked',\n  ariaColCount: 'aria-colcount',\n  ariaColIndex: 'aria-colindex',\n  ariaColSpan: 'aria-colspan',\n  ariaCurrent: 'aria-current',\n  ariaDescription: 'aria-description',\n  ariaDisabled: 'aria-disabled',\n  ariaExpanded: 'aria-expanded',\n  ariaHasPopup: 'aria-haspopup',\n  ariaHidden: 'aria-hidden',\n  ariaInvalid: 'aria-invalid',\n  ariaKeyShortcuts: 'aria-keyshortcuts',\n  ariaLabel: 'aria-label',\n  ariaLevel: 'aria-level',\n  ariaLive: 'aria-live',\n  ariaModal: 'aria-modal',\n  ariaMultiLine: 'aria-multiline',\n  ariaMultiSelectable: 'aria-multiselectable',\n  ariaOrientation: 'aria-orientation',\n  ariaPlaceholder: 'aria-placeholder',\n  ariaPosInSet: 'aria-posinset',\n  ariaPressed: 'aria-pressed',\n  ariaReadOnly: 'aria-readonly',\n  ariaRequired: 'aria-required',\n  ariaRoleDescription: 'aria-roledescription',\n  ariaRowCount: 'aria-rowcount',\n  ariaRowIndex: 'aria-rowindex',\n  ariaRowSpan: 'aria-rowspan',\n  ariaSelected: 'aria-selected',\n  ariaSetSize: 'aria-setsize',\n  ariaSort: 'aria-sort',\n  ariaValueMax: 'aria-valuemax',\n  ariaValueMin: 'aria-valuemin',\n  ariaValueNow: 'aria-valuenow',\n  ariaValueText: 'aria-valuetext',\n  role: 'role',\n};\n\n// Shim the global element internals object\n// Methods should be fine as noops and properties can generally\n// be while on the server.\nexport const ElementInternalsShim = class ElementInternals\n  implements ARIAMixin\n{\n  ariaAtomic = '';\n  ariaAutoComplete = '';\n  ariaBraileLabel = '';\n  ariaBraileRoleDescription = '';\n  ariaBusy = '';\n  ariaChecked = '';\n  ariaColCount = '';\n  ariaColIndex = '';\n  ariaColSpan = '';\n  ariaCurrent = '';\n  ariaDescription = '';\n  ariaDisabled = '';\n  ariaExpanded = '';\n  ariaHasPopup = '';\n  ariaHidden = '';\n  ariaInvalid = '';\n  ariaKeyShortcuts = '';\n  ariaLabel = '';\n  ariaLevel = '';\n  ariaLive = '';\n  ariaModal = '';\n  ariaMultiLine = '';\n  ariaMultiSelectable = '';\n  ariaOrientation = '';\n  ariaPlaceholder = '';\n  ariaPosInSet = '';\n  ariaPressed = '';\n  ariaReadOnly = '';\n  ariaRequired = '';\n  ariaRoleDescription = '';\n  ariaRowCount = '';\n  ariaRowIndex = '';\n  ariaRowSpan = '';\n  ariaSelected = '';\n  ariaSetSize = '';\n  ariaSort = '';\n  ariaValueMax = '';\n  ariaValueMin = '';\n  ariaValueNow = '';\n  ariaValueText = '';\n  role = '';\n  __host: HTMLElement;\n  get shadowRoot() {\n    // Grab the shadow root instance from the Element shim\n    // to ensure that the shadow root is always available\n    // to the internals instance even if the mode is 'closed'\n    return (this.__host as HTMLElement & {__shadowRoot: ShadowRoot})\n      .__shadowRoot;\n  }\n  constructor(_host: HTMLElement) {\n    this.__host = _host;\n  }\n  checkValidity() {\n    // TODO(augustjk) Consider actually implementing logic.\n    // See https://github.com/lit/lit/issues/3740\n    console.warn(\n      '`ElementInternals.checkValidity()` was called on the server.' +\n        'This method always returns true.'\n    );\n    return true;\n  }\n  form = null;\n  labels = [] as unknown as NodeListOf<HTMLLabelElement>;\n  reportValidity() {\n    return true;\n  }\n  setFormValue(): void {}\n  setValidity(): void {}\n  states = new Set();\n  validationMessage = '';\n  validity = {} as ValidityState;\n  willValidate = true;\n};\n\nconst ElementInternalsShimWithRealType =\n  ElementInternalsShim as object as typeof ElementInternals;\nexport {ElementInternalsShimWithRealType as ElementInternals};\n\nexport const HYDRATE_INTERNALS_ATTR_PREFIX = 'hydrate-internals-';\n", "/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nimport {ElementInternalsShim} from './lib/element-internals.js';\n\nexport {\n  ariaMixinAttributes,\n  ElementInternals,\n  HYDRATE_INTERNALS_ATTR_PREFIX,\n} from './lib/element-internals.js';\n\nconst attributes: WeakMap<\n  InstanceType<typeof HTMLElementShim>,\n  Map<string, string>\n> = new WeakMap();\nconst attributesForElement = (\n  element: InstanceType<typeof HTMLElementShim>\n) => {\n  let attrs = attributes.get(element);\n  if (attrs === undefined) {\n    attributes.set(element, (attrs = new Map()));\n  }\n  return attrs;\n};\n\n// The typings around the exports below are a little funky:\n//\n// 1. We want the `name` of the shim classes to match the real ones at runtime,\n//    hence e.g. `class Element`.\n// 2. We can't shadow the global types with a simple class declaration, because\n//    then we can't reference the global types for casting, hence e.g.\n//    `const ElementShim = class Element`.\n// 3. We want to export the classes typed as the real ones, hence e.g.\n//    `const ElementShimWithRealType = ElementShim as object as typeof Element;`.\n// 4. We want the exported names to match the real ones, hence e.g.\n//    `export {ElementShimWithRealType as Element}`.\nconst ElementShim = class Element {\n  get attributes() {\n    return Array.from(attributesForElement(this)).map(([name, value]) => ({\n      name,\n      value,\n    }));\n  }\n  private __shadowRootMode: null | ShadowRootMode = null;\n  protected __shadowRoot: null | ShadowRoot = null;\n  protected __internals: null | ElementInternals = null;\n\n  get shadowRoot() {\n    if (this.__shadowRootMode === 'closed') {\n      return null;\n    }\n    return this.__shadowRoot;\n  }\n  setAttribute(name: string, value: unknown): void {\n    // Emulate browser behavior that silently casts all values to string. E.g.\n    // `42` becomes `\"42\"` and `{}` becomes `\"[object Object]\"\"`.\n    attributesForElement(this).set(name, String(value));\n  }\n  removeAttribute(name: string) {\n    attributesForElement(this).delete(name);\n  }\n  hasAttribute(name: string) {\n    return attributesForElement(this).has(name);\n  }\n  attachShadow(init: ShadowRootInit): ShadowRoot {\n    const shadowRoot = {host: this} as object as ShadowRoot;\n    this.__shadowRootMode = init.mode;\n    if (init && init.mode === 'open') {\n      this.__shadowRoot = shadowRoot;\n    }\n    return shadowRoot;\n  }\n  attachInternals(): ElementInternals {\n    if (this.__internals !== null) {\n      throw new Error(\n        `Failed to execute 'attachInternals' on 'HTMLElement': ` +\n          `ElementInternals for the specified element was already attached.`\n      );\n    }\n    const internals = new ElementInternalsShim(this as unknown as HTMLElement);\n    this.__internals = internals;\n    return internals as ElementInternals;\n  }\n  getAttribute(name: string) {\n    const value = attributesForElement(this).get(name);\n    return value ?? null;\n  }\n};\nconst ElementShimWithRealType = ElementShim as object as typeof Element;\nexport {ElementShimWithRealType as Element};\n\nconst HTMLElementShim = class HTMLElement extends ElementShim {};\nconst HTMLElementShimWithRealType =\n  HTMLElementShim as object as typeof HTMLElement;\nexport {HTMLElementShimWithRealType as HTMLElement};\n\ninterface CustomHTMLElementConstructor {\n  new (): HTMLElement;\n  observedAttributes?: string[];\n}\n\ntype CustomElementRegistration = {\n  ctor: {new (): HTMLElement};\n  observedAttributes: string[];\n};\n\nconst CustomElementRegistryShim = class CustomElementRegistry {\n  private __definitions = new Map<string, CustomElementRegistration>();\n\n  define(name: string, ctor: CustomHTMLElementConstructor) {\n    if (this.__definitions.has(name)) {\n      if (process.env.NODE_ENV === 'development') {\n        console.warn(\n          `'CustomElementRegistry' already has \"${name}\" defined. ` +\n            `This may have been caused by live reload or hot module ` +\n            `replacement in which case it can be safely ignored.\\n` +\n            `Make sure to test your application with a production build as ` +\n            `repeat registrations will throw in production.`\n        );\n      } else {\n        throw new Error(\n          `Failed to execute 'define' on 'CustomElementRegistry': ` +\n            `the name \"${name}\" has already been used with this registry`\n        );\n      }\n    }\n    this.__definitions.set(name, {\n      ctor,\n      // Note it's important we read `observedAttributes` in case it is a getter\n      // with side-effects, as is the case in Lit, where it triggers class\n      // finalization.\n      //\n      // TODO(aomarks) To be spec compliant, we should also capture the\n      // registration-time lifecycle methods like `connectedCallback`. For them\n      // to be actually accessible to e.g. the Lit SSR element renderer, though,\n      // we'd need to introduce a new API for accessing them (since `get` only\n      // returns the constructor).\n      observedAttributes: ctor.observedAttributes ?? [],\n    });\n  }\n\n  get(name: string) {\n    const definition = this.__definitions.get(name);\n    return definition?.ctor;\n  }\n};\nconst CustomElementRegistryShimWithRealType =\n  CustomElementRegistryShim as object as typeof CustomElementRegistry;\nexport {CustomElementRegistryShimWithRealType as CustomElementRegistry};\n\nexport const customElements = new CustomElementRegistryShimWithRealType();\n", "/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nconst NODE_MODE = false;\nconst global = NODE_MODE ? globalThis : window;\n\n/**\n * Whether the current browser supports `adoptedStyleSheets`.\n */\nexport const supportsAdoptingStyleSheets: boolean =\n  global.ShadowRoot &&\n  (global.ShadyCSS === undefined || global.ShadyCSS.nativeShadow) &&\n  'adoptedStyleSheets' in Document.prototype &&\n  'replace' in CSSStyleSheet.prototype;\n\n/**\n * A CSSResult or native CSSStyleSheet.\n *\n * In browsers that support constructible CSS style sheets, CSSStyleSheet\n * object can be used for styling along side CSSResult from the `css`\n * template tag.\n */\nexport type CSSResultOrNative = CSSResult | CSSStyleSheet;\n\nexport type CSSResultArray = Array<CSSResultOrNative | CSSResultArray>;\n\n/**\n * A single CSSResult, CSSStyleSheet, or an array or nested arrays of those.\n */\nexport type CSSResultGroup = CSSResultOrNative | CSSResultArray;\n\nconst constructionToken = Symbol();\n\nconst cssTagCache = new WeakMap<TemplateStringsArray, CSSStyleSheet>();\n\n/**\n * A container for a string of CSS text, that may be used to create a CSSStyleSheet.\n *\n * CSSResult is the return value of `css`-tagged template literals and\n * `unsafeCSS()`. In order to ensure that CSSResults are only created via the\n * `css` tag and `unsafeCSS()`, CSSResult cannot be constructed directly.\n */\nexport class CSSResult {\n  // This property needs to remain unminified.\n  ['_$cssResult$'] = true;\n  readonly cssText: string;\n  private _styleSheet?: CSSStyleSheet;\n  private _strings: TemplateStringsArray | undefined;\n\n  private constructor(\n    cssText: string,\n    strings: TemplateStringsArray | undefined,\n    safeToken: symbol\n  ) {\n    if (safeToken !== constructionToken) {\n      throw new Error(\n        'CSSResult is not constructable. Use `unsafeCSS` or `css` instead.'\n      );\n    }\n    this.cssText = cssText;\n    this._strings = strings;\n  }\n\n  // This is a getter so that it's lazy. In practice, this means stylesheets\n  // are not created until the first element instance is made.\n  get styleSheet(): CSSStyleSheet | undefined {\n    // If `supportsAdoptingStyleSheets` is true then we assume CSSStyleSheet is\n    // constructable.\n    let styleSheet = this._styleSheet;\n    const strings = this._strings;\n    if (supportsAdoptingStyleSheets && styleSheet === undefined) {\n      const cacheable = strings !== undefined && strings.length === 1;\n      if (cacheable) {\n        styleSheet = cssTagCache.get(strings);\n      }\n      if (styleSheet === undefined) {\n        (this._styleSheet = styleSheet = new CSSStyleSheet()).replaceSync(\n          this.cssText\n        );\n        if (cacheable) {\n          cssTagCache.set(strings, styleSheet);\n        }\n      }\n    }\n    return styleSheet;\n  }\n\n  toString(): string {\n    return this.cssText;\n  }\n}\n\ntype ConstructableCSSResult = CSSResult & {\n  new (\n    cssText: string,\n    strings: TemplateStringsArray | undefined,\n    safeToken: symbol\n  ): CSSResult;\n};\n\nconst textFromCSSResult = (value: CSSResultGroup | number) => {\n  // This property needs to remain unminified.\n  if ((value as CSSResult)['_$cssResult$'] === true) {\n    return (value as CSSResult).cssText;\n  } else if (typeof value === 'number') {\n    return value;\n  } else {\n    throw new Error(\n      `Value passed to 'css' function must be a 'css' function result: ` +\n        `${value}. Use 'unsafeCSS' to pass non-literal values, but take care ` +\n        `to ensure page security.`\n    );\n  }\n};\n\n/**\n * Wrap a value for interpolation in a {@linkcode css} tagged template literal.\n *\n * This is unsafe because untrusted CSS text can be used to phone home\n * or exfiltrate data to an attacker controlled site. Take care to only use\n * this with trusted input.\n */\nexport const unsafeCSS = (value: unknown) =>\n  new (CSSResult as ConstructableCSSResult)(\n    typeof value === 'string' ? value : String(value),\n    undefined,\n    constructionToken\n  );\n\n/**\n * A template literal tag which can be used with LitElement's\n * {@linkcode LitElement.styles} property to set element styles.\n *\n * For security reasons, only literal string values and number may be used in\n * embedded expressions. To incorporate non-literal values {@linkcode unsafeCSS}\n * may be used inside an expression.\n */\nexport const css = (\n  strings: TemplateStringsArray,\n  ...values: (CSSResultGroup | number)[]\n): CSSResult => {\n  const cssText =\n    strings.length === 1\n      ? strings[0]\n      : values.reduce(\n          (acc, v, idx) => acc + textFromCSSResult(v) + strings[idx + 1],\n          strings[0]\n        );\n  return new (CSSResult as ConstructableCSSResult)(\n    cssText,\n    strings,\n    constructionToken\n  );\n};\n\n/**\n * Applies the given styles to a `shadowRoot`. When Shadow DOM is\n * available but `adoptedStyleSheets` is not, styles are appended to the\n * `shadowRoot` to [mimic spec behavior](https://wicg.github.io/construct-stylesheets/#using-constructed-stylesheets).\n * Note, when shimming is used, any styles that are subsequently placed into\n * the shadowRoot should be placed *before* any shimmed adopted styles. This\n * will match spec behavior that gives adopted sheets precedence over styles in\n * shadowRoot.\n */\nexport const adoptStyles = (\n  renderRoot: ShadowRoot,\n  styles: Array<CSSResultOrNative>\n) => {\n  if (supportsAdoptingStyleSheets) {\n    (renderRoot as ShadowRoot).adoptedStyleSheets = styles.map((s) =>\n      s instanceof CSSStyleSheet ? s : s.styleSheet!\n    );\n  } else {\n    styles.forEach((s) => {\n      const style = document.createElement('style');\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const nonce = (global as any)['litNonce'];\n      if (nonce !== undefined) {\n        style.setAttribute('nonce', nonce);\n      }\n      style.textContent = (s as CSSResult).cssText;\n      renderRoot.appendChild(style);\n    });\n  }\n};\n\nconst cssResultFromStyleSheet = (sheet: CSSStyleSheet) => {\n  let cssText = '';\n  for (const rule of sheet.cssRules) {\n    cssText += rule.cssText;\n  }\n  return unsafeCSS(cssText);\n};\n\nexport const getCompatibleStyle =\n  supportsAdoptingStyleSheets ||\n  (NODE_MODE && global.CSSStyleSheet === undefined)\n    ? (s: CSSResultOrNative) => s\n    : (s: CSSResultOrNative) =>\n        s instanceof CSSStyleSheet ? cssResultFromStyleSheet(s) : s;\n", "/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/**\n * Use this module if you want to create your own base class extending\n * {@link ReactiveElement}.\n * @packageDocumentation\n */\n\nimport {\n  getCompatibleStyle,\n  adoptStyles,\n  CSSResultGroup,\n  CSSResultOrNative,\n} from './css-tag.js';\nimport type {\n  ReactiveController,\n  ReactiveControllerHost,\n} from './reactive-controller.js';\n\n// In the Node build, this import will be injected by Rollup:\n// import {HTMLElement, customElements} from '@lit-labs/ssr-dom-shim';\n\nexport * from './css-tag.js';\nexport type {\n  ReactiveController,\n  ReactiveControllerHost,\n} from './reactive-controller.js';\n\nconst NODE_MODE = false;\nconst global = NODE_MODE ? globalThis : window;\n\nif (NODE_MODE) {\n  global.customElements ??= customElements;\n}\n\nconst DEV_MODE = true;\n\nlet requestUpdateThenable: (name: string) => {\n  then: (\n    onfulfilled?: (value: boolean) => void,\n    _onrejected?: () => void\n  ) => void;\n};\n\nlet issueWarning: (code: string, warning: string) => void;\n\nconst trustedTypes = (global as unknown as {trustedTypes?: {emptyScript: ''}})\n  .trustedTypes;\n\n// Temporary workaround for https://crbug.com/993268\n// Currently, any attribute starting with \"on\" is considered to be a\n// TrustedScript source. Such boolean attributes must be set to the equivalent\n// trusted emptyScript value.\nconst emptyStringForBooleanAttribute = trustedTypes\n  ? (trustedTypes.emptyScript as unknown as '')\n  : '';\n\nconst polyfillSupport = DEV_MODE\n  ? global.reactiveElementPolyfillSupportDevMode\n  : global.reactiveElementPolyfillSupport;\n\nif (DEV_MODE) {\n  // Ensure warnings are issued only 1x, even if multiple versions of Lit\n  // are loaded.\n  const issuedWarnings: Set<string | undefined> = (global.litIssuedWarnings ??=\n    new Set());\n\n  // Issue a warning, if we haven't already.\n  issueWarning = (code: string, warning: string) => {\n    warning += ` See https://lit.dev/msg/${code} for more information.`;\n    if (!issuedWarnings.has(warning)) {\n      console.warn(warning);\n      issuedWarnings.add(warning);\n    }\n  };\n\n  issueWarning(\n    'dev-mode',\n    `Lit is in dev mode. Not recommended for production!`\n  );\n\n  // Issue polyfill support warning.\n  if (global.ShadyDOM?.inUse && polyfillSupport === undefined) {\n    issueWarning(\n      'polyfill-support-missing',\n      `Shadow DOM is being polyfilled via \\`ShadyDOM\\` but ` +\n        `the \\`polyfill-support\\` module has not been loaded.`\n    );\n  }\n\n  requestUpdateThenable = (name) => ({\n    then: (\n      onfulfilled?: (value: boolean) => void,\n      _onrejected?: () => void\n    ) => {\n      issueWarning(\n        'request-update-promise',\n        `The \\`requestUpdate\\` method should no longer return a Promise but ` +\n          `does so on \\`${name}\\`. Use \\`updateComplete\\` instead.`\n      );\n      if (onfulfilled !== undefined) {\n        onfulfilled(false);\n      }\n    },\n  });\n}\n\n/**\n * Contains types that are part of the unstable debug API.\n *\n * Everything in this API is not stable and may change or be removed in the future,\n * even on patch releases.\n */\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport namespace ReactiveUnstable {\n  /**\n   * When Lit is running in dev mode and `window.emitLitDebugLogEvents` is true,\n   * we will emit 'lit-debug' events to window, with live details about the update and render\n   * lifecycle. These can be useful for writing debug tooling and visualizations.\n   *\n   * Please be aware that running with window.emitLitDebugLogEvents has performance overhead,\n   * making certain operations that are normally very cheap (like a no-op render) much slower,\n   * because we must copy data and dispatch events.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-namespace\n  export namespace DebugLog {\n    export type Entry = Update;\n    export interface Update {\n      kind: 'update';\n    }\n  }\n}\n\ninterface DebugLoggingWindow {\n  // Even in dev mode, we generally don't want to emit these events, as that's\n  // another level of cost, so only emit them when DEV_MODE is true _and_ when\n  // window.emitLitDebugEvents is true.\n  emitLitDebugLogEvents?: boolean;\n}\n\n/**\n * Useful for visualizing and logging insights into what the Lit template system is doing.\n *\n * Compiled out of prod mode builds.\n */\nconst debugLogEvent = DEV_MODE\n  ? (event: ReactiveUnstable.DebugLog.Entry) => {\n      const shouldEmit = (global as unknown as DebugLoggingWindow)\n        .emitLitDebugLogEvents;\n      if (!shouldEmit) {\n        return;\n      }\n      global.dispatchEvent(\n        new CustomEvent<ReactiveUnstable.DebugLog.Entry>('lit-debug', {\n          detail: event,\n        })\n      );\n    }\n  : undefined;\n\n/*\n * When using Closure Compiler, JSCompiler_renameProperty(property, object) is\n * replaced at compile time by the munged name for object[property]. We cannot\n * alias this function, so we have to use a small shim that has the same\n * behavior when not compiling.\n */\n/*@__INLINE__*/\nconst JSCompiler_renameProperty = <P extends PropertyKey>(\n  prop: P,\n  _obj: unknown\n): P => prop;\n\n/**\n * Converts property values to and from attribute values.\n */\nexport interface ComplexAttributeConverter<Type = unknown, TypeHint = unknown> {\n  /**\n   * Called to convert an attribute value to a property\n   * value.\n   */\n  fromAttribute?(value: string | null, type?: TypeHint): Type;\n\n  /**\n   * Called to convert a property value to an attribute\n   * value.\n   *\n   * It returns unknown instead of string, to be compatible with\n   * https://github.com/WICG/trusted-types (and similar efforts).\n   */\n  toAttribute?(value: Type, type?: TypeHint): unknown;\n}\n\ntype AttributeConverter<Type = unknown, TypeHint = unknown> =\n  | ComplexAttributeConverter<Type>\n  | ((value: string | null, type?: TypeHint) => Type);\n\n/**\n * Defines options for a property accessor.\n */\nexport interface PropertyDeclaration<Type = unknown, TypeHint = unknown> {\n  /**\n   * When set to `true`, indicates the property is internal private state. The\n   * property should not be set by users. When using TypeScript, this property\n   * should be marked as `private` or `protected`, and it is also a common\n   * practice to use a leading `_` in the name. The property is not added to\n   * `observedAttributes`.\n   */\n  readonly state?: boolean;\n\n  /**\n   * Indicates how and whether the property becomes an observed attribute.\n   * If the value is `false`, the property is not added to `observedAttributes`.\n   * If true or absent, the lowercased property name is observed (e.g. `fooBar`\n   * becomes `foobar`). If a string, the string value is observed (e.g\n   * `attribute: 'foo-bar'`).\n   */\n  readonly attribute?: boolean | string;\n\n  /**\n   * Indicates the type of the property. This is used only as a hint for the\n   * `converter` to determine how to convert the attribute\n   * to/from a property.\n   */\n  readonly type?: TypeHint;\n\n  /**\n   * Indicates how to convert the attribute to/from a property. If this value\n   * is a function, it is used to convert the attribute value a the property\n   * value. If it's an object, it can have keys for `fromAttribute` and\n   * `toAttribute`. If no `toAttribute` function is provided and\n   * `reflect` is set to `true`, the property value is set directly to the\n   * attribute. A default `converter` is used if none is provided; it supports\n   * `Boolean`, `String`, `Number`, `Object`, and `Array`. Note,\n   * when a property changes and the converter is used to update the attribute,\n   * the property is never updated again as a result of the attribute changing,\n   * and vice versa.\n   */\n  readonly converter?: AttributeConverter<Type, TypeHint>;\n\n  /**\n   * Indicates if the property should reflect to an attribute.\n   * If `true`, when the property is set, the attribute is set using the\n   * attribute name determined according to the rules for the `attribute`\n   * property option and the value of the property converted using the rules\n   * from the `converter` property option.\n   */\n  readonly reflect?: boolean;\n\n  /**\n   * A function that indicates if a property should be considered changed when\n   * it is set. The function should take the `newValue` and `oldValue` and\n   * return `true` if an update should be requested.\n   */\n  hasChanged?(value: Type, oldValue: Type): boolean;\n\n  /**\n   * Indicates whether an accessor will be created for this property. By\n   * default, an accessor will be generated for this property that requests an\n   * update when set. If this flag is `true`, no accessor will be created, and\n   * it will be the user's responsibility to call\n   * `this.requestUpdate(propertyName, oldValue)` to request an update when\n   * the property changes.\n   */\n  readonly noAccessor?: boolean;\n}\n\n/**\n * Map of properties to PropertyDeclaration options. For each property an\n * accessor is made, and the property is processed according to the\n * PropertyDeclaration options.\n */\nexport interface PropertyDeclarations {\n  readonly [key: string]: PropertyDeclaration;\n}\n\ntype PropertyDeclarationMap = Map<PropertyKey, PropertyDeclaration>;\n\ntype AttributeMap = Map<string, PropertyKey>;\n\n/**\n * A Map of property keys to values.\n *\n * Takes an optional type parameter T, which when specified as a non-any,\n * non-unknown type, will make the Map more strongly-typed, associating the map\n * keys with their corresponding value type on T.\n *\n * Use `PropertyValues<this>` when overriding ReactiveElement.update() and\n * other lifecycle methods in order to get stronger type-checking on keys\n * and values.\n */\n// This type is conditional so that if the parameter T is not specified, or\n// is `any`, the type will include `Map<PropertyKey, unknown>`. Since T is not\n// given in the uses of PropertyValues in this file, all uses here fallback to\n// meaning `Map<PropertyKey, unknown>`, but if a developer uses\n// `PropertyValues<this>` (or any other value for T) they will get a\n// strongly-typed Map type.\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type PropertyValues<T = any> = T extends object\n  ? PropertyValueMap<T>\n  : Map<PropertyKey, unknown>;\n\n/**\n * Do not use, instead prefer {@linkcode PropertyValues}.\n */\n// This type must be exported such that JavaScript generated by the Google\n// Closure Compiler can import a type reference.\nexport interface PropertyValueMap<T> extends Map<PropertyKey, unknown> {\n  get<K extends keyof T>(k: K): T[K];\n  set<K extends keyof T>(key: K, value: T[K]): this;\n  has<K extends keyof T>(k: K): boolean;\n  delete<K extends keyof T>(k: K): boolean;\n}\n\nexport const defaultConverter: ComplexAttributeConverter = {\n  toAttribute(value: unknown, type?: unknown): unknown {\n    switch (type) {\n      case Boolean:\n        value = value ? emptyStringForBooleanAttribute : null;\n        break;\n      case Object:\n      case Array:\n        // if the value is `null` or `undefined` pass this through\n        // to allow removing/no change behavior.\n        value = value == null ? value : JSON.stringify(value);\n        break;\n    }\n    return value;\n  },\n\n  fromAttribute(value: string | null, type?: unknown) {\n    let fromValue: unknown = value;\n    switch (type) {\n      case Boolean:\n        fromValue = value !== null;\n        break;\n      case Number:\n        fromValue = value === null ? null : Number(value);\n        break;\n      case Object:\n      case Array:\n        // Do *not* generate exception when invalid JSON is set as elements\n        // don't normally complain on being mis-configured.\n        // TODO(sorvell): Do generate exception in *dev mode*.\n        try {\n          // Assert to adhere to Bazel's \"must type assert JSON parse\" rule.\n          fromValue = JSON.parse(value!) as unknown;\n        } catch (e) {\n          fromValue = null;\n        }\n        break;\n    }\n    return fromValue;\n  },\n};\n\nexport interface HasChanged {\n  (value: unknown, old: unknown): boolean;\n}\n\n/**\n * Change function that returns true if `value` is different from `oldValue`.\n * This method is used as the default for a property's `hasChanged` function.\n */\nexport const notEqual: HasChanged = (value: unknown, old: unknown): boolean => {\n  // This ensures (old==NaN, value==NaN) always returns false\n  return old !== value && (old === old || value === value);\n};\n\nconst defaultPropertyDeclaration: PropertyDeclaration = {\n  attribute: true,\n  type: String,\n  converter: defaultConverter,\n  reflect: false,\n  hasChanged: notEqual,\n};\n\n/**\n * The Closure JS Compiler doesn't currently have good support for static\n * property semantics where \"this\" is dynamic (e.g.\n * https://github.com/google/closure-compiler/issues/3177 and others) so we use\n * this hack to bypass any rewriting by the compiler.\n */\nconst finalized = 'finalized';\n\n/**\n * A string representing one of the supported dev mode warning categories.\n */\nexport type WarningKind = 'change-in-update' | 'migration';\n\nexport type Initializer = (element: ReactiveElement) => void;\n\n/**\n * Base element class which manages element properties and attributes. When\n * properties change, the `update` method is asynchronously called. This method\n * should be supplied by subclassers to render updates as desired.\n * @noInheritDoc\n */\nexport abstract class ReactiveElement\n  // In the Node build, this `extends` clause will be substituted with\n  // `(globalThis.HTMLElement ?? HTMLElement)`.\n  //\n  // This way, we will first prefer any global `HTMLElement` polyfill that the\n  // user has assigned, and then fall back to the `HTMLElement` shim which has\n  // been imported (see note at the top of this file about how this import is\n  // generated by Rollup). Note that the `HTMLElement` variable has been\n  // shadowed by this import, so it no longer refers to the global.\n  extends HTMLElement\n  implements ReactiveControllerHost\n{\n  // Note: these are patched in only in DEV_MODE.\n  /**\n   * Read or set all the enabled warning categories for this class.\n   *\n   * This property is only used in development builds.\n   *\n   * @nocollapse\n   * @category dev-mode\n   */\n  static enabledWarnings?: WarningKind[];\n\n  /**\n   * Enable the given warning category for this class.\n   *\n   * This method only exists in development builds, so it should be accessed\n   * with a guard like:\n   *\n   * ```ts\n   * // Enable for all ReactiveElement subclasses\n   * ReactiveElement.enableWarning?.('migration');\n   *\n   * // Enable for only MyElement and subclasses\n   * MyElement.enableWarning?.('migration');\n   * ```\n   *\n   * @nocollapse\n   * @category dev-mode\n   */\n  static enableWarning?: (warningKind: WarningKind) => void;\n\n  /**\n   * Disable the given warning category for this class.\n   *\n   * This method only exists in development builds, so it should be accessed\n   * with a guard like:\n   *\n   * ```ts\n   * // Disable for all ReactiveElement subclasses\n   * ReactiveElement.disableWarning?.('migration');\n   *\n   * // Disable for only MyElement and subclasses\n   * MyElement.disableWarning?.('migration');\n   * ```\n   *\n   * @nocollapse\n   * @category dev-mode\n   */\n  static disableWarning?: (warningKind: WarningKind) => void;\n\n  /**\n   * Adds an initializer function to the class that is called during instance\n   * construction.\n   *\n   * This is useful for code that runs against a `ReactiveElement`\n   * subclass, such as a decorator, that needs to do work for each\n   * instance, such as setting up a `ReactiveController`.\n   *\n   * ```ts\n   * const myDecorator = (target: typeof ReactiveElement, key: string) => {\n   *   target.addInitializer((instance: ReactiveElement) => {\n   *     // This is run during construction of the element\n   *     new MyController(instance);\n   *   });\n   * }\n   * ```\n   *\n   * Decorating a field will then cause each instance to run an initializer\n   * that adds a controller:\n   *\n   * ```ts\n   * class MyElement extends LitElement {\n   *   @myDecorator foo;\n   * }\n   * ```\n   *\n   * Initializers are stored per-constructor. Adding an initializer to a\n   * subclass does not add it to a superclass. Since initializers are run in\n   * constructors, initializers will run in order of the class hierarchy,\n   * starting with superclasses and progressing to the instance's class.\n   *\n   * @nocollapse\n   */\n  static addInitializer(initializer: Initializer) {\n    this.finalize();\n    (this._initializers ??= []).push(initializer);\n  }\n\n  static _initializers?: Initializer[];\n\n  /*\n   * Due to closure compiler ES6 compilation bugs, @nocollapse is required on\n   * all static methods and properties with initializers.  Reference:\n   * - https://github.com/google/closure-compiler/issues/1776\n   */\n\n  /**\n   * Maps attribute names to properties; for example `foobar` attribute to\n   * `fooBar` property. Created lazily on user subclasses when finalizing the\n   * class.\n   * @nocollapse\n   */\n  private static __attributeToPropertyMap: AttributeMap;\n\n  /**\n   * Marks class as having finished creating properties.\n   */\n  protected static [finalized] = true;\n\n  /**\n   * Memoized list of all element properties, including any superclass properties.\n   * Created lazily on user subclasses when finalizing the class.\n   * @nocollapse\n   * @category properties\n   */\n  static elementProperties: PropertyDeclarationMap = new Map();\n\n  /**\n   * User-supplied object that maps property names to `PropertyDeclaration`\n   * objects containing options for configuring reactive properties. When\n   * a reactive property is set the element will update and render.\n   *\n   * By default properties are public fields, and as such, they should be\n   * considered as primarily settable by element users, either via attribute or\n   * the property itself.\n   *\n   * Generally, properties that are changed by the element should be private or\n   * protected fields and should use the `state: true` option. Properties\n   * marked as `state` do not reflect from the corresponding attribute\n   *\n   * However, sometimes element code does need to set a public property. This\n   * should typically only be done in response to user interaction, and an event\n   * should be fired informing the user; for example, a checkbox sets its\n   * `checked` property when clicked and fires a `changed` event. Mutating\n   * public properties should typically not be done for non-primitive (object or\n   * array) properties. In other cases when an element needs to manage state, a\n   * private property set with the `state: true` option should be used. When\n   * needed, state properties can be initialized via public properties to\n   * facilitate complex interactions.\n   * @nocollapse\n   * @category properties\n   */\n  static properties: PropertyDeclarations;\n\n  /**\n   * Memoized list of all element styles.\n   * Created lazily on user subclasses when finalizing the class.\n   * @nocollapse\n   * @category styles\n   */\n  static elementStyles: Array<CSSResultOrNative> = [];\n\n  /**\n   * Array of styles to apply to the element. The styles should be defined\n   * using the {@linkcode css} tag function, via constructible stylesheets, or\n   * imported from native CSS module scripts.\n   *\n   * Note on Content Security Policy:\n   *\n   * Element styles are implemented with `<style>` tags when the browser doesn't\n   * support adopted StyleSheets. To use such `<style>` tags with the style-src\n   * CSP directive, the style-src value must either include 'unsafe-inline' or\n   * `nonce-<base64-value>` with `<base64-value>` replaced be a server-generated\n   * nonce.\n   *\n   * To provide a nonce to use on generated `<style>` elements, set\n   * `window.litNonce` to a server-generated nonce in your page's HTML, before\n   * loading application code:\n   *\n   * ```html\n   * <script>\n   *   // Generated and unique per request:\n   *   window.litNonce = 'a1b2c3d4';\n   * </script>\n   * ```\n   * @nocollapse\n   * @category styles\n   */\n  static styles?: CSSResultGroup;\n\n  /**\n   * The set of properties defined by this class that caused an accessor to be\n   * added during `createProperty`.\n   * @nocollapse\n   */\n  private static __reactivePropertyKeys?: Set<PropertyKey>;\n\n  /**\n   * Returns a list of attributes corresponding to the registered properties.\n   * @nocollapse\n   * @category attributes\n   */\n  static get observedAttributes() {\n    // note: piggy backing on this to ensure we're finalized.\n    this.finalize();\n    const attributes: string[] = [];\n    // Use forEach so this works even if for/of loops are compiled to for loops\n    // expecting arrays\n    this.elementProperties.forEach((v, p) => {\n      const attr = this.__attributeNameForProperty(p, v);\n      if (attr !== undefined) {\n        this.__attributeToPropertyMap.set(attr, p);\n        attributes.push(attr);\n      }\n    });\n    return attributes;\n  }\n\n  /**\n   * Creates a property accessor on the element prototype if one does not exist\n   * and stores a {@linkcode PropertyDeclaration} for the property with the\n   * given options. The property setter calls the property's `hasChanged`\n   * property option or uses a strict identity check to determine whether or not\n   * to request an update.\n   *\n   * This method may be overridden to customize properties; however,\n   * when doing so, it's important to call `super.createProperty` to ensure\n   * the property is setup correctly. This method calls\n   * `getPropertyDescriptor` internally to get a descriptor to install.\n   * To customize what properties do when they are get or set, override\n   * `getPropertyDescriptor`. To customize the options for a property,\n   * implement `createProperty` like this:\n   *\n   * ```ts\n   * static createProperty(name, options) {\n   *   options = Object.assign(options, {myOption: true});\n   *   super.createProperty(name, options);\n   * }\n   * ```\n   *\n   * @nocollapse\n   * @category properties\n   */\n  static createProperty(\n    name: PropertyKey,\n    options: PropertyDeclaration = defaultPropertyDeclaration\n  ) {\n    // if this is a state property, force the attribute to false.\n    if (options.state) {\n      // Cast as any since this is readonly.\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (options as any).attribute = false;\n    }\n    // Note, since this can be called by the `@property` decorator which\n    // is called before `finalize`, we ensure finalization has been kicked off.\n    this.finalize();\n    this.elementProperties.set(name, options);\n    // Do not generate an accessor if the prototype already has one, since\n    // it would be lost otherwise and that would never be the user's intention;\n    // Instead, we expect users to call `requestUpdate` themselves from\n    // user-defined accessors. Note that if the super has an accessor we will\n    // still overwrite it\n    if (!options.noAccessor && !this.prototype.hasOwnProperty(name)) {\n      const key = typeof name === 'symbol' ? Symbol() : `__${name}`;\n      const descriptor = this.getPropertyDescriptor(name, key, options);\n      if (descriptor !== undefined) {\n        Object.defineProperty(this.prototype, name, descriptor);\n        if (DEV_MODE) {\n          // If this class doesn't have its own set, create one and initialize\n          // with the values in the set from the nearest ancestor class, if any.\n          if (!this.hasOwnProperty('__reactivePropertyKeys')) {\n            this.__reactivePropertyKeys = new Set(\n              this.__reactivePropertyKeys ?? []\n            );\n          }\n          this.__reactivePropertyKeys!.add(name);\n        }\n      }\n    }\n  }\n\n  /**\n   * Returns a property descriptor to be defined on the given named property.\n   * If no descriptor is returned, the property will not become an accessor.\n   * For example,\n   *\n   * ```ts\n   * class MyElement extends LitElement {\n   *   static getPropertyDescriptor(name, key, options) {\n   *     const defaultDescriptor =\n   *         super.getPropertyDescriptor(name, key, options);\n   *     const setter = defaultDescriptor.set;\n   *     return {\n   *       get: defaultDescriptor.get,\n   *       set(value) {\n   *         setter.call(this, value);\n   *         // custom action.\n   *       },\n   *       configurable: true,\n   *       enumerable: true\n   *     }\n   *   }\n   * }\n   * ```\n   *\n   * @nocollapse\n   * @category properties\n   */\n  protected static getPropertyDescriptor(\n    name: PropertyKey,\n    key: string | symbol,\n    options: PropertyDeclaration\n  ): PropertyDescriptor | undefined {\n    return {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      get(): any {\n        return (this as {[key: string]: unknown})[key as string];\n      },\n      set(this: ReactiveElement, value: unknown) {\n        const oldValue = (this as {} as {[key: string]: unknown})[\n          name as string\n        ];\n        (this as {} as {[key: string]: unknown})[key as string] = value;\n        (this as unknown as ReactiveElement).requestUpdate(\n          name,\n          oldValue,\n          options\n        );\n      },\n      configurable: true,\n      enumerable: true,\n    };\n  }\n\n  /**\n   * Returns the property options associated with the given property.\n   * These options are defined with a `PropertyDeclaration` via the `properties`\n   * object or the `@property` decorator and are registered in\n   * `createProperty(...)`.\n   *\n   * Note, this method should be considered \"final\" and not overridden. To\n   * customize the options for a given property, override\n   * {@linkcode createProperty}.\n   *\n   * @nocollapse\n   * @final\n   * @category properties\n   */\n  static getPropertyOptions(name: PropertyKey) {\n    return this.elementProperties.get(name) || defaultPropertyDeclaration;\n  }\n\n  /**\n   * Creates property accessors for registered properties, sets up element\n   * styling, and ensures any superclasses are also finalized. Returns true if\n   * the element was finalized.\n   * @nocollapse\n   */\n  protected static finalize() {\n    if (this.hasOwnProperty(finalized)) {\n      return false;\n    }\n    this[finalized] = true;\n    // finalize any superclasses\n    const superCtor = Object.getPrototypeOf(this) as typeof ReactiveElement;\n    superCtor.finalize();\n    // Create own set of initializers for this class if any exist on the\n    // superclass and copy them down. Note, for a small perf boost, avoid\n    // creating initializers unless needed.\n    if (superCtor._initializers !== undefined) {\n      this._initializers = [...superCtor._initializers];\n    }\n    this.elementProperties = new Map(superCtor.elementProperties);\n    // initialize Map populated in observedAttributes\n    this.__attributeToPropertyMap = new Map();\n    // make any properties\n    // Note, only process \"own\" properties since this element will inherit\n    // any properties defined on the superClass, and finalization ensures\n    // the entire prototype chain is finalized.\n    if (this.hasOwnProperty(JSCompiler_renameProperty('properties', this))) {\n      const props = this.properties;\n      // support symbols in properties (IE11 does not support this)\n      const propKeys = [\n        ...Object.getOwnPropertyNames(props),\n        ...Object.getOwnPropertySymbols(props),\n      ];\n      // This for/of is ok because propKeys is an array\n      for (const p of propKeys) {\n        // note, use of `any` is due to TypeScript lack of support for symbol in\n        // index types\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.createProperty(p, (props as any)[p]);\n      }\n    }\n    this.elementStyles = this.finalizeStyles(this.styles);\n    // DEV mode warnings\n    if (DEV_MODE) {\n      const warnRemovedOrRenamed = (name: string, renamed = false) => {\n        if (this.prototype.hasOwnProperty(name)) {\n          issueWarning(\n            renamed ? 'renamed-api' : 'removed-api',\n            `\\`${name}\\` is implemented on class ${this.name}. It ` +\n              `has been ${renamed ? 'renamed' : 'removed'} ` +\n              `in this version of LitElement.`\n          );\n        }\n      };\n      warnRemovedOrRenamed('initialize');\n      warnRemovedOrRenamed('requestUpdateInternal');\n      warnRemovedOrRenamed('_getUpdateComplete', true);\n    }\n    return true;\n  }\n\n  /**\n   * Options used when calling `attachShadow`. Set this property to customize\n   * the options for the shadowRoot; for example, to create a closed\n   * shadowRoot: `{mode: 'closed'}`.\n   *\n   * Note, these options are used in `createRenderRoot`. If this method\n   * is customized, options should be respected if possible.\n   * @nocollapse\n   * @category rendering\n   */\n  static shadowRootOptions: ShadowRootInit = {mode: 'open'};\n\n  /**\n   * Takes the styles the user supplied via the `static styles` property and\n   * returns the array of styles to apply to the element.\n   * Override this method to integrate into a style management system.\n   *\n   * Styles are deduplicated preserving the _last_ instance in the list. This\n   * is a performance optimization to avoid duplicated styles that can occur\n   * especially when composing via subclassing. The last item is kept to try\n   * to preserve the cascade order with the assumption that it's most important\n   * that last added styles override previous styles.\n   *\n   * @nocollapse\n   * @category styles\n   */\n  protected static finalizeStyles(\n    styles?: CSSResultGroup\n  ): Array<CSSResultOrNative> {\n    const elementStyles = [];\n    if (Array.isArray(styles)) {\n      // Dedupe the flattened array in reverse order to preserve the last items.\n      // Casting to Array<unknown> works around TS error that\n      // appears to come from trying to flatten a type CSSResultArray.\n      const set = new Set((styles as Array<unknown>).flat(Infinity).reverse());\n      // Then preserve original order by adding the set items in reverse order.\n      for (const s of set) {\n        elementStyles.unshift(getCompatibleStyle(s as CSSResultOrNative));\n      }\n    } else if (styles !== undefined) {\n      elementStyles.push(getCompatibleStyle(styles));\n    }\n    return elementStyles;\n  }\n\n  /**\n   * Node or ShadowRoot into which element DOM should be rendered. Defaults\n   * to an open shadowRoot.\n   * @category rendering\n   */\n  readonly renderRoot!: HTMLElement | ShadowRoot;\n\n  /**\n   * Returns the property name for the given attribute `name`.\n   * @nocollapse\n   */\n  private static __attributeNameForProperty(\n    name: PropertyKey,\n    options: PropertyDeclaration\n  ) {\n    const attribute = options.attribute;\n    return attribute === false\n      ? undefined\n      : typeof attribute === 'string'\n      ? attribute\n      : typeof name === 'string'\n      ? name.toLowerCase()\n      : undefined;\n  }\n\n  private __instanceProperties?: PropertyValues = new Map();\n  // Initialize to an unresolved Promise so we can make sure the element has\n  // connected before first update.\n  private __updatePromise!: Promise<boolean>;\n\n  /**\n   * True if there is a pending update as a result of calling `requestUpdate()`.\n   * Should only be read.\n   * @category updates\n   */\n  isUpdatePending = false;\n\n  /**\n   * Is set to `true` after the first update. The element code cannot assume\n   * that `renderRoot` exists before the element `hasUpdated`.\n   * @category updates\n   */\n  hasUpdated = false;\n\n  /**\n   * Map with keys for any properties that have changed since the last\n   * update cycle with previous values.\n   *\n   * @internal\n   */\n  _$changedProperties!: PropertyValues;\n\n  /**\n   * Map with keys of properties that should be reflected when updated.\n   */\n  private __reflectingProperties?: Map<PropertyKey, PropertyDeclaration>;\n\n  /**\n   * Name of currently reflecting property\n   */\n  private __reflectingProperty: PropertyKey | null = null;\n\n  /**\n   * Set of controllers.\n   */\n  private __controllers?: ReactiveController[];\n\n  constructor() {\n    super();\n    this._initialize();\n  }\n\n  /**\n   * Internal only override point for customizing work done when elements\n   * are constructed.\n   *\n   * @internal\n   */\n  _initialize() {\n    this.__updatePromise = new Promise<boolean>(\n      (res) => (this.enableUpdating = res)\n    );\n    this._$changedProperties = new Map();\n    this.__saveInstanceProperties();\n    // ensures first update will be caught by an early access of\n    // `updateComplete`\n    this.requestUpdate();\n    (this.constructor as typeof ReactiveElement)._initializers?.forEach((i) =>\n      i(this)\n    );\n  }\n\n  /**\n   * Registers a `ReactiveController` to participate in the element's reactive\n   * update cycle. The element automatically calls into any registered\n   * controllers during its lifecycle callbacks.\n   *\n   * If the element is connected when `addController()` is called, the\n   * controller's `hostConnected()` callback will be immediately called.\n   * @category controllers\n   */\n  addController(controller: ReactiveController) {\n    (this.__controllers ??= []).push(controller);\n    // If a controller is added after the element has been connected,\n    // call hostConnected. Note, re-using existence of `renderRoot` here\n    // (which is set in connectedCallback) to avoid the need to track a\n    // first connected state.\n    if (this.renderRoot !== undefined && this.isConnected) {\n      controller.hostConnected?.();\n    }\n  }\n\n  /**\n   * Removes a `ReactiveController` from the element.\n   * @category controllers\n   */\n  removeController(controller: ReactiveController) {\n    // Note, if the indexOf is -1, the >>> will flip the sign which makes the\n    // splice do nothing.\n    this.__controllers?.splice(this.__controllers.indexOf(controller) >>> 0, 1);\n  }\n\n  /**\n   * Fixes any properties set on the instance before upgrade time.\n   * Otherwise these would shadow the accessor and break these properties.\n   * The properties are stored in a Map which is played back after the\n   * constructor runs. Note, on very old versions of Safari (<=9) or Chrome\n   * (<=41), properties created for native platform properties like (`id` or\n   * `name`) may not have default values set in the element constructor. On\n   * these browsers native properties appear on instances and therefore their\n   * default value will overwrite any element default (e.g. if the element sets\n   * this.id = 'id' in the constructor, the 'id' will become '' since this is\n   * the native platform default).\n   */\n  private __saveInstanceProperties() {\n    // Use forEach so this works even if for/of loops are compiled to for loops\n    // expecting arrays\n    (this.constructor as typeof ReactiveElement).elementProperties.forEach(\n      (_v, p) => {\n        if (this.hasOwnProperty(p)) {\n          this.__instanceProperties!.set(p, this[p as keyof this]);\n          delete this[p as keyof this];\n        }\n      }\n    );\n  }\n\n  /**\n   * Returns the node into which the element should render and by default\n   * creates and returns an open shadowRoot. Implement to customize where the\n   * element's DOM is rendered. For example, to render into the element's\n   * childNodes, return `this`.\n   *\n   * @return Returns a node into which to render.\n   * @category rendering\n   */\n  protected createRenderRoot(): Element | ShadowRoot {\n    const renderRoot =\n      this.shadowRoot ??\n      this.attachShadow(\n        (this.constructor as typeof ReactiveElement).shadowRootOptions\n      );\n    adoptStyles(\n      renderRoot,\n      (this.constructor as typeof ReactiveElement).elementStyles\n    );\n    return renderRoot;\n  }\n\n  /**\n   * On first connection, creates the element's renderRoot, sets up\n   * element styling, and enables updating.\n   * @category lifecycle\n   */\n  connectedCallback() {\n    // create renderRoot before first update.\n    if (this.renderRoot === undefined) {\n      (\n        this as {\n          renderRoot: Element | DocumentFragment;\n        }\n      ).renderRoot = this.createRenderRoot();\n    }\n    this.enableUpdating(true);\n    this.__controllers?.forEach((c) => c.hostConnected?.());\n  }\n\n  /**\n   * Note, this method should be considered final and not overridden. It is\n   * overridden on the element instance with a function that triggers the first\n   * update.\n   * @category updates\n   */\n  protected enableUpdating(_requestedUpdate: boolean) {}\n\n  /**\n   * Allows for `super.disconnectedCallback()` in extensions while\n   * reserving the possibility of making non-breaking feature additions\n   * when disconnecting at some point in the future.\n   * @category lifecycle\n   */\n  disconnectedCallback() {\n    this.__controllers?.forEach((c) => c.hostDisconnected?.());\n  }\n\n  /**\n   * Synchronizes property values when attributes change.\n   *\n   * Specifically, when an attribute is set, the corresponding property is set.\n   * You should rarely need to implement this callback. If this method is\n   * overridden, `super.attributeChangedCallback(name, _old, value)` must be\n   * called.\n   *\n   * See [using the lifecycle callbacks](https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_custom_elements#using_the_lifecycle_callbacks)\n   * on MDN for more information about the `attributeChangedCallback`.\n   * @category attributes\n   */\n  attributeChangedCallback(\n    name: string,\n    _old: string | null,\n    value: string | null\n  ) {\n    this._$attributeToProperty(name, value);\n  }\n\n  private __propertyToAttribute(\n    name: PropertyKey,\n    value: unknown,\n    options: PropertyDeclaration = defaultPropertyDeclaration\n  ) {\n    const attr = (\n      this.constructor as typeof ReactiveElement\n    ).__attributeNameForProperty(name, options);\n    if (attr !== undefined && options.reflect === true) {\n      const converter =\n        (options.converter as ComplexAttributeConverter)?.toAttribute !==\n        undefined\n          ? (options.converter as ComplexAttributeConverter)\n          : defaultConverter;\n      const attrValue = converter.toAttribute!(value, options.type);\n      if (\n        DEV_MODE &&\n        (this.constructor as typeof ReactiveElement).enabledWarnings!.indexOf(\n          'migration'\n        ) >= 0 &&\n        attrValue === undefined\n      ) {\n        issueWarning(\n          'undefined-attribute-value',\n          `The attribute value for the ${name as string} property is ` +\n            `undefined on element ${this.localName}. The attribute will be ` +\n            `removed, but in the previous version of \\`ReactiveElement\\`, ` +\n            `the attribute would not have changed.`\n        );\n      }\n      // Track if the property is being reflected to avoid\n      // setting the property again via `attributeChangedCallback`. Note:\n      // 1. this takes advantage of the fact that the callback is synchronous.\n      // 2. will behave incorrectly if multiple attributes are in the reaction\n      // stack at time of calling. However, since we process attributes\n      // in `update` this should not be possible (or an extreme corner case\n      // that we'd like to discover).\n      // mark state reflecting\n      this.__reflectingProperty = name;\n      if (attrValue == null) {\n        this.removeAttribute(attr);\n      } else {\n        this.setAttribute(attr, attrValue as string);\n      }\n      // mark state not reflecting\n      this.__reflectingProperty = null;\n    }\n  }\n\n  /** @internal */\n  _$attributeToProperty(name: string, value: string | null) {\n    const ctor = this.constructor as typeof ReactiveElement;\n    // Note, hint this as an `AttributeMap` so closure clearly understands\n    // the type; it has issues with tracking types through statics\n    const propName = (ctor.__attributeToPropertyMap as AttributeMap).get(name);\n    // Use tracking info to avoid reflecting a property value to an attribute\n    // if it was just set because the attribute changed.\n    if (propName !== undefined && this.__reflectingProperty !== propName) {\n      const options = ctor.getPropertyOptions(propName);\n      const converter =\n        typeof options.converter === 'function'\n          ? {fromAttribute: options.converter}\n          : options.converter?.fromAttribute !== undefined\n          ? options.converter\n          : defaultConverter;\n      // mark state reflecting\n      this.__reflectingProperty = propName;\n      this[propName as keyof this] = converter.fromAttribute!(\n        value,\n        options.type\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      ) as any;\n      // mark state not reflecting\n      this.__reflectingProperty = null;\n    }\n  }\n\n  /**\n   * Requests an update which is processed asynchronously. This should be called\n   * when an element should update based on some state not triggered by setting\n   * a reactive property. In this case, pass no arguments. It should also be\n   * called when manually implementing a property setter. In this case, pass the\n   * property `name` and `oldValue` to ensure that any configured property\n   * options are honored.\n   *\n   * @param name name of requesting property\n   * @param oldValue old value of requesting property\n   * @param options property options to use instead of the previously\n   *     configured options\n   * @category updates\n   */\n  requestUpdate(\n    name?: PropertyKey,\n    oldValue?: unknown,\n    options?: PropertyDeclaration\n  ): void {\n    let shouldRequestUpdate = true;\n    // If we have a property key, perform property update steps.\n    if (name !== undefined) {\n      options =\n        options ||\n        (this.constructor as typeof ReactiveElement).getPropertyOptions(name);\n      const hasChanged = options.hasChanged || notEqual;\n      if (hasChanged(this[name as keyof this], oldValue)) {\n        if (!this._$changedProperties.has(name)) {\n          this._$changedProperties.set(name, oldValue);\n        }\n        // Add to reflecting properties set.\n        // Note, it's important that every change has a chance to add the\n        // property to `_reflectingProperties`. This ensures setting\n        // attribute + property reflects correctly.\n        if (options.reflect === true && this.__reflectingProperty !== name) {\n          if (this.__reflectingProperties === undefined) {\n            this.__reflectingProperties = new Map();\n          }\n          this.__reflectingProperties.set(name, options);\n        }\n      } else {\n        // Abort the request if the property should not be considered changed.\n        shouldRequestUpdate = false;\n      }\n    }\n    if (!this.isUpdatePending && shouldRequestUpdate) {\n      this.__updatePromise = this.__enqueueUpdate();\n    }\n    // Note, since this no longer returns a promise, in dev mode we return a\n    // thenable which warns if it's called.\n    return DEV_MODE\n      ? (requestUpdateThenable(this.localName) as unknown as void)\n      : undefined;\n  }\n\n  /**\n   * Sets up the element to asynchronously update.\n   */\n  private async __enqueueUpdate() {\n    this.isUpdatePending = true;\n    try {\n      // Ensure any previous update has resolved before updating.\n      // This `await` also ensures that property changes are batched.\n      await this.__updatePromise;\n    } catch (e) {\n      // Refire any previous errors async so they do not disrupt the update\n      // cycle. Errors are refired so developers have a chance to observe\n      // them, and this can be done by implementing\n      // `window.onunhandledrejection`.\n      Promise.reject(e);\n    }\n    const result = this.scheduleUpdate();\n    // If `scheduleUpdate` returns a Promise, we await it. This is done to\n    // enable coordinating updates with a scheduler. Note, the result is\n    // checked to avoid delaying an additional microtask unless we need to.\n    if (result != null) {\n      await result;\n    }\n    return !this.isUpdatePending;\n  }\n\n  /**\n   * Schedules an element update. You can override this method to change the\n   * timing of updates by returning a Promise. The update will await the\n   * returned Promise, and you should resolve the Promise to allow the update\n   * to proceed. If this method is overridden, `super.scheduleUpdate()`\n   * must be called.\n   *\n   * For instance, to schedule updates to occur just before the next frame:\n   *\n   * ```ts\n   * override protected async scheduleUpdate(): Promise<unknown> {\n   *   await new Promise((resolve) => requestAnimationFrame(() => resolve()));\n   *   super.scheduleUpdate();\n   * }\n   * ```\n   * @category updates\n   */\n  protected scheduleUpdate(): void | Promise<unknown> {\n    return this.performUpdate();\n  }\n\n  /**\n   * Performs an element update. Note, if an exception is thrown during the\n   * update, `firstUpdated` and `updated` will not be called.\n   *\n   * Call `performUpdate()` to immediately process a pending update. This should\n   * generally not be needed, but it can be done in rare cases when you need to\n   * update synchronously.\n   *\n   * Note: To ensure `performUpdate()` synchronously completes a pending update,\n   * it should not be overridden. In LitElement 2.x it was suggested to override\n   * `performUpdate()` to also customizing update scheduling. Instead, you should now\n   * override `scheduleUpdate()`. For backwards compatibility with LitElement 2.x,\n   * scheduling updates via `performUpdate()` continues to work, but will make\n   * also calling `performUpdate()` to synchronously process updates difficult.\n   *\n   * @category updates\n   */\n  protected performUpdate(): void | Promise<unknown> {\n    // Abort any update if one is not pending when this is called.\n    // This can happen if `performUpdate` is called early to \"flush\"\n    // the update.\n    if (!this.isUpdatePending) {\n      return;\n    }\n    debugLogEvent?.({kind: 'update'});\n    // create renderRoot before first update.\n    if (!this.hasUpdated) {\n      // Produce warning if any class properties are shadowed by class fields\n      if (DEV_MODE) {\n        const shadowedProperties: string[] = [];\n        (\n          this.constructor as typeof ReactiveElement\n        ).__reactivePropertyKeys?.forEach((p) => {\n          if (this.hasOwnProperty(p) && !this.__instanceProperties?.has(p)) {\n            shadowedProperties.push(p as string);\n          }\n        });\n        if (shadowedProperties.length) {\n          throw new Error(\n            `The following properties on element ${this.localName} will not ` +\n              `trigger updates as expected because they are set using class ` +\n              `fields: ${shadowedProperties.join(', ')}. ` +\n              `Native class fields and some compiled output will overwrite ` +\n              `accessors used for detecting changes. See ` +\n              `https://lit.dev/msg/class-field-shadowing ` +\n              `for more information.`\n          );\n        }\n      }\n    }\n    // Mixin instance properties once, if they exist.\n    if (this.__instanceProperties) {\n      // Use forEach so this works even if for/of loops are compiled to for loops\n      // expecting arrays\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      this.__instanceProperties!.forEach((v, p) => ((this as any)[p] = v));\n      this.__instanceProperties = undefined;\n    }\n    let shouldUpdate = false;\n    const changedProperties = this._$changedProperties;\n    try {\n      shouldUpdate = this.shouldUpdate(changedProperties);\n      if (shouldUpdate) {\n        this.willUpdate(changedProperties);\n        this.__controllers?.forEach((c) => c.hostUpdate?.());\n        this.update(changedProperties);\n      } else {\n        this.__markUpdated();\n      }\n    } catch (e) {\n      // Prevent `firstUpdated` and `updated` from running when there's an\n      // update exception.\n      shouldUpdate = false;\n      // Ensure element can accept additional updates after an exception.\n      this.__markUpdated();\n      throw e;\n    }\n    // The update is no longer considered pending and further updates are now allowed.\n    if (shouldUpdate) {\n      this._$didUpdate(changedProperties);\n    }\n  }\n\n  /**\n   * Invoked before `update()` to compute values needed during the update.\n   *\n   * Implement `willUpdate` to compute property values that depend on other\n   * properties and are used in the rest of the update process.\n   *\n   * ```ts\n   * willUpdate(changedProperties) {\n   *   // only need to check changed properties for an expensive computation.\n   *   if (changedProperties.has('firstName') || changedProperties.has('lastName')) {\n   *     this.sha = computeSHA(`${this.firstName} ${this.lastName}`);\n   *   }\n   * }\n   *\n   * render() {\n   *   return html`SHA: ${this.sha}`;\n   * }\n   * ```\n   *\n   * @category updates\n   */\n  protected willUpdate(_changedProperties: PropertyValues): void {}\n\n  // Note, this is an override point for polyfill-support.\n  // @internal\n  _$didUpdate(changedProperties: PropertyValues) {\n    this.__controllers?.forEach((c) => c.hostUpdated?.());\n    if (!this.hasUpdated) {\n      this.hasUpdated = true;\n      this.firstUpdated(changedProperties);\n    }\n    this.updated(changedProperties);\n    if (\n      DEV_MODE &&\n      this.isUpdatePending &&\n      (this.constructor as typeof ReactiveElement).enabledWarnings!.indexOf(\n        'change-in-update'\n      ) >= 0\n    ) {\n      issueWarning(\n        'change-in-update',\n        `Element ${this.localName} scheduled an update ` +\n          `(generally because a property was set) ` +\n          `after an update completed, causing a new update to be scheduled. ` +\n          `This is inefficient and should be avoided unless the next update ` +\n          `can only be scheduled as a side effect of the previous update.`\n      );\n    }\n  }\n\n  private __markUpdated() {\n    this._$changedProperties = new Map();\n    this.isUpdatePending = false;\n  }\n\n  /**\n   * Returns a Promise that resolves when the element has completed updating.\n   * The Promise value is a boolean that is `true` if the element completed the\n   * update without triggering another update. The Promise result is `false` if\n   * a property was set inside `updated()`. If the Promise is rejected, an\n   * exception was thrown during the update.\n   *\n   * To await additional asynchronous work, override the `getUpdateComplete`\n   * method. For example, it is sometimes useful to await a rendered element\n   * before fulfilling this Promise. To do this, first await\n   * `super.getUpdateComplete()`, then any subsequent state.\n   *\n   * @return A promise of a boolean that resolves to true if the update completed\n   *     without triggering another update.\n   * @category updates\n   */\n  get updateComplete(): Promise<boolean> {\n    return this.getUpdateComplete();\n  }\n\n  /**\n   * Override point for the `updateComplete` promise.\n   *\n   * It is not safe to override the `updateComplete` getter directly due to a\n   * limitation in TypeScript which means it is not possible to call a\n   * superclass getter (e.g. `super.updateComplete.then(...)`) when the target\n   * language is ES5 (https://github.com/microsoft/TypeScript/issues/338).\n   * This method should be overridden instead. For example:\n   *\n   * ```ts\n   * class MyElement extends LitElement {\n   *   override async getUpdateComplete() {\n   *     const result = await super.getUpdateComplete();\n   *     await this._myChild.updateComplete;\n   *     return result;\n   *   }\n   * }\n   * ```\n   *\n   * @return A promise of a boolean that resolves to true if the update completed\n   *     without triggering another update.\n   * @category updates\n   */\n  protected getUpdateComplete(): Promise<boolean> {\n    return this.__updatePromise;\n  }\n\n  /**\n   * Controls whether or not `update()` should be called when the element requests\n   * an update. By default, this method always returns `true`, but this can be\n   * customized to control when to update.\n   *\n   * @param _changedProperties Map of changed properties with old values\n   * @category updates\n   */\n  protected shouldUpdate(_changedProperties: PropertyValues): boolean {\n    return true;\n  }\n\n  /**\n   * Updates the element. This method reflects property values to attributes.\n   * It can be overridden to render and keep updated element DOM.\n   * Setting properties inside this method will *not* trigger\n   * another update.\n   *\n   * @param _changedProperties Map of changed properties with old values\n   * @category updates\n   */\n  protected update(_changedProperties: PropertyValues) {\n    if (this.__reflectingProperties !== undefined) {\n      // Use forEach so this works even if for/of loops are compiled to for\n      // loops expecting arrays\n      this.__reflectingProperties.forEach((v, k) =>\n        this.__propertyToAttribute(k, this[k as keyof this], v)\n      );\n      this.__reflectingProperties = undefined;\n    }\n    this.__markUpdated();\n  }\n\n  /**\n   * Invoked whenever the element is updated. Implement to perform\n   * post-updating tasks via DOM APIs, for example, focusing an element.\n   *\n   * Setting properties inside this method will trigger the element to update\n   * again after this update cycle completes.\n   *\n   * @param _changedProperties Map of changed properties with old values\n   * @category updates\n   */\n  protected updated(_changedProperties: PropertyValues) {}\n\n  /**\n   * Invoked when the element is first updated. Implement to perform one time\n   * work on the element after update.\n   *\n   * ```ts\n   * firstUpdated() {\n   *   this.renderRoot.getElementById('my-text-area').focus();\n   * }\n   * ```\n   *\n   * Setting properties inside this method will trigger the element to update\n   * again after this update cycle completes.\n   *\n   * @param _changedProperties Map of changed properties with old values\n   * @category updates\n   */\n  protected firstUpdated(_changedProperties: PropertyValues) {}\n}\n\n// Apply polyfills if available\npolyfillSupport?.({ReactiveElement});\n\n// Dev mode warnings...\nif (DEV_MODE) {\n  // Default warning set.\n  ReactiveElement.enabledWarnings = ['change-in-update'];\n  const ensureOwnWarnings = function (ctor: typeof ReactiveElement) {\n    if (\n      !ctor.hasOwnProperty(JSCompiler_renameProperty('enabledWarnings', ctor))\n    ) {\n      ctor.enabledWarnings = ctor.enabledWarnings!.slice();\n    }\n  };\n  ReactiveElement.enableWarning = function (\n    this: typeof ReactiveElement,\n    warning: WarningKind\n  ) {\n    ensureOwnWarnings(this);\n    if (this.enabledWarnings!.indexOf(warning) < 0) {\n      this.enabledWarnings!.push(warning);\n    }\n  };\n  ReactiveElement.disableWarning = function (\n    this: typeof ReactiveElement,\n    warning: WarningKind\n  ) {\n    ensureOwnWarnings(this);\n    const i = this.enabledWarnings!.indexOf(warning);\n    if (i >= 0) {\n      this.enabledWarnings!.splice(i, 1);\n    }\n  };\n}\n\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for ReactiveElement usage.\n(global.reactiveElementVersions ??= []).push('1.6.2');\nif (DEV_MODE && global.reactiveElementVersions.length > 1) {\n  issueWarning!(\n    'multiple-versions',\n    `Multiple versions of Lit loaded. Loading multiple versions ` +\n      `is not recommended.`\n  );\n}\n", "/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n// IMPORTANT: these imports must be type-only\nimport type {Directive, DirectiveResult, PartInfo} from './directive.js';\n\nconst DEV_MODE = true;\nconst ENABLE_EXTRA_SECURITY_HOOKS = true;\nconst ENABLE_SHADYDOM_NOPATCH = true;\nconst NODE_MODE = false;\n// Use window for browser builds because IE11 doesn't have globalThis.\nconst global = NODE_MODE ? globalThis : window;\n\n/**\n * Contains types that are part of the unstable debug API.\n *\n * Everything in this API is not stable and may change or be removed in the future,\n * even on patch releases.\n */\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport namespace LitUnstable {\n  /**\n   * When Lit is running in dev mode and `window.emitLitDebugLogEvents` is true,\n   * we will emit 'lit-debug' events to window, with live details about the update and render\n   * lifecycle. These can be useful for writing debug tooling and visualizations.\n   *\n   * Please be aware that running with window.emitLitDebugLogEvents has performance overhead,\n   * making certain operations that are normally very cheap (like a no-op render) much slower,\n   * because we must copy data and dispatch events.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-namespace\n  export namespace DebugLog {\n    export type Entry =\n      | TemplatePrep\n      | TemplateInstantiated\n      | TemplateInstantiatedAndUpdated\n      | TemplateUpdating\n      | BeginRender\n      | EndRender\n      | CommitPartEntry\n      | SetPartValue;\n    export interface TemplatePrep {\n      kind: 'template prep';\n      template: Template;\n      strings: TemplateStringsArray;\n      clonableTemplate: HTMLTemplateElement;\n      parts: TemplatePart[];\n    }\n    export interface BeginRender {\n      kind: 'begin render';\n      id: number;\n      value: unknown;\n      container: HTMLElement | DocumentFragment;\n      options: RenderOptions | undefined;\n      part: ChildPart | undefined;\n    }\n    export interface EndRender {\n      kind: 'end render';\n      id: number;\n      value: unknown;\n      container: HTMLElement | DocumentFragment;\n      options: RenderOptions | undefined;\n      part: ChildPart;\n    }\n    export interface TemplateInstantiated {\n      kind: 'template instantiated';\n      template: Template | CompiledTemplate;\n      instance: TemplateInstance;\n      options: RenderOptions | undefined;\n      fragment: Node;\n      parts: Array<Part | undefined>;\n      values: unknown[];\n    }\n    export interface TemplateInstantiatedAndUpdated {\n      kind: 'template instantiated and updated';\n      template: Template | CompiledTemplate;\n      instance: TemplateInstance;\n      options: RenderOptions | undefined;\n      fragment: Node;\n      parts: Array<Part | undefined>;\n      values: unknown[];\n    }\n    export interface TemplateUpdating {\n      kind: 'template updating';\n      template: Template | CompiledTemplate;\n      instance: TemplateInstance;\n      options: RenderOptions | undefined;\n      parts: Array<Part | undefined>;\n      values: unknown[];\n    }\n    export interface SetPartValue {\n      kind: 'set part';\n      part: Part;\n      value: unknown;\n      valueIndex: number;\n      values: unknown[];\n      templateInstance: TemplateInstance;\n    }\n\n    export type CommitPartEntry =\n      | CommitNothingToChildEntry\n      | CommitText\n      | CommitNode\n      | CommitAttribute\n      | CommitProperty\n      | CommitBooleanAttribute\n      | CommitEventListener\n      | CommitToElementBinding;\n\n    export interface CommitNothingToChildEntry {\n      kind: 'commit nothing to child';\n      start: ChildNode;\n      end: ChildNode | null;\n      parent: Disconnectable | undefined;\n      options: RenderOptions | undefined;\n    }\n\n    export interface CommitText {\n      kind: 'commit text';\n      node: Text;\n      value: unknown;\n      options: RenderOptions | undefined;\n    }\n\n    export interface CommitNode {\n      kind: 'commit node';\n      start: Node;\n      parent: Disconnectable | undefined;\n      value: Node;\n      options: RenderOptions | undefined;\n    }\n\n    export interface CommitAttribute {\n      kind: 'commit attribute';\n      element: Element;\n      name: string;\n      value: unknown;\n      options: RenderOptions | undefined;\n    }\n\n    export interface CommitProperty {\n      kind: 'commit property';\n      element: Element;\n      name: string;\n      value: unknown;\n      options: RenderOptions | undefined;\n    }\n\n    export interface CommitBooleanAttribute {\n      kind: 'commit boolean attribute';\n      element: Element;\n      name: string;\n      value: boolean;\n      options: RenderOptions | undefined;\n    }\n\n    export interface CommitEventListener {\n      kind: 'commit event listener';\n      element: Element;\n      name: string;\n      value: unknown;\n      oldListener: unknown;\n      options: RenderOptions | undefined;\n      // True if we're removing the old event listener (e.g. because settings changed, or value is nothing)\n      removeListener: boolean;\n      // True if we're adding a new event listener (e.g. because first render, or settings changed)\n      addListener: boolean;\n    }\n\n    export interface CommitToElementBinding {\n      kind: 'commit to element binding';\n      element: Element;\n      value: unknown;\n      options: RenderOptions | undefined;\n    }\n  }\n}\n\ninterface DebugLoggingWindow {\n  // Even in dev mode, we generally don't want to emit these events, as that's\n  // another level of cost, so only emit them when DEV_MODE is true _and_ when\n  // window.emitLitDebugEvents is true.\n  emitLitDebugLogEvents?: boolean;\n}\n\n/**\n * Useful for visualizing and logging insights into what the Lit template system is doing.\n *\n * Compiled out of prod mode builds.\n */\nconst debugLogEvent = DEV_MODE\n  ? (event: LitUnstable.DebugLog.Entry) => {\n      const shouldEmit = (global as unknown as DebugLoggingWindow)\n        .emitLitDebugLogEvents;\n      if (!shouldEmit) {\n        return;\n      }\n      global.dispatchEvent(\n        new CustomEvent<LitUnstable.DebugLog.Entry>('lit-debug', {\n          detail: event,\n        })\n      );\n    }\n  : undefined;\n// Used for connecting beginRender and endRender events when there are nested\n// renders when errors are thrown preventing an endRender event from being\n// called.\nlet debugLogRenderId = 0;\n\nlet issueWarning: (code: string, warning: string) => void;\n\nif (DEV_MODE) {\n  global.litIssuedWarnings ??= new Set();\n\n  // Issue a warning, if we haven't already.\n  issueWarning = (code: string, warning: string) => {\n    warning += code\n      ? ` See https://lit.dev/msg/${code} for more information.`\n      : '';\n    if (!global.litIssuedWarnings!.has(warning)) {\n      console.warn(warning);\n      global.litIssuedWarnings!.add(warning);\n    }\n  };\n\n  issueWarning(\n    'dev-mode',\n    `Lit is in dev mode. Not recommended for production!`\n  );\n}\n\nconst wrap =\n  ENABLE_SHADYDOM_NOPATCH &&\n  global.ShadyDOM?.inUse &&\n  global.ShadyDOM?.noPatch === true\n    ? global.ShadyDOM!.wrap\n    : (node: Node) => node;\n\nconst trustedTypes = (global as unknown as Partial<Window>).trustedTypes;\n\n/**\n * Our TrustedTypePolicy for HTML which is declared using the html template\n * tag function.\n *\n * That HTML is a developer-authored constant, and is parsed with innerHTML\n * before any untrusted expressions have been mixed in. Therefor it is\n * considered safe by construction.\n */\nconst policy = trustedTypes\n  ? trustedTypes.createPolicy('lit-html', {\n      createHTML: (s) => s,\n    })\n  : undefined;\n\n/**\n * Used to sanitize any value before it is written into the DOM. This can be\n * used to implement a security policy of allowed and disallowed values in\n * order to prevent XSS attacks.\n *\n * One way of using this callback would be to check attributes and properties\n * against a list of high risk fields, and require that values written to such\n * fields be instances of a class which is safe by construction. Closure's Safe\n * HTML Types is one implementation of this technique (\n * https://github.com/google/safe-html-types/blob/master/doc/safehtml-types.md).\n * The TrustedTypes polyfill in API-only mode could also be used as a basis\n * for this technique (https://github.com/WICG/trusted-types).\n *\n * @param node The HTML node (usually either a #text node or an Element) that\n *     is being written to. Note that this is just an exemplar node, the write\n *     may take place against another instance of the same class of node.\n * @param name The name of an attribute or property (for example, 'href').\n * @param type Indicates whether the write that's about to be performed will\n *     be to a property or a node.\n * @return A function that will sanitize this class of writes.\n */\nexport type SanitizerFactory = (\n  node: Node,\n  name: string,\n  type: 'property' | 'attribute'\n) => ValueSanitizer;\n\n/**\n * A function which can sanitize values that will be written to a specific kind\n * of DOM sink.\n *\n * See SanitizerFactory.\n *\n * @param value The value to sanitize. Will be the actual value passed into\n *     the lit-html template literal, so this could be of any type.\n * @return The value to write to the DOM. Usually the same as the input value,\n *     unless sanitization is needed.\n */\nexport type ValueSanitizer = (value: unknown) => unknown;\n\nconst identityFunction: ValueSanitizer = (value: unknown) => value;\nconst noopSanitizer: SanitizerFactory = (\n  _node: Node,\n  _name: string,\n  _type: 'property' | 'attribute'\n) => identityFunction;\n\n/** Sets the global sanitizer factory. */\nconst setSanitizer = (newSanitizer: SanitizerFactory) => {\n  if (!ENABLE_EXTRA_SECURITY_HOOKS) {\n    return;\n  }\n  if (sanitizerFactoryInternal !== noopSanitizer) {\n    throw new Error(\n      `Attempted to overwrite existing lit-html security policy.` +\n        ` setSanitizeDOMValueFactory should be called at most once.`\n    );\n  }\n  sanitizerFactoryInternal = newSanitizer;\n};\n\n/**\n * Only used in internal tests, not a part of the public API.\n */\nconst _testOnlyClearSanitizerFactoryDoNotCallOrElse = () => {\n  sanitizerFactoryInternal = noopSanitizer;\n};\n\nconst createSanitizer: SanitizerFactory = (node, name, type) => {\n  return sanitizerFactoryInternal(node, name, type);\n};\n\n// Added to an attribute name to mark the attribute as bound so we can find\n// it easily.\nconst boundAttributeSuffix = '$lit$';\n\n// This marker is used in many syntactic positions in HTML, so it must be\n// a valid element name and attribute name. We don't support dynamic names (yet)\n// but this at least ensures that the parse tree is closer to the template\n// intention.\nconst marker = `lit$${String(Math.random()).slice(9)}$`;\n\n// String used to tell if a comment is a marker comment\nconst markerMatch = '?' + marker;\n\n// Text used to insert a comment marker node. We use processing instruction\n// syntax because it's slightly smaller, but parses as a comment node.\nconst nodeMarker = `<${markerMatch}>`;\n\nconst d =\n  NODE_MODE && global.document === undefined\n    ? ({\n        createTreeWalker() {\n          return {};\n        },\n      } as unknown as Document)\n    : document;\n\n// Creates a dynamic marker. We never have to search for these in the DOM.\nconst createMarker = () => d.createComment('');\n\n// https://tc39.github.io/ecma262/#sec-typeof-operator\ntype Primitive = null | undefined | boolean | number | string | symbol | bigint;\nconst isPrimitive = (value: unknown): value is Primitive =>\n  value === null || (typeof value != 'object' && typeof value != 'function');\nconst isArray = Array.isArray;\nconst isIterable = (value: unknown): value is Iterable<unknown> =>\n  isArray(value) ||\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  typeof (value as any)?.[Symbol.iterator] === 'function';\n\nconst SPACE_CHAR = `[ \\t\\n\\f\\r]`;\nconst ATTR_VALUE_CHAR = `[^ \\t\\n\\f\\r\"'\\`<>=]`;\nconst NAME_CHAR = `[^\\\\s\"'>=/]`;\n\n// These regexes represent the five parsing states that we care about in the\n// Template's HTML scanner. They match the *end* of the state they're named\n// after.\n// Depending on the match, we transition to a new state. If there's no match,\n// we stay in the same state.\n// Note that the regexes are stateful. We utilize lastIndex and sync it\n// across the multiple regexes used. In addition to the five regexes below\n// we also dynamically create a regex to find the matching end tags for raw\n// text elements.\n\n/**\n * End of text is: `<` followed by:\n *   (comment start) or (tag) or (dynamic tag binding)\n */\nconst textEndRegex = /<(?:(!--|\\/[^a-zA-Z])|(\\/?[a-zA-Z][^>\\s]*)|(\\/?$))/g;\nconst COMMENT_START = 1;\nconst TAG_NAME = 2;\nconst DYNAMIC_TAG_NAME = 3;\n\nconst commentEndRegex = /-->/g;\n/**\n * Comments not started with <!--, like </{, can be ended by a single `>`\n */\nconst comment2EndRegex = />/g;\n\n/**\n * The tagEnd regex matches the end of the \"inside an opening\" tag syntax\n * position. It either matches a `>`, an attribute-like sequence, or the end\n * of the string after a space (attribute-name position ending).\n *\n * See attributes in the HTML spec:\n * https://www.w3.org/TR/html5/syntax.html#elements-attributes\n *\n * \" \\t\\n\\f\\r\" are HTML space characters:\n * https://infra.spec.whatwg.org/#ascii-whitespace\n *\n * So an attribute is:\n *  * The name: any character except a whitespace character, (\"), ('), \">\",\n *    \"=\", or \"/\". Note: this is different from the HTML spec which also excludes control characters.\n *  * Followed by zero or more space characters\n *  * Followed by \"=\"\n *  * Followed by zero or more space characters\n *  * Followed by:\n *    * Any character except space, ('), (\"), \"<\", \">\", \"=\", (`), or\n *    * (\") then any non-(\"), or\n *    * (') then any non-(')\n */\nconst tagEndRegex = new RegExp(\n  `>|${SPACE_CHAR}(?:(${NAME_CHAR}+)(${SPACE_CHAR}*=${SPACE_CHAR}*(?:${ATTR_VALUE_CHAR}|(\"|')|))|$)`,\n  'g'\n);\nconst ENTIRE_MATCH = 0;\nconst ATTRIBUTE_NAME = 1;\nconst SPACES_AND_EQUALS = 2;\nconst QUOTE_CHAR = 3;\n\nconst singleQuoteAttrEndRegex = /'/g;\nconst doubleQuoteAttrEndRegex = /\"/g;\n/**\n * Matches the raw text elements.\n *\n * Comments are not parsed within raw text elements, so we need to search their\n * text content for marker strings.\n */\nconst rawTextElement = /^(?:script|style|textarea|title)$/i;\n\n/** TemplateResult types */\nconst HTML_RESULT = 1;\nconst SVG_RESULT = 2;\n\ntype ResultType = typeof HTML_RESULT | typeof SVG_RESULT;\n\n// TemplatePart types\n// IMPORTANT: these must match the values in PartType\nconst ATTRIBUTE_PART = 1;\nconst CHILD_PART = 2;\nconst PROPERTY_PART = 3;\nconst BOOLEAN_ATTRIBUTE_PART = 4;\nconst EVENT_PART = 5;\nconst ELEMENT_PART = 6;\nconst COMMENT_PART = 7;\n\n/**\n * The return type of the template tag functions, {@linkcode html} and\n * {@linkcode svg}.\n *\n * A `TemplateResult` object holds all the information about a template\n * expression required to render it: the template strings, expression values,\n * and type of template (html or svg).\n *\n * `TemplateResult` objects do not create any DOM on their own. To create or\n * update DOM you need to render the `TemplateResult`. See\n * [Rendering](https://lit.dev/docs/components/rendering) for more information.\n *\n */\nexport type TemplateResult<T extends ResultType = ResultType> = {\n  // This property needs to remain unminified.\n  ['_$litType$']: T;\n  strings: TemplateStringsArray;\n  values: unknown[];\n};\n\nexport type HTMLTemplateResult = TemplateResult<typeof HTML_RESULT>;\n\nexport type SVGTemplateResult = TemplateResult<typeof SVG_RESULT>;\n\nexport interface CompiledTemplateResult {\n  // This is a factory in order to make template initialization lazy\n  // and allow ShadyRenderOptions scope to be passed in.\n  // This property needs to remain unminified.\n  ['_$litType$']: CompiledTemplate;\n  values: unknown[];\n}\n\nexport interface CompiledTemplate extends Omit<Template, 'el'> {\n  // el is overridden to be optional. We initialize it on first render\n  el?: HTMLTemplateElement;\n\n  // The prepared HTML string to create a template element from.\n  h: TrustedHTML;\n}\n\n/**\n * Generates a template literal tag function that returns a TemplateResult with\n * the given result type.\n */\nconst tag =\n  <T extends ResultType>(type: T) =>\n  (strings: TemplateStringsArray, ...values: unknown[]): TemplateResult<T> => {\n    // Warn against templates octal escape sequences\n    // We do this here rather than in render so that the warning is closer to the\n    // template definition.\n    if (DEV_MODE && strings.some((s) => s === undefined)) {\n      console.warn(\n        'Some template strings are undefined.\\n' +\n          'This is probably caused by illegal octal escape sequences.'\n      );\n    }\n    return {\n      // This property needs to remain unminified.\n      ['_$litType$']: type,\n      strings,\n      values,\n    };\n  };\n\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n *\n * ```ts\n * const header = (title: string) => html`<h1>${title}</h1>`;\n * ```\n *\n * The `html` tag returns a description of the DOM to render as a value. It is\n * lazy, meaning no work is done until the template is rendered. When rendering,\n * if a template comes from the same expression as a previously rendered result,\n * it's efficiently updated instead of replaced.\n */\nexport const html = tag(HTML_RESULT);\n\n/**\n * Interprets a template literal as an SVG fragment that can efficiently\n * render to and update a container.\n *\n * ```ts\n * const rect = svg`<rect width=\"10\" height=\"10\"></rect>`;\n *\n * const myImage = html`\n *   <svg viewBox=\"0 0 10 10\" xmlns=\"http://www.w3.org/2000/svg\">\n *     ${rect}\n *   </svg>`;\n * ```\n *\n * The `svg` *tag function* should only be used for SVG fragments, or elements\n * that would be contained **inside** an `<svg>` HTML element. A common error is\n * placing an `<svg>` *element* in a template tagged with the `svg` tag\n * function. The `<svg>` element is an HTML element and should be used within a\n * template tagged with the {@linkcode html} tag function.\n *\n * In LitElement usage, it's invalid to return an SVG fragment from the\n * `render()` method, as the SVG fragment will be contained within the element's\n * shadow root and thus cannot be used within an `<svg>` HTML element.\n */\nexport const svg = tag(SVG_RESULT);\n\n/**\n * A sentinel value that signals that a value was handled by a directive and\n * should not be written to the DOM.\n */\nexport const noChange = Symbol.for('lit-noChange');\n\n/**\n * A sentinel value that signals a ChildPart to fully clear its content.\n *\n * ```ts\n * const button = html`${\n *  user.isAdmin\n *    ? html`<button>DELETE</button>`\n *    : nothing\n * }`;\n * ```\n *\n * Prefer using `nothing` over other falsy values as it provides a consistent\n * behavior between various expression binding contexts.\n *\n * In child expressions, `undefined`, `null`, `''`, and `nothing` all behave the\n * same and render no nodes. In attribute expressions, `nothing` _removes_ the\n * attribute, while `undefined` and `null` will render an empty string. In\n * property expressions `nothing` becomes `undefined`.\n */\nexport const nothing = Symbol.for('lit-nothing');\n\n/**\n * The cache of prepared templates, keyed by the tagged TemplateStringsArray\n * and _not_ accounting for the specific template tag used. This means that\n * template tags cannot be dynamic - the must statically be one of html, svg,\n * or attr. This restriction simplifies the cache lookup, which is on the hot\n * path for rendering.\n */\nconst templateCache = new WeakMap<TemplateStringsArray, Template>();\n\n/**\n * Object specifying options for controlling lit-html rendering. Note that\n * while `render` may be called multiple times on the same `container` (and\n * `renderBefore` reference node) to efficiently update the rendered content,\n * only the options passed in during the first render are respected during\n * the lifetime of renders to that unique `container` + `renderBefore`\n * combination.\n */\nexport interface RenderOptions {\n  /**\n   * An object to use as the `this` value for event listeners. It's often\n   * useful to set this to the host component rendering a template.\n   */\n  host?: object;\n  /**\n   * A DOM node before which to render content in the container.\n   */\n  renderBefore?: ChildNode | null;\n  /**\n   * Node used for cloning the template (`importNode` will be called on this\n   * node). This controls the `ownerDocument` of the rendered DOM, along with\n   * any inherited context. Defaults to the global `document`.\n   */\n  creationScope?: {importNode(node: Node, deep?: boolean): Node};\n  /**\n   * The initial connected state for the top-level part being rendered. If no\n   * `isConnected` option is set, `AsyncDirective`s will be connected by\n   * default. Set to `false` if the initial render occurs in a disconnected tree\n   * and `AsyncDirective`s should see `isConnected === false` for their initial\n   * render. The `part.setConnected()` method must be used subsequent to initial\n   * render to change the connected state of the part.\n   */\n  isConnected?: boolean;\n}\n\nconst walker = d.createTreeWalker(\n  d,\n  129 /* NodeFilter.SHOW_{ELEMENT|COMMENT} */,\n  null,\n  false\n);\n\nlet sanitizerFactoryInternal: SanitizerFactory = noopSanitizer;\n\n//\n// Classes only below here, const variable declarations only above here...\n//\n// Keeping variable declarations and classes together improves minification.\n// Interfaces and type aliases can be interleaved freely.\n//\n\n// Type for classes that have a `_directive` or `_directives[]` field, used by\n// `resolveDirective`\nexport interface DirectiveParent {\n  _$parent?: DirectiveParent;\n  _$isConnected: boolean;\n  __directive?: Directive;\n  __directives?: Array<Directive | undefined>;\n}\n\n/**\n * Returns an HTML string for the given TemplateStringsArray and result type\n * (HTML or SVG), along with the case-sensitive bound attribute names in\n * template order. The HTML contains comment markers denoting the `ChildPart`s\n * and suffixes on bound attributes denoting the `AttributeParts`.\n *\n * @param strings template strings array\n * @param type HTML or SVG\n * @return Array containing `[html, attrNames]` (array returned for terseness,\n *     to avoid object fields since this code is shared with non-minified SSR\n *     code)\n */\nconst getTemplateHtml = (\n  strings: TemplateStringsArray,\n  type: ResultType\n): [TrustedHTML, Array<string | undefined>] => {\n  // Insert makers into the template HTML to represent the position of\n  // bindings. The following code scans the template strings to determine the\n  // syntactic position of the bindings. They can be in text position, where\n  // we insert an HTML comment, attribute value position, where we insert a\n  // sentinel string and re-write the attribute name, or inside a tag where\n  // we insert the sentinel string.\n  const l = strings.length - 1;\n  // Stores the case-sensitive bound attribute names in the order of their\n  // parts. ElementParts are also reflected in this array as undefined\n  // rather than a string, to disambiguate from attribute bindings.\n  const attrNames: Array<string | undefined> = [];\n  let html = type === SVG_RESULT ? '<svg>' : '';\n\n  // When we're inside a raw text tag (not it's text content), the regex\n  // will still be tagRegex so we can find attributes, but will switch to\n  // this regex when the tag ends.\n  let rawTextEndRegex: RegExp | undefined;\n\n  // The current parsing state, represented as a reference to one of the\n  // regexes\n  let regex = textEndRegex;\n\n  for (let i = 0; i < l; i++) {\n    const s = strings[i];\n    // The index of the end of the last attribute name. When this is\n    // positive at end of a string, it means we're in an attribute value\n    // position and need to rewrite the attribute name.\n    // We also use a special value of -2 to indicate that we encountered\n    // the end of a string in attribute name position.\n    let attrNameEndIndex = -1;\n    let attrName: string | undefined;\n    let lastIndex = 0;\n    let match!: RegExpExecArray | null;\n\n    // The conditions in this loop handle the current parse state, and the\n    // assignments to the `regex` variable are the state transitions.\n    while (lastIndex < s.length) {\n      // Make sure we start searching from where we previously left off\n      regex.lastIndex = lastIndex;\n      match = regex.exec(s);\n      if (match === null) {\n        break;\n      }\n      lastIndex = regex.lastIndex;\n      if (regex === textEndRegex) {\n        if (match[COMMENT_START] === '!--') {\n          regex = commentEndRegex;\n        } else if (match[COMMENT_START] !== undefined) {\n          // We started a weird comment, like </{\n          regex = comment2EndRegex;\n        } else if (match[TAG_NAME] !== undefined) {\n          if (rawTextElement.test(match[TAG_NAME])) {\n            // Record if we encounter a raw-text element. We'll switch to\n            // this regex at the end of the tag.\n            rawTextEndRegex = new RegExp(`</${match[TAG_NAME]}`, 'g');\n          }\n          regex = tagEndRegex;\n        } else if (match[DYNAMIC_TAG_NAME] !== undefined) {\n          if (DEV_MODE) {\n            throw new Error(\n              'Bindings in tag names are not supported. Please use static templates instead. ' +\n                'See https://lit.dev/docs/templates/expressions/#static-expressions'\n            );\n          }\n          regex = tagEndRegex;\n        }\n      } else if (regex === tagEndRegex) {\n        if (match[ENTIRE_MATCH] === '>') {\n          // End of a tag. If we had started a raw-text element, use that\n          // regex\n          regex = rawTextEndRegex ?? textEndRegex;\n          // We may be ending an unquoted attribute value, so make sure we\n          // clear any pending attrNameEndIndex\n          attrNameEndIndex = -1;\n        } else if (match[ATTRIBUTE_NAME] === undefined) {\n          // Attribute name position\n          attrNameEndIndex = -2;\n        } else {\n          attrNameEndIndex = regex.lastIndex - match[SPACES_AND_EQUALS].length;\n          attrName = match[ATTRIBUTE_NAME];\n          regex =\n            match[QUOTE_CHAR] === undefined\n              ? tagEndRegex\n              : match[QUOTE_CHAR] === '\"'\n              ? doubleQuoteAttrEndRegex\n              : singleQuoteAttrEndRegex;\n        }\n      } else if (\n        regex === doubleQuoteAttrEndRegex ||\n        regex === singleQuoteAttrEndRegex\n      ) {\n        regex = tagEndRegex;\n      } else if (regex === commentEndRegex || regex === comment2EndRegex) {\n        regex = textEndRegex;\n      } else {\n        // Not one of the five state regexes, so it must be the dynamically\n        // created raw text regex and we're at the close of that element.\n        regex = tagEndRegex;\n        rawTextEndRegex = undefined;\n      }\n    }\n\n    if (DEV_MODE) {\n      // If we have a attrNameEndIndex, which indicates that we should\n      // rewrite the attribute name, assert that we're in a valid attribute\n      // position - either in a tag, or a quoted attribute value.\n      console.assert(\n        attrNameEndIndex === -1 ||\n          regex === tagEndRegex ||\n          regex === singleQuoteAttrEndRegex ||\n          regex === doubleQuoteAttrEndRegex,\n        'unexpected parse state B'\n      );\n    }\n\n    // We have four cases:\n    //  1. We're in text position, and not in a raw text element\n    //     (regex === textEndRegex): insert a comment marker.\n    //  2. We have a non-negative attrNameEndIndex which means we need to\n    //     rewrite the attribute name to add a bound attribute suffix.\n    //  3. We're at the non-first binding in a multi-binding attribute, use a\n    //     plain marker.\n    //  4. We're somewhere else inside the tag. If we're in attribute name\n    //     position (attrNameEndIndex === -2), add a sequential suffix to\n    //     generate a unique attribute name.\n\n    // Detect a binding next to self-closing tag end and insert a space to\n    // separate the marker from the tag end:\n    const end =\n      regex === tagEndRegex && strings[i + 1].startsWith('/>') ? ' ' : '';\n    html +=\n      regex === textEndRegex\n        ? s + nodeMarker\n        : attrNameEndIndex >= 0\n        ? (attrNames.push(attrName!),\n          s.slice(0, attrNameEndIndex) +\n            boundAttributeSuffix +\n            s.slice(attrNameEndIndex)) +\n          marker +\n          end\n        : s +\n          marker +\n          (attrNameEndIndex === -2 ? (attrNames.push(undefined), i) : end);\n  }\n\n  const htmlResult: string | TrustedHTML =\n    html + (strings[l] || '<?>') + (type === SVG_RESULT ? '</svg>' : '');\n\n  // A security check to prevent spoofing of Lit template results.\n  // In the future, we may be able to replace this with Array.isTemplateObject,\n  // though we might need to make that check inside of the html and svg\n  // functions, because precompiled templates don't come in as\n  // TemplateStringArray objects.\n  if (!Array.isArray(strings) || !strings.hasOwnProperty('raw')) {\n    let message = 'invalid template strings array';\n    if (DEV_MODE) {\n      message = `\n          Internal Error: expected template strings to be an array\n          with a 'raw' field. Faking a template strings array by\n          calling html or svg like an ordinary function is effectively\n          the same as calling unsafeHtml and can lead to major security\n          issues, e.g. opening your code up to XSS attacks.\n\n          If you're using the html or svg tagged template functions normally\n          and still seeing this error, please file a bug at\n          https://github.com/lit/lit/issues/new?template=bug_report.md\n          and include information about your build tooling, if any.\n        `\n        .trim()\n        .replace(/\\n */g, '\\n');\n    }\n    throw new Error(message);\n  }\n  // Returned as an array for terseness\n  return [\n    policy !== undefined\n      ? policy.createHTML(htmlResult)\n      : (htmlResult as unknown as TrustedHTML),\n    attrNames,\n  ];\n};\n\n/** @internal */\nexport type {Template};\nclass Template {\n  /** @internal */\n  el!: HTMLTemplateElement;\n\n  parts: Array<TemplatePart> = [];\n\n  constructor(\n    // This property needs to remain unminified.\n    {strings, ['_$litType$']: type}: TemplateResult,\n    options?: RenderOptions\n  ) {\n    let node: Node | null;\n    let nodeIndex = 0;\n    let attrNameIndex = 0;\n    const partCount = strings.length - 1;\n    const parts = this.parts;\n\n    // Create template element\n    const [html, attrNames] = getTemplateHtml(strings, type);\n    this.el = Template.createElement(html, options);\n    walker.currentNode = this.el.content;\n\n    // Reparent SVG nodes into template root\n    if (type === SVG_RESULT) {\n      const content = this.el.content;\n      const svgElement = content.firstChild!;\n      svgElement.remove();\n      content.append(...svgElement.childNodes);\n    }\n\n    // Walk the template to find binding markers and create TemplateParts\n    while ((node = walker.nextNode()) !== null && parts.length < partCount) {\n      if (node.nodeType === 1) {\n        if (DEV_MODE) {\n          const tag = (node as Element).localName;\n          // Warn if `textarea` includes an expression and throw if `template`\n          // does since these are not supported. We do this by checking\n          // innerHTML for anything that looks like a marker. This catches\n          // cases like bindings in textarea there markers turn into text nodes.\n          if (\n            /^(?:textarea|template)$/i!.test(tag) &&\n            (node as Element).innerHTML.includes(marker)\n          ) {\n            const m =\n              `Expressions are not supported inside \\`${tag}\\` ` +\n              `elements. See https://lit.dev/msg/expression-in-${tag} for more ` +\n              `information.`;\n            if (tag === 'template') {\n              throw new Error(m);\n            } else issueWarning('', m);\n          }\n        }\n        // TODO (justinfagnani): for attempted dynamic tag names, we don't\n        // increment the bindingIndex, and it'll be off by 1 in the element\n        // and off by two after it.\n        if ((node as Element).hasAttributes()) {\n          // We defer removing bound attributes because on IE we might not be\n          // iterating attributes in their template order, and would sometimes\n          // remove an attribute that we still need to create a part for.\n          const attrsToRemove = [];\n          for (const name of (node as Element).getAttributeNames()) {\n            // `name` is the name of the attribute we're iterating over, but not\n            // _necessarily_ the name of the attribute we will create a part\n            // for. They can be different in browsers that don't iterate on\n            // attributes in source order. In that case the attrNames array\n            // contains the attribute name we'll process next. We only need the\n            // attribute name here to know if we should process a bound attribute\n            // on this element.\n            if (\n              name.endsWith(boundAttributeSuffix) ||\n              name.startsWith(marker)\n            ) {\n              const realName = attrNames[attrNameIndex++];\n              attrsToRemove.push(name);\n              if (realName !== undefined) {\n                // Lowercase for case-sensitive SVG attributes like viewBox\n                const value = (node as Element).getAttribute(\n                  realName.toLowerCase() + boundAttributeSuffix\n                )!;\n                const statics = value.split(marker);\n                const m = /([.?@])?(.*)/.exec(realName)!;\n                parts.push({\n                  type: ATTRIBUTE_PART,\n                  index: nodeIndex,\n                  name: m[2],\n                  strings: statics,\n                  ctor:\n                    m[1] === '.'\n                      ? PropertyPart\n                      : m[1] === '?'\n                      ? BooleanAttributePart\n                      : m[1] === '@'\n                      ? EventPart\n                      : AttributePart,\n                });\n              } else {\n                parts.push({\n                  type: ELEMENT_PART,\n                  index: nodeIndex,\n                });\n              }\n            }\n          }\n          for (const name of attrsToRemove) {\n            (node as Element).removeAttribute(name);\n          }\n        }\n        // TODO (justinfagnani): benchmark the regex against testing for each\n        // of the 3 raw text element names.\n        if (rawTextElement.test((node as Element).tagName)) {\n          // For raw text elements we need to split the text content on\n          // markers, create a Text node for each segment, and create\n          // a TemplatePart for each marker.\n          const strings = (node as Element).textContent!.split(marker);\n          const lastIndex = strings.length - 1;\n          if (lastIndex > 0) {\n            (node as Element).textContent = trustedTypes\n              ? (trustedTypes.emptyScript as unknown as '')\n              : '';\n            // Generate a new text node for each literal section\n            // These nodes are also used as the markers for node parts\n            // We can't use empty text nodes as markers because they're\n            // normalized when cloning in IE (could simplify when\n            // IE is no longer supported)\n            for (let i = 0; i < lastIndex; i++) {\n              (node as Element).append(strings[i], createMarker());\n              // Walk past the marker node we just added\n              walker.nextNode();\n              parts.push({type: CHILD_PART, index: ++nodeIndex});\n            }\n            // Note because this marker is added after the walker's current\n            // node, it will be walked to in the outer loop (and ignored), so\n            // we don't need to adjust nodeIndex here\n            (node as Element).append(strings[lastIndex], createMarker());\n          }\n        }\n      } else if (node.nodeType === 8) {\n        const data = (node as Comment).data;\n        if (data === markerMatch) {\n          parts.push({type: CHILD_PART, index: nodeIndex});\n        } else {\n          let i = -1;\n          while ((i = (node as Comment).data.indexOf(marker, i + 1)) !== -1) {\n            // Comment node has a binding marker inside, make an inactive part\n            // The binding won't work, but subsequent bindings will\n            parts.push({type: COMMENT_PART, index: nodeIndex});\n            // Move to the end of the match\n            i += marker.length - 1;\n          }\n        }\n      }\n      nodeIndex++;\n    }\n    // We could set walker.currentNode to another node here to prevent a memory\n    // leak, but every time we prepare a template, we immediately render it\n    // and re-use the walker in new TemplateInstance._clone().\n    debugLogEvent?.({\n      kind: 'template prep',\n      template: this,\n      clonableTemplate: this.el,\n      parts: this.parts,\n      strings,\n    });\n  }\n\n  // Overridden via `litHtmlPolyfillSupport` to provide platform support.\n  /** @nocollapse */\n  static createElement(html: TrustedHTML, _options?: RenderOptions) {\n    const el = d.createElement('template');\n    el.innerHTML = html as unknown as string;\n    return el;\n  }\n}\n\nexport interface Disconnectable {\n  _$parent?: Disconnectable;\n  _$disconnectableChildren?: Set<Disconnectable>;\n  // Rather than hold connection state on instances, Disconnectables recursively\n  // fetch the connection state from the RootPart they are connected in via\n  // getters up the Disconnectable tree via _$parent references. This pushes the\n  // cost of tracking the isConnected state to `AsyncDirectives`, and avoids\n  // needing to pass all Disconnectables (parts, template instances, and\n  // directives) their connection state each time it changes, which would be\n  // costly for trees that have no AsyncDirectives.\n  _$isConnected: boolean;\n}\n\nfunction resolveDirective(\n  part: ChildPart | AttributePart | ElementPart,\n  value: unknown,\n  parent: DirectiveParent = part,\n  attributeIndex?: number\n): unknown {\n  // Bail early if the value is explicitly noChange. Note, this means any\n  // nested directive is still attached and is not run.\n  if (value === noChange) {\n    return value;\n  }\n  let currentDirective =\n    attributeIndex !== undefined\n      ? (parent as AttributePart).__directives?.[attributeIndex]\n      : (parent as ChildPart | ElementPart | Directive).__directive;\n  const nextDirectiveConstructor = isPrimitive(value)\n    ? undefined\n    : // This property needs to remain unminified.\n      (value as DirectiveResult)['_$litDirective$'];\n  if (currentDirective?.constructor !== nextDirectiveConstructor) {\n    // This property needs to remain unminified.\n    currentDirective?.['_$notifyDirectiveConnectionChanged']?.(false);\n    if (nextDirectiveConstructor === undefined) {\n      currentDirective = undefined;\n    } else {\n      currentDirective = new nextDirectiveConstructor(part as PartInfo);\n      currentDirective._$initialize(part, parent, attributeIndex);\n    }\n    if (attributeIndex !== undefined) {\n      ((parent as AttributePart).__directives ??= [])[attributeIndex] =\n        currentDirective;\n    } else {\n      (parent as ChildPart | Directive).__directive = currentDirective;\n    }\n  }\n  if (currentDirective !== undefined) {\n    value = resolveDirective(\n      part,\n      currentDirective._$resolve(part, (value as DirectiveResult).values),\n      currentDirective,\n      attributeIndex\n    );\n  }\n  return value;\n}\n\nexport type {TemplateInstance};\n/**\n * An updateable instance of a Template. Holds references to the Parts used to\n * update the template instance.\n */\nclass TemplateInstance implements Disconnectable {\n  _$template: Template;\n  _$parts: Array<Part | undefined> = [];\n\n  /** @internal */\n  _$parent: ChildPart;\n  /** @internal */\n  _$disconnectableChildren?: Set<Disconnectable> = undefined;\n\n  constructor(template: Template, parent: ChildPart) {\n    this._$template = template;\n    this._$parent = parent;\n  }\n\n  // Called by ChildPart parentNode getter\n  get parentNode() {\n    return this._$parent.parentNode;\n  }\n\n  // See comment in Disconnectable interface for why this is a getter\n  get _$isConnected() {\n    return this._$parent._$isConnected;\n  }\n\n  // This method is separate from the constructor because we need to return a\n  // DocumentFragment and we don't want to hold onto it with an instance field.\n  _clone(options: RenderOptions | undefined) {\n    const {\n      el: {content},\n      parts: parts,\n    } = this._$template;\n    const fragment = (options?.creationScope ?? d).importNode(content, true);\n    walker.currentNode = fragment;\n\n    let node = walker.nextNode()!;\n    let nodeIndex = 0;\n    let partIndex = 0;\n    let templatePart = parts[0];\n\n    while (templatePart !== undefined) {\n      if (nodeIndex === templatePart.index) {\n        let part: Part | undefined;\n        if (templatePart.type === CHILD_PART) {\n          part = new ChildPart(\n            node as HTMLElement,\n            node.nextSibling,\n            this,\n            options\n          );\n        } else if (templatePart.type === ATTRIBUTE_PART) {\n          part = new templatePart.ctor(\n            node as HTMLElement,\n            templatePart.name,\n            templatePart.strings,\n            this,\n            options\n          );\n        } else if (templatePart.type === ELEMENT_PART) {\n          part = new ElementPart(node as HTMLElement, this, options);\n        }\n        this._$parts.push(part);\n        templatePart = parts[++partIndex];\n      }\n      if (nodeIndex !== templatePart?.index) {\n        node = walker.nextNode()!;\n        nodeIndex++;\n      }\n    }\n    // We need to set the currentNode away from the cloned tree so that we\n    // don't hold onto the tree even if the tree is detached and should be\n    // freed.\n    walker.currentNode = d;\n    return fragment;\n  }\n\n  _update(values: Array<unknown>) {\n    let i = 0;\n    for (const part of this._$parts) {\n      if (part !== undefined) {\n        debugLogEvent?.({\n          kind: 'set part',\n          part,\n          value: values[i],\n          valueIndex: i,\n          values,\n          templateInstance: this,\n        });\n        if ((part as AttributePart).strings !== undefined) {\n          (part as AttributePart)._$setValue(values, part as AttributePart, i);\n          // The number of values the part consumes is part.strings.length - 1\n          // since values are in between template spans. We increment i by 1\n          // later in the loop, so increment it by part.strings.length - 2 here\n          i += (part as AttributePart).strings!.length - 2;\n        } else {\n          part._$setValue(values[i]);\n        }\n      }\n      i++;\n    }\n  }\n}\n\n/*\n * Parts\n */\ntype AttributeTemplatePart = {\n  readonly type: typeof ATTRIBUTE_PART;\n  readonly index: number;\n  readonly name: string;\n  readonly ctor: typeof AttributePart;\n  readonly strings: ReadonlyArray<string>;\n};\ntype NodeTemplatePart = {\n  readonly type: typeof CHILD_PART;\n  readonly index: number;\n};\ntype ElementTemplatePart = {\n  readonly type: typeof ELEMENT_PART;\n  readonly index: number;\n};\ntype CommentTemplatePart = {\n  readonly type: typeof COMMENT_PART;\n  readonly index: number;\n};\n\n/**\n * A TemplatePart represents a dynamic part in a template, before the template\n * is instantiated. When a template is instantiated Parts are created from\n * TemplateParts.\n */\ntype TemplatePart =\n  | NodeTemplatePart\n  | AttributeTemplatePart\n  | ElementTemplatePart\n  | CommentTemplatePart;\n\nexport type Part =\n  | ChildPart\n  | AttributePart\n  | PropertyPart\n  | BooleanAttributePart\n  | ElementPart\n  | EventPart;\n\nexport type {ChildPart};\nclass ChildPart implements Disconnectable {\n  readonly type = CHILD_PART;\n  readonly options: RenderOptions | undefined;\n  _$committedValue: unknown = nothing;\n  /** @internal */\n  __directive?: Directive;\n  /** @internal */\n  _$startNode: ChildNode;\n  /** @internal */\n  _$endNode: ChildNode | null;\n  private _textSanitizer: ValueSanitizer | undefined;\n  /** @internal */\n  _$parent: Disconnectable | undefined;\n  /**\n   * Connection state for RootParts only (i.e. ChildPart without _$parent\n   * returned from top-level `render`). This field is unsed otherwise. The\n   * intention would clearer if we made `RootPart` a subclass of `ChildPart`\n   * with this field (and a different _$isConnected getter), but the subclass\n   * caused a perf regression, possibly due to making call sites polymorphic.\n   * @internal\n   */\n  __isConnected: boolean;\n\n  // See comment in Disconnectable interface for why this is a getter\n  get _$isConnected() {\n    // ChildParts that are not at the root should always be created with a\n    // parent; only RootChildNode's won't, so they return the local isConnected\n    // state\n    return this._$parent?._$isConnected ?? this.__isConnected;\n  }\n\n  // The following fields will be patched onto ChildParts when required by\n  // AsyncDirective\n  /** @internal */\n  _$disconnectableChildren?: Set<Disconnectable> = undefined;\n  /** @internal */\n  _$notifyConnectionChanged?(\n    isConnected: boolean,\n    removeFromParent?: boolean,\n    from?: number\n  ): void;\n  /** @internal */\n  _$reparentDisconnectables?(parent: Disconnectable): void;\n\n  constructor(\n    startNode: ChildNode,\n    endNode: ChildNode | null,\n    parent: TemplateInstance | ChildPart | undefined,\n    options: RenderOptions | undefined\n  ) {\n    this._$startNode = startNode;\n    this._$endNode = endNode;\n    this._$parent = parent;\n    this.options = options;\n    // Note __isConnected is only ever accessed on RootParts (i.e. when there is\n    // no _$parent); the value on a non-root-part is \"don't care\", but checking\n    // for parent would be more code\n    this.__isConnected = options?.isConnected ?? true;\n    if (ENABLE_EXTRA_SECURITY_HOOKS) {\n      // Explicitly initialize for consistent class shape.\n      this._textSanitizer = undefined;\n    }\n  }\n\n  /**\n   * The parent node into which the part renders its content.\n   *\n   * A ChildPart's content consists of a range of adjacent child nodes of\n   * `.parentNode`, possibly bordered by 'marker nodes' (`.startNode` and\n   * `.endNode`).\n   *\n   * - If both `.startNode` and `.endNode` are non-null, then the part's content\n   * consists of all siblings between `.startNode` and `.endNode`, exclusively.\n   *\n   * - If `.startNode` is non-null but `.endNode` is null, then the part's\n   * content consists of all siblings following `.startNode`, up to and\n   * including the last child of `.parentNode`. If `.endNode` is non-null, then\n   * `.startNode` will always be non-null.\n   *\n   * - If both `.endNode` and `.startNode` are null, then the part's content\n   * consists of all child nodes of `.parentNode`.\n   */\n  get parentNode(): Node {\n    let parentNode: Node = wrap(this._$startNode).parentNode!;\n    const parent = this._$parent;\n    if (\n      parent !== undefined &&\n      parentNode?.nodeType === 11 /* Node.DOCUMENT_FRAGMENT */\n    ) {\n      // If the parentNode is a DocumentFragment, it may be because the DOM is\n      // still in the cloned fragment during initial render; if so, get the real\n      // parentNode the part will be committed into by asking the parent.\n      parentNode = (parent as ChildPart | TemplateInstance).parentNode;\n    }\n    return parentNode;\n  }\n\n  /**\n   * The part's leading marker node, if any. See `.parentNode` for more\n   * information.\n   */\n  get startNode(): Node | null {\n    return this._$startNode;\n  }\n\n  /**\n   * The part's trailing marker node, if any. See `.parentNode` for more\n   * information.\n   */\n  get endNode(): Node | null {\n    return this._$endNode;\n  }\n\n  _$setValue(value: unknown, directiveParent: DirectiveParent = this): void {\n    if (DEV_MODE && this.parentNode === null) {\n      throw new Error(\n        `This \\`ChildPart\\` has no \\`parentNode\\` and therefore cannot accept a value. This likely means the element containing the part was manipulated in an unsupported way outside of Lit's control such that the part's marker nodes were ejected from DOM. For example, setting the element's \\`innerHTML\\` or \\`textContent\\` can do this.`\n      );\n    }\n    value = resolveDirective(this, value, directiveParent);\n    if (isPrimitive(value)) {\n      // Non-rendering child values. It's important that these do not render\n      // empty text nodes to avoid issues with preventing default <slot>\n      // fallback content.\n      if (value === nothing || value == null || value === '') {\n        if (this._$committedValue !== nothing) {\n          debugLogEvent?.({\n            kind: 'commit nothing to child',\n            start: this._$startNode,\n            end: this._$endNode,\n            parent: this._$parent,\n            options: this.options,\n          });\n          this._$clear();\n        }\n        this._$committedValue = nothing;\n      } else if (value !== this._$committedValue && value !== noChange) {\n        this._commitText(value);\n      }\n      // This property needs to remain unminified.\n    } else if ((value as TemplateResult)['_$litType$'] !== undefined) {\n      this._commitTemplateResult(value as TemplateResult);\n    } else if ((value as Node).nodeType !== undefined) {\n      if (DEV_MODE && this.options?.host === value) {\n        this._commitText(\n          `[probable mistake: rendered a template's host in itself ` +\n            `(commonly caused by writing \\${this} in a template]`\n        );\n        console.warn(\n          `Attempted to render the template host`,\n          value,\n          `inside itself. This is almost always a mistake, and in dev mode `,\n          `we render some warning text. In production however, we'll `,\n          `render it, which will usually result in an error, and sometimes `,\n          `in the element disappearing from the DOM.`\n        );\n        return;\n      }\n      this._commitNode(value as Node);\n    } else if (isIterable(value)) {\n      this._commitIterable(value);\n    } else {\n      // Fallback, will render the string representation\n      this._commitText(value);\n    }\n  }\n\n  private _insert<T extends Node>(node: T) {\n    return wrap(wrap(this._$startNode).parentNode!).insertBefore(\n      node,\n      this._$endNode\n    );\n  }\n\n  private _commitNode(value: Node): void {\n    if (this._$committedValue !== value) {\n      this._$clear();\n      if (\n        ENABLE_EXTRA_SECURITY_HOOKS &&\n        sanitizerFactoryInternal !== noopSanitizer\n      ) {\n        const parentNodeName = this._$startNode.parentNode?.nodeName;\n        if (parentNodeName === 'STYLE' || parentNodeName === 'SCRIPT') {\n          let message = 'Forbidden';\n          if (DEV_MODE) {\n            if (parentNodeName === 'STYLE') {\n              message =\n                `Lit does not support binding inside style nodes. ` +\n                `This is a security risk, as style injection attacks can ` +\n                `exfiltrate data and spoof UIs. ` +\n                `Consider instead using css\\`...\\` literals ` +\n                `to compose styles, and make do dynamic styling with ` +\n                `css custom properties, ::parts, <slot>s, ` +\n                `and by mutating the DOM rather than stylesheets.`;\n            } else {\n              message =\n                `Lit does not support binding inside script nodes. ` +\n                `This is a security risk, as it could allow arbitrary ` +\n                `code execution.`;\n            }\n          }\n          throw new Error(message);\n        }\n      }\n      debugLogEvent?.({\n        kind: 'commit node',\n        start: this._$startNode,\n        parent: this._$parent,\n        value: value,\n        options: this.options,\n      });\n      this._$committedValue = this._insert(value);\n    }\n  }\n\n  private _commitText(value: unknown): void {\n    // If the committed value is a primitive it means we called _commitText on\n    // the previous render, and we know that this._$startNode.nextSibling is a\n    // Text node. We can now just replace the text content (.data) of the node.\n    if (\n      this._$committedValue !== nothing &&\n      isPrimitive(this._$committedValue)\n    ) {\n      const node = wrap(this._$startNode).nextSibling as Text;\n      if (ENABLE_EXTRA_SECURITY_HOOKS) {\n        if (this._textSanitizer === undefined) {\n          this._textSanitizer = createSanitizer(node, 'data', 'property');\n        }\n        value = this._textSanitizer(value);\n      }\n      debugLogEvent?.({\n        kind: 'commit text',\n        node,\n        value,\n        options: this.options,\n      });\n      (node as Text).data = value as string;\n    } else {\n      if (ENABLE_EXTRA_SECURITY_HOOKS) {\n        const textNode = d.createTextNode('');\n        this._commitNode(textNode);\n        // When setting text content, for security purposes it matters a lot\n        // what the parent is. For example, <style> and <script> need to be\n        // handled with care, while <span> does not. So first we need to put a\n        // text node into the document, then we can sanitize its content.\n        if (this._textSanitizer === undefined) {\n          this._textSanitizer = createSanitizer(textNode, 'data', 'property');\n        }\n        value = this._textSanitizer(value);\n        debugLogEvent?.({\n          kind: 'commit text',\n          node: textNode,\n          value,\n          options: this.options,\n        });\n        textNode.data = value as string;\n      } else {\n        this._commitNode(d.createTextNode(value as string));\n        debugLogEvent?.({\n          kind: 'commit text',\n          node: wrap(this._$startNode).nextSibling as Text,\n          value,\n          options: this.options,\n        });\n      }\n    }\n    this._$committedValue = value;\n  }\n\n  private _commitTemplateResult(\n    result: TemplateResult | CompiledTemplateResult\n  ): void {\n    // This property needs to remain unminified.\n    const {values, ['_$litType$']: type} = result;\n    // If $litType$ is a number, result is a plain TemplateResult and we get\n    // the template from the template cache. If not, result is a\n    // CompiledTemplateResult and _$litType$ is a CompiledTemplate and we need\n    // to create the <template> element the first time we see it.\n    const template: Template | CompiledTemplate =\n      typeof type === 'number'\n        ? this._$getTemplate(result as TemplateResult)\n        : (type.el === undefined &&\n            (type.el = Template.createElement(type.h, this.options)),\n          type);\n\n    if ((this._$committedValue as TemplateInstance)?._$template === template) {\n      debugLogEvent?.({\n        kind: 'template updating',\n        template,\n        instance: this._$committedValue as TemplateInstance,\n        parts: (this._$committedValue as TemplateInstance)._$parts,\n        options: this.options,\n        values,\n      });\n      (this._$committedValue as TemplateInstance)._update(values);\n    } else {\n      const instance = new TemplateInstance(template as Template, this);\n      const fragment = instance._clone(this.options);\n      debugLogEvent?.({\n        kind: 'template instantiated',\n        template,\n        instance,\n        parts: instance._$parts,\n        options: this.options,\n        fragment,\n        values,\n      });\n      instance._update(values);\n      debugLogEvent?.({\n        kind: 'template instantiated and updated',\n        template,\n        instance,\n        parts: instance._$parts,\n        options: this.options,\n        fragment,\n        values,\n      });\n      this._commitNode(fragment);\n      this._$committedValue = instance;\n    }\n  }\n\n  // Overridden via `litHtmlPolyfillSupport` to provide platform support.\n  /** @internal */\n  _$getTemplate(result: TemplateResult) {\n    let template = templateCache.get(result.strings);\n    if (template === undefined) {\n      templateCache.set(result.strings, (template = new Template(result)));\n    }\n    return template;\n  }\n\n  private _commitIterable(value: Iterable<unknown>): void {\n    // For an Iterable, we create a new InstancePart per item, then set its\n    // value to the item. This is a little bit of overhead for every item in\n    // an Iterable, but it lets us recurse easily and efficiently update Arrays\n    // of TemplateResults that will be commonly returned from expressions like:\n    // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n\n    // If value is an array, then the previous render was of an\n    // iterable and value will contain the ChildParts from the previous\n    // render. If value is not an array, clear this part and make a new\n    // array for ChildParts.\n    if (!isArray(this._$committedValue)) {\n      this._$committedValue = [];\n      this._$clear();\n    }\n\n    // Lets us keep track of how many items we stamped so we can clear leftover\n    // items from a previous render\n    const itemParts = this._$committedValue as ChildPart[];\n    let partIndex = 0;\n    let itemPart: ChildPart | undefined;\n\n    for (const item of value) {\n      if (partIndex === itemParts.length) {\n        // If no existing part, create a new one\n        // TODO (justinfagnani): test perf impact of always creating two parts\n        // instead of sharing parts between nodes\n        // https://github.com/lit/lit/issues/1266\n        itemParts.push(\n          (itemPart = new ChildPart(\n            this._insert(createMarker()),\n            this._insert(createMarker()),\n            this,\n            this.options\n          ))\n        );\n      } else {\n        // Reuse an existing part\n        itemPart = itemParts[partIndex];\n      }\n      itemPart._$setValue(item);\n      partIndex++;\n    }\n\n    if (partIndex < itemParts.length) {\n      // itemParts always have end nodes\n      this._$clear(\n        itemPart && wrap(itemPart._$endNode!).nextSibling,\n        partIndex\n      );\n      // Truncate the parts array so _value reflects the current state\n      itemParts.length = partIndex;\n    }\n  }\n\n  /**\n   * Removes the nodes contained within this Part from the DOM.\n   *\n   * @param start Start node to clear from, for clearing a subset of the part's\n   *     DOM (used when truncating iterables)\n   * @param from  When `start` is specified, the index within the iterable from\n   *     which ChildParts are being removed, used for disconnecting directives in\n   *     those Parts.\n   *\n   * @internal\n   */\n  _$clear(\n    start: ChildNode | null = wrap(this._$startNode).nextSibling,\n    from?: number\n  ) {\n    this._$notifyConnectionChanged?.(false, true, from);\n    while (start && start !== this._$endNode) {\n      const n = wrap(start!).nextSibling;\n      (wrap(start!) as Element).remove();\n      start = n;\n    }\n  }\n  /**\n   * Implementation of RootPart's `isConnected`. Note that this metod\n   * should only be called on `RootPart`s (the `ChildPart` returned from a\n   * top-level `render()` call). It has no effect on non-root ChildParts.\n   * @param isConnected Whether to set\n   * @internal\n   */\n  setConnected(isConnected: boolean) {\n    if (this._$parent === undefined) {\n      this.__isConnected = isConnected;\n      this._$notifyConnectionChanged?.(isConnected);\n    } else if (DEV_MODE) {\n      throw new Error(\n        'part.setConnected() may only be called on a ' +\n          'RootPart returned from render().'\n      );\n    }\n  }\n}\n\n/**\n * A top-level `ChildPart` returned from `render` that manages the connected\n * state of `AsyncDirective`s created throughout the tree below it.\n */\nexport interface RootPart extends ChildPart {\n  /**\n   * Sets the connection state for `AsyncDirective`s contained within this root\n   * ChildPart.\n   *\n   * lit-html does not automatically monitor the connectedness of DOM rendered;\n   * as such, it is the responsibility of the caller to `render` to ensure that\n   * `part.setConnected(false)` is called before the part object is potentially\n   * discarded, to ensure that `AsyncDirective`s have a chance to dispose of\n   * any resources being held. If a `RootPart` that was previously\n   * disconnected is subsequently re-connected (and its `AsyncDirective`s should\n   * re-connect), `setConnected(true)` should be called.\n   *\n   * @param isConnected Whether directives within this tree should be connected\n   * or not\n   */\n  setConnected(isConnected: boolean): void;\n}\n\nexport type {AttributePart};\nclass AttributePart implements Disconnectable {\n  readonly type = ATTRIBUTE_PART as\n    | typeof ATTRIBUTE_PART\n    | typeof PROPERTY_PART\n    | typeof BOOLEAN_ATTRIBUTE_PART\n    | typeof EVENT_PART;\n  readonly element: HTMLElement;\n  readonly name: string;\n  readonly options: RenderOptions | undefined;\n\n  /**\n   * If this attribute part represents an interpolation, this contains the\n   * static strings of the interpolation. For single-value, complete bindings,\n   * this is undefined.\n   */\n  readonly strings?: ReadonlyArray<string>;\n  /** @internal */\n  _$committedValue: unknown | Array<unknown> = nothing;\n  /** @internal */\n  __directives?: Array<Directive | undefined>;\n  /** @internal */\n  _$parent: Disconnectable;\n  /** @internal */\n  _$disconnectableChildren?: Set<Disconnectable> = undefined;\n\n  protected _sanitizer: ValueSanitizer | undefined;\n\n  get tagName() {\n    return this.element.tagName;\n  }\n\n  // See comment in Disconnectable interface for why this is a getter\n  get _$isConnected() {\n    return this._$parent._$isConnected;\n  }\n\n  constructor(\n    element: HTMLElement,\n    name: string,\n    strings: ReadonlyArray<string>,\n    parent: Disconnectable,\n    options: RenderOptions | undefined\n  ) {\n    this.element = element;\n    this.name = name;\n    this._$parent = parent;\n    this.options = options;\n    if (strings.length > 2 || strings[0] !== '' || strings[1] !== '') {\n      this._$committedValue = new Array(strings.length - 1).fill(new String());\n      this.strings = strings;\n    } else {\n      this._$committedValue = nothing;\n    }\n    if (ENABLE_EXTRA_SECURITY_HOOKS) {\n      this._sanitizer = undefined;\n    }\n  }\n\n  /**\n   * Sets the value of this part by resolving the value from possibly multiple\n   * values and static strings and committing it to the DOM.\n   * If this part is single-valued, `this._strings` will be undefined, and the\n   * method will be called with a single value argument. If this part is\n   * multi-value, `this._strings` will be defined, and the method is called\n   * with the value array of the part's owning TemplateInstance, and an offset\n   * into the value array from which the values should be read.\n   * This method is overloaded this way to eliminate short-lived array slices\n   * of the template instance values, and allow a fast-path for single-valued\n   * parts.\n   *\n   * @param value The part value, or an array of values for multi-valued parts\n   * @param valueIndex the index to start reading values from. `undefined` for\n   *   single-valued parts\n   * @param noCommit causes the part to not commit its value to the DOM. Used\n   *   in hydration to prime attribute parts with their first-rendered value,\n   *   but not set the attribute, and in SSR to no-op the DOM operation and\n   *   capture the value for serialization.\n   *\n   * @internal\n   */\n  _$setValue(\n    value: unknown | Array<unknown>,\n    directiveParent: DirectiveParent = this,\n    valueIndex?: number,\n    noCommit?: boolean\n  ) {\n    const strings = this.strings;\n\n    // Whether any of the values has changed, for dirty-checking\n    let change = false;\n\n    if (strings === undefined) {\n      // Single-value binding case\n      value = resolveDirective(this, value, directiveParent, 0);\n      change =\n        !isPrimitive(value) ||\n        (value !== this._$committedValue && value !== noChange);\n      if (change) {\n        this._$committedValue = value;\n      }\n    } else {\n      // Interpolation case\n      const values = value as Array<unknown>;\n      value = strings[0];\n\n      let i, v;\n      for (i = 0; i < strings.length - 1; i++) {\n        v = resolveDirective(this, values[valueIndex! + i], directiveParent, i);\n\n        if (v === noChange) {\n          // If the user-provided value is `noChange`, use the previous value\n          v = (this._$committedValue as Array<unknown>)[i];\n        }\n        change ||=\n          !isPrimitive(v) || v !== (this._$committedValue as Array<unknown>)[i];\n        if (v === nothing) {\n          value = nothing;\n        } else if (value !== nothing) {\n          value += (v ?? '') + strings[i + 1];\n        }\n        // We always record each value, even if one is `nothing`, for future\n        // change detection.\n        (this._$committedValue as Array<unknown>)[i] = v;\n      }\n    }\n    if (change && !noCommit) {\n      this._commitValue(value);\n    }\n  }\n\n  /** @internal */\n  _commitValue(value: unknown) {\n    if (value === nothing) {\n      (wrap(this.element) as Element).removeAttribute(this.name);\n    } else {\n      if (ENABLE_EXTRA_SECURITY_HOOKS) {\n        if (this._sanitizer === undefined) {\n          this._sanitizer = sanitizerFactoryInternal(\n            this.element,\n            this.name,\n            'attribute'\n          );\n        }\n        value = this._sanitizer(value ?? '');\n      }\n      debugLogEvent?.({\n        kind: 'commit attribute',\n        element: this.element,\n        name: this.name,\n        value,\n        options: this.options,\n      });\n      (wrap(this.element) as Element).setAttribute(\n        this.name,\n        (value ?? '') as string\n      );\n    }\n  }\n}\n\nexport type {PropertyPart};\nclass PropertyPart extends AttributePart {\n  override readonly type = PROPERTY_PART;\n\n  /** @internal */\n  override _commitValue(value: unknown) {\n    if (ENABLE_EXTRA_SECURITY_HOOKS) {\n      if (this._sanitizer === undefined) {\n        this._sanitizer = sanitizerFactoryInternal(\n          this.element,\n          this.name,\n          'property'\n        );\n      }\n      value = this._sanitizer(value);\n    }\n    debugLogEvent?.({\n      kind: 'commit property',\n      element: this.element,\n      name: this.name,\n      value,\n      options: this.options,\n    });\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (this.element as any)[this.name] = value === nothing ? undefined : value;\n  }\n}\n\n// Temporary workaround for https://crbug.com/993268\n// Currently, any attribute starting with \"on\" is considered to be a\n// TrustedScript source. Such boolean attributes must be set to the equivalent\n// trusted emptyScript value.\nconst emptyStringForBooleanAttribute = trustedTypes\n  ? (trustedTypes.emptyScript as unknown as '')\n  : '';\n\nexport type {BooleanAttributePart};\nclass BooleanAttributePart extends AttributePart {\n  override readonly type = BOOLEAN_ATTRIBUTE_PART;\n\n  /** @internal */\n  override _commitValue(value: unknown) {\n    debugLogEvent?.({\n      kind: 'commit boolean attribute',\n      element: this.element,\n      name: this.name,\n      value: !!(value && value !== nothing),\n      options: this.options,\n    });\n    if (value && value !== nothing) {\n      (wrap(this.element) as Element).setAttribute(\n        this.name,\n        emptyStringForBooleanAttribute\n      );\n    } else {\n      (wrap(this.element) as Element).removeAttribute(this.name);\n    }\n  }\n}\n\ntype EventListenerWithOptions = EventListenerOrEventListenerObject &\n  Partial<AddEventListenerOptions>;\n\n/**\n * An AttributePart that manages an event listener via add/removeEventListener.\n *\n * This part works by adding itself as the event listener on an element, then\n * delegating to the value passed to it. This reduces the number of calls to\n * add/removeEventListener if the listener changes frequently, such as when an\n * inline function is used as a listener.\n *\n * Because event options are passed when adding listeners, we must take case\n * to add and remove the part as a listener when the event options change.\n */\nexport type {EventPart};\nclass EventPart extends AttributePart {\n  override readonly type = EVENT_PART;\n\n  constructor(\n    element: HTMLElement,\n    name: string,\n    strings: ReadonlyArray<string>,\n    parent: Disconnectable,\n    options: RenderOptions | undefined\n  ) {\n    super(element, name, strings, parent, options);\n\n    if (DEV_MODE && this.strings !== undefined) {\n      throw new Error(\n        `A \\`<${element.localName}>\\` has a \\`@${name}=...\\` listener with ` +\n          'invalid content. Event listeners in templates must have exactly ' +\n          'one expression and no surrounding text.'\n      );\n    }\n  }\n\n  // EventPart does not use the base _$setValue/_resolveValue implementation\n  // since the dirty checking is more complex\n  /** @internal */\n  override _$setValue(\n    newListener: unknown,\n    directiveParent: DirectiveParent = this\n  ) {\n    newListener =\n      resolveDirective(this, newListener, directiveParent, 0) ?? nothing;\n    if (newListener === noChange) {\n      return;\n    }\n    const oldListener = this._$committedValue;\n\n    // If the new value is nothing or any options change we have to remove the\n    // part as a listener.\n    const shouldRemoveListener =\n      (newListener === nothing && oldListener !== nothing) ||\n      (newListener as EventListenerWithOptions).capture !==\n        (oldListener as EventListenerWithOptions).capture ||\n      (newListener as EventListenerWithOptions).once !==\n        (oldListener as EventListenerWithOptions).once ||\n      (newListener as EventListenerWithOptions).passive !==\n        (oldListener as EventListenerWithOptions).passive;\n\n    // If the new value is not nothing and we removed the listener, we have\n    // to add the part as a listener.\n    const shouldAddListener =\n      newListener !== nothing &&\n      (oldListener === nothing || shouldRemoveListener);\n\n    debugLogEvent?.({\n      kind: 'commit event listener',\n      element: this.element,\n      name: this.name,\n      value: newListener,\n      options: this.options,\n      removeListener: shouldRemoveListener,\n      addListener: shouldAddListener,\n      oldListener,\n    });\n    if (shouldRemoveListener) {\n      this.element.removeEventListener(\n        this.name,\n        this,\n        oldListener as EventListenerWithOptions\n      );\n    }\n    if (shouldAddListener) {\n      // Beware: IE11 and Chrome 41 don't like using the listener as the\n      // options object. Figure out how to deal w/ this in IE11 - maybe\n      // patch addEventListener?\n      this.element.addEventListener(\n        this.name,\n        this,\n        newListener as EventListenerWithOptions\n      );\n    }\n    this._$committedValue = newListener;\n  }\n\n  handleEvent(event: Event) {\n    if (typeof this._$committedValue === 'function') {\n      this._$committedValue.call(this.options?.host ?? this.element, event);\n    } else {\n      (this._$committedValue as EventListenerObject).handleEvent(event);\n    }\n  }\n}\n\nexport type {ElementPart};\nclass ElementPart implements Disconnectable {\n  readonly type = ELEMENT_PART;\n\n  /** @internal */\n  __directive?: Directive;\n\n  // This is to ensure that every Part has a _$committedValue\n  _$committedValue: undefined;\n\n  /** @internal */\n  _$parent!: Disconnectable;\n\n  /** @internal */\n  _$disconnectableChildren?: Set<Disconnectable> = undefined;\n\n  options: RenderOptions | undefined;\n\n  constructor(\n    public element: Element,\n    parent: Disconnectable,\n    options: RenderOptions | undefined\n  ) {\n    this._$parent = parent;\n    this.options = options;\n  }\n\n  // See comment in Disconnectable interface for why this is a getter\n  get _$isConnected() {\n    return this._$parent._$isConnected;\n  }\n\n  _$setValue(value: unknown): void {\n    debugLogEvent?.({\n      kind: 'commit to element binding',\n      element: this.element,\n      value,\n      options: this.options,\n    });\n    resolveDirective(this, value);\n  }\n}\n\n/**\n * END USERS SHOULD NOT RELY ON THIS OBJECT.\n *\n * Private exports for use by other Lit packages, not intended for use by\n * external users.\n *\n * We currently do not make a mangled rollup build of the lit-ssr code. In order\n * to keep a number of (otherwise private) top-level exports  mangled in the\n * client side code, we export a _$LH object containing those members (or\n * helper methods for accessing private fields of those members), and then\n * re-export them for use in lit-ssr. This keeps lit-ssr agnostic to whether the\n * client-side code is being used in `dev` mode or `prod` mode.\n *\n * This has a unique name, to disambiguate it from private exports in\n * lit-element, which re-exports all of lit-html.\n *\n * @private\n */\nexport const _$LH = {\n  // Used in lit-ssr\n  _boundAttributeSuffix: boundAttributeSuffix,\n  _marker: marker,\n  _markerMatch: markerMatch,\n  _HTML_RESULT: HTML_RESULT,\n  _getTemplateHtml: getTemplateHtml,\n  // Used in tests and private-ssr-support\n  _TemplateInstance: TemplateInstance,\n  _isIterable: isIterable,\n  _resolveDirective: resolveDirective,\n  _ChildPart: ChildPart,\n  _AttributePart: AttributePart,\n  _BooleanAttributePart: BooleanAttributePart,\n  _EventPart: EventPart,\n  _PropertyPart: PropertyPart,\n  _ElementPart: ElementPart,\n};\n\n// Apply polyfills if available\nconst polyfillSupport = DEV_MODE\n  ? global.litHtmlPolyfillSupportDevMode\n  : global.litHtmlPolyfillSupport;\npolyfillSupport?.(Template, ChildPart);\n\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for lit-html usage.\n(global.litHtmlVersions ??= []).push('2.7.4');\nif (DEV_MODE && global.litHtmlVersions.length > 1) {\n  issueWarning!(\n    'multiple-versions',\n    `Multiple versions of Lit loaded. ` +\n      `Loading multiple versions is not recommended.`\n  );\n}\n\n/**\n * Renders a value, usually a lit-html TemplateResult, to the container.\n *\n * This example renders the text \"Hello, Zoe!\" inside a paragraph tag, appending\n * it to the container `document.body`.\n *\n * ```js\n * import {html, render} from 'lit';\n *\n * const name = \"Zoe\";\n * render(html`<p>Hello, ${name}!</p>`, document.body);\n * ```\n *\n * @param value Any [renderable\n *   value](https://lit.dev/docs/templates/expressions/#child-expressions),\n *   typically a {@linkcode TemplateResult} created by evaluating a template tag\n *   like {@linkcode html} or {@linkcode svg}.\n * @param container A DOM container to render to. The first render will append\n *   the rendered value to the container, and subsequent renders will\n *   efficiently update the rendered value if the same result type was\n *   previously rendered there.\n * @param options See {@linkcode RenderOptions} for options documentation.\n * @see\n * {@link https://lit.dev/docs/libraries/standalone-templates/#rendering-lit-html-templates| Rendering Lit HTML Templates}\n */\nexport const render = (\n  value: unknown,\n  container: HTMLElement | DocumentFragment,\n  options?: RenderOptions\n): RootPart => {\n  if (DEV_MODE && container == null) {\n    // Give a clearer error message than\n    //     Uncaught TypeError: Cannot read properties of null (reading\n    //     '_$litPart$')\n    // which reads like an internal Lit error.\n    throw new TypeError(`The container to render into may not be ${container}`);\n  }\n  const renderId = DEV_MODE ? debugLogRenderId++ : 0;\n  const partOwnerNode = options?.renderBefore ?? container;\n  // This property needs to remain unminified.\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  let part: ChildPart = (partOwnerNode as any)['_$litPart$'];\n  debugLogEvent?.({\n    kind: 'begin render',\n    id: renderId,\n    value,\n    container,\n    options,\n    part,\n  });\n  if (part === undefined) {\n    const endNode = options?.renderBefore ?? null;\n    // This property needs to remain unminified.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (partOwnerNode as any)['_$litPart$'] = part = new ChildPart(\n      container.insertBefore(createMarker(), endNode),\n      endNode,\n      undefined,\n      options ?? {}\n    );\n  }\n  part._$setValue(value);\n  debugLogEvent?.({\n    kind: 'end render',\n    id: renderId,\n    value,\n    container,\n    options,\n    part,\n  });\n  return part as RootPart;\n};\n\nif (ENABLE_EXTRA_SECURITY_HOOKS) {\n  render.setSanitizer = setSanitizer;\n  render.createSanitizer = createSanitizer;\n  if (DEV_MODE) {\n    render._testOnlyClearSanitizerFactoryDoNotCallOrElse =\n      _testOnlyClearSanitizerFactoryDoNotCallOrElse;\n  }\n}\n", "/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/**\n * The main LitElement module, which defines the {@linkcode LitElement} base\n * class and related APIs.\n *\n *  LitElement components can define a template and a set of observed\n * properties. Changing an observed property triggers a re-render of the\n * element.\n *\n *  Import {@linkcode LitElement} and {@linkcode html} from this module to\n * create a component:\n *\n *  ```js\n * import {LitElement, html} from 'lit-element';\n *\n * class MyElement extends LitElement {\n *\n *   // Declare observed properties\n *   static get properties() {\n *     return {\n *       adjective: {}\n *     }\n *   }\n *\n *   constructor() {\n *     this.adjective = 'awesome';\n *   }\n *\n *   // Define the element's template\n *   render() {\n *     return html`<p>your ${adjective} template here</p>`;\n *   }\n * }\n *\n * customElements.define('my-element', MyElement);\n * ```\n *\n * `LitElement` extends {@linkcode ReactiveElement} and adds lit-html\n * templating. The `ReactiveElement` class is provided for users that want to\n * build their own custom element base classes that don't use lit-html.\n *\n * @packageDocumentation\n */\nimport {PropertyValues, ReactiveElement} from '@lit/reactive-element';\nimport {render, RenderOptions, noChange, RootPart} from 'lit-html';\nexport * from '@lit/reactive-element';\nexport * from 'lit-html';\n\nimport {LitUnstable} from 'lit-html';\nimport {ReactiveUnstable} from '@lit/reactive-element';\n\n/**\n * Contains types that are part of the unstable debug API.\n *\n * Everything in this API is not stable and may change or be removed in the future,\n * even on patch releases.\n */\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport namespace Unstable {\n  /**\n   * When Lit is running in dev mode and `window.emitLitDebugLogEvents` is true,\n   * we will emit 'lit-debug' events to window, with live details about the update and render\n   * lifecycle. These can be useful for writing debug tooling and visualizations.\n   *\n   * Please be aware that running with window.emitLitDebugLogEvents has performance overhead,\n   * making certain operations that are normally very cheap (like a no-op render) much slower,\n   * because we must copy data and dispatch events.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-namespace\n  export namespace DebugLog {\n    export type Entry =\n      | LitUnstable.DebugLog.Entry\n      | ReactiveUnstable.DebugLog.Entry;\n  }\n}\n\n// For backwards compatibility export ReactiveElement as UpdatingElement. Note,\n// IE transpilation requires exporting like this.\nexport const UpdatingElement = ReactiveElement;\n\nconst DEV_MODE = true;\n\nlet issueWarning: (code: string, warning: string) => void;\n\nif (DEV_MODE) {\n  // Ensure warnings are issued only 1x, even if multiple versions of Lit\n  // are loaded.\n  const issuedWarnings: Set<string | undefined> =\n    (globalThis.litIssuedWarnings ??= new Set());\n\n  // Issue a warning, if we haven't already.\n  issueWarning = (code: string, warning: string) => {\n    warning += ` See https://lit.dev/msg/${code} for more information.`;\n    if (!issuedWarnings.has(warning)) {\n      console.warn(warning);\n      issuedWarnings.add(warning);\n    }\n  };\n}\n\n/**\n * Base element class that manages element properties and attributes, and\n * renders a lit-html template.\n *\n * To define a component, subclass `LitElement` and implement a\n * `render` method to provide the component's template. Define properties\n * using the {@linkcode LitElement.properties properties} property or the\n * {@linkcode property} decorator.\n */\nexport class LitElement extends ReactiveElement {\n  /**\n   * Ensure this class is marked as `finalized` as an optimization ensuring\n   * it will not needlessly try to `finalize`.\n   *\n   * Note this property name is a string to prevent breaking Closure JS Compiler\n   * optimizations. See @lit/reactive-element for more information.\n   */\n  protected static override ['finalized'] = true;\n\n  // This property needs to remain unminified.\n  static ['_$litElement$'] = true;\n\n  /**\n   * @category rendering\n   */\n  readonly renderOptions: RenderOptions = {host: this};\n\n  private __childPart: RootPart | undefined = undefined;\n\n  /**\n   * @category rendering\n   */\n  protected override createRenderRoot() {\n    const renderRoot = super.createRenderRoot();\n    // When adoptedStyleSheets are shimmed, they are inserted into the\n    // shadowRoot by createRenderRoot. Adjust the renderBefore node so that\n    // any styles in Lit content render before adoptedStyleSheets. This is\n    // important so that adoptedStyleSheets have precedence over styles in\n    // the shadowRoot.\n    this.renderOptions.renderBefore ??= renderRoot!.firstChild as ChildNode;\n    return renderRoot;\n  }\n\n  /**\n   * Updates the element. This method reflects property values to attributes\n   * and calls `render` to render DOM via lit-html. Setting properties inside\n   * this method will *not* trigger another update.\n   * @param changedProperties Map of changed properties with old values\n   * @category updates\n   */\n  protected override update(changedProperties: PropertyValues) {\n    // Setting properties in `render` should not trigger an update. Since\n    // updates are allowed after super.update, it's important to call `render`\n    // before that.\n    const value = this.render();\n    if (!this.hasUpdated) {\n      this.renderOptions.isConnected = this.isConnected;\n    }\n    super.update(changedProperties);\n    this.__childPart = render(value, this.renderRoot, this.renderOptions);\n  }\n\n  /**\n   * Invoked when the component is added to the document's DOM.\n   *\n   * In `connectedCallback()` you should setup tasks that should only occur when\n   * the element is connected to the document. The most common of these is\n   * adding event listeners to nodes external to the element, like a keydown\n   * event handler added to the window.\n   *\n   * ```ts\n   * connectedCallback() {\n   *   super.connectedCallback();\n   *   addEventListener('keydown', this._handleKeydown);\n   * }\n   * ```\n   *\n   * Typically, anything done in `connectedCallback()` should be undone when the\n   * element is disconnected, in `disconnectedCallback()`.\n   *\n   * @category lifecycle\n   */\n  override connectedCallback() {\n    super.connectedCallback();\n    this.__childPart?.setConnected(true);\n  }\n\n  /**\n   * Invoked when the component is removed from the document's DOM.\n   *\n   * This callback is the main signal to the element that it may no longer be\n   * used. `disconnectedCallback()` should ensure that nothing is holding a\n   * reference to the element (such as event listeners added to nodes external\n   * to the element), so that it is free to be garbage collected.\n   *\n   * ```ts\n   * disconnectedCallback() {\n   *   super.disconnectedCallback();\n   *   window.removeEventListener('keydown', this._handleKeydown);\n   * }\n   * ```\n   *\n   * An element may be re-connected after being disconnected.\n   *\n   * @category lifecycle\n   */\n  override disconnectedCallback() {\n    super.disconnectedCallback();\n    this.__childPart?.setConnected(false);\n  }\n\n  /**\n   * Invoked on each update to perform rendering tasks. This method may return\n   * any value renderable by lit-html's `ChildPart` - typically a\n   * `TemplateResult`. Setting properties inside this method will *not* trigger\n   * the element to update.\n   * @category rendering\n   */\n  protected render(): unknown {\n    return noChange;\n  }\n}\n\n// Install hydration if available\nglobalThis.litElementHydrateSupport?.({LitElement});\n\n// Apply polyfills if available\nconst polyfillSupport = DEV_MODE\n  ? globalThis.litElementPolyfillSupportDevMode\n  : globalThis.litElementPolyfillSupport;\npolyfillSupport?.({LitElement});\n\n// DEV mode warnings\nif (DEV_MODE) {\n  /* eslint-disable @typescript-eslint/no-explicit-any */\n  // Note, for compatibility with closure compilation, this access\n  // needs to be as a string property index.\n  (LitElement as any)['finalize'] = function (this: typeof LitElement) {\n    const finalized = (ReactiveElement as any).finalize.call(this);\n    if (!finalized) {\n      return false;\n    }\n    const warnRemovedOrRenamed = (obj: any, name: string, renamed = false) => {\n      if (obj.hasOwnProperty(name)) {\n        const ctorName = (typeof obj === 'function' ? obj : obj.constructor)\n          .name;\n        issueWarning(\n          renamed ? 'renamed-api' : 'removed-api',\n          `\\`${name}\\` is implemented on class ${ctorName}. It ` +\n            `has been ${renamed ? 'renamed' : 'removed'} ` +\n            `in this version of LitElement.`\n        );\n      }\n    };\n    warnRemovedOrRenamed(this, 'render');\n    warnRemovedOrRenamed(this, 'getStyles', true);\n    warnRemovedOrRenamed((this as typeof LitElement).prototype, 'adoptStyles');\n    return true;\n  };\n  /* eslint-enable @typescript-eslint/no-explicit-any */\n}\n\n/**\n * END USERS SHOULD NOT RELY ON THIS OBJECT.\n *\n * Private exports for use by other Lit packages, not intended for use by\n * external users.\n *\n * We currently do not make a mangled rollup build of the lit-ssr code. In order\n * to keep a number of (otherwise private) top-level exports  mangled in the\n * client side code, we export a _$LE object containing those members (or\n * helper methods for accessing private fields of those members), and then\n * re-export them for use in lit-ssr. This keeps lit-ssr agnostic to whether the\n * client-side code is being used in `dev` mode or `prod` mode.\n *\n * This has a unique name, to disambiguate it from private exports in\n * lit-html, since this module re-exports all of lit-html.\n *\n * @private\n */\nexport const _$LE = {\n  _$attributeToProperty: (\n    el: LitElement,\n    name: string,\n    value: string | null\n  ) => {\n    // eslint-disable-next-line\n    (el as any)._$attributeToProperty(name, value);\n  },\n  // eslint-disable-next-line\n  _$changedProperties: (el: LitElement) => (el as any)._$changedProperties,\n};\n\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for LitElement usage.\n(globalThis.litElementVersions ??= []).push('3.3.2');\nif (DEV_MODE && globalThis.litElementVersions.length > 1) {\n  issueWarning!(\n    'multiple-versions',\n    `Multiple versions of Lit loaded. Loading multiple versions ` +\n      `is not recommended.`\n  );\n}\n", "/**\n * @license\n * Copyright 2022 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/**\n * @fileoverview\n *\n * This file exports a boolean const whose value will depend on what environment\n * the module is being imported from.\n */\n\nconst NODE_MODE = false;\n\n/**\n * A boolean that will be `true` in server environments like Node, and `false`\n * in browser environments. Note that your server environment or toolchain must\n * support the `\"node\"` export condition for this to be `true`.\n *\n * This can be used when authoring components to change behavior based on\n * whether or not the component is executing in an SSR context.\n */\nexport const isServer = NODE_MODE;\n", "/**\n * @license\n * Copyright 2022 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {html, LitElement} from 'lit';\n\n/**\n * A component for elevation.\n */\nexport class Elevation extends LitElement {\n  override connectedCallback() {\n    super.connectedCallback();\n    // Needed for VoiceOver, which will create a \"group\" if the element is a\n    // sibling to other content.\n    this.setAttribute('aria-hidden', 'true');\n  }\n\n  protected override render() {\n    return html`<span class=\"shadow\"></span>`;\n  }\n}\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./elevation/internal/elevation-styles.css.\nimport {css} from 'lit';\nexport const styles = css`:host,.shadow,.shadow::before,.shadow::after{border-radius:inherit;inset:0;position:absolute;transition-duration:inherit;transition-property:inherit;transition-timing-function:inherit}:host{display:flex;pointer-events:none;transition-property:box-shadow,opacity}.shadow::before,.shadow::after{content:\"\";transition-property:box-shadow,opacity;--_level: var(--md-elevation-level, 0);--_shadow-color: var(--md-elevation-shadow-color, var(--md-sys-color-shadow, #000))}.shadow::before{box-shadow:0px calc(1px*(clamp(0,var(--_level),1) + clamp(0,var(--_level) - 3,1) + 2*clamp(0,var(--_level) - 4,1))) calc(1px*(2*clamp(0,var(--_level),1) + clamp(0,var(--_level) - 2,1) + clamp(0,var(--_level) - 4,1))) 0px var(--_shadow-color);opacity:.3}.shadow::after{box-shadow:0px calc(1px*(clamp(0,var(--_level),1) + clamp(0,var(--_level) - 1,1) + 2*clamp(0,var(--_level) - 2,3))) calc(1px*(3*clamp(0,var(--_level),2) + 2*clamp(0,var(--_level) - 2,3))) calc(1px*(clamp(0,var(--_level),4) + 2*clamp(0,var(--_level) - 4,1))) var(--_shadow-color);opacity:.15}\n`;\n", "/**\n * @license\n * Copyright 2022 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {CSSResultOrNative} from 'lit';\nimport {customElement} from 'lit/decorators.js';\n\nimport {Elevation} from './internal/elevation.js';\nimport {styles} from './internal/elevation-styles.js';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'md-elevation': MdElevation;\n  }\n}\n\n/**\n * The `<md-elevation>` custom element with default styles.\n *\n * Elevation is the relative distance between two surfaces along the z-axis.\n *\n * @final\n * @suppress {visibility}\n */\n@customElement('md-elevation')\nexport class MdElevation extends Elevation {\n  static override styles: CSSResultOrNative[] = [styles];\n}\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {isServer, ReactiveController, ReactiveControllerHost} from 'lit';\n\n/**\n * An element that can be attached to an associated controlling element.\n */\nexport interface Attachable {\n  /**\n   * Reflects the value of the `for` attribute, which is the ID of the element's\n   * associated control.\n   *\n   * Use this when the elements's associated control is not its parent.\n   *\n   * To manually control an element, set its `for` attribute to `\"\"`.\n   *\n   * @example\n   * ```html\n   * <div class=\"container\">\n   *   <md-attachable for=\"interactive\"></md-attachable>\n   *   <button id=\"interactive\">Action</button>\n   * </div>\n   * ```\n   *\n   * @example\n   * ```html\n   * <button class=\"manually-controlled\">\n   *   <md-attachable for=\"\"></md-attachable>\n   * </button>\n   * ```\n   */\n  htmlFor: string | null;\n\n  /**\n   * Gets or sets the element that controls the visibility of the attachable\n   * element. It is one of:\n   *\n   * - The control referenced by the `for` attribute.\n   * - The control provided to `element.attach(control)`\n   * - The element's parent.\n   * - `null` if the element is not controlled.\n   */\n  control: HTMLElement | null;\n\n  /**\n   * Attaches the element to an interactive control.\n   *\n   * @param control The element that controls the attachable element.\n   */\n  attach(control: HTMLElement): void;\n\n  /**\n   * Detaches the element from its current control.\n   */\n  detach(): void;\n}\n\n/**\n * A key to retrieve an `Attachable` element's `AttachableController` from a\n * global `MutationObserver`.\n */\nconst ATTACHABLE_CONTROLLER = Symbol('attachableController');\n\n/**\n * The host of an `AttachableController`. The controller will add itself to\n * the host so it can be retrieved in a global `MutationObserver`.\n */\ninterface AttachableControllerHost extends ReactiveControllerHost, HTMLElement {\n  [ATTACHABLE_CONTROLLER]?: AttachableController;\n}\n\nlet FOR_ATTRIBUTE_OBSERVER: MutationObserver | undefined;\n\nif (!isServer) {\n  /**\n   * A global `MutationObserver` that reacts to `for` attribute changes on\n   * `Attachable` elements. If the `for` attribute changes, the controller will\n   * re-attach to the new referenced element.\n   */\n  FOR_ATTRIBUTE_OBSERVER = new MutationObserver((records) => {\n    for (const record of records) {\n      // When a control's `for` attribute changes, inform its\n      // `AttachableController` to update to a new control.\n      (record.target as AttachableControllerHost)[\n        ATTACHABLE_CONTROLLER\n      ]?.hostConnected();\n    }\n  });\n}\n\n/**\n * A controller that provides an implementation for `Attachable` elements.\n *\n * @example\n * ```ts\n * class MyElement extends LitElement implements Attachable {\n *   get control() { return this.attachableController.control; }\n *\n *   private readonly attachableController = new AttachableController(\n *     this,\n *     (previousControl, newControl) => {\n *       previousControl?.removeEventListener('click', this.handleClick);\n *       newControl?.addEventListener('click', this.handleClick);\n *     }\n *   );\n *\n *   // Implement remaining `Attachable` properties/methods that call the\n *   // controller's properties/methods.\n * }\n * ```\n */\nexport class AttachableController implements ReactiveController, Attachable {\n  get htmlFor() {\n    return this.host.getAttribute('for');\n  }\n\n  set htmlFor(htmlFor: string | null) {\n    if (htmlFor === null) {\n      this.host.removeAttribute('for');\n    } else {\n      this.host.setAttribute('for', htmlFor);\n    }\n  }\n\n  get control() {\n    if (this.host.hasAttribute('for')) {\n      if (!this.htmlFor || !this.host.isConnected) {\n        return null;\n      }\n\n      return (\n        this.host.getRootNode() as Document | ShadowRoot\n      ).querySelector<HTMLElement>(`#${this.htmlFor}`);\n    }\n\n    return this.currentControl || this.host.parentElement;\n  }\n  set control(control: HTMLElement | null) {\n    if (control) {\n      this.attach(control);\n    } else {\n      this.detach();\n    }\n  }\n\n  private currentControl: HTMLElement | null = null;\n\n  /**\n   * Creates a new controller for an `Attachable` element.\n   *\n   * @param host The `Attachable` element.\n   * @param onControlChange A callback with two parameters for the previous and\n   *     next control. An `Attachable` element may perform setup or teardown\n   *     logic whenever the control changes.\n   */\n  constructor(\n    private readonly host: AttachableControllerHost,\n    private readonly onControlChange: (\n      prev: HTMLElement | null,\n      next: HTMLElement | null,\n    ) => void,\n  ) {\n    host.addController(this);\n    host[ATTACHABLE_CONTROLLER] = this;\n    FOR_ATTRIBUTE_OBSERVER?.observe(host, {attributeFilter: ['for']});\n  }\n\n  attach(control: HTMLElement) {\n    if (control === this.currentControl) {\n      return;\n    }\n\n    this.setCurrentControl(control);\n    // When imperatively attaching, remove the `for` attribute so\n    // that the attached control is used instead of a referenced one.\n    this.host.removeAttribute('for');\n  }\n\n  detach() {\n    this.setCurrentControl(null);\n    // When imperatively detaching, add an empty `for=\"\"` attribute. This will\n    // ensure the control is `null` rather than the `parentElement`.\n    this.host.setAttribute('for', '');\n  }\n\n  /** @private */\n  hostConnected() {\n    this.setCurrentControl(this.control);\n  }\n\n  /** @private */\n  hostDisconnected() {\n    this.setCurrentControl(null);\n  }\n\n  private setCurrentControl(control: HTMLElement | null) {\n    this.onControlChange(this.currentControl, control);\n    this.currentControl = control;\n  }\n}\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {isServer, LitElement, PropertyValues} from 'lit';\nimport {property} from 'lit/decorators.js';\n\nimport {\n  Attachable,\n  AttachableController,\n} from '../../internal/controller/attachable-controller.js';\n\n/**\n * Events that the focus ring listens to.\n */\nconst EVENTS = ['focusin', 'focusout', 'pointerdown'];\n\n/**\n * A focus ring component.\n *\n * @fires visibility-changed {Event} Fired whenever `visible` changes.\n */\nexport class FocusRing extends LitElement implements Attachable {\n  /**\n   * Makes the focus ring visible.\n   */\n  @property({type: Boolean, reflect: true}) visible = false;\n\n  /**\n   * Makes the focus ring animate inwards instead of outwards.\n   */\n  @property({type: Boolean, reflect: true}) inward = false;\n\n  get htmlFor() {\n    return this.attachableController.htmlFor;\n  }\n\n  set htmlFor(htmlFor: string | null) {\n    this.attachableController.htmlFor = htmlFor;\n  }\n\n  get control() {\n    return this.attachableController.control;\n  }\n  set control(control: HTMLElement | null) {\n    this.attachableController.control = control;\n  }\n\n  private readonly attachableController = new AttachableController(\n    this,\n    this.onControlChange.bind(this),\n  );\n\n  attach(control: HTMLElement) {\n    this.attachableController.attach(control);\n  }\n\n  detach() {\n    this.attachableController.detach();\n  }\n\n  override connectedCallback() {\n    super.connectedCallback();\n    // Needed for VoiceOver, which will create a \"group\" if the element is a\n    // sibling to other content.\n    this.setAttribute('aria-hidden', 'true');\n  }\n\n  /** @private */\n  handleEvent(event: FocusRingEvent) {\n    if (event[HANDLED_BY_FOCUS_RING]) {\n      // This ensures the focus ring does not activate when multiple focus rings\n      // are used within a single component.\n      return;\n    }\n\n    switch (event.type) {\n      default:\n        return;\n      case 'focusin':\n        this.visible = this.control?.matches(':focus-visible') ?? false;\n        break;\n      case 'focusout':\n      case 'pointerdown':\n        this.visible = false;\n        break;\n    }\n\n    event[HANDLED_BY_FOCUS_RING] = true;\n  }\n\n  private onControlChange(prev: HTMLElement | null, next: HTMLElement | null) {\n    if (isServer) return;\n\n    for (const event of EVENTS) {\n      prev?.removeEventListener(event, this);\n      next?.addEventListener(event, this);\n    }\n  }\n\n  override update(changed: PropertyValues<FocusRing>) {\n    if (changed.has('visible')) {\n      // This logic can be removed once the `:has` selector has been introduced\n      // to Firefox. This is necessary to allow correct submenu styles.\n      this.dispatchEvent(new Event('visibility-changed'));\n    }\n    super.update(changed);\n  }\n}\n\nconst HANDLED_BY_FOCUS_RING = Symbol('handledByFocusRing');\n\ninterface FocusRingEvent extends Event {\n  [HANDLED_BY_FOCUS_RING]: true;\n}\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./focus/internal/focus-ring-styles.css.\nimport {css} from 'lit';\nexport const styles = css`:host{animation-delay:0s,calc(var(--md-focus-ring-duration, 600ms)*.25);animation-duration:calc(var(--md-focus-ring-duration, 600ms)*.25),calc(var(--md-focus-ring-duration, 600ms)*.75);animation-timing-function:cubic-bezier(0.2, 0, 0, 1);box-sizing:border-box;color:var(--md-focus-ring-color, var(--md-sys-color-secondary, #625b71));display:none;pointer-events:none;position:absolute}:host([visible]){display:flex}:host(:not([inward])){animation-name:outward-grow,outward-shrink;border-end-end-radius:calc(var(--md-focus-ring-shape-end-end, var(--md-focus-ring-shape, var(--md-sys-shape-corner-full, 9999px))) + var(--md-focus-ring-outward-offset, 2px));border-end-start-radius:calc(var(--md-focus-ring-shape-end-start, var(--md-focus-ring-shape, var(--md-sys-shape-corner-full, 9999px))) + var(--md-focus-ring-outward-offset, 2px));border-start-end-radius:calc(var(--md-focus-ring-shape-start-end, var(--md-focus-ring-shape, var(--md-sys-shape-corner-full, 9999px))) + var(--md-focus-ring-outward-offset, 2px));border-start-start-radius:calc(var(--md-focus-ring-shape-start-start, var(--md-focus-ring-shape, var(--md-sys-shape-corner-full, 9999px))) + var(--md-focus-ring-outward-offset, 2px));inset:calc(-1*var(--md-focus-ring-outward-offset, 2px));outline:var(--md-focus-ring-width, 3px) solid currentColor}:host([inward]){animation-name:inward-grow,inward-shrink;border-end-end-radius:calc(var(--md-focus-ring-shape-end-end, var(--md-focus-ring-shape, var(--md-sys-shape-corner-full, 9999px))) - var(--md-focus-ring-inward-offset, 0px));border-end-start-radius:calc(var(--md-focus-ring-shape-end-start, var(--md-focus-ring-shape, var(--md-sys-shape-corner-full, 9999px))) - var(--md-focus-ring-inward-offset, 0px));border-start-end-radius:calc(var(--md-focus-ring-shape-start-end, var(--md-focus-ring-shape, var(--md-sys-shape-corner-full, 9999px))) - var(--md-focus-ring-inward-offset, 0px));border-start-start-radius:calc(var(--md-focus-ring-shape-start-start, var(--md-focus-ring-shape, var(--md-sys-shape-corner-full, 9999px))) - var(--md-focus-ring-inward-offset, 0px));border:var(--md-focus-ring-width, 3px) solid currentColor;inset:var(--md-focus-ring-inward-offset, 0px)}@keyframes outward-grow{from{outline-width:0}to{outline-width:var(--md-focus-ring-active-width, 8px)}}@keyframes outward-shrink{from{outline-width:var(--md-focus-ring-active-width, 8px)}}@keyframes inward-grow{from{border-width:0}to{border-width:var(--md-focus-ring-active-width, 8px)}}@keyframes inward-shrink{from{border-width:var(--md-focus-ring-active-width, 8px)}}@media(prefers-reduced-motion){:host{animation:none}}\n`;\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {CSSResultOrNative} from 'lit';\nimport {customElement} from 'lit/decorators.js';\n\nimport {FocusRing} from './internal/focus-ring.js';\nimport {styles} from './internal/focus-ring-styles.js';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'md-focus-ring': MdFocusRing;\n  }\n}\n\n/**\n * TODO(b/267336424): add docs\n *\n * @final\n * @suppress {visibility}\n */\n@customElement('md-focus-ring')\nexport class MdFocusRing extends FocusRing {\n  static override styles: CSSResultOrNative[] = [styles];\n}\n", "/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {Disconnectable, Part} from './lit-html.js';\n\nexport {\n  AttributePart,\n  BooleanAttributePart,\n  ChildPart,\n  ElementPart,\n  EventPart,\n  Part,\n  PropertyPart,\n} from './lit-html.js';\n\nexport interface DirectiveClass {\n  new (part: PartInfo): Directive;\n}\n\n/**\n * This utility type extracts the signature of a directive class's render()\n * method so we can use it for the type of the generated directive function.\n */\nexport type DirectiveParameters<C extends Directive> = Parameters<C['render']>;\n\n/**\n * A generated directive function doesn't evaluate the directive, but just\n * returns a DirectiveResult object that captures the arguments.\n */\nexport interface DirectiveResult<C extends DirectiveClass = DirectiveClass> {\n  /**\n   * This property needs to remain unminified.\n   * @internal */\n  ['_$litDirective$']: C;\n  /** @internal */\n  values: DirectiveParameters<InstanceType<C>>;\n}\n\nexport const PartType = {\n  ATTRIBUTE: 1,\n  CHILD: 2,\n  PROPERTY: 3,\n  BOOLEAN_ATTRIBUTE: 4,\n  EVENT: 5,\n  ELEMENT: 6,\n} as const;\n\nexport type PartType = (typeof PartType)[keyof typeof PartType];\n\nexport interface ChildPartInfo {\n  readonly type: typeof PartType.CHILD;\n}\n\nexport interface AttributePartInfo {\n  readonly type:\n    | typeof PartType.ATTRIBUTE\n    | typeof PartType.PROPERTY\n    | typeof PartType.BOOLEAN_ATTRIBUTE\n    | typeof PartType.EVENT;\n  readonly strings?: ReadonlyArray<string>;\n  readonly name: string;\n  readonly tagName: string;\n}\n\nexport interface ElementPartInfo {\n  readonly type: typeof PartType.ELEMENT;\n}\n\n/**\n * Information about the part a directive is bound to.\n *\n * This is useful for checking that a directive is attached to a valid part,\n * such as with directive that can only be used on attribute bindings.\n */\nexport type PartInfo = ChildPartInfo | AttributePartInfo | ElementPartInfo;\n\n/**\n * Creates a user-facing directive function from a Directive class. This\n * function has the same parameters as the directive's render() method.\n */\nexport const directive =\n  <C extends DirectiveClass>(c: C) =>\n  (...values: DirectiveParameters<InstanceType<C>>): DirectiveResult<C> => ({\n    // This property needs to remain unminified.\n    ['_$litDirective$']: c,\n    values,\n  });\n\n/**\n * Base class for creating custom directives. Users should extend this class,\n * implement `render` and/or `update`, and then pass their subclass to\n * `directive`.\n */\nexport abstract class Directive implements Disconnectable {\n  //@internal\n  __part!: Part;\n  //@internal\n  __attributeIndex: number | undefined;\n  //@internal\n  __directive?: Directive;\n\n  //@internal\n  _$parent!: Disconnectable;\n\n  // These will only exist on the AsyncDirective subclass\n  //@internal\n  _$disconnectableChildren?: Set<Disconnectable>;\n  // This property needs to remain unminified.\n  //@internal\n  ['_$notifyDirectiveConnectionChanged']?(isConnected: boolean): void;\n\n  constructor(_partInfo: PartInfo) {}\n\n  // See comment in Disconnectable interface for why this is a getter\n  get _$isConnected() {\n    return this._$parent._$isConnected;\n  }\n\n  /** @internal */\n  _$initialize(\n    part: Part,\n    parent: Disconnectable,\n    attributeIndex: number | undefined\n  ) {\n    this.__part = part;\n    this._$parent = parent;\n    this.__attributeIndex = attributeIndex;\n  }\n  /** @internal */\n  _$resolve(part: Part, props: Array<unknown>): unknown {\n    return this.update(part, props);\n  }\n\n  abstract render(...props: Array<unknown>): unknown;\n\n  update(_part: Part, props: Array<unknown>): unknown {\n    return this.render(...props);\n  }\n}\n", "/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {AttributePart, noChange} from '../lit-html.js';\nimport {\n  directive,\n  Directive,\n  DirectiveParameters,\n  PartInfo,\n  PartType,\n} from '../directive.js';\n\n/**\n * A key-value set of class names to truthy values.\n */\nexport interface ClassInfo {\n  readonly [name: string]: string | boolean | number;\n}\n\nclass ClassMapDirective extends Directive {\n  /**\n   * Stores the ClassInfo object applied to a given AttributePart.\n   * Used to unset existing values when a new ClassInfo object is applied.\n   */\n  private _previousClasses?: Set<string>;\n  private _staticClasses?: Set<string>;\n\n  constructor(partInfo: PartInfo) {\n    super(partInfo);\n    if (\n      partInfo.type !== PartType.ATTRIBUTE ||\n      partInfo.name !== 'class' ||\n      (partInfo.strings?.length as number) > 2\n    ) {\n      throw new Error(\n        '`classMap()` can only be used in the `class` attribute ' +\n          'and must be the only part in the attribute.'\n      );\n    }\n  }\n\n  render(classInfo: ClassInfo) {\n    // Add spaces to ensure separation from static classes\n    return (\n      ' ' +\n      Object.keys(classInfo)\n        .filter((key) => classInfo[key])\n        .join(' ') +\n      ' '\n    );\n  }\n\n  override update(part: AttributePart, [classInfo]: DirectiveParameters<this>) {\n    // Remember dynamic classes on the first render\n    if (this._previousClasses === undefined) {\n      this._previousClasses = new Set();\n      if (part.strings !== undefined) {\n        this._staticClasses = new Set(\n          part.strings\n            .join(' ')\n            .split(/\\s/)\n            .filter((s) => s !== '')\n        );\n      }\n      for (const name in classInfo) {\n        if (classInfo[name] && !this._staticClasses?.has(name)) {\n          this._previousClasses.add(name);\n        }\n      }\n      return this.render(classInfo);\n    }\n\n    const classList = part.element.classList;\n\n    // Remove old classes that no longer apply\n    // We use forEach() instead of for-of so that we don't require down-level\n    // iteration.\n    this._previousClasses.forEach((name) => {\n      if (!(name in classInfo)) {\n        classList.remove(name);\n        this._previousClasses!.delete(name);\n      }\n    });\n\n    // Add or remove classes based on their classMap value\n    for (const name in classInfo) {\n      // We explicitly want a loose truthy check of `value` because it seems\n      // more convenient that '' and 0 are skipped.\n      const value = !!classInfo[name];\n      if (\n        value !== this._previousClasses.has(name) &&\n        !this._staticClasses?.has(name)\n      ) {\n        if (value) {\n          classList.add(name);\n          this._previousClasses.add(name);\n        } else {\n          classList.remove(name);\n          this._previousClasses.delete(name);\n        }\n      }\n    }\n    return noChange;\n  }\n}\n\n/**\n * A directive that applies dynamic CSS classes.\n *\n * This must be used in the `class` attribute and must be the only part used in\n * the attribute. It takes each property in the `classInfo` argument and adds\n * the property name to the element's `classList` if the property value is\n * truthy; if the property value is falsey, the property name is removed from\n * the element's `class`.\n *\n * For example `{foo: bar}` applies the class `foo` if the value of `bar` is\n * truthy.\n *\n * @param classInfo\n */\nexport const classMap = directive(ClassMapDirective);\n\n/**\n * The type of the class that powers this directive. Necessary for naming the\n * directive's return type.\n */\nexport type {ClassMapDirective};\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Easing functions to use for web animations.\n *\n * **NOTE:** `EASING.EMPHASIZED` is approximated with unknown accuracy.\n *\n * TODO(b/241113345): replace with tokens\n */\nexport const EASING = {\n  STANDARD: 'cubic-bezier(0.2, 0, 0, 1)',\n  STANDARD_ACCELERATE: 'cubic-bezier(.3,0,1,1)',\n  STANDARD_DECELERATE: 'cubic-bezier(0,0,0,1)',\n  EMPHASIZED: 'cubic-bezier(.3,0,0,1)',\n  EMPHASIZED_ACCELERATE: 'cubic-bezier(.3,0,.8,.15)',\n  EMPHASIZED_DECELERATE: 'cubic-bezier(.05,.7,.1,1)',\n} as const;\n\n/**\n * A signal that is used for abortable tasks.\n */\nexport interface AnimationSignal {\n  /**\n   * Starts the abortable task. Any previous tasks started with this instance\n   * will be aborted.\n   *\n   * @return An `AbortSignal` for the current task.\n   */\n  start(): AbortSignal;\n  /**\n   * Complete the current task.\n   */\n  finish(): void;\n}\n\n/**\n * Creates an `AnimationSignal` that can be used to cancel a previous task.\n *\n * @example\n * class MyClass {\n *   private labelAnimationSignal = createAnimationSignal();\n *\n *   private async animateLabel() {\n *     // Start of the task. Previous tasks will be canceled.\n *     const signal = this.labelAnimationSignal.start();\n *\n *     // Do async work...\n *     if (signal.aborted) {\n *       // Use AbortSignal to check if a request was made to abort after some\n *       // asynchronous work.\n *       return;\n *     }\n *\n *     const animation = this.animate(...);\n *     // Add event listeners to be notified when the task should be canceled.\n *     signal.addEventListener('abort', () => {\n *       animation.cancel();\n *     });\n *\n *     animation.addEventListener('finish', () => {\n *       // Tell the signal that the current task is finished.\n *       this.labelAnimationSignal.finish();\n *     });\n *   }\n * }\n *\n * @return An `AnimationSignal`.\n */\nexport function createAnimationSignal(): AnimationSignal {\n  // The current animation's AbortController\n  let animationAbortController: AbortController | null = null;\n\n  return {\n    start() {\n      // Tell the previous animation to cancel.\n      animationAbortController?.abort();\n      // Set up a new AbortController for the current animation.\n      animationAbortController = new AbortController();\n      // Provide the AbortSignal so that the caller can check aborted status\n      // and add listeners.\n      return animationAbortController.signal;\n    },\n    finish() {\n      animationAbortController = null;\n    },\n  };\n}\n\n/**\n * Returns a function which can be used to throttle function calls\n * mapped to a key via a given function that should produce a promise that\n * determines the throttle amount (defaults to requestAnimationFrame).\n */\nexport function createThrottle() {\n  const stack = new Set();\n  return async (\n    key = '',\n    cb: (...args: unknown[]) => unknown,\n    timeout = async () => {\n      await new Promise(requestAnimationFrame);\n    },\n  ) => {\n    if (!stack.has(key)) {\n      stack.add(key);\n      await timeout();\n      if (stack.has(key)) {\n        stack.delete(key);\n        cb();\n      }\n    }\n  };\n}\n\n/**\n * Parses an number in milliseconds from a css time value\n */\nexport function msFromTimeCSSValue(value: string) {\n  const match = value.trim().match(/([\\d.]+)(\\s*s$)?/);\n  const time = match?.[1];\n  const seconds = match?.[2];\n  return Number(time ?? 0) * (seconds ? 1000 : 1);\n}\n", "/**\n * @license\n * Copyright 2022 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {html, isServer, LitElement, PropertyValues} from 'lit';\nimport {property, query, state} from 'lit/decorators.js';\nimport {classMap} from 'lit/directives/class-map.js';\n\nimport {\n  Attachable,\n  AttachableController,\n} from '../../internal/controller/attachable-controller.js';\nimport {EASING} from '../../internal/motion/animation.js';\n\nconst PRESS_GROW_MS = 450;\nconst MINIMUM_PRESS_MS = 225;\nconst INITIAL_ORIGIN_SCALE = 0.2;\nconst PADDING = 10;\nconst SOFT_EDGE_MINIMUM_SIZE = 75;\nconst SOFT_EDGE_CONTAINER_RATIO = 0.35;\nconst PRESS_PSEUDO = '::after';\nconst ANIMATION_FILL = 'forwards';\n\n/**\n * Interaction states for the ripple.\n *\n * On Touch:\n *  - `INACTIVE -> TOUCH_DELAY -> WAITING_FOR_CLICK -> INACTIVE`\n *  - `INACTIVE -> TOUCH_DELAY -> HOLDING -> WAITING_FOR_CLICK -> INACTIVE`\n *\n * On Mouse or Pen:\n *   - `INACTIVE -> WAITING_FOR_CLICK -> INACTIVE`\n */\nenum State {\n  /**\n   * Initial state of the control, no touch in progress.\n   *\n   * Transitions:\n   *   - on touch down: transition to `TOUCH_DELAY`.\n   *   - on mouse down: transition to `WAITING_FOR_CLICK`.\n   */\n  INACTIVE,\n  /**\n   * Touch down has been received, waiting to determine if it's a swipe or\n   * scroll.\n   *\n   * Transitions:\n   *   - on touch up: begin press; transition to `WAITING_FOR_CLICK`.\n   *   - on cancel: transition to `INACTIVE`.\n   *   - after `TOUCH_DELAY_MS`: begin press; transition to `HOLDING`.\n   */\n  TOUCH_DELAY,\n  /**\n   * A touch has been deemed to be a press\n   *\n   * Transitions:\n   *  - on up: transition to `WAITING_FOR_CLICK`.\n   */\n  HOLDING,\n  /**\n   * The user touch has finished, transition into rest state.\n   *\n   * Transitions:\n   *   - on click end press; transition to `INACTIVE`.\n   */\n  WAITING_FOR_CLICK,\n}\n\n/**\n * Events that the ripple listens to.\n */\nconst EVENTS = [\n  'click',\n  'contextmenu',\n  'pointercancel',\n  'pointerdown',\n  'pointerenter',\n  'pointerleave',\n  'pointerup',\n];\n\n/**\n * Delay reacting to touch so that we do not show the ripple for a swipe or\n * scroll interaction.\n */\nconst TOUCH_DELAY_MS = 150;\n\n/**\n * Used to detect if HCM is active. Events do not process during HCM when the\n * ripple is not displayed.\n */\nconst FORCED_COLORS = isServer\n  ? null\n  : window.matchMedia('(forced-colors: active)');\n\n/**\n * A ripple component.\n */\nexport class Ripple extends LitElement implements Attachable {\n  /**\n   * Disables the ripple.\n   */\n  @property({type: Boolean, reflect: true}) disabled = false;\n\n  get htmlFor() {\n    return this.attachableController.htmlFor;\n  }\n\n  set htmlFor(htmlFor: string | null) {\n    this.attachableController.htmlFor = htmlFor;\n  }\n\n  get control() {\n    return this.attachableController.control;\n  }\n  set control(control: HTMLElement | null) {\n    this.attachableController.control = control;\n  }\n\n  @state() private hovered = false;\n  @state() private pressed = false;\n\n  @query('.surface') private readonly mdRoot!: HTMLElement | null;\n  private rippleSize = '';\n  private rippleScale = '';\n  private initialSize = 0;\n  private growAnimation?: Animation;\n  private state = State.INACTIVE;\n  private rippleStartEvent?: PointerEvent;\n  private checkBoundsAfterContextMenu = false;\n  private readonly attachableController = new AttachableController(\n    this,\n    this.onControlChange.bind(this),\n  );\n\n  attach(control: HTMLElement) {\n    this.attachableController.attach(control);\n  }\n\n  detach() {\n    this.attachableController.detach();\n  }\n\n  override connectedCallback() {\n    super.connectedCallback();\n    // Needed for VoiceOver, which will create a \"group\" if the element is a\n    // sibling to other content.\n    this.setAttribute('aria-hidden', 'true');\n  }\n\n  protected override render() {\n    const classes = {\n      'hovered': this.hovered,\n      'pressed': this.pressed,\n    };\n\n    return html`<div class=\"surface ${classMap(classes)}\"></div>`;\n  }\n\n  protected override update(changedProps: PropertyValues<Ripple>) {\n    if (changedProps.has('disabled') && this.disabled) {\n      this.hovered = false;\n      this.pressed = false;\n    }\n    super.update(changedProps);\n  }\n\n  /**\n   * TODO(b/269799771): make private\n   * @private only public for slider\n   */\n  handlePointerenter(event: PointerEvent) {\n    if (!this.shouldReactToEvent(event)) {\n      return;\n    }\n\n    this.hovered = true;\n  }\n\n  /**\n   * TODO(b/269799771): make private\n   * @private only public for slider\n   */\n  handlePointerleave(event: PointerEvent) {\n    if (!this.shouldReactToEvent(event)) {\n      return;\n    }\n\n    this.hovered = false;\n\n    // release a held mouse or pen press that moves outside the element\n    if (this.state !== State.INACTIVE) {\n      this.endPressAnimation();\n    }\n  }\n\n  private handlePointerup(event: PointerEvent) {\n    if (!this.shouldReactToEvent(event)) {\n      return;\n    }\n\n    if (this.state === State.HOLDING) {\n      this.state = State.WAITING_FOR_CLICK;\n      return;\n    }\n\n    if (this.state === State.TOUCH_DELAY) {\n      this.state = State.WAITING_FOR_CLICK;\n      this.startPressAnimation(this.rippleStartEvent);\n      return;\n    }\n  }\n\n  private async handlePointerdown(event: PointerEvent) {\n    if (!this.shouldReactToEvent(event)) {\n      return;\n    }\n\n    this.rippleStartEvent = event;\n    if (!this.isTouch(event)) {\n      this.state = State.WAITING_FOR_CLICK;\n      this.startPressAnimation(event);\n      return;\n    }\n\n    // after a longpress contextmenu event, an extra `pointerdown` can be\n    // dispatched to the pressed element. Check that the down is within\n    // bounds of the element in this case.\n    if (this.checkBoundsAfterContextMenu && !this.inBounds(event)) {\n      return;\n    }\n\n    this.checkBoundsAfterContextMenu = false;\n\n    // Wait for a hold after touch delay\n    this.state = State.TOUCH_DELAY;\n    await new Promise((resolve) => {\n      setTimeout(resolve, TOUCH_DELAY_MS);\n    });\n\n    if (this.state !== State.TOUCH_DELAY) {\n      return;\n    }\n\n    this.state = State.HOLDING;\n    this.startPressAnimation(event);\n  }\n\n  private handleClick() {\n    // Click is a MouseEvent in Firefox and Safari, so we cannot use\n    // `shouldReactToEvent`\n    if (this.disabled) {\n      return;\n    }\n\n    if (this.state === State.WAITING_FOR_CLICK) {\n      this.endPressAnimation();\n      return;\n    }\n\n    if (this.state === State.INACTIVE) {\n      // keyboard synthesized click event\n      this.startPressAnimation();\n      this.endPressAnimation();\n    }\n  }\n\n  private handlePointercancel(event: PointerEvent) {\n    if (!this.shouldReactToEvent(event)) {\n      return;\n    }\n\n    this.endPressAnimation();\n  }\n\n  private handleContextmenu() {\n    if (this.disabled) {\n      return;\n    }\n\n    this.checkBoundsAfterContextMenu = true;\n    this.endPressAnimation();\n  }\n\n  private determineRippleSize() {\n    const {height, width} = this.getBoundingClientRect();\n    const maxDim = Math.max(height, width);\n    const softEdgeSize = Math.max(\n      SOFT_EDGE_CONTAINER_RATIO * maxDim,\n      SOFT_EDGE_MINIMUM_SIZE,\n    );\n\n    const initialSize = Math.floor(maxDim * INITIAL_ORIGIN_SCALE);\n    const hypotenuse = Math.sqrt(width ** 2 + height ** 2);\n    const maxRadius = hypotenuse + PADDING;\n\n    this.initialSize = initialSize;\n    this.rippleScale = `${(maxRadius + softEdgeSize) / initialSize}`;\n    this.rippleSize = `${initialSize}px`;\n  }\n\n  private getNormalizedPointerEventCoords(pointerEvent: PointerEvent): {\n    x: number;\n    y: number;\n  } {\n    const {scrollX, scrollY} = window;\n    const {left, top} = this.getBoundingClientRect();\n    const documentX = scrollX + left;\n    const documentY = scrollY + top;\n    const {pageX, pageY} = pointerEvent;\n    return {x: pageX - documentX, y: pageY - documentY};\n  }\n\n  private getTranslationCoordinates(positionEvent?: Event) {\n    const {height, width} = this.getBoundingClientRect();\n    // end in the center\n    const endPoint = {\n      x: (width - this.initialSize) / 2,\n      y: (height - this.initialSize) / 2,\n    };\n\n    let startPoint;\n    if (positionEvent instanceof PointerEvent) {\n      startPoint = this.getNormalizedPointerEventCoords(positionEvent);\n    } else {\n      startPoint = {\n        x: width / 2,\n        y: height / 2,\n      };\n    }\n\n    // center around start point\n    startPoint = {\n      x: startPoint.x - this.initialSize / 2,\n      y: startPoint.y - this.initialSize / 2,\n    };\n\n    return {startPoint, endPoint};\n  }\n\n  private startPressAnimation(positionEvent?: Event) {\n    if (!this.mdRoot) {\n      return;\n    }\n\n    this.pressed = true;\n    this.growAnimation?.cancel();\n    this.determineRippleSize();\n    const {startPoint, endPoint} =\n      this.getTranslationCoordinates(positionEvent);\n    const translateStart = `${startPoint.x}px, ${startPoint.y}px`;\n    const translateEnd = `${endPoint.x}px, ${endPoint.y}px`;\n\n    this.growAnimation = this.mdRoot.animate(\n      {\n        top: [0, 0],\n        left: [0, 0],\n        height: [this.rippleSize, this.rippleSize],\n        width: [this.rippleSize, this.rippleSize],\n        transform: [\n          `translate(${translateStart}) scale(1)`,\n          `translate(${translateEnd}) scale(${this.rippleScale})`,\n        ],\n      },\n      {\n        pseudoElement: PRESS_PSEUDO,\n        duration: PRESS_GROW_MS,\n        easing: EASING.STANDARD,\n        fill: ANIMATION_FILL,\n      },\n    );\n  }\n\n  private async endPressAnimation() {\n    this.rippleStartEvent = undefined;\n    this.state = State.INACTIVE;\n    const animation = this.growAnimation;\n    let pressAnimationPlayState = Infinity;\n    if (typeof animation?.currentTime === 'number') {\n      pressAnimationPlayState = animation.currentTime;\n    } else if (animation?.currentTime) {\n      pressAnimationPlayState = animation.currentTime.to('ms').value;\n    }\n\n    if (pressAnimationPlayState >= MINIMUM_PRESS_MS) {\n      this.pressed = false;\n      return;\n    }\n\n    await new Promise((resolve) => {\n      setTimeout(resolve, MINIMUM_PRESS_MS - pressAnimationPlayState);\n    });\n\n    if (this.growAnimation !== animation) {\n      // A new press animation was started. The old animation was canceled and\n      // should not finish the pressed state.\n      return;\n    }\n\n    this.pressed = false;\n  }\n\n  /**\n   * Returns `true` if\n   *  - the ripple element is enabled\n   *  - the pointer is primary for the input type\n   *  - the pointer is the pointer that started the interaction, or will start\n   * the interaction\n   *  - the pointer is a touch, or the pointer state has the primary button\n   * held, or the pointer is hovering\n   */\n  private shouldReactToEvent(event: PointerEvent) {\n    if (this.disabled || !event.isPrimary) {\n      return false;\n    }\n\n    if (\n      this.rippleStartEvent &&\n      this.rippleStartEvent.pointerId !== event.pointerId\n    ) {\n      return false;\n    }\n\n    if (event.type === 'pointerenter' || event.type === 'pointerleave') {\n      return !this.isTouch(event);\n    }\n\n    const isPrimaryButton = event.buttons === 1;\n    return this.isTouch(event) || isPrimaryButton;\n  }\n\n  /**\n   * Check if the event is within the bounds of the element.\n   *\n   * This is only needed for the \"stuck\" contextmenu longpress on Chrome.\n   */\n  private inBounds({x, y}: PointerEvent) {\n    const {top, left, bottom, right} = this.getBoundingClientRect();\n    return x >= left && x <= right && y >= top && y <= bottom;\n  }\n\n  private isTouch({pointerType}: PointerEvent) {\n    return pointerType === 'touch';\n  }\n\n  /** @private */\n  async handleEvent(event: Event) {\n    if (FORCED_COLORS?.matches) {\n      // Skip event logic since the ripple is `display: none`.\n      return;\n    }\n\n    switch (event.type) {\n      case 'click':\n        this.handleClick();\n        break;\n      case 'contextmenu':\n        this.handleContextmenu();\n        break;\n      case 'pointercancel':\n        this.handlePointercancel(event as PointerEvent);\n        break;\n      case 'pointerdown':\n        await this.handlePointerdown(event as PointerEvent);\n        break;\n      case 'pointerenter':\n        this.handlePointerenter(event as PointerEvent);\n        break;\n      case 'pointerleave':\n        this.handlePointerleave(event as PointerEvent);\n        break;\n      case 'pointerup':\n        this.handlePointerup(event as PointerEvent);\n        break;\n      default:\n        break;\n    }\n  }\n\n  private onControlChange(prev: HTMLElement | null, next: HTMLElement | null) {\n    if (isServer) return;\n\n    for (const event of EVENTS) {\n      prev?.removeEventListener(event, this);\n      next?.addEventListener(event, this);\n    }\n  }\n}\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./ripple/internal/ripple-styles.css.\nimport {css} from 'lit';\nexport const styles = css`:host{display:flex;margin:auto;pointer-events:none}:host([disabled]){display:none}@media(forced-colors: active){:host{display:none}}:host,.surface{border-radius:inherit;position:absolute;inset:0;overflow:hidden}.surface{-webkit-tap-highlight-color:rgba(0,0,0,0)}.surface::before,.surface::after{content:\"\";opacity:0;position:absolute}.surface::before{background-color:var(--md-ripple-hover-color, var(--md-sys-color-on-surface, #1d1b20));inset:0;transition:opacity 15ms linear,background-color 15ms linear}.surface::after{background:radial-gradient(closest-side, var(--md-ripple-pressed-color, var(--md-sys-color-on-surface, #1d1b20)) max(100% - 70px, 65%), transparent 100%);transform-origin:center center;transition:opacity 375ms linear}.hovered::before{background-color:var(--md-ripple-hover-color, var(--md-sys-color-on-surface, #1d1b20));opacity:var(--md-ripple-hover-opacity, 0.08)}.pressed::after{opacity:var(--md-ripple-pressed-opacity, 0.12);transition-duration:105ms}\n`;\n", "/**\n * @license\n * Copyright 2022 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {CSSResultOrNative} from 'lit';\nimport {customElement} from 'lit/decorators.js';\n\nimport {Ripple} from './internal/ripple.js';\nimport {styles} from './internal/ripple-styles.js';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'md-ripple': MdRipple;\n  }\n}\n\n/**\n * @summary Ripples, also known as state layers, are visual indicators used to\n * communicate the status of a component or interactive element.\n *\n * @description A state layer is a semi-transparent covering on an element that\n * indicates its state. State layers provide a systematic approach to\n * visualizing states by using opacity. A layer can be applied to an entire\n * element or in a circular shape and only one state layer can be applied at a\n * given time.\n *\n * @final\n * @suppress {visibility}\n */\n@customElement('md-ripple')\nexport class MdRipple extends Ripple {\n  static override styles: CSSResultOrNative[] = [styles];\n}\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Accessibility Object Model reflective aria property name types.\n */\nexport type ARIAProperty = Exclude<keyof ARIAMixin, 'role'>;\n\n/**\n * Accessibility Object Model reflective aria properties.\n */\nexport const ARIA_PROPERTIES: ARIAProperty[] = [\n  'ariaAtomic',\n  'ariaAutoComplete',\n  'ariaBusy',\n  'ariaChecked',\n  'ariaColCount',\n  'ariaColIndex',\n  'ariaColSpan',\n  'ariaCurrent',\n  'ariaDisabled',\n  'ariaExpanded',\n  'ariaHasPopup',\n  'ariaHidden',\n  'ariaInvalid',\n  'ariaKeyShortcuts',\n  'ariaLabel',\n  'ariaLevel',\n  'ariaLive',\n  'ariaModal',\n  'ariaMultiLine',\n  'ariaMultiSelectable',\n  'ariaOrientation',\n  'ariaPlaceholder',\n  'ariaPosInSet',\n  'ariaPressed',\n  'ariaReadOnly',\n  'ariaRequired',\n  'ariaRoleDescription',\n  'ariaRowCount',\n  'ariaRowIndex',\n  'ariaRowSpan',\n  'ariaSelected',\n  'ariaSetSize',\n  'ariaSort',\n  'ariaValueMax',\n  'ariaValueMin',\n  'ariaValueNow',\n  'ariaValueText',\n];\n\n/**\n * Accessibility Object Model aria attribute name types.\n */\nexport type ARIAAttribute = ARIAPropertyToAttribute<ARIAProperty>;\n\n/**\n * Accessibility Object Model aria attributes.\n */\nexport const ARIA_ATTRIBUTES = ARIA_PROPERTIES.map(ariaPropertyToAttribute);\n\n/**\n * Checks if an attribute is one of the AOM aria attributes.\n *\n * @example\n * isAriaAttribute('aria-label'); // true\n *\n * @param attribute The attribute to check.\n * @return True if the attribute is an aria attribute, or false if not.\n */\nexport function isAriaAttribute(attribute: string): attribute is ARIAAttribute {\n  return attribute.startsWith('aria-');\n}\n\n/**\n * Converts an AOM aria property into its corresponding attribute.\n *\n * @example\n * ariaPropertyToAttribute('ariaLabel'); // 'aria-label'\n *\n * @param property The aria property.\n * @return The aria attribute.\n */\nexport function ariaPropertyToAttribute<K extends ARIAProperty | 'role'>(\n  property: K,\n) {\n  return (\n    property\n      .replace('aria', 'aria-')\n      // IDREF attributes also include an \"Element\" or \"Elements\" suffix\n      .replace(/Elements?/g, '')\n      .toLowerCase() as ARIAPropertyToAttribute<K>\n  );\n}\n\n// Converts an `ariaFoo` string type to an `aria-foo` string type.\ntype ARIAPropertyToAttribute<K extends string> =\n  K extends `aria${infer Suffix}Element${infer OptS}`\n    ? `aria-${Lowercase<Suffix>}`\n    : K extends `aria${infer Suffix}`\n    ? `aria-${Lowercase<Suffix>}`\n    : K;\n\n/**\n * An extension of `ARIAMixin` that enforces strict value types for aria\n * properties.\n *\n * This is needed for correct typing in render functions with lit analyzer.\n *\n * @example\n * render() {\n *   const {ariaLabel} = this as ARIAMixinStrict;\n *   return html`\n *     <button aria-label=${ariaLabel || nothing}>\n *       <slot></slot>\n *     </button>\n *   `;\n * }\n */\nexport interface ARIAMixinStrict extends ARIAMixin {\n  ariaAtomic: 'true' | 'false' | null;\n  ariaAutoComplete: 'none' | 'inline' | 'list' | 'both' | null;\n  ariaBusy: 'true' | 'false' | null;\n  ariaChecked: 'true' | 'false' | null;\n  ariaColCount: `${number}` | null;\n  ariaColIndex: `${number}` | null;\n  ariaColSpan: `${number}` | null;\n  ariaCurrent:\n    | 'page'\n    | 'step'\n    | 'location'\n    | 'date'\n    | 'time'\n    | 'true'\n    | 'false'\n    | null;\n  ariaDisabled: 'true' | 'false' | null;\n  ariaExpanded: 'true' | 'false' | null;\n  ariaHasPopup:\n    | 'false'\n    | 'true'\n    | 'menu'\n    | 'listbox'\n    | 'tree'\n    | 'grid'\n    | 'dialog'\n    | null;\n  ariaHidden: 'true' | 'false' | null;\n  ariaInvalid: 'true' | 'false' | null;\n  ariaKeyShortcuts: string | null;\n  ariaLabel: string | null;\n  ariaLevel: `${number}` | null;\n  ariaLive: 'assertive' | 'off' | 'polite' | null;\n  ariaModal: 'true' | 'false' | null;\n  ariaMultiLine: 'true' | 'false' | null;\n  ariaMultiSelectable: 'true' | 'false' | null;\n  ariaOrientation: 'horizontal' | 'vertical' | 'undefined' | null;\n  ariaPlaceholder: string | null;\n  ariaPosInSet: `${number}` | null;\n  ariaPressed: 'true' | 'false' | null;\n  ariaReadOnly: 'true' | 'false' | null;\n  ariaRequired: 'true' | 'false' | null;\n  ariaRoleDescription: string | null;\n  ariaRowCount: `${number}` | null;\n  ariaRowIndex: `${number}` | null;\n  ariaRowSpan: `${number}` | null;\n  ariaSelected: 'true' | 'false' | null;\n  ariaSetSize: `${number}` | null;\n  ariaSort: 'ascending' | 'descending' | 'none' | 'other' | null;\n  ariaValueMax: `${number}` | null;\n  ariaValueMin: `${number}` | null;\n  ariaValueNow: `${number}` | null;\n  ariaValueText: string | null;\n  role: ARIARole | null;\n}\n\n/**\n * Valid values for `role`.\n */\nexport type ARIARole =\n  | 'alert'\n  | 'alertdialog'\n  | 'button'\n  | 'checkbox'\n  | 'dialog'\n  | 'gridcell'\n  | 'link'\n  | 'log'\n  | 'marquee'\n  | 'menuitem'\n  | 'menuitemcheckbox'\n  | 'menuitemradio'\n  | 'option'\n  | 'progressbar'\n  | 'radio'\n  | 'scrollbar'\n  | 'searchbox'\n  | 'slider'\n  | 'spinbutton'\n  | 'status'\n  | 'switch'\n  | 'tab'\n  | 'tabpanel'\n  | 'textbox'\n  | 'timer'\n  | 'tooltip'\n  | 'treeitem'\n  | 'combobox'\n  | 'grid'\n  | 'listbox'\n  | 'menu'\n  | 'menubar'\n  | 'radiogroup'\n  | 'tablist'\n  | 'tree'\n  | 'treegrid'\n  | 'application'\n  | 'article'\n  | 'cell'\n  | 'columnheader'\n  | 'definition'\n  | 'directory'\n  | 'document'\n  | 'feed'\n  | 'figure'\n  | 'group'\n  | 'heading'\n  | 'img'\n  | 'list'\n  | 'listitem'\n  | 'math'\n  | 'none'\n  | 'note'\n  | 'presentation'\n  | 'region'\n  | 'row'\n  | 'rowgroup'\n  | 'rowheader'\n  | 'separator'\n  | 'table'\n  | 'term'\n  | 'text'\n  | 'toolbar'\n  | 'banner'\n  | 'complementary'\n  | 'contentinfo'\n  | 'form'\n  | 'main'\n  | 'navigation'\n  | 'region'\n  | 'search'\n  | 'doc-abstract'\n  | 'doc-acknowledgments'\n  | 'doc-afterword'\n  | 'doc-appendix'\n  | 'doc-backlink'\n  | 'doc-biblioentry'\n  | 'doc-bibliography'\n  | 'doc-biblioref'\n  | 'doc-chapter'\n  | 'doc-colophon'\n  | 'doc-conclusion'\n  | 'doc-cover'\n  | 'doc-credit'\n  | 'doc-credits'\n  | 'doc-dedication'\n  | 'doc-endnote'\n  | 'doc-endnotes'\n  | 'doc-epigraph'\n  | 'doc-epilogue'\n  | 'doc-errata'\n  | 'doc-example'\n  | 'doc-footnote'\n  | 'doc-foreword'\n  | 'doc-glossary'\n  | 'doc-glossref'\n  | 'doc-index'\n  | 'doc-introduction'\n  | 'doc-noteref'\n  | 'doc-notice'\n  | 'doc-pagebreak'\n  | 'doc-pagelist'\n  | 'doc-part'\n  | 'doc-preface'\n  | 'doc-prologue'\n  | 'doc-pullquote'\n  | 'doc-qna'\n  | 'doc-subtitle'\n  | 'doc-tip'\n  | 'doc-toc';\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {ReactiveElement} from 'lit';\n\nimport {ARIA_PROPERTIES, ariaPropertyToAttribute} from './aria.js';\n\n/**\n * Sets up a `ReactiveElement` constructor to enable updates when delegating\n * aria attributes. Elements may bind `this.aria*` properties to `aria-*`\n * attributes in their render functions.\n *\n * This function will:\n * - Call `requestUpdate()` when an aria attribute changes.\n * - Add `role=\"presentation\"` to the host.\n *\n * NOTE: The following features are not currently supported:\n * - Delegating IDREF attributes (ex: `aria-labelledby`, `aria-controls`)\n * - Delegating the `role` attribute\n *\n * @example\n * class XButton extends LitElement {\n *   static {\n *     requestUpdateOnAriaChange(XButton);\n *   }\n *\n *   protected override render() {\n *     return html`\n *       <button aria-label=${this.ariaLabel || nothing}>\n *         <slot></slot>\n *       </button>\n *     `;\n *   }\n * }\n *\n * @param ctor The `ReactiveElement` constructor to patch.\n */\nexport function requestUpdateOnAriaChange(ctor: typeof ReactiveElement) {\n  for (const ariaProperty of ARIA_PROPERTIES) {\n    ctor.createProperty(ariaProperty, {\n      attribute: ariaPropertyToAttribute(ariaProperty),\n      reflect: true,\n    });\n  }\n\n  ctor.addInitializer((element) => {\n    const controller = {\n      hostConnected() {\n        element.setAttribute('role', 'presentation');\n      },\n    };\n\n    element.addController(controller);\n  });\n}\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {LitElement} from 'lit';\n\nimport {MixinBase, MixinReturn} from './mixin.js';\n\n/**\n * A unique symbol used for protected access to an instance's\n * `ElementInternals`.\n *\n * @example\n * ```ts\n * class MyElement extends mixinElementInternals(LitElement) {\n *   constructor() {\n *     super();\n *     this[internals].role = 'button';\n *   }\n * }\n * ```\n */\nexport const internals = Symbol('internals');\n\n/**\n * An instance with an `internals` symbol property for the component's\n * `ElementInternals`.\n *\n * Use this when protected access is needed for an instance's `ElementInternals`\n * from other files. A unique symbol is used to access the internals.\n */\nexport interface WithElementInternals {\n  /**\n   * An instance's `ElementInternals`.\n   */\n  [internals]: ElementInternals;\n}\n\n// Private symbols\nconst privateInternals = Symbol('privateInternals');\n\n/**\n * Mixes in an attached `ElementInternals` instance.\n *\n * This mixin is only needed when other shared code needs access to a\n * component's `ElementInternals`, such as form-associated mixins.\n *\n * @param base The class to mix functionality into.\n * @return The provided class with `WithElementInternals` mixed in.\n */\nexport function mixinElementInternals<T extends MixinBase<LitElement>>(\n  base: T,\n): MixinReturn<T, WithElementInternals> {\n  abstract class WithElementInternalsElement\n    extends base\n    implements WithElementInternals\n  {\n    get [internals]() {\n      // Create internals in getter so that it can be used in methods called on\n      // construction in `ReactiveElement`, such as `requestUpdate()`.\n      if (!this[privateInternals]) {\n        // Cast needed for closure\n        this[privateInternals] = (this as HTMLElement).attachInternals();\n      }\n\n      return this[privateInternals];\n    }\n\n    [privateInternals]?: ElementInternals;\n  }\n\n  return WithElementInternalsElement;\n}\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {isServer, ReactiveElement} from 'lit';\n\nimport {\n  internals,\n  WithElementInternals,\n} from '../../labs/behaviors/element-internals.js';\n\n/**\n * A string indicating the form submission behavior of the element.\n *\n * - submit: The element submits the form. This is the default value if the\n * attribute is not specified, or if it is dynamically changed to an empty or\n * invalid value.\n * - reset: The element resets the form.\n * - button: The element does nothing.\n */\nexport type FormSubmitterType = 'button' | 'submit' | 'reset';\n\n/**\n * An element that can submit or reset a `<form>`, similar to\n * `<button type=\"submit\">`.\n */\nexport interface FormSubmitter extends ReactiveElement, WithElementInternals {\n  /**\n   * A string indicating the form submission behavior of the element.\n   *\n   * - submit: The element submits the form. This is the default value if the\n   * attribute is not specified, or if it is dynamically changed to an empty or\n   * invalid value.\n   * - reset: The element resets the form.\n   * - button: The element does nothing.\n   */\n  type: FormSubmitterType;\n\n  /**\n   * The HTML name to use in form submission. When combined with a `value`, the\n   * submitting button's name/value will be added to the form.\n   *\n   * Names must reflect to a `name` attribute for form integration.\n   */\n  name: string;\n\n  /**\n   * The value of the button. When combined with a `name`, the submitting\n   * button's name/value will be added to the form.\n   */\n  value: string;\n}\n\ntype FormSubmitterConstructor =\n  | (new () => FormSubmitter)\n  | (abstract new () => FormSubmitter);\n\n/**\n * Sets up an element's constructor to enable form submission. The element\n * instance should be form associated and have a `type` property.\n *\n * A click listener is added to each element instance. If the click is not\n * default prevented, it will submit the element's form, if any.\n *\n * @example\n * ```ts\n * class MyElement extends mixinElementInternals(LitElement) {\n *   static {\n *     setupFormSubmitter(MyElement);\n *   }\n *\n *   static formAssociated = true;\n *\n *   type: FormSubmitterType = 'submit';\n * }\n * ```\n *\n * @param ctor The form submitter element's constructor.\n */\nexport function setupFormSubmitter(ctor: FormSubmitterConstructor) {\n  if (isServer) {\n    return;\n  }\n\n  (ctor as unknown as typeof ReactiveElement).addInitializer((instance) => {\n    const submitter = instance as FormSubmitter;\n    submitter.addEventListener('click', async (event) => {\n      const {type, [internals]: elementInternals} = submitter;\n      const {form} = elementInternals;\n      if (!form || type === 'button') {\n        return;\n      }\n\n      // Wait a full task for event bubbling to complete.\n      await new Promise<void>((resolve) => {\n        setTimeout(resolve);\n      });\n\n      if (event.defaultPrevented) {\n        return;\n      }\n\n      if (type === 'reset') {\n        form.reset();\n        return;\n      }\n\n      // form.requestSubmit(submitter) does not work with form associated custom\n      // elements. This patches the dispatched submit event to add the correct\n      // `submitter`.\n      // See https://github.com/WICG/webcomponents/issues/814\n      form.addEventListener(\n        'submit',\n        (submitEvent) => {\n          Object.defineProperty(submitEvent, 'submitter', {\n            configurable: true,\n            enumerable: true,\n            get: () => submitter,\n          });\n        },\n        {capture: true, once: true},\n      );\n\n      elementInternals.setFormValue(submitter.value);\n      form.requestSubmit();\n    });\n  });\n}\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Dispatches a click event to the given element that triggers a native action,\n * but is not composed and therefore is not seen outside the element.\n *\n * This is useful for responding to an external click event on the host element\n * that should trigger an internal action like a button click.\n *\n * Note, a helper is provided because setting this up correctly is a bit tricky.\n * In particular, calling `click` on an element creates a composed event, which\n * is not desirable, and a manually dispatched event must specifically be a\n * `MouseEvent` to trigger a native action.\n *\n * @example\n * hostClickListener = (event: MouseEvent) {\n *   if (isActivationClick(event)) {\n *     this.dispatchActivationClick(this.buttonElement);\n *   }\n * }\n *\n */\nexport function dispatchActivationClick(element: HTMLElement) {\n  const event = new MouseEvent('click', {bubbles: true});\n  element.dispatchEvent(event);\n  return event;\n}\n\n/**\n * Returns true if the click event should trigger an activation behavior. The\n * behavior is defined by the element and is whatever it should do when\n * clicked.\n *\n * Typically when an element needs to handle a click, the click is generated\n * from within the element and an event listener within the element implements\n * the needed behavior; however, it's possible to fire a click directly\n * at the element that the element should handle. This method helps\n * distinguish these \"external\" clicks.\n *\n * An \"external\" click can be triggered in a number of ways: via a click\n * on an associated label for a form  associated element, calling\n * `element.click()`, or calling\n * `element.dispatchEvent(new MouseEvent('click', ...))`.\n *\n * Also works around Firefox issue\n * https://bugzilla.mozilla.org/show_bug.cgi?id=1804576 by squelching\n * events for a microtask after called.\n *\n * @example\n * hostClickListener = (event: MouseEvent) {\n *   if (isActivationClick(event)) {\n *     this.dispatchActivationClick(this.buttonElement);\n *   }\n * }\n *\n */\nexport function isActivationClick(event: Event) {\n  // Event must start at the event target.\n  if (event.currentTarget !== event.target) {\n    return false;\n  }\n  // Event must not be retargeted from shadowRoot.\n  if (event.composedPath()[0] !== event.target) {\n    return false;\n  }\n  // Target must not be disabled; this should only occur for a synthetically\n  // dispatched click.\n  if ((event.target as EventTarget & {disabled: boolean}).disabled) {\n    return false;\n  }\n  // This is an activation if the event should not be squelched.\n  return !squelchEvent(event);\n}\n\n// TODO(https://bugzilla.mozilla.org/show_bug.cgi?id=1804576)\n//  Remove when Firefox bug is addressed.\nfunction squelchEvent(event: Event) {\n  const squelched = isSquelchingEvents;\n  if (squelched) {\n    event.preventDefault();\n    event.stopImmediatePropagation();\n  }\n  squelchEventsForMicrotask();\n  return squelched;\n}\n\n// Ignore events for one microtask only.\nlet isSquelchingEvents = false;\nasync function squelchEventsForMicrotask() {\n  isSquelchingEvents = true;\n  // Need to pause for just one microtask.\n  // tslint:disable-next-line\n  await null;\n  isSquelchingEvents = false;\n}\n", "/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport '../../focus/md-focus-ring.js';\nimport '../../ripple/ripple.js';\n\nimport {html, isServer, LitElement, nothing} from 'lit';\nimport {property, query, queryAssignedElements} from 'lit/decorators.js';\n\nimport {ARIAMixinStrict} from '../../internal/aria/aria.js';\nimport {requestUpdateOnAriaChange} from '../../internal/aria/delegate.js';\nimport {\n  FormSubmitter,\n  setupFormSubmitter,\n  type FormSubmitterType,\n} from '../../internal/controller/form-submitter.js';\nimport {\n  dispatchActivationClick,\n  isActivationClick,\n} from '../../internal/events/form-label-activation.js';\nimport {\n  internals,\n  mixinElementInternals,\n} from '../../labs/behaviors/element-internals.js';\n\n// Separate variable needed for closure.\nconst buttonBaseClass = mixinElementInternals(LitElement);\n\n/**\n * A button component.\n */\nexport abstract class Button extends buttonBaseClass implements FormSubmitter {\n  static {\n    requestUpdateOnAriaChange(Button);\n    setupFormSubmitter(Button);\n  }\n\n  /** @nocollapse */\n  static readonly formAssociated = true;\n\n  /** @nocollapse */\n  static override shadowRootOptions: ShadowRootInit = {\n    mode: 'open',\n    delegatesFocus: true,\n  };\n\n  /**\n   * Whether or not the button is disabled.\n   */\n  @property({type: Boolean, reflect: true}) disabled = false;\n\n  /**\n   * The URL that the link button points to.\n   */\n  @property() href = '';\n\n  /**\n   * Where to display the linked `href` URL for a link button. Common options\n   * include `_blank` to open in a new tab.\n   */\n  @property() target: '_blank' | '_parent' | '_self' | '_top' | '' = '';\n\n  /**\n   * Whether to render the icon at the inline end of the label rather than the\n   * inline start.\n   *\n   * _Note:_ Link buttons cannot have trailing icons.\n   */\n  @property({type: Boolean, attribute: 'trailing-icon', reflect: true})\n  trailingIcon = false;\n\n  /**\n   * Whether to display the icon or not.\n   */\n  @property({type: Boolean, attribute: 'has-icon', reflect: true}) hasIcon =\n    false;\n\n  /**\n   * The default behavior of the button. May be \"text\", \"reset\", or \"submit\"\n   * (default).\n   */\n  @property() type: FormSubmitterType = 'submit';\n\n  /**\n   * The value added to a form with the button's name when the button submits a\n   * form.\n   */\n  @property({reflect: true}) value = '';\n\n  get name() {\n    return this.getAttribute('name') ?? '';\n  }\n  set name(name: string) {\n    this.setAttribute('name', name);\n  }\n\n  /**\n   * The associated form element with which this element's value will submit.\n   */\n  get form() {\n    return this[internals].form;\n  }\n\n  @query('.button') private readonly buttonElement!: HTMLElement | null;\n\n  @queryAssignedElements({slot: 'icon', flatten: true})\n  private readonly assignedIcons!: HTMLElement[];\n\n  constructor() {\n    super();\n    if (!isServer) {\n      this.addEventListener('click', this.handleActivationClick);\n    }\n  }\n\n  override focus() {\n    this.buttonElement?.focus();\n  }\n\n  override blur() {\n    this.buttonElement?.blur();\n  }\n\n  protected override render() {\n    // Link buttons may not be disabled\n    const isDisabled = this.disabled && !this.href;\n    const buttonOrLink = this.href ? this.renderLink() : this.renderButton();\n    // TODO(b/310046938): due to a limitation in focus ring/ripple, we can't use\n    // the same ID for different elements, so we change the ID instead.\n    const buttonId = this.href ? 'link' : 'button';\n    return html`\n      ${this.renderElevationOrOutline?.()}\n      <div class=\"background\"></div>\n      <md-focus-ring part=\"focus-ring\" for=${buttonId}></md-focus-ring>\n      <md-ripple for=${buttonId} ?disabled=\"${isDisabled}\"></md-ripple>\n      ${buttonOrLink}\n    `;\n  }\n\n  // Buttons can override this to add elevation or an outline. Use this and\n  // return `<md-elevation>` (for elevated, filled, and tonal buttons)\n  // or `<div class=\"outline\">` (for outlined buttons).\n  // Text buttons that have neither do not need to implement this.\n  protected renderElevationOrOutline?(): unknown;\n\n  private renderButton() {\n    // Needed for closure conformance\n    const {ariaLabel, ariaHasPopup, ariaExpanded} = this as ARIAMixinStrict;\n    return html`<button\n      id=\"button\"\n      class=\"button\"\n      ?disabled=${this.disabled}\n      aria-label=\"${ariaLabel || nothing}\"\n      aria-haspopup=\"${ariaHasPopup || nothing}\"\n      aria-expanded=\"${ariaExpanded || nothing}\">\n      ${this.renderContent()}\n    </button>`;\n  }\n\n  private renderLink() {\n    // Needed for closure conformance\n    const {ariaLabel, ariaHasPopup, ariaExpanded} = this as ARIAMixinStrict;\n    return html`<a\n      id=\"link\"\n      class=\"button\"\n      aria-label=\"${ariaLabel || nothing}\"\n      aria-haspopup=\"${ariaHasPopup || nothing}\"\n      aria-expanded=\"${ariaExpanded || nothing}\"\n      href=${this.href}\n      target=${this.target || nothing}\n      >${this.renderContent()}\n    </a>`;\n  }\n\n  private renderContent() {\n    const icon = html`<slot\n      name=\"icon\"\n      @slotchange=\"${this.handleSlotChange}\"></slot>`;\n\n    return html`\n      <span class=\"touch\"></span>\n      ${this.trailingIcon ? nothing : icon}\n      <span class=\"label\"><slot></slot></span>\n      ${this.trailingIcon ? icon : nothing}\n    `;\n  }\n\n  private readonly handleActivationClick = (event: MouseEvent) => {\n    if (!isActivationClick(event) || !this.buttonElement) {\n      return;\n    }\n    this.focus();\n    dispatchActivationClick(this.buttonElement);\n  };\n\n  private handleSlotChange() {\n    this.hasIcon = this.assignedIcons.length > 0;\n  }\n}\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport '../../elevation/elevation.js';\n\nimport {html} from 'lit';\n\nimport {Button} from './button.js';\n\n/**\n * An elevated button component.\n */\nexport class ElevatedButton extends Button {\n  protected override renderElevationOrOutline() {\n    return html`<md-elevation part=\"elevation\"></md-elevation>`;\n  }\n}\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./button/internal/elevated-styles.css.\nimport {css} from 'lit';\nexport const styles = css`:host{--_container-color: var(--md-elevated-button-container-color, var(--md-sys-color-surface-container-low, #f7f2fa));--_container-elevation: var(--md-elevated-button-container-elevation, 1);--_container-height: var(--md-elevated-button-container-height, 40px);--_container-shadow-color: var(--md-elevated-button-container-shadow-color, var(--md-sys-color-shadow, #000));--_disabled-container-color: var(--md-elevated-button-disabled-container-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-container-elevation: var(--md-elevated-button-disabled-container-elevation, 0);--_disabled-container-opacity: var(--md-elevated-button-disabled-container-opacity, 0.12);--_disabled-label-text-color: var(--md-elevated-button-disabled-label-text-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-label-text-opacity: var(--md-elevated-button-disabled-label-text-opacity, 0.38);--_focus-container-elevation: var(--md-elevated-button-focus-container-elevation, 1);--_focus-label-text-color: var(--md-elevated-button-focus-label-text-color, var(--md-sys-color-primary, #6750a4));--_hover-container-elevation: var(--md-elevated-button-hover-container-elevation, 2);--_hover-label-text-color: var(--md-elevated-button-hover-label-text-color, var(--md-sys-color-primary, #6750a4));--_hover-state-layer-color: var(--md-elevated-button-hover-state-layer-color, var(--md-sys-color-primary, #6750a4));--_hover-state-layer-opacity: var(--md-elevated-button-hover-state-layer-opacity, 0.08);--_label-text-color: var(--md-elevated-button-label-text-color, var(--md-sys-color-primary, #6750a4));--_label-text-font: var(--md-elevated-button-label-text-font, var(--md-sys-typescale-label-large-font, var(--md-ref-typeface-plain, Roboto)));--_label-text-line-height: var(--md-elevated-button-label-text-line-height, var(--md-sys-typescale-label-large-line-height, 1.25rem));--_label-text-size: var(--md-elevated-button-label-text-size, var(--md-sys-typescale-label-large-size, 0.875rem));--_label-text-weight: var(--md-elevated-button-label-text-weight, var(--md-sys-typescale-label-large-weight, var(--md-ref-typeface-weight-medium, 500)));--_pressed-container-elevation: var(--md-elevated-button-pressed-container-elevation, 1);--_pressed-label-text-color: var(--md-elevated-button-pressed-label-text-color, var(--md-sys-color-primary, #6750a4));--_pressed-state-layer-color: var(--md-elevated-button-pressed-state-layer-color, var(--md-sys-color-primary, #6750a4));--_pressed-state-layer-opacity: var(--md-elevated-button-pressed-state-layer-opacity, 0.12);--_disabled-icon-color: var(--md-elevated-button-disabled-icon-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-icon-opacity: var(--md-elevated-button-disabled-icon-opacity, 0.38);--_focus-icon-color: var(--md-elevated-button-focus-icon-color, var(--md-sys-color-primary, #6750a4));--_hover-icon-color: var(--md-elevated-button-hover-icon-color, var(--md-sys-color-primary, #6750a4));--_icon-color: var(--md-elevated-button-icon-color, var(--md-sys-color-primary, #6750a4));--_icon-size: var(--md-elevated-button-icon-size, 18px);--_pressed-icon-color: var(--md-elevated-button-pressed-icon-color, var(--md-sys-color-primary, #6750a4));--_container-shape-start-start: var(--md-elevated-button-container-shape-start-start, var(--md-elevated-button-container-shape, var(--md-sys-shape-corner-full, 9999px)));--_container-shape-start-end: var(--md-elevated-button-container-shape-start-end, var(--md-elevated-button-container-shape, var(--md-sys-shape-corner-full, 9999px)));--_container-shape-end-end: var(--md-elevated-button-container-shape-end-end, var(--md-elevated-button-container-shape, var(--md-sys-shape-corner-full, 9999px)));--_container-shape-end-start: var(--md-elevated-button-container-shape-end-start, var(--md-elevated-button-container-shape, var(--md-sys-shape-corner-full, 9999px)));--_leading-space: var(--md-elevated-button-leading-space, 24px);--_trailing-space: var(--md-elevated-button-trailing-space, 24px);--_with-leading-icon-leading-space: var(--md-elevated-button-with-leading-icon-leading-space, 16px);--_with-leading-icon-trailing-space: var(--md-elevated-button-with-leading-icon-trailing-space, 24px);--_with-trailing-icon-leading-space: var(--md-elevated-button-with-trailing-icon-leading-space, 24px);--_with-trailing-icon-trailing-space: var(--md-elevated-button-with-trailing-icon-trailing-space, 16px)}\n`;\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./button/internal/shared-elevation-styles.css.\nimport {css} from 'lit';\nexport const styles = css`md-elevation{transition-duration:280ms}:host([disabled]) md-elevation{transition:none}md-elevation{--md-elevation-level: var(--_container-elevation);--md-elevation-shadow-color: var(--_container-shadow-color)}:host(:focus-within) md-elevation{--md-elevation-level: var(--_focus-container-elevation)}:host(:hover) md-elevation{--md-elevation-level: var(--_hover-container-elevation)}:host(:active) md-elevation{--md-elevation-level: var(--_pressed-container-elevation)}:host([disabled]) md-elevation{--md-elevation-level: var(--_disabled-container-elevation)}\n`;\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./button/internal/shared-styles.css.\nimport {css} from 'lit';\nexport const styles = css`:host{border-start-start-radius:var(--_container-shape-start-start);border-start-end-radius:var(--_container-shape-start-end);border-end-start-radius:var(--_container-shape-end-start);border-end-end-radius:var(--_container-shape-end-end);box-sizing:border-box;cursor:pointer;display:inline-flex;gap:8px;min-height:var(--_container-height);outline:none;padding-block:calc((var(--_container-height) - max(var(--_label-text-line-height),var(--_icon-size)))/2);padding-inline-start:var(--_leading-space);padding-inline-end:var(--_trailing-space);place-content:center;place-items:center;position:relative;font-family:var(--_label-text-font);font-size:var(--_label-text-size);line-height:var(--_label-text-line-height);font-weight:var(--_label-text-weight);text-overflow:ellipsis;text-wrap:nowrap;user-select:none;-webkit-tap-highlight-color:rgba(0,0,0,0);vertical-align:top;--md-ripple-hover-color: var(--_hover-state-layer-color);--md-ripple-pressed-color: var(--_pressed-state-layer-color);--md-ripple-hover-opacity: var(--_hover-state-layer-opacity);--md-ripple-pressed-opacity: var(--_pressed-state-layer-opacity)}md-focus-ring{--md-focus-ring-shape-start-start: var(--_container-shape-start-start);--md-focus-ring-shape-start-end: var(--_container-shape-start-end);--md-focus-ring-shape-end-end: var(--_container-shape-end-end);--md-focus-ring-shape-end-start: var(--_container-shape-end-start)}:host([disabled]){cursor:default;pointer-events:none}.button{border-radius:inherit;cursor:inherit;display:inline-flex;align-items:center;justify-content:center;border:none;outline:none;-webkit-appearance:none;vertical-align:middle;background:rgba(0,0,0,0);text-decoration:none;min-width:calc(64px - var(--_leading-space) - var(--_trailing-space));width:100%;z-index:0;height:100%;font:inherit;color:var(--_label-text-color);padding:0;gap:inherit;text-transform:inherit}.button::-moz-focus-inner{padding:0;border:0}:host(:hover) .button{color:var(--_hover-label-text-color)}:host(:focus-within) .button{color:var(--_focus-label-text-color)}:host(:active) .button{color:var(--_pressed-label-text-color)}.background{background-color:var(--_container-color);border-radius:inherit;inset:0;position:absolute}.label{overflow:hidden}:is(.button,.label,.label slot),.label ::slotted(*){text-overflow:inherit}:host([disabled]) .label{color:var(--_disabled-label-text-color);opacity:var(--_disabled-label-text-opacity)}:host([disabled]) .background{background-color:var(--_disabled-container-color);opacity:var(--_disabled-container-opacity)}@media(forced-colors: active){.background{border:1px solid CanvasText}:host([disabled]){--_disabled-icon-color: GrayText;--_disabled-icon-opacity: 1;--_disabled-container-opacity: 1;--_disabled-label-text-color: GrayText;--_disabled-label-text-opacity: 1}}:host([has-icon]:not([trailing-icon])){padding-inline-start:var(--_with-leading-icon-leading-space);padding-inline-end:var(--_with-leading-icon-trailing-space)}:host([has-icon][trailing-icon]){padding-inline-start:var(--_with-trailing-icon-leading-space);padding-inline-end:var(--_with-trailing-icon-trailing-space)}::slotted([slot=icon]){display:inline-flex;position:relative;writing-mode:horizontal-tb;fill:currentColor;flex-shrink:0;color:var(--_icon-color);font-size:var(--_icon-size);inline-size:var(--_icon-size);block-size:var(--_icon-size)}:host(:hover) ::slotted([slot=icon]){color:var(--_hover-icon-color)}:host(:focus-within) ::slotted([slot=icon]){color:var(--_focus-icon-color)}:host(:active) ::slotted([slot=icon]){color:var(--_pressed-icon-color)}:host([disabled]) ::slotted([slot=icon]){color:var(--_disabled-icon-color);opacity:var(--_disabled-icon-opacity)}.touch{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%)}:host([touch-target=wrapper]){margin:max(0px,(48px - var(--_container-height))/2) 0}:host([touch-target=none]) .touch{display:none}\n`;\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {CSSResultOrNative} from 'lit';\nimport {customElement} from 'lit/decorators.js';\n\nimport {ElevatedButton} from './internal/elevated-button.js';\nimport {styles as elevatedStyles} from './internal/elevated-styles.js';\nimport {styles as sharedElevationStyles} from './internal/shared-elevation-styles.js';\nimport {styles as sharedStyles} from './internal/shared-styles.js';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'md-elevated-button': MdElevatedButton;\n  }\n}\n\n/**\n * @summary Buttons help people take action, such as sending an email, sharing a\n * document, or liking a comment.\n *\n * @description\n * __Emphasis:__ Medium emphasis – For important actions that don’t distract\n * from other onscreen elements.\n *\n * __Rationale:__ Elevated buttons are essentially filled buttons with a lighter\n * background color and a shadow. To prevent shadow creep, only use them when\n * absolutely necessary, such as when the button requires visual separation from\n * a patterned background.\n *\n * __Example usages:__\n * - Reply\n * - View all\n * - Add to cart\n * - Take out of trash\n *\n * @final\n * @suppress {visibility}\n */\n@customElement('md-elevated-button')\nexport class MdElevatedButton extends ElevatedButton {\n  static override styles: CSSResultOrNative[] = [\n    sharedStyles,\n    sharedElevationStyles,\n    elevatedStyles,\n  ];\n}\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport '../../elevation/elevation.js';\n\nimport {html} from 'lit';\n\nimport {Button} from './button.js';\n\n/**\n * A filled button component.\n */\nexport class FilledButton extends Button {\n  protected override renderElevationOrOutline() {\n    return html`<md-elevation part=\"elevation\"></md-elevation>`;\n  }\n}\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./button/internal/filled-styles.css.\nimport {css} from 'lit';\nexport const styles = css`:host{--_container-color: var(--md-filled-button-container-color, var(--md-sys-color-primary, #6750a4));--_container-elevation: var(--md-filled-button-container-elevation, 0);--_container-height: var(--md-filled-button-container-height, 40px);--_container-shadow-color: var(--md-filled-button-container-shadow-color, var(--md-sys-color-shadow, #000));--_disabled-container-color: var(--md-filled-button-disabled-container-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-container-elevation: var(--md-filled-button-disabled-container-elevation, 0);--_disabled-container-opacity: var(--md-filled-button-disabled-container-opacity, 0.12);--_disabled-label-text-color: var(--md-filled-button-disabled-label-text-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-label-text-opacity: var(--md-filled-button-disabled-label-text-opacity, 0.38);--_focus-container-elevation: var(--md-filled-button-focus-container-elevation, 0);--_focus-label-text-color: var(--md-filled-button-focus-label-text-color, var(--md-sys-color-on-primary, #fff));--_hover-container-elevation: var(--md-filled-button-hover-container-elevation, 1);--_hover-label-text-color: var(--md-filled-button-hover-label-text-color, var(--md-sys-color-on-primary, #fff));--_hover-state-layer-color: var(--md-filled-button-hover-state-layer-color, var(--md-sys-color-on-primary, #fff));--_hover-state-layer-opacity: var(--md-filled-button-hover-state-layer-opacity, 0.08);--_label-text-color: var(--md-filled-button-label-text-color, var(--md-sys-color-on-primary, #fff));--_label-text-font: var(--md-filled-button-label-text-font, var(--md-sys-typescale-label-large-font, var(--md-ref-typeface-plain, Roboto)));--_label-text-line-height: var(--md-filled-button-label-text-line-height, var(--md-sys-typescale-label-large-line-height, 1.25rem));--_label-text-size: var(--md-filled-button-label-text-size, var(--md-sys-typescale-label-large-size, 0.875rem));--_label-text-weight: var(--md-filled-button-label-text-weight, var(--md-sys-typescale-label-large-weight, var(--md-ref-typeface-weight-medium, 500)));--_pressed-container-elevation: var(--md-filled-button-pressed-container-elevation, 0);--_pressed-label-text-color: var(--md-filled-button-pressed-label-text-color, var(--md-sys-color-on-primary, #fff));--_pressed-state-layer-color: var(--md-filled-button-pressed-state-layer-color, var(--md-sys-color-on-primary, #fff));--_pressed-state-layer-opacity: var(--md-filled-button-pressed-state-layer-opacity, 0.12);--_disabled-icon-color: var(--md-filled-button-disabled-icon-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-icon-opacity: var(--md-filled-button-disabled-icon-opacity, 0.38);--_focus-icon-color: var(--md-filled-button-focus-icon-color, var(--md-sys-color-on-primary, #fff));--_hover-icon-color: var(--md-filled-button-hover-icon-color, var(--md-sys-color-on-primary, #fff));--_icon-color: var(--md-filled-button-icon-color, var(--md-sys-color-on-primary, #fff));--_icon-size: var(--md-filled-button-icon-size, 18px);--_pressed-icon-color: var(--md-filled-button-pressed-icon-color, var(--md-sys-color-on-primary, #fff));--_container-shape-start-start: var(--md-filled-button-container-shape-start-start, var(--md-filled-button-container-shape, var(--md-sys-shape-corner-full, 9999px)));--_container-shape-start-end: var(--md-filled-button-container-shape-start-end, var(--md-filled-button-container-shape, var(--md-sys-shape-corner-full, 9999px)));--_container-shape-end-end: var(--md-filled-button-container-shape-end-end, var(--md-filled-button-container-shape, var(--md-sys-shape-corner-full, 9999px)));--_container-shape-end-start: var(--md-filled-button-container-shape-end-start, var(--md-filled-button-container-shape, var(--md-sys-shape-corner-full, 9999px)));--_leading-space: var(--md-filled-button-leading-space, 24px);--_trailing-space: var(--md-filled-button-trailing-space, 24px);--_with-leading-icon-leading-space: var(--md-filled-button-with-leading-icon-leading-space, 16px);--_with-leading-icon-trailing-space: var(--md-filled-button-with-leading-icon-trailing-space, 24px);--_with-trailing-icon-leading-space: var(--md-filled-button-with-trailing-icon-leading-space, 24px);--_with-trailing-icon-trailing-space: var(--md-filled-button-with-trailing-icon-trailing-space, 16px)}\n`;\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {CSSResultOrNative} from 'lit';\nimport {customElement} from 'lit/decorators.js';\n\nimport {FilledButton} from './internal/filled-button.js';\nimport {styles as filledStyles} from './internal/filled-styles.js';\nimport {styles as sharedElevationStyles} from './internal/shared-elevation-styles.js';\nimport {styles as sharedStyles} from './internal/shared-styles.js';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'md-filled-button': MdFilledButton;\n  }\n}\n\n/**\n * @summary Buttons help people take action, such as sending an email, sharing a\n * document, or liking a comment.\n *\n * @description\n * __Emphasis:__ High emphasis – For the primary, most important, or most common\n * action on a screen\n *\n * __Rationale:__ The filled button’s contrasting surface color makes it the\n * most prominent button after the FAB. It’s used for final or unblocking\n * actions in a flow.\n *\n * __Example usages:__\n * - Save\n * - Confirm\n * - Done\n *\n * @final\n * @suppress {visibility}\n */\n@customElement('md-filled-button')\nexport class MdFilledButton extends FilledButton {\n  static override styles: CSSResultOrNative[] = [\n    sharedStyles,\n    sharedElevationStyles,\n    filledStyles,\n  ];\n}\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport '../../elevation/elevation.js';\n\nimport {html} from 'lit';\n\nimport {Button} from './button.js';\n\n/**\n * A filled tonal button component.\n */\nexport class FilledTonalButton extends Button {\n  protected override renderElevationOrOutline() {\n    return html`<md-elevation part=\"elevation\"></md-elevation>`;\n  }\n}\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./button/internal/filled-tonal-styles.css.\nimport {css} from 'lit';\nexport const styles = css`:host{--_container-color: var(--md-filled-tonal-button-container-color, var(--md-sys-color-secondary-container, #e8def8));--_container-elevation: var(--md-filled-tonal-button-container-elevation, 0);--_container-height: var(--md-filled-tonal-button-container-height, 40px);--_container-shadow-color: var(--md-filled-tonal-button-container-shadow-color, var(--md-sys-color-shadow, #000));--_disabled-container-color: var(--md-filled-tonal-button-disabled-container-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-container-elevation: var(--md-filled-tonal-button-disabled-container-elevation, 0);--_disabled-container-opacity: var(--md-filled-tonal-button-disabled-container-opacity, 0.12);--_disabled-label-text-color: var(--md-filled-tonal-button-disabled-label-text-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-label-text-opacity: var(--md-filled-tonal-button-disabled-label-text-opacity, 0.38);--_focus-container-elevation: var(--md-filled-tonal-button-focus-container-elevation, 0);--_focus-label-text-color: var(--md-filled-tonal-button-focus-label-text-color, var(--md-sys-color-on-secondary-container, #1d192b));--_hover-container-elevation: var(--md-filled-tonal-button-hover-container-elevation, 1);--_hover-label-text-color: var(--md-filled-tonal-button-hover-label-text-color, var(--md-sys-color-on-secondary-container, #1d192b));--_hover-state-layer-color: var(--md-filled-tonal-button-hover-state-layer-color, var(--md-sys-color-on-secondary-container, #1d192b));--_hover-state-layer-opacity: var(--md-filled-tonal-button-hover-state-layer-opacity, 0.08);--_label-text-color: var(--md-filled-tonal-button-label-text-color, var(--md-sys-color-on-secondary-container, #1d192b));--_label-text-font: var(--md-filled-tonal-button-label-text-font, var(--md-sys-typescale-label-large-font, var(--md-ref-typeface-plain, Roboto)));--_label-text-line-height: var(--md-filled-tonal-button-label-text-line-height, var(--md-sys-typescale-label-large-line-height, 1.25rem));--_label-text-size: var(--md-filled-tonal-button-label-text-size, var(--md-sys-typescale-label-large-size, 0.875rem));--_label-text-weight: var(--md-filled-tonal-button-label-text-weight, var(--md-sys-typescale-label-large-weight, var(--md-ref-typeface-weight-medium, 500)));--_pressed-container-elevation: var(--md-filled-tonal-button-pressed-container-elevation, 0);--_pressed-label-text-color: var(--md-filled-tonal-button-pressed-label-text-color, var(--md-sys-color-on-secondary-container, #1d192b));--_pressed-state-layer-color: var(--md-filled-tonal-button-pressed-state-layer-color, var(--md-sys-color-on-secondary-container, #1d192b));--_pressed-state-layer-opacity: var(--md-filled-tonal-button-pressed-state-layer-opacity, 0.12);--_disabled-icon-color: var(--md-filled-tonal-button-disabled-icon-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-icon-opacity: var(--md-filled-tonal-button-disabled-icon-opacity, 0.38);--_focus-icon-color: var(--md-filled-tonal-button-focus-icon-color, var(--md-sys-color-on-secondary-container, #1d192b));--_hover-icon-color: var(--md-filled-tonal-button-hover-icon-color, var(--md-sys-color-on-secondary-container, #1d192b));--_icon-color: var(--md-filled-tonal-button-icon-color, var(--md-sys-color-on-secondary-container, #1d192b));--_icon-size: var(--md-filled-tonal-button-icon-size, 18px);--_pressed-icon-color: var(--md-filled-tonal-button-pressed-icon-color, var(--md-sys-color-on-secondary-container, #1d192b));--_container-shape-start-start: var(--md-filled-tonal-button-container-shape-start-start, var(--md-filled-tonal-button-container-shape, var(--md-sys-shape-corner-full, 9999px)));--_container-shape-start-end: var(--md-filled-tonal-button-container-shape-start-end, var(--md-filled-tonal-button-container-shape, var(--md-sys-shape-corner-full, 9999px)));--_container-shape-end-end: var(--md-filled-tonal-button-container-shape-end-end, var(--md-filled-tonal-button-container-shape, var(--md-sys-shape-corner-full, 9999px)));--_container-shape-end-start: var(--md-filled-tonal-button-container-shape-end-start, var(--md-filled-tonal-button-container-shape, var(--md-sys-shape-corner-full, 9999px)));--_leading-space: var(--md-filled-tonal-button-leading-space, 24px);--_trailing-space: var(--md-filled-tonal-button-trailing-space, 24px);--_with-leading-icon-leading-space: var(--md-filled-tonal-button-with-leading-icon-leading-space, 16px);--_with-leading-icon-trailing-space: var(--md-filled-tonal-button-with-leading-icon-trailing-space, 24px);--_with-trailing-icon-leading-space: var(--md-filled-tonal-button-with-trailing-icon-leading-space, 24px);--_with-trailing-icon-trailing-space: var(--md-filled-tonal-button-with-trailing-icon-trailing-space, 16px)}\n`;\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {CSSResultOrNative} from 'lit';\nimport {customElement} from 'lit/decorators.js';\n\nimport {FilledTonalButton} from './internal/filled-tonal-button.js';\nimport {styles as tonalStyles} from './internal/filled-tonal-styles.js';\nimport {styles as sharedElevationStyles} from './internal/shared-elevation-styles.js';\nimport {styles as sharedStyles} from './internal/shared-styles.js';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'md-filled-tonal-button': MdFilledTonalButton;\n  }\n}\n\n/**\n * @summary Buttons help people take action, such as sending an email, sharing a\n * document, or liking a comment.\n *\n * @description\n * __Emphasis:__ Medium emphasis – For important actions that don’t distract\n * from other onscreen elements.\n *\n * __Rationale:__ Filled tonal buttons have a lighter background color and\n * darker label color, making them less visually prominent than a regular,\n * filled button. They’re still used for final or unblocking actions in a flow,\n * but do so with less emphasis.\n *\n * __Example usages:__\n * - Save\n * - Confirm\n * - Done\n *\n * @final\n * @suppress {visibility}\n */\n@customElement('md-filled-tonal-button')\nexport class MdFilledTonalButton extends FilledTonalButton {\n  static override styles: CSSResultOrNative[] = [\n    sharedStyles,\n    sharedElevationStyles,\n    tonalStyles,\n  ];\n}\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {html} from 'lit';\n\nimport {Button} from './button.js';\n\n/**\n * An outlined button component.\n */\nexport class OutlinedButton extends Button {\n  protected override renderElevationOrOutline() {\n    return html`<div class=\"outline\"></div>`;\n  }\n}\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./button/internal/outlined-styles.css.\nimport {css} from 'lit';\nexport const styles = css`:host{--_container-height: var(--md-outlined-button-container-height, 40px);--_disabled-label-text-color: var(--md-outlined-button-disabled-label-text-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-label-text-opacity: var(--md-outlined-button-disabled-label-text-opacity, 0.38);--_disabled-outline-color: var(--md-outlined-button-disabled-outline-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-outline-opacity: var(--md-outlined-button-disabled-outline-opacity, 0.12);--_focus-label-text-color: var(--md-outlined-button-focus-label-text-color, var(--md-sys-color-primary, #6750a4));--_hover-label-text-color: var(--md-outlined-button-hover-label-text-color, var(--md-sys-color-primary, #6750a4));--_hover-state-layer-color: var(--md-outlined-button-hover-state-layer-color, var(--md-sys-color-primary, #6750a4));--_hover-state-layer-opacity: var(--md-outlined-button-hover-state-layer-opacity, 0.08);--_label-text-color: var(--md-outlined-button-label-text-color, var(--md-sys-color-primary, #6750a4));--_label-text-font: var(--md-outlined-button-label-text-font, var(--md-sys-typescale-label-large-font, var(--md-ref-typeface-plain, Roboto)));--_label-text-line-height: var(--md-outlined-button-label-text-line-height, var(--md-sys-typescale-label-large-line-height, 1.25rem));--_label-text-size: var(--md-outlined-button-label-text-size, var(--md-sys-typescale-label-large-size, 0.875rem));--_label-text-weight: var(--md-outlined-button-label-text-weight, var(--md-sys-typescale-label-large-weight, var(--md-ref-typeface-weight-medium, 500)));--_outline-color: var(--md-outlined-button-outline-color, var(--md-sys-color-outline, #79747e));--_outline-width: var(--md-outlined-button-outline-width, 1px);--_pressed-label-text-color: var(--md-outlined-button-pressed-label-text-color, var(--md-sys-color-primary, #6750a4));--_pressed-outline-color: var(--md-outlined-button-pressed-outline-color, var(--md-sys-color-outline, #79747e));--_pressed-state-layer-color: var(--md-outlined-button-pressed-state-layer-color, var(--md-sys-color-primary, #6750a4));--_pressed-state-layer-opacity: var(--md-outlined-button-pressed-state-layer-opacity, 0.12);--_disabled-icon-color: var(--md-outlined-button-disabled-icon-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-icon-opacity: var(--md-outlined-button-disabled-icon-opacity, 0.38);--_focus-icon-color: var(--md-outlined-button-focus-icon-color, var(--md-sys-color-primary, #6750a4));--_hover-icon-color: var(--md-outlined-button-hover-icon-color, var(--md-sys-color-primary, #6750a4));--_icon-color: var(--md-outlined-button-icon-color, var(--md-sys-color-primary, #6750a4));--_icon-size: var(--md-outlined-button-icon-size, 18px);--_pressed-icon-color: var(--md-outlined-button-pressed-icon-color, var(--md-sys-color-primary, #6750a4));--_container-shape-start-start: var(--md-outlined-button-container-shape-start-start, var(--md-outlined-button-container-shape, var(--md-sys-shape-corner-full, 9999px)));--_container-shape-start-end: var(--md-outlined-button-container-shape-start-end, var(--md-outlined-button-container-shape, var(--md-sys-shape-corner-full, 9999px)));--_container-shape-end-end: var(--md-outlined-button-container-shape-end-end, var(--md-outlined-button-container-shape, var(--md-sys-shape-corner-full, 9999px)));--_container-shape-end-start: var(--md-outlined-button-container-shape-end-start, var(--md-outlined-button-container-shape, var(--md-sys-shape-corner-full, 9999px)));--_leading-space: var(--md-outlined-button-leading-space, 24px);--_trailing-space: var(--md-outlined-button-trailing-space, 24px);--_with-leading-icon-leading-space: var(--md-outlined-button-with-leading-icon-leading-space, 16px);--_with-leading-icon-trailing-space: var(--md-outlined-button-with-leading-icon-trailing-space, 24px);--_with-trailing-icon-leading-space: var(--md-outlined-button-with-trailing-icon-leading-space, 24px);--_with-trailing-icon-trailing-space: var(--md-outlined-button-with-trailing-icon-trailing-space, 16px);--_container-color: none;--_disabled-container-color: none;--_disabled-container-opacity: 0}.outline{inset:0;border-style:solid;position:absolute;box-sizing:border-box;border-color:var(--_outline-color);border-start-start-radius:var(--_container-shape-start-start);border-start-end-radius:var(--_container-shape-start-end);border-end-start-radius:var(--_container-shape-end-start);border-end-end-radius:var(--_container-shape-end-end)}:host(:active) .outline{border-color:var(--_pressed-outline-color)}:host([disabled]) .outline{border-color:var(--_disabled-outline-color);opacity:var(--_disabled-outline-opacity)}@media(forced-colors: active){:host([disabled]) .background{border-color:GrayText}:host([disabled]) .outline{opacity:1}}.outline,md-ripple{border-width:var(--_outline-width)}md-ripple{inline-size:calc(100% - 2*var(--_outline-width));block-size:calc(100% - 2*var(--_outline-width));border-style:solid;border-color:rgba(0,0,0,0)}\n`;\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {CSSResultOrNative} from 'lit';\nimport {customElement} from 'lit/decorators.js';\n\nimport {OutlinedButton} from './internal/outlined-button.js';\nimport {styles as outlinedStyles} from './internal/outlined-styles.js';\nimport {styles as sharedStyles} from './internal/shared-styles.js';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'md-outlined-button': MdOutlinedButton;\n  }\n}\n\n/**\n * @summary Buttons help people take action, such as sending an email, sharing a\n * document, or liking a comment.\n *\n * @description\n * __Emphasis:__ Medium emphasis – For important actions that don’t distract\n * from other onscreen elements.\n *\n * __Rationale:__ Use an outlined button for actions that need attention but\n * aren’t the primary action, such as “See all” or “Add to cart.” This is also\n * the button to use for giving someone the opportunity to change their mind or\n * escape a flow.\n *\n * __Example usages:__\n * - Reply\n * - View all\n * - Add to cart\n * - Take out of trash\n *\n * @final\n * @suppress {visibility}\n */\n@customElement('md-outlined-button')\nexport class MdOutlinedButton extends OutlinedButton {\n  static override styles: CSSResultOrNative[] = [sharedStyles, outlinedStyles];\n}\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {Button} from './button.js';\n\n/**\n * A text button component.\n */\nexport class TextButton extends Button {}\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./button/internal/text-styles.css.\nimport {css} from 'lit';\nexport const styles = css`:host{--_container-height: var(--md-text-button-container-height, 40px);--_disabled-label-text-color: var(--md-text-button-disabled-label-text-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-label-text-opacity: var(--md-text-button-disabled-label-text-opacity, 0.38);--_focus-label-text-color: var(--md-text-button-focus-label-text-color, var(--md-sys-color-primary, #6750a4));--_hover-label-text-color: var(--md-text-button-hover-label-text-color, var(--md-sys-color-primary, #6750a4));--_hover-state-layer-color: var(--md-text-button-hover-state-layer-color, var(--md-sys-color-primary, #6750a4));--_hover-state-layer-opacity: var(--md-text-button-hover-state-layer-opacity, 0.08);--_label-text-color: var(--md-text-button-label-text-color, var(--md-sys-color-primary, #6750a4));--_label-text-font: var(--md-text-button-label-text-font, var(--md-sys-typescale-label-large-font, var(--md-ref-typeface-plain, Roboto)));--_label-text-line-height: var(--md-text-button-label-text-line-height, var(--md-sys-typescale-label-large-line-height, 1.25rem));--_label-text-size: var(--md-text-button-label-text-size, var(--md-sys-typescale-label-large-size, 0.875rem));--_label-text-weight: var(--md-text-button-label-text-weight, var(--md-sys-typescale-label-large-weight, var(--md-ref-typeface-weight-medium, 500)));--_pressed-label-text-color: var(--md-text-button-pressed-label-text-color, var(--md-sys-color-primary, #6750a4));--_pressed-state-layer-color: var(--md-text-button-pressed-state-layer-color, var(--md-sys-color-primary, #6750a4));--_pressed-state-layer-opacity: var(--md-text-button-pressed-state-layer-opacity, 0.12);--_disabled-icon-color: var(--md-text-button-disabled-icon-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-icon-opacity: var(--md-text-button-disabled-icon-opacity, 0.38);--_focus-icon-color: var(--md-text-button-focus-icon-color, var(--md-sys-color-primary, #6750a4));--_hover-icon-color: var(--md-text-button-hover-icon-color, var(--md-sys-color-primary, #6750a4));--_icon-color: var(--md-text-button-icon-color, var(--md-sys-color-primary, #6750a4));--_icon-size: var(--md-text-button-icon-size, 18px);--_pressed-icon-color: var(--md-text-button-pressed-icon-color, var(--md-sys-color-primary, #6750a4));--_container-shape-start-start: var(--md-text-button-container-shape-start-start, var(--md-text-button-container-shape, var(--md-sys-shape-corner-full, 9999px)));--_container-shape-start-end: var(--md-text-button-container-shape-start-end, var(--md-text-button-container-shape, var(--md-sys-shape-corner-full, 9999px)));--_container-shape-end-end: var(--md-text-button-container-shape-end-end, var(--md-text-button-container-shape, var(--md-sys-shape-corner-full, 9999px)));--_container-shape-end-start: var(--md-text-button-container-shape-end-start, var(--md-text-button-container-shape, var(--md-sys-shape-corner-full, 9999px)));--_leading-space: var(--md-text-button-leading-space, 12px);--_trailing-space: var(--md-text-button-trailing-space, 12px);--_with-leading-icon-leading-space: var(--md-text-button-with-leading-icon-leading-space, 12px);--_with-leading-icon-trailing-space: var(--md-text-button-with-leading-icon-trailing-space, 16px);--_with-trailing-icon-leading-space: var(--md-text-button-with-trailing-icon-leading-space, 16px);--_with-trailing-icon-trailing-space: var(--md-text-button-with-trailing-icon-trailing-space, 12px);--_container-color: none;--_disabled-container-color: none;--_disabled-container-opacity: 0}\n`;\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {CSSResultOrNative} from 'lit';\nimport {customElement} from 'lit/decorators.js';\n\nimport {styles as sharedStyles} from './internal/shared-styles.js';\nimport {TextButton} from './internal/text-button.js';\nimport {styles as textStyles} from './internal/text-styles.js';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'md-text-button': MdTextButton;\n  }\n}\n\n/**\n * @summary Buttons help people take action, such as sending an email, sharing a\n * document, or liking a comment.\n *\n * @description\n * __Emphasis:__ Low emphasis – For optional or supplementary actions with the\n * least amount of prominence\n *\n * __Rationale:__ Text buttons have less visual prominence, so should be used\n * for low emphasis actions, such as an alternative option.\n *\n * __Example usages:__\n * - Learn more\n * - View all\n * - Change account\n * - Turn on\n *\n * @final\n * @suppress {visibility}\n */\n@customElement('md-text-button')\nexport class MdTextButton extends TextButton {\n  static override styles: CSSResultOrNative[] = [sharedStyles, textStyles];\n}\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Re-dispatches an event from the provided element.\n *\n * This function is useful for forwarding non-composed events, such as `change`\n * events.\n *\n * @example\n * class MyInput extends LitElement {\n *   render() {\n *     return html`<input @change=${this.redispatchEvent}>`;\n *   }\n *\n *   protected redispatchEvent(event: Event) {\n *     redispatchEvent(this, event);\n *   }\n * }\n *\n * @param element The element to dispatch the event from.\n * @param event The event to re-dispatch.\n * @return Whether or not the event was dispatched (if cancelable).\n */\nexport function redispatchEvent(element: Element, event: Event) {\n  // For bubbling events in SSR light DOM (or composed), stop their propagation\n  // and dispatch the copy.\n  if (event.bubbles && (!element.shadowRoot || event.composed)) {\n    event.stopPropagation();\n  }\n\n  const copy = Reflect.construct(event.constructor, [event.type, event]);\n  const dispatched = element.dispatchEvent(copy);\n  if (!dispatched) {\n    event.preventDefault();\n  }\n\n  return dispatched;\n}\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {isServer, LitElement, PropertyDeclaration, PropertyValues} from 'lit';\n\nimport {internals, WithElementInternals} from './element-internals.js';\nimport {FormAssociated} from './form-associated.js';\nimport {MixinBase, MixinReturn} from './mixin.js';\nimport {Validator} from './validators/validator.js';\n\n/**\n * A form associated element that provides constraint validation APIs.\n *\n * https://developer.mozilla.org/en-US/docs/Web/HTML/Constraint_validation\n */\nexport interface ConstraintValidation extends FormAssociated {\n  /**\n   * Returns a ValidityState object that represents the validity states of the\n   * element.\n   *\n   * https://developer.mozilla.org/en-US/docs/Web/API/ValidityState\n   */\n  readonly validity: ValidityState;\n\n  /**\n   * Returns a validation error message or an empty string if the element is\n   * valid.\n   *\n   * https://developer.mozilla.org/en-US/docs/Web/API/ElementInternals/validationMessage\n   */\n  readonly validationMessage: string;\n\n  /**\n   * Returns whether an element will successfully validate based on forms\n   * validation rules and constraints.\n   *\n   * Disabled and readonly elements will not validate.\n   *\n   * https://developer.mozilla.org/en-US/docs/Web/API/ElementInternals/willValidate\n   */\n  readonly willValidate: boolean;\n\n  /**\n   * Checks the element's constraint validation and returns true if the element\n   * is valid or false if not.\n   *\n   * If invalid, this method will dispatch an `invalid` event.\n   *\n   * https://developer.mozilla.org/en-US/docs/Web/API/ElementInternals/checkValidity\n   *\n   * @return true if the element is valid, or false if not.\n   */\n  checkValidity(): boolean;\n\n  /**\n   * Checks the element's constraint validation and returns true if the element\n   * is valid or false if not.\n   *\n   * If invalid, this method will dispatch a cancelable `invalid` event. If not\n   * canceled, a the current `validationMessage` will be reported to the user.\n   *\n   * https://developer.mozilla.org/en-US/docs/Web/API/ElementInternals/reportValidity\n   *\n   * @return true if the element is valid, or false if not.\n   */\n  reportValidity(): boolean;\n\n  /**\n   * Sets the element's constraint validation error message. When set to a\n   * non-empty string, `validity.customError` will be true and\n   * `validationMessage` will display the provided error.\n   *\n   * Use this method to customize error messages reported.\n   *\n   * https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/setCustomValidity\n   *\n   * @param error The error message to display, or an empty string.\n   */\n  setCustomValidity(error: string): void;\n\n  /**\n   * Creates and returns a `Validator` that is used to compute and cache\n   * validity for the element.\n   *\n   * A validator that caches validity is important since constraint validation\n   * must be computed synchronously and frequently in response to constraint\n   * validation property changes.\n   */\n  [createValidator](): Validator<unknown>;\n\n  /**\n   * Returns shadow DOM child that is used as the anchor for the platform\n   * `reportValidity()` popup. This is often the root element or the inner\n   * focus-delegated element.\n   */\n  [getValidityAnchor](): HTMLElement | null;\n}\n\n/**\n * A symbol property used to create a constraint validation `Validator`.\n * Required for all `mixinConstraintValidation()` elements.\n */\nexport const createValidator = Symbol('createValidator');\n\n/**\n * A symbol property used to return an anchor for constraint validation popups.\n * Required for all `mixinConstraintValidation()` elements.\n */\nexport const getValidityAnchor = Symbol('getValidityAnchor');\n\n// Private symbol members, used to avoid name clashing.\nconst privateValidator = Symbol('privateValidator');\nconst privateSyncValidity = Symbol('privateSyncValidity');\nconst privateCustomValidationMessage = Symbol('privateCustomValidationMessage');\n\n/**\n * Mixes in constraint validation APIs for an element.\n *\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/Constraint_validation\n * for more details.\n *\n * Implementations must provide a validator to cache and compute its validity,\n * along with a shadow root element to anchor validation popups to.\n *\n * @example\n * ```ts\n * const baseClass = mixinConstraintValidation(\n *   mixinFormAssociated(mixinElementInternals(LitElement))\n * );\n *\n * class MyCheckbox extends baseClass {\n *   \\@property({type: Boolean}) checked = false;\n *   \\@property({type: Boolean}) required = false;\n *\n *   [createValidator]() {\n *     return new CheckboxValidator(() => this);\n *   }\n *\n *   [getValidityAnchor]() {\n *     return this.renderRoot.querySelector('.root');\n *   }\n * }\n * ```\n *\n * @param base The class to mix functionality into.\n * @return The provided class with `ConstraintValidation` mixed in.\n */\nexport function mixinConstraintValidation<\n  T extends MixinBase<LitElement & FormAssociated & WithElementInternals>,\n>(base: T): MixinReturn<T, ConstraintValidation> {\n  abstract class ConstraintValidationElement\n    extends base\n    implements ConstraintValidation\n  {\n    get validity() {\n      this[privateSyncValidity]();\n      return this[internals].validity;\n    }\n\n    get validationMessage() {\n      this[privateSyncValidity]();\n      return this[internals].validationMessage;\n    }\n\n    get willValidate() {\n      this[privateSyncValidity]();\n      return this[internals].willValidate;\n    }\n\n    /**\n     * A validator instance created from `[createValidator]()`.\n     */\n    [privateValidator]?: Validator<unknown>;\n\n    /**\n     * Needed for Safari, see https://bugs.webkit.org/show_bug.cgi?id=261432\n     * Replace with this[internals].validity.customError when resolved.\n     */\n    [privateCustomValidationMessage] = '';\n\n    checkValidity() {\n      this[privateSyncValidity]();\n      return this[internals].checkValidity();\n    }\n\n    reportValidity() {\n      this[privateSyncValidity]();\n      return this[internals].reportValidity();\n    }\n\n    setCustomValidity(error: string) {\n      this[privateCustomValidationMessage] = error;\n      this[privateSyncValidity]();\n    }\n\n    override requestUpdate(\n      name?: PropertyKey,\n      oldValue?: unknown,\n      options?: PropertyDeclaration,\n    ) {\n      super.requestUpdate(name, oldValue, options);\n      this[privateSyncValidity]();\n    }\n\n    override firstUpdated(changed: PropertyValues) {\n      super.firstUpdated(changed);\n      // Sync the validity again when the element first renders, since the\n      // validity anchor is now available.\n      //\n      // Elements that `delegatesFocus: true` to an `<input>` will throw an\n      // error in Chrome and Safari when a form tries to submit or call\n      // `form.reportValidity()`:\n      // \"An invalid form control with name='' is not focusable\"\n      //\n      // The validity anchor MUST be provided in `internals.setValidity()` and\n      // MUST be the `<input>` element rendered.\n      //\n      // See https://lit.dev/playground/#gist=6c26e418e0010f7a5aac15005cde8bde\n      // for a reproduction.\n      this[privateSyncValidity]();\n    }\n\n    [privateSyncValidity]() {\n      if (isServer) {\n        return;\n      }\n\n      if (!this[privateValidator]) {\n        this[privateValidator] = this[createValidator]();\n      }\n\n      const {validity, validationMessage: nonCustomValidationMessage} =\n        this[privateValidator].getValidity();\n\n      const customError = !!this[privateCustomValidationMessage];\n      const validationMessage =\n        this[privateCustomValidationMessage] || nonCustomValidationMessage;\n\n      this[internals].setValidity(\n        {...validity, customError},\n        validationMessage,\n        this[getValidityAnchor]() ?? undefined,\n      );\n    }\n\n    [createValidator](): Validator<unknown> {\n      throw new Error('Implement [createValidator]');\n    }\n\n    [getValidityAnchor](): HTMLElement | null {\n      throw new Error('Implement [getValidityAnchor]');\n    }\n  }\n\n  return ConstraintValidationElement;\n}\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {LitElement, PropertyDeclaration} from 'lit';\nimport {property} from 'lit/decorators.js';\n\nimport {internals, WithElementInternals} from './element-internals.js';\nimport {MixinBase, MixinReturn} from './mixin.js';\n\n/**\n * A form-associated element.\n *\n * IMPORTANT: Requires declares for lit-analyzer\n * @example\n * ```ts\n * const base = mixinFormAssociated(mixinElementInternals(LitElement));\n * class MyControl extends base {\n *   // Writable mixin properties for lit-html binding, needed for lit-analyzer\n *   declare disabled: boolean;\n *   declare name: string;\n * }\n * ```\n */\nexport interface FormAssociated {\n  /**\n   * The associated form element with which this element's value will submit.\n   */\n  readonly form: HTMLFormElement | null;\n\n  /**\n   * The labels this element is associated with.\n   */\n  readonly labels: NodeList;\n\n  /**\n   * The HTML name to use in form submission.\n   */\n  name: string;\n\n  /**\n   * Whether or not the element is disabled.\n   */\n  disabled: boolean;\n\n  /**\n   * Gets the current form value of a component.\n   *\n   * @return The current form value.\n   */\n  [getFormValue](): FormValue | null;\n\n  /**\n   * Gets the current form state of a component. Defaults to the component's\n   * `[formValue]`.\n   *\n   * Use this when the state of an element is different from its value, such as\n   * checkboxes (internal boolean state and a user string value).\n   *\n   * @return The current form state, defaults to the form value.\n   */\n  [getFormState](): FormValue | null;\n\n  /**\n   * A callback for when a form component should be disabled or enabled. This\n   * can be called in a variety of situations, such as disabled `<fieldset>`s.\n   *\n   * @param disabled Whether or not the form control should be disabled.\n   */\n  formDisabledCallback(disabled: boolean): void;\n\n  /**\n   * A callback for when the form requests to reset its value. Typically, the\n   * default value that is reset is represented in the attribute of an element.\n   *\n   * This means the attribute used for the value should not update as the value\n   * changes. For example, a checkbox should not change its default `checked`\n   * attribute when selected. Ensure form values do not reflect.\n   */\n  formResetCallback(): void;\n\n  /**\n   * A callback for when the form restores the state of a component. For\n   * example, when a page is reloaded or forms are autofilled.\n   *\n   * @param state The state to restore, or null to reset the form control's\n   *     value.\n   * @param reason The reason state was restored, either `'restore'` or\n   *   `'autocomplete'`.\n   */\n  formStateRestoreCallback(\n    state: FormRestoreState | null,\n    reason: FormRestoreReason,\n  ): void;\n\n  /**\n   * An optional callback for when the associated form changes.\n   *\n   * @param form The new associated form, or `null` if there is none.\n   */\n  formAssociatedCallback?(form: HTMLFormElement | null): void;\n}\n\n/**\n * The constructor of a `FormAssociated` element.\n */\nexport interface FormAssociatedConstructor {\n  /**\n   * Indicates that an element is participating in form association.\n   */\n  readonly formAssociated: true;\n}\n\n/**\n * A symbol property to retrieve the form value for an element.\n */\nexport const getFormValue = Symbol('getFormValue');\n\n/**\n * A symbol property to retrieve the form state for an element.\n */\nexport const getFormState = Symbol('getFormState');\n\n/**\n * Mixes in form-associated behavior for a class. This allows an element to add\n * values to `<form>` elements.\n *\n * Implementing classes should provide a `[formValue]` to return the current\n * value of the element, as well as reset and restore callbacks.\n *\n * @example\n * ```ts\n * const base = mixinFormAssociated(mixinElementInternals(LitElement));\n *\n * class MyControl extends base {\n *   \\@property()\n *   value = '';\n *\n *   override [getFormValue]() {\n *     return this.value;\n *   }\n *\n *   override formResetCallback() {\n *     const defaultValue = this.getAttribute('value');\n *     this.value = defaultValue;\n *   }\n *\n *   override formStateRestoreCallback(state: string) {\n *     this.value = state;\n *   }\n * }\n * ```\n *\n * Elements may optionally provide a `[formState]` if their values do not\n * represent the state of the component.\n *\n * @example\n * ```ts\n * const base = mixinFormAssociated(mixinElementInternals(LitElement));\n *\n * class MyCheckbox extends base {\n *   \\@property()\n *   value = 'on';\n *\n *   \\@property({type: Boolean})\n *   checked = false;\n *\n *   override [getFormValue]() {\n *     return this.checked ? this.value : null;\n *   }\n *\n *   override [getFormState]() {\n *     return String(this.checked);\n *   }\n *\n *   override formResetCallback() {\n *     const defaultValue = this.hasAttribute('checked');\n *     this.checked = defaultValue;\n *   }\n *\n *   override formStateRestoreCallback(state: string) {\n *     this.checked = Boolean(state);\n *   }\n * }\n * ```\n *\n * IMPORTANT: Requires declares for lit-analyzer\n * @example\n * ```ts\n * const base = mixinFormAssociated(mixinElementInternals(LitElement));\n * class MyControl extends base {\n *   // Writable mixin properties for lit-html binding, needed for lit-analyzer\n *   declare disabled: boolean;\n *   declare name: string;\n * }\n * ```\n *\n * @param base The class to mix functionality into. The base class must use\n *     `mixinElementInternals()`.\n * @return The provided class with `FormAssociated` mixed in.\n */\nexport function mixinFormAssociated<\n  T extends MixinBase<LitElement & WithElementInternals>,\n>(base: T): MixinReturn<T & FormAssociatedConstructor, FormAssociated> {\n  abstract class FormAssociatedElement extends base implements FormAssociated {\n    /** @nocollapse */\n    static readonly formAssociated = true;\n\n    get form() {\n      return this[internals].form;\n    }\n\n    get labels() {\n      return this[internals].labels;\n    }\n\n    // Use @property for the `name` and `disabled` properties to add them to the\n    // `observedAttributes` array and trigger `attributeChangedCallback()`.\n    //\n    // We don't use Lit's default getter/setter (`noAccessor: true`) because\n    // the attributes need to be updated synchronously to work with synchronous\n    // form APIs, and Lit updates attributes async by default.\n    @property({noAccessor: true})\n    get name() {\n      return this.getAttribute('name') ?? '';\n    }\n    set name(name: string) {\n      // Note: setting name to null or empty does not remove the attribute.\n      this.setAttribute('name', name);\n      // We don't need to call `requestUpdate()` since it's called synchronously\n      // in `attributeChangedCallback()`.\n    }\n\n    @property({type: Boolean, noAccessor: true})\n    get disabled() {\n      return this.hasAttribute('disabled');\n    }\n    set disabled(disabled: boolean) {\n      this.toggleAttribute('disabled', disabled);\n      // We don't need to call `requestUpdate()` since it's called synchronously\n      // in `attributeChangedCallback()`.\n    }\n\n    override attributeChangedCallback(\n      name: string,\n      old: string | null,\n      value: string | null,\n    ) {\n      // Manually `requestUpdate()` for `name` and `disabled` when their\n      // attribute or property changes.\n      // The properties update their attributes, so this callback is invoked\n      // immediately when the properties are set. We call `requestUpdate()` here\n      // instead of letting Lit set the properties from the attribute change.\n      // That would cause the properties to re-set the attribute and invoke this\n      // callback again in a loop. This leads to stale state when Lit tries to\n      // determine if a property changed or not.\n      if (name === 'name' || name === 'disabled') {\n        // Disabled's value is only false if the attribute is missing and null.\n        const oldValue = name === 'disabled' ? old !== null : old;\n        // Trigger a lit update when the attribute changes.\n        this.requestUpdate(name, oldValue);\n        return;\n      }\n\n      super.attributeChangedCallback(name, old, value);\n    }\n\n    override requestUpdate(\n      name?: PropertyKey,\n      oldValue?: unknown,\n      options?: PropertyDeclaration,\n    ) {\n      super.requestUpdate(name, oldValue, options);\n      // If any properties change, update the form value, which may have changed\n      // as well.\n      // Update the form value synchronously in `requestUpdate()` rather than\n      // `update()` or `updated()`, which are async. This is necessary to ensure\n      // that form data is updated in time for synchronous event listeners.\n      this[internals].setFormValue(this[getFormValue](), this[getFormState]());\n    }\n\n    [getFormValue](): FormValue | null {\n      // Closure does not allow abstract symbol members, so a default\n      // implementation is needed.\n      throw new Error('Implement [getFormValue]');\n    }\n\n    [getFormState](): FormValue | null {\n      return this[getFormValue]();\n    }\n\n    formDisabledCallback(disabled: boolean) {\n      this.disabled = disabled;\n    }\n\n    abstract formResetCallback(): void;\n\n    abstract formStateRestoreCallback(\n      state: FormRestoreState | null,\n      reason: FormRestoreReason,\n    ): void;\n  }\n\n  return FormAssociatedElement;\n}\n\n/**\n * A value that can be provided for form submission and state.\n */\nexport type FormValue = File | string | FormData;\n\n/**\n * A value to be restored for a component's form value. If a component's form\n * state is a `FormData` object, its entry list of name and values will be\n * provided.\n */\nexport type FormRestoreState =\n  | File\n  | string\n  | Array<[string, FormDataEntryValue]>;\n\n/**\n * The reason a form component is being restored for, either `'restore'` for\n * browser restoration or `'autocomplete'` for restoring user values.\n */\nexport type FormRestoreReason = 'restore' | 'autocomplete';\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * A class that computes and caches `ValidityStateFlags` for a component with\n * a given `State` interface.\n *\n * Cached performance before computing validity is important since constraint\n * validation must be checked frequently and synchronously when properties\n * change.\n *\n * @template State The expected interface of properties relevant to constraint\n *     validation.\n */\nexport abstract class Validator<State> {\n  /**\n   * The previous state, used to determine if state changed and validation needs\n   * to be re-computed.\n   */\n  private prevState?: State;\n\n  /**\n   * The current validity state and message. This is cached and returns if\n   * constraint validation state does not change.\n   */\n  private currentValidity: ValidityAndMessage = {\n    validity: {},\n    validationMessage: '',\n  };\n\n  /**\n   * Creates a new validator.\n   *\n   * @param getCurrentState A callback that returns the current state of\n   *     constraint validation-related properties.\n   */\n  constructor(private readonly getCurrentState: () => State) {}\n\n  /**\n   * Returns the current `ValidityStateFlags` and validation message for the\n   * validator.\n   *\n   * If the constraint validation state has not changed, this will return a\n   * cached result. This is important since `getValidity()` can be called\n   * frequently in response to synchronous property changes.\n   *\n   * @return The current validity and validation message.\n   */\n  getValidity(): ValidityAndMessage {\n    const state = this.getCurrentState();\n    const hasStateChanged =\n      !this.prevState || !this.equals(this.prevState, state);\n    if (!hasStateChanged) {\n      return this.currentValidity;\n    }\n\n    const {validity, validationMessage} = this.computeValidity(state);\n    this.prevState = this.copy(state);\n    this.currentValidity = {\n      validationMessage,\n      validity: {\n        // Change any `ValidityState` instances into `ValidityStateFlags` since\n        // `ValidityState` cannot be easily `{...spread}`.\n        badInput: validity.badInput,\n        customError: validity.customError,\n        patternMismatch: validity.patternMismatch,\n        rangeOverflow: validity.rangeOverflow,\n        rangeUnderflow: validity.rangeUnderflow,\n        stepMismatch: validity.stepMismatch,\n        tooLong: validity.tooLong,\n        tooShort: validity.tooShort,\n        typeMismatch: validity.typeMismatch,\n        valueMissing: validity.valueMissing,\n      },\n    };\n\n    return this.currentValidity;\n  }\n\n  /**\n   * Computes the `ValidityStateFlags` and validation message for a given set\n   * of constraint validation properties.\n   *\n   * Implementations can use platform elements like `<input>` and `<select>` to\n   * sync state and compute validation along with i18n'd messages. This function\n   * may be expensive, and is only called when state changes.\n   *\n   * @param state The new state of constraint validation properties.\n   * @return An object containing a `validity` property with\n   *     `ValidityStateFlags` and a `validationMessage` property.\n   */\n  protected abstract computeValidity(state: State): ValidityAndMessage;\n\n  /**\n   * Checks if two states are equal. This is used to check against cached state\n   * to see if validity needs to be re-computed.\n   *\n   * @param prev The previous state.\n   * @param next The next state.\n   * @return True if the states are equal, or false if not.\n   */\n  protected abstract equals(prev: State, next: State): boolean;\n\n  /**\n   * Creates a copy of a state. This is used to cache state and check if it\n   * changes.\n   *\n   * Note: do NOT spread the {...state} to copy it. The actual state object is\n   * a web component, and trying to spread its getter/setter properties won't\n   * work.\n   *\n   * @param state The state to copy.\n   * @return A copy of the state.\n   */\n  protected abstract copy(state: State): State;\n}\n\n/**\n * An object containing `ValidityStateFlags` and a corresponding validation\n * message.\n */\nexport interface ValidityAndMessage {\n  /**\n   * Validity flags.\n   */\n  validity: ValidityStateFlags;\n\n  /**\n   * The validation message for the associated flags. It may not be an empty\n   * string if any of the validity flags are `true`.\n   */\n  validationMessage: string;\n}\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {Validator} from './validator.js';\n\n/**\n * Constraint validation properties for a checkbox.\n */\nexport interface CheckboxState {\n  /**\n   * Whether the checkbox is checked.\n   */\n  readonly checked: boolean;\n\n  /**\n   * Whether the checkbox is required.\n   */\n  readonly required: boolean;\n}\n\n/**\n * A validator that provides constraint validation that emulates\n * `<input type=\"checkbox\">` validation.\n */\nexport class CheckboxValidator extends Validator<CheckboxState> {\n  private checkboxControl?: HTMLInputElement;\n\n  protected override computeValidity(state: CheckboxState) {\n    if (!this.checkboxControl) {\n      // Lazily create the platform input\n      this.checkboxControl = document.createElement('input');\n      this.checkboxControl.type = 'checkbox';\n    }\n\n    this.checkboxControl.checked = state.checked;\n    this.checkboxControl.required = state.required;\n    return {\n      validity: this.checkboxControl.validity,\n      validationMessage: this.checkboxControl.validationMessage,\n    };\n  }\n\n  protected override equals(prev: CheckboxState, next: CheckboxState) {\n    return prev.checked === next.checked && prev.required === next.required;\n  }\n\n  protected override copy({checked, required}: CheckboxState) {\n    return {checked, required};\n  }\n}\n", "/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport '../../focus/md-focus-ring.js';\nimport '../../ripple/ripple.js';\n\nimport {html, isServer, LitElement, nothing, PropertyValues} from 'lit';\nimport {property, query, state} from 'lit/decorators.js';\nimport {classMap} from 'lit/directives/class-map.js';\n\nimport {ARIAMixinStrict} from '../../internal/aria/aria.js';\nimport {requestUpdateOnAriaChange} from '../../internal/aria/delegate.js';\nimport {\n  dispatchActivationClick,\n  isActivationClick,\n} from '../../internal/events/form-label-activation.js';\nimport {redispatchEvent} from '../../internal/events/redispatch-event.js';\nimport {\n  createValidator,\n  getValidityAnchor,\n  mixinConstraintValidation,\n} from '../../labs/behaviors/constraint-validation.js';\nimport {mixinElementInternals} from '../../labs/behaviors/element-internals.js';\nimport {\n  getFormState,\n  getFormValue,\n  mixinFormAssociated,\n} from '../../labs/behaviors/form-associated.js';\nimport {CheckboxValidator} from '../../labs/behaviors/validators/checkbox-validator.js';\n\n// Separate variable needed for closure.\nconst checkboxBaseClass = mixinConstraintValidation(\n  mixinFormAssociated(mixinElementInternals(LitElement)),\n);\n\n/**\n * A checkbox component.\n *\n *\n * @fires change {Event} The native `change` event on\n * [`<input>`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/change_event)\n * --bubbles\n * @fires input {InputEvent} The native `input` event on\n * [`<input>`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/input_event)\n * --bubbles --composed\n */\nexport class Checkbox extends checkboxBaseClass {\n  static {\n    requestUpdateOnAriaChange(Checkbox);\n  }\n\n  /** @nocollapse */\n  static override shadowRootOptions = {\n    ...LitElement.shadowRootOptions,\n    delegatesFocus: true,\n  };\n\n  /**\n   * Whether or not the checkbox is selected.\n   */\n  @property({type: Boolean}) checked = false;\n\n  /**\n   * Whether or not the checkbox is indeterminate.\n   *\n   * https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/checkbox#indeterminate_state_checkboxes\n   */\n  @property({type: Boolean}) indeterminate = false;\n\n  /**\n   * When true, require the checkbox to be selected when participating in\n   * form submission.\n   *\n   * https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/checkbox#validation\n   */\n  @property({type: Boolean}) required = false;\n\n  /**\n   * The value of the checkbox that is submitted with a form when selected.\n   *\n   * https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/checkbox#value\n   */\n  @property() value = 'on';\n\n  @state() private prevChecked = false;\n  @state() private prevDisabled = false;\n  @state() private prevIndeterminate = false;\n  @query('input') private readonly input!: HTMLInputElement | null;\n\n  constructor() {\n    super();\n    if (!isServer) {\n      this.addEventListener('click', (event: MouseEvent) => {\n        if (!isActivationClick(event) || !this.input) {\n          return;\n        }\n        this.focus();\n        dispatchActivationClick(this.input);\n      });\n    }\n  }\n\n  protected override update(changed: PropertyValues<Checkbox>) {\n    if (\n      changed.has('checked') ||\n      changed.has('disabled') ||\n      changed.has('indeterminate')\n    ) {\n      this.prevChecked = changed.get('checked') ?? this.checked;\n      this.prevDisabled = changed.get('disabled') ?? this.disabled;\n      this.prevIndeterminate =\n        changed.get('indeterminate') ?? this.indeterminate;\n    }\n\n    super.update(changed);\n  }\n\n  protected override render() {\n    const prevNone = !this.prevChecked && !this.prevIndeterminate;\n    const prevChecked = this.prevChecked && !this.prevIndeterminate;\n    const prevIndeterminate = this.prevIndeterminate;\n    const isChecked = this.checked && !this.indeterminate;\n    const isIndeterminate = this.indeterminate;\n\n    const containerClasses = classMap({\n      'disabled': this.disabled,\n      'selected': isChecked || isIndeterminate,\n      'unselected': !isChecked && !isIndeterminate,\n      'checked': isChecked,\n      'indeterminate': isIndeterminate,\n      'prev-unselected': prevNone,\n      'prev-checked': prevChecked,\n      'prev-indeterminate': prevIndeterminate,\n      'prev-disabled': this.prevDisabled,\n    });\n\n    // Needed for closure conformance\n    const {ariaLabel, ariaInvalid} = this as ARIAMixinStrict;\n    // Note: <input> needs to be rendered before the <svg> for\n    // form.reportValidity() to work in Chrome.\n    return html`\n      <div class=\"container ${containerClasses}\">\n        <input\n          type=\"checkbox\"\n          id=\"input\"\n          aria-checked=${isIndeterminate ? 'mixed' : nothing}\n          aria-label=${ariaLabel || nothing}\n          aria-invalid=${ariaInvalid || nothing}\n          ?disabled=${this.disabled}\n          ?required=${this.required}\n          .indeterminate=${this.indeterminate}\n          .checked=${this.checked}\n          @input=${this.handleInput}\n          @change=${this.handleChange} />\n\n        <div class=\"outline\"></div>\n        <div class=\"background\"></div>\n        <md-focus-ring part=\"focus-ring\" for=\"input\"></md-focus-ring>\n        <md-ripple for=\"input\" ?disabled=${this.disabled}></md-ripple>\n        <svg class=\"icon\" viewBox=\"0 0 18 18\" aria-hidden=\"true\">\n          <rect class=\"mark short\" />\n          <rect class=\"mark long\" />\n        </svg>\n      </div>\n    `;\n  }\n\n  private handleInput(event: Event) {\n    const target = event.target as HTMLInputElement;\n    this.checked = target.checked;\n    this.indeterminate = target.indeterminate;\n    // <input> 'input' event bubbles and is composed, don't re-dispatch it.\n  }\n\n  private handleChange(event: Event) {\n    // <input> 'change' event is not composed, re-dispatch it.\n    redispatchEvent(this, event);\n  }\n\n  // Writable mixin properties for lit-html binding, needed for lit-analyzer\n  declare disabled: boolean;\n  declare name: string;\n\n  override [getFormValue]() {\n    if (!this.checked || this.indeterminate) {\n      return null;\n    }\n\n    return this.value;\n  }\n\n  override [getFormState]() {\n    return String(this.checked);\n  }\n\n  override formResetCallback() {\n    // The checked property does not reflect, so the original attribute set by\n    // the user is used to determine the default value.\n    this.checked = this.hasAttribute('checked');\n  }\n\n  override formStateRestoreCallback(state: string) {\n    this.checked = state === 'true';\n  }\n\n  [createValidator]() {\n    return new CheckboxValidator(() => this);\n  }\n\n  [getValidityAnchor]() {\n    return this.input;\n  }\n}\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./checkbox/internal/checkbox-styles.css.\nimport {css} from 'lit';\nexport const styles = css`:host{border-start-start-radius:var(--md-checkbox-container-shape-start-start, var(--md-checkbox-container-shape, 2px));border-start-end-radius:var(--md-checkbox-container-shape-start-end, var(--md-checkbox-container-shape, 2px));border-end-end-radius:var(--md-checkbox-container-shape-end-end, var(--md-checkbox-container-shape, 2px));border-end-start-radius:var(--md-checkbox-container-shape-end-start, var(--md-checkbox-container-shape, 2px));display:inline-flex;height:var(--md-checkbox-container-size, 18px);position:relative;vertical-align:top;width:var(--md-checkbox-container-size, 18px);-webkit-tap-highlight-color:rgba(0,0,0,0);cursor:pointer}:host([disabled]){cursor:default}:host([touch-target=wrapper]){margin:max(0px,(48px - var(--md-checkbox-container-size, 18px))/2)}md-focus-ring{height:44px;inset:unset;width:44px}input{appearance:none;height:48px;margin:0;opacity:0;outline:none;position:absolute;width:48px;z-index:1;cursor:inherit}:host([touch-target=none]) input{height:100%;width:100%}.container{border-radius:inherit;display:flex;height:100%;place-content:center;place-items:center;position:relative;width:100%}.outline,.background,.icon{inset:0;position:absolute}.outline,.background{border-radius:inherit}.outline{border-color:var(--md-checkbox-outline-color, var(--md-sys-color-on-surface-variant, #49454f));border-style:solid;border-width:var(--md-checkbox-outline-width, 2px);box-sizing:border-box}.background{background-color:var(--md-checkbox-selected-container-color, var(--md-sys-color-primary, #6750a4))}.background,.icon{opacity:0;transition-duration:150ms,50ms;transition-property:transform,opacity;transition-timing-function:cubic-bezier(0.3, 0, 0.8, 0.15),linear;transform:scale(0.6)}:where(.selected) :is(.background,.icon){opacity:1;transition-duration:350ms,50ms;transition-timing-function:cubic-bezier(0.05, 0.7, 0.1, 1),linear;transform:scale(1)}md-ripple{border-radius:var(--md-checkbox-state-layer-shape, var(--md-sys-shape-corner-full, 9999px));height:var(--md-checkbox-state-layer-size, 40px);inset:unset;width:var(--md-checkbox-state-layer-size, 40px);--md-ripple-hover-color: var(--md-checkbox-hover-state-layer-color, var(--md-sys-color-on-surface, #1d1b20));--md-ripple-hover-opacity: var(--md-checkbox-hover-state-layer-opacity, 0.08);--md-ripple-pressed-color: var(--md-checkbox-pressed-state-layer-color, var(--md-sys-color-primary, #6750a4));--md-ripple-pressed-opacity: var(--md-checkbox-pressed-state-layer-opacity, 0.12)}.selected md-ripple{--md-ripple-hover-color: var(--md-checkbox-selected-hover-state-layer-color, var(--md-sys-color-primary, #6750a4));--md-ripple-hover-opacity: var(--md-checkbox-selected-hover-state-layer-opacity, 0.08);--md-ripple-pressed-color: var(--md-checkbox-selected-pressed-state-layer-color, var(--md-sys-color-on-surface, #1d1b20));--md-ripple-pressed-opacity: var(--md-checkbox-selected-pressed-state-layer-opacity, 0.12)}.icon{fill:var(--md-checkbox-selected-icon-color, var(--md-sys-color-on-primary, #fff));height:var(--md-checkbox-icon-size, 18px);width:var(--md-checkbox-icon-size, 18px)}.mark.short{height:2px;transition-property:transform,height;width:2px}.mark.long{height:2px;transition-property:transform,width;width:10px}.mark{animation-duration:150ms;animation-timing-function:cubic-bezier(0.3, 0, 0.8, 0.15);transition-duration:150ms;transition-timing-function:cubic-bezier(0.3, 0, 0.8, 0.15)}.selected .mark{animation-duration:350ms;animation-timing-function:cubic-bezier(0.05, 0.7, 0.1, 1);transition-duration:350ms;transition-timing-function:cubic-bezier(0.05, 0.7, 0.1, 1)}.checked .mark,.prev-checked.unselected .mark{transform:scaleY(-1) translate(7px, -14px) rotate(45deg)}.checked .mark.short,.prev-checked.unselected .mark.short{height:5.6568542495px}.checked .mark.long,.prev-checked.unselected .mark.long{width:11.313708499px}.indeterminate .mark,.prev-indeterminate.unselected .mark{transform:scaleY(-1) translate(4px, -10px) rotate(0deg)}.prev-unselected .mark{transition-property:none}.prev-unselected.checked .mark.long{animation-name:prev-unselected-to-checked}@keyframes prev-unselected-to-checked{from{width:0}}:where(:hover) .outline{border-color:var(--md-checkbox-hover-outline-color, var(--md-sys-color-on-surface, #1d1b20));border-width:var(--md-checkbox-hover-outline-width, 2px)}:where(:hover) .background{background:var(--md-checkbox-selected-hover-container-color, var(--md-sys-color-primary, #6750a4))}:where(:hover) .icon{fill:var(--md-checkbox-selected-hover-icon-color, var(--md-sys-color-on-primary, #fff))}:where(:focus-within) .outline{border-color:var(--md-checkbox-focus-outline-color, var(--md-sys-color-on-surface, #1d1b20));border-width:var(--md-checkbox-focus-outline-width, 2px)}:where(:focus-within) .background{background:var(--md-checkbox-selected-focus-container-color, var(--md-sys-color-primary, #6750a4))}:where(:focus-within) .icon{fill:var(--md-checkbox-selected-focus-icon-color, var(--md-sys-color-on-primary, #fff))}:where(:active) .outline{border-color:var(--md-checkbox-pressed-outline-color, var(--md-sys-color-on-surface, #1d1b20));border-width:var(--md-checkbox-pressed-outline-width, 2px)}:where(:active) .background{background:var(--md-checkbox-selected-pressed-container-color, var(--md-sys-color-primary, #6750a4))}:where(:active) .icon{fill:var(--md-checkbox-selected-pressed-icon-color, var(--md-sys-color-on-primary, #fff))}:where(.disabled,.prev-disabled) :is(.background,.icon,.mark){animation-duration:0s;transition-duration:0s}:where(.disabled) .outline{border-color:var(--md-checkbox-disabled-outline-color, var(--md-sys-color-on-surface, #1d1b20));border-width:var(--md-checkbox-disabled-outline-width, 2px);opacity:var(--md-checkbox-disabled-container-opacity, 0.38)}:where(.selected.disabled) .outline{visibility:hidden}:where(.selected.disabled) .background{background:var(--md-checkbox-selected-disabled-container-color, var(--md-sys-color-on-surface, #1d1b20));opacity:var(--md-checkbox-selected-disabled-container-opacity, 0.38)}:where(.disabled) .icon{fill:var(--md-checkbox-selected-disabled-icon-color, var(--md-sys-color-surface, #fef7ff))}@media(forced-colors: active){.background{background-color:CanvasText}.selected.disabled .background{background-color:GrayText;opacity:1}.outline{border-color:CanvasText}.disabled .outline{border-color:GrayText;opacity:1}.icon{fill:Canvas}}\n`;\n", "/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {CSSResultOrNative} from 'lit';\nimport {customElement} from 'lit/decorators.js';\n\nimport {Checkbox} from './internal/checkbox.js';\nimport {styles} from './internal/checkbox-styles.js';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'md-checkbox': MdCheckbox;\n  }\n}\n\n/**\n * @summary Checkboxes allow users to select one or more items from a set.\n * Checkboxes can turn an option on or off.\n *\n * @description\n * Use checkboxes to:\n * - Select one or more options from a list\n * - Present a list containing sub-selections\n * - Turn an item on or off in a desktop environment\n *\n * @final\n * @suppress {visibility}\n */\n@customElement('md-checkbox')\nexport class MdCheckbox extends Checkbox {\n  static override styles: CSSResultOrNative[] = [styles];\n}\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport '../../focus/md-focus-ring.js';\nimport '../../ripple/ripple.js';\n\nimport {html, LitElement, PropertyValues, TemplateResult} from 'lit';\nimport {property} from 'lit/decorators.js';\nimport {ClassInfo, classMap} from 'lit/directives/class-map.js';\n\nimport {requestUpdateOnAriaChange} from '../../internal/aria/delegate.js';\n\n/**\n * A chip component.\n *\n * @fires update-focus {Event} Dispatched when `disabled` is toggled. --bubbles\n */\nexport abstract class Chip extends LitElement {\n  static {\n    requestUpdateOnAriaChange(Chip);\n  }\n\n  /** @nocollapse */\n  static override shadowRootOptions = {\n    ...LitElement.shadowRootOptions,\n    delegatesFocus: true,\n  };\n\n  /**\n   * Whether or not the chip is disabled.\n   *\n   * Disabled chips are not focusable, unless `always-focusable` is set.\n   */\n  @property({type: Boolean, reflect: true}) disabled = false;\n\n  /**\n   * When true, allow disabled chips to be focused with arrow keys.\n   *\n   * Add this when a chip needs increased visibility when disabled. See\n   * https://www.w3.org/WAI/ARIA/apg/practices/keyboard-interface/#kbd_disabled_controls\n   * for more guidance on when this is needed.\n   */\n  @property({type: Boolean, attribute: 'always-focusable'})\n  alwaysFocusable = false;\n\n  /**\n   * The label of the chip.\n   */\n  @property() label = '';\n\n  /**\n   * Only needed for SSR.\n   *\n   * Add this attribute when a chip has a `slot=\"icon\"` to avoid a Flash Of\n   * Unstyled Content.\n   */\n  @property({type: Boolean, reflect: true, attribute: 'has-icon'}) hasIcon =\n    false;\n\n  /**\n   * The `id` of the action the primary focus ring and ripple are for.\n   * TODO(b/310046938): use the same id for both elements\n   */\n  protected abstract readonly primaryId: string;\n\n  /**\n   * Whether or not the primary ripple is disabled (defaults to `disabled`).\n   * Some chip actions such as links cannot be disabled.\n   */\n  protected get rippleDisabled() {\n    return this.disabled;\n  }\n\n  override focus(options?: FocusOptions) {\n    if (this.disabled && !this.alwaysFocusable) {\n      return;\n    }\n\n    super.focus(options);\n  }\n\n  protected override render() {\n    return html`\n      <div class=\"container ${classMap(this.getContainerClasses())}\">\n        ${this.renderContainerContent()}\n      </div>\n    `;\n  }\n\n  protected override updated(changed: PropertyValues<Chip>) {\n    if (changed.has('disabled') && changed.get('disabled') !== undefined) {\n      this.dispatchEvent(new Event('update-focus', {bubbles: true}));\n    }\n  }\n\n  protected getContainerClasses(): ClassInfo {\n    return {\n      'disabled': this.disabled,\n      'has-icon': this.hasIcon,\n    };\n  }\n\n  protected renderContainerContent() {\n    return html`\n      ${this.renderOutline()}\n      <md-focus-ring part=\"focus-ring\" for=${this.primaryId}></md-focus-ring>\n      <md-ripple\n        for=${this.primaryId}\n        ?disabled=${this.rippleDisabled}></md-ripple>\n      ${this.renderPrimaryAction(this.renderPrimaryContent())}\n    `;\n  }\n\n  protected renderOutline() {\n    return html`<span class=\"outline\"></span>`;\n  }\n\n  protected renderLeadingIcon(): TemplateResult {\n    return html`<slot name=\"icon\" @slotchange=${this.handleIconChange}></slot>`;\n  }\n\n  protected abstract renderPrimaryAction(content: unknown): unknown;\n\n  private renderPrimaryContent() {\n    return html`\n      <span class=\"leading icon\" aria-hidden=\"true\">\n        ${this.renderLeadingIcon()}\n      </span>\n      <span class=\"label\">${this.label}</span>\n      <span class=\"touch\"></span>\n    `;\n  }\n\n  private handleIconChange(event: Event) {\n    const slot = event.target as HTMLSlotElement;\n    this.hasIcon = slot.assignedElements({flatten: true}).length > 0;\n  }\n}\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport '../../elevation/elevation.js';\n\nimport {html, nothing} from 'lit';\nimport {property} from 'lit/decorators.js';\n\nimport {ARIAMixinStrict} from '../../internal/aria/aria.js';\n\nimport {Chip} from './chip.js';\n\n/**\n * An assist chip component.\n */\nexport class AssistChip extends Chip {\n  @property({type: Boolean}) elevated = false;\n  @property() href = '';\n  @property() target: '_blank' | '_parent' | '_self' | '_top' | '' = '';\n\n  protected get primaryId() {\n    return this.href ? 'link' : 'button';\n  }\n\n  protected override get rippleDisabled() {\n    // Link chips cannot be disabled\n    return !this.href && this.disabled;\n  }\n\n  protected override getContainerClasses() {\n    return {\n      ...super.getContainerClasses(),\n      // Link chips cannot be disabled\n      disabled: !this.href && this.disabled,\n      elevated: this.elevated,\n      link: !!this.href,\n    };\n  }\n\n  protected override renderPrimaryAction(content: unknown) {\n    const {ariaLabel} = this as ARIAMixinStrict;\n    if (this.href) {\n      return html`\n        <a\n          class=\"primary action\"\n          id=\"link\"\n          aria-label=${ariaLabel || nothing}\n          href=${this.href}\n          target=${this.target || nothing}\n          >${content}</a\n        >\n      `;\n    }\n\n    return html`\n      <button\n        class=\"primary action\"\n        id=\"button\"\n        aria-label=${ariaLabel || nothing}\n        ?disabled=${this.disabled && !this.alwaysFocusable}\n        type=\"button\"\n        >${content}</button\n      >\n    `;\n  }\n\n  protected override renderOutline() {\n    if (this.elevated) {\n      return html`<md-elevation part=\"elevation\"></md-elevation>`;\n    }\n\n    return super.renderOutline();\n  }\n}\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./chips/internal/assist-styles.css.\nimport {css} from 'lit';\nexport const styles = css`:host{--_container-height: var(--md-assist-chip-container-height, 32px);--_disabled-label-text-color: var(--md-assist-chip-disabled-label-text-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-label-text-opacity: var(--md-assist-chip-disabled-label-text-opacity, 0.38);--_elevated-container-color: var(--md-assist-chip-elevated-container-color, var(--md-sys-color-surface-container-low, #f7f2fa));--_elevated-container-elevation: var(--md-assist-chip-elevated-container-elevation, 1);--_elevated-container-shadow-color: var(--md-assist-chip-elevated-container-shadow-color, var(--md-sys-color-shadow, #000));--_elevated-disabled-container-color: var(--md-assist-chip-elevated-disabled-container-color, var(--md-sys-color-on-surface, #1d1b20));--_elevated-disabled-container-elevation: var(--md-assist-chip-elevated-disabled-container-elevation, 0);--_elevated-disabled-container-opacity: var(--md-assist-chip-elevated-disabled-container-opacity, 0.12);--_elevated-focus-container-elevation: var(--md-assist-chip-elevated-focus-container-elevation, 1);--_elevated-hover-container-elevation: var(--md-assist-chip-elevated-hover-container-elevation, 2);--_elevated-pressed-container-elevation: var(--md-assist-chip-elevated-pressed-container-elevation, 1);--_focus-label-text-color: var(--md-assist-chip-focus-label-text-color, var(--md-sys-color-on-surface, #1d1b20));--_hover-label-text-color: var(--md-assist-chip-hover-label-text-color, var(--md-sys-color-on-surface, #1d1b20));--_hover-state-layer-color: var(--md-assist-chip-hover-state-layer-color, var(--md-sys-color-on-surface, #1d1b20));--_hover-state-layer-opacity: var(--md-assist-chip-hover-state-layer-opacity, 0.08);--_label-text-color: var(--md-assist-chip-label-text-color, var(--md-sys-color-on-surface, #1d1b20));--_label-text-font: var(--md-assist-chip-label-text-font, var(--md-sys-typescale-label-large-font, var(--md-ref-typeface-plain, Roboto)));--_label-text-line-height: var(--md-assist-chip-label-text-line-height, var(--md-sys-typescale-label-large-line-height, 1.25rem));--_label-text-size: var(--md-assist-chip-label-text-size, var(--md-sys-typescale-label-large-size, 0.875rem));--_label-text-weight: var(--md-assist-chip-label-text-weight, var(--md-sys-typescale-label-large-weight, var(--md-ref-typeface-weight-medium, 500)));--_pressed-label-text-color: var(--md-assist-chip-pressed-label-text-color, var(--md-sys-color-on-surface, #1d1b20));--_pressed-state-layer-color: var(--md-assist-chip-pressed-state-layer-color, var(--md-sys-color-on-surface, #1d1b20));--_pressed-state-layer-opacity: var(--md-assist-chip-pressed-state-layer-opacity, 0.12);--_disabled-outline-color: var(--md-assist-chip-disabled-outline-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-outline-opacity: var(--md-assist-chip-disabled-outline-opacity, 0.12);--_focus-outline-color: var(--md-assist-chip-focus-outline-color, var(--md-sys-color-on-surface, #1d1b20));--_outline-color: var(--md-assist-chip-outline-color, var(--md-sys-color-outline, #79747e));--_outline-width: var(--md-assist-chip-outline-width, 1px);--_disabled-leading-icon-color: var(--md-assist-chip-disabled-leading-icon-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-leading-icon-opacity: var(--md-assist-chip-disabled-leading-icon-opacity, 0.38);--_focus-leading-icon-color: var(--md-assist-chip-focus-leading-icon-color, var(--md-sys-color-primary, #6750a4));--_hover-leading-icon-color: var(--md-assist-chip-hover-leading-icon-color, var(--md-sys-color-primary, #6750a4));--_leading-icon-color: var(--md-assist-chip-leading-icon-color, var(--md-sys-color-primary, #6750a4));--_icon-size: var(--md-assist-chip-icon-size, 18px);--_pressed-leading-icon-color: var(--md-assist-chip-pressed-leading-icon-color, var(--md-sys-color-primary, #6750a4));--_container-shape-start-start: var(--md-assist-chip-container-shape-start-start, var(--md-assist-chip-container-shape, var(--md-sys-shape-corner-small, 8px)));--_container-shape-start-end: var(--md-assist-chip-container-shape-start-end, var(--md-assist-chip-container-shape, var(--md-sys-shape-corner-small, 8px)));--_container-shape-end-end: var(--md-assist-chip-container-shape-end-end, var(--md-assist-chip-container-shape, var(--md-sys-shape-corner-small, 8px)));--_container-shape-end-start: var(--md-assist-chip-container-shape-end-start, var(--md-assist-chip-container-shape, var(--md-sys-shape-corner-small, 8px)));--_leading-space: var(--md-assist-chip-leading-space, 16px);--_trailing-space: var(--md-assist-chip-trailing-space, 16px);--_icon-label-space: var(--md-assist-chip-icon-label-space, 8px);--_with-leading-icon-leading-space: var(--md-assist-chip-with-leading-icon-leading-space, 8px)}@media(forced-colors: active){.link .outline{border-color:ActiveText}}\n`;\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./chips/internal/elevated-styles.css.\nimport {css} from 'lit';\nexport const styles = css`.elevated{--md-elevation-level: var(--_elevated-container-elevation);--md-elevation-shadow-color: var(--_elevated-container-shadow-color)}.elevated::before{background:var(--_elevated-container-color)}.elevated:hover{--md-elevation-level: var(--_elevated-hover-container-elevation)}.elevated:focus-within{--md-elevation-level: var(--_elevated-focus-container-elevation)}.elevated:active{--md-elevation-level: var(--_elevated-pressed-container-elevation)}.elevated.disabled{--md-elevation-level: var(--_elevated-disabled-container-elevation)}.elevated.disabled::before{background:var(--_elevated-disabled-container-color);opacity:var(--_elevated-disabled-container-opacity)}@media(forced-colors: active){.elevated md-elevation{border:1px solid CanvasText}.elevated.disabled md-elevation{border-color:GrayText}}\n`;\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./chips/internal/shared-styles.css.\nimport {css} from 'lit';\nexport const styles = css`:host{border-start-start-radius:var(--_container-shape-start-start);border-start-end-radius:var(--_container-shape-start-end);border-end-start-radius:var(--_container-shape-end-start);border-end-end-radius:var(--_container-shape-end-end);display:inline-flex;height:var(--_container-height);cursor:pointer;-webkit-tap-highlight-color:rgba(0,0,0,0);--md-ripple-hover-color: var(--_hover-state-layer-color);--md-ripple-hover-opacity: var(--_hover-state-layer-opacity);--md-ripple-pressed-color: var(--_pressed-state-layer-color);--md-ripple-pressed-opacity: var(--_pressed-state-layer-opacity)}:host([disabled]){pointer-events:none}:host([touch-target=wrapper]){margin:max(0px,(48px - var(--_container-height))/2) 0}md-focus-ring{--md-focus-ring-shape-start-start: var(--_container-shape-start-start);--md-focus-ring-shape-start-end: var(--_container-shape-start-end);--md-focus-ring-shape-end-end: var(--_container-shape-end-end);--md-focus-ring-shape-end-start: var(--_container-shape-end-start)}.container{border-radius:inherit;box-sizing:border-box;display:flex;height:100%;position:relative;width:100%}.container::before{border-radius:inherit;content:\"\";inset:0;pointer-events:none;position:absolute}.container:not(.disabled){cursor:pointer}.container.disabled{pointer-events:none}.cell{display:flex}.action{align-items:baseline;appearance:none;background:none;border:none;border-radius:inherit;display:flex;outline:none;padding:0;position:relative;text-decoration:none}.primary.action{padding-inline-start:var(--_leading-space);padding-inline-end:var(--_trailing-space)}.has-icon .primary.action{padding-inline-start:var(--_with-leading-icon-leading-space)}.touch{height:48px;inset:50% 0 0;position:absolute;transform:translateY(-50%);width:100%}:host([touch-target=none]) .touch{display:none}.outline{border:var(--_outline-width) solid var(--_outline-color);border-radius:inherit;inset:0;pointer-events:none;position:absolute}:where(:focus) .outline{border-color:var(--_focus-outline-color)}:where(.disabled) .outline{border-color:var(--_disabled-outline-color);opacity:var(--_disabled-outline-opacity)}md-ripple{border-radius:inherit}.label,.icon,.touch{z-index:1}.label{align-items:center;color:var(--_label-text-color);display:flex;font-family:var(--_label-text-font);font-size:var(--_label-text-size);line-height:var(--_label-text-line-height);font-weight:var(--_label-text-weight);height:100%;text-overflow:ellipsis;user-select:none;white-space:nowrap}:where(:hover) .label{color:var(--_hover-label-text-color)}:where(:focus) .label{color:var(--_focus-label-text-color)}:where(:active) .label{color:var(--_pressed-label-text-color)}:where(.disabled) .label{color:var(--_disabled-label-text-color);opacity:var(--_disabled-label-text-opacity)}.icon{align-self:center;display:flex;fill:currentColor;position:relative}.icon ::slotted(:first-child){font-size:var(--_icon-size);height:var(--_icon-size);width:var(--_icon-size)}.leading.icon{color:var(--_leading-icon-color)}.leading.icon ::slotted(*),.leading.icon svg{margin-inline-end:var(--_icon-label-space)}:where(:hover) .leading.icon{color:var(--_hover-leading-icon-color)}:where(:focus) .leading.icon{color:var(--_focus-leading-icon-color)}:where(:active) .leading.icon{color:var(--_pressed-leading-icon-color)}:where(.disabled) .leading.icon{color:var(--_disabled-leading-icon-color);opacity:var(--_disabled-leading-icon-opacity)}@media(forced-colors: active){:where(.disabled) :is(.label,.outline,.leading.icon){color:GrayText;opacity:1}}a,button{text-transform:inherit}a,button:not(:disabled){cursor:inherit}\n`;\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {CSSResultOrNative} from 'lit';\nimport {customElement} from 'lit/decorators.js';\n\nimport {AssistChip} from './internal/assist-chip.js';\nimport {styles} from './internal/assist-styles.js';\nimport {styles as elevatedStyles} from './internal/elevated-styles.js';\nimport {styles as sharedStyles} from './internal/shared-styles.js';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'md-assist-chip': MdAssistChip;\n  }\n}\n\n/**\n * TODO(b/243982145): add docs\n *\n * @final\n * @suppress {visibility}\n */\n@customElement('md-assist-chip')\nexport class MdAssistChip extends AssistChip {\n  static override styles: CSSResultOrNative[] = [sharedStyles, elevatedStyles, styles];\n}\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {html, isServer, LitElement} from 'lit';\nimport {queryAssignedElements} from 'lit/decorators.js';\n\nimport {Chip} from './chip.js';\n\n/**\n * A chip set component.\n */\nexport class ChipSet extends LitElement {\n  get chips() {\n    return this.childElements.filter(\n      (child): child is Chip => child instanceof Chip,\n    );\n  }\n\n  @queryAssignedElements() private readonly childElements!: HTMLElement[];\n  private readonly internals =\n    // Cast needed for closure\n    (this as HTMLElement).attachInternals();\n\n  constructor() {\n    super();\n    if (!isServer) {\n      this.addEventListener('focusin', this.updateTabIndices.bind(this));\n      this.addEventListener('update-focus', this.updateTabIndices.bind(this));\n      this.addEventListener('keydown', this.handleKeyDown.bind(this));\n      this.internals.role = 'toolbar';\n    }\n  }\n\n  protected override render() {\n    return html`<slot @slotchange=${this.updateTabIndices}></slot>`;\n  }\n\n  private handleKeyDown(event: KeyboardEvent) {\n    const isLeft = event.key === 'ArrowLeft';\n    const isRight = event.key === 'ArrowRight';\n    const isHome = event.key === 'Home';\n    const isEnd = event.key === 'End';\n    // Ignore non-navigation keys\n    if (!isLeft && !isRight && !isHome && !isEnd) {\n      return;\n    }\n\n    const {chips} = this as {chips: MaybeMultiActionChip[]};\n    // Don't try to select another chip if there aren't any.\n    if (chips.length < 2) {\n      return;\n    }\n\n    // Prevent default interactions, such as scrolling.\n    event.preventDefault();\n\n    if (isHome || isEnd) {\n      const index = isHome ? 0 : chips.length - 1;\n      chips[index].focus({trailing: isEnd});\n      this.updateTabIndices();\n      return;\n    }\n\n    // Check if moving forwards or backwards\n    const isRtl = getComputedStyle(this).direction === 'rtl';\n    const forwards = isRtl ? isLeft : isRight;\n    const focusedChip = chips.find((chip) => chip.matches(':focus-within'));\n    if (!focusedChip) {\n      // If there is not already a chip focused, select the first or last chip\n      // based on the direction we're traveling.\n      const nextChip = forwards ? chips[0] : chips[chips.length - 1];\n      nextChip.focus({trailing: !forwards});\n      this.updateTabIndices();\n      return;\n    }\n\n    const currentIndex = chips.indexOf(focusedChip);\n    let nextIndex = forwards ? currentIndex + 1 : currentIndex - 1;\n    // Search for the next sibling that is not disabled to select.\n    // If we return to the host index, there is nothing to select.\n    while (nextIndex !== currentIndex) {\n      if (nextIndex >= chips.length) {\n        // Return to start if moving past the last item.\n        nextIndex = 0;\n      } else if (nextIndex < 0) {\n        // Go to end if moving before the first item.\n        nextIndex = chips.length - 1;\n      }\n\n      // Check if the next sibling is disabled. If so,\n      // move the index and continue searching.\n      //\n      // Some toolbar items may be focusable when disabled for increased\n      // visibility.\n      const nextChip = chips[nextIndex];\n      if (nextChip.disabled && !nextChip.alwaysFocusable) {\n        if (forwards) {\n          nextIndex++;\n        } else {\n          nextIndex--;\n        }\n\n        continue;\n      }\n\n      nextChip.focus({trailing: !forwards});\n      this.updateTabIndices();\n      break;\n    }\n  }\n\n  private updateTabIndices() {\n    // The chip that should be focusable is either the chip that currently has\n    // focus or the first chip that can be focused.\n    const {chips} = this;\n    let chipToFocus: Chip | undefined;\n    for (const chip of chips) {\n      const isChipFocusable = chip.alwaysFocusable || !chip.disabled;\n      const chipIsFocused = chip.matches(':focus-within');\n      if (chipIsFocused && isChipFocusable) {\n        // Found the first chip that is actively focused. This overrides the\n        // first focusable chip found.\n        chipToFocus = chip;\n        continue;\n      }\n\n      if (isChipFocusable && !chipToFocus) {\n        chipToFocus = chip;\n      }\n\n      // Disable non-focused chips. If we disable all of them, we'll grant focus\n      // to the first focusable child that was found.\n      chip.tabIndex = -1;\n    }\n\n    if (chipToFocus) {\n      chipToFocus.tabIndex = 0;\n    }\n  }\n}\n\ninterface MaybeMultiActionChip extends Chip {\n  focus(options?: FocusOptions & {trailing?: boolean}): void;\n}\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./chips/internal/chip-set-styles.css.\nimport {css} from 'lit';\nexport const styles = css`:host{display:flex;flex-wrap:wrap;gap:8px}\n`;\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {CSSResultOrNative} from 'lit';\nimport {customElement} from 'lit/decorators.js';\n\nimport {ChipSet} from './internal/chip-set.js';\nimport {styles} from './internal/chip-set-styles.js';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'md-chip-set': MdChipSet;\n  }\n}\n\n/**\n * TODO(b/243982145): add docs\n *\n * @final\n * @suppress {visibility}\n */\n@customElement('md-chip-set')\nexport class MdChipSet extends ChipSet {\n  static override styles: CSSResultOrNative[] = [styles];\n}\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {html, isServer} from 'lit';\n\nimport {ARIAMixinStrict} from '../../internal/aria/aria.js';\n\nimport {Chip} from './chip.js';\n\nconst ARIA_LABEL_REMOVE = 'aria-label-remove';\n\n/**\n * A chip component with multiple actions.\n */\nexport abstract class MultiActionChip extends Chip {\n  get ariaLabelRemove(): string {\n    if (this.hasAttribute(ARIA_LABEL_REMOVE)) {\n      return this.getAttribute(ARIA_LABEL_REMOVE)!;\n    }\n\n    const {ariaLabel} = this as ARIAMixinStrict;\n    return `Remove ${ariaLabel || this.label}`;\n  }\n  set ariaLabelRemove(ariaLabel: string | null) {\n    const prev = this.ariaLabelRemove;\n    if (ariaLabel === prev) {\n      return;\n    }\n\n    if (ariaLabel === null) {\n      this.removeAttribute(ARIA_LABEL_REMOVE);\n    } else {\n      this.setAttribute(ARIA_LABEL_REMOVE, ariaLabel);\n    }\n\n    this.requestUpdate();\n  }\n\n  protected abstract readonly primaryAction: HTMLElement | null;\n  protected abstract readonly trailingAction: HTMLElement | null;\n\n  constructor() {\n    super();\n    this.handleTrailingActionFocus = this.handleTrailingActionFocus.bind(this);\n    if (!isServer) {\n      this.addEventListener('keydown', this.handleKeyDown.bind(this));\n    }\n  }\n\n  override focus(options?: FocusOptions & {trailing?: boolean}) {\n    const isFocusable = this.alwaysFocusable || !this.disabled;\n    if (isFocusable && options?.trailing && this.trailingAction) {\n      this.trailingAction.focus(options);\n      return;\n    }\n\n    super.focus(options as FocusOptions);\n  }\n\n  protected override renderContainerContent() {\n    return html`\n      ${super.renderContainerContent()}\n      ${this.renderTrailingAction(this.handleTrailingActionFocus)}\n    `;\n  }\n\n  protected abstract renderTrailingAction(\n    focusListener: EventListener,\n  ): unknown;\n\n  private handleKeyDown(event: KeyboardEvent) {\n    const isLeft = event.key === 'ArrowLeft';\n    const isRight = event.key === 'ArrowRight';\n    // Ignore non-navigation keys.\n    if (!isLeft && !isRight) {\n      return;\n    }\n\n    if (!this.primaryAction || !this.trailingAction) {\n      // Does not have multiple actions.\n      return;\n    }\n\n    // Check if moving forwards or backwards\n    const isRtl = getComputedStyle(this).direction === 'rtl';\n    const forwards = isRtl ? isLeft : isRight;\n    const isPrimaryFocused = this.primaryAction?.matches(':focus-within');\n    const isTrailingFocused = this.trailingAction?.matches(':focus-within');\n\n    if ((forwards && isTrailingFocused) || (!forwards && isPrimaryFocused)) {\n      // Moving outside of the chip, it will be handled by the chip set.\n      return;\n    }\n\n    // Prevent default interactions, such as scrolling.\n    event.preventDefault();\n    // Don't let the chip set handle this navigation event.\n    event.stopPropagation();\n    const actionToFocus = forwards ? this.trailingAction : this.primaryAction;\n    actionToFocus.focus();\n  }\n\n  private handleTrailingActionFocus() {\n    const {primaryAction, trailingAction} = this;\n    if (!primaryAction || !trailingAction) {\n      return;\n    }\n\n    // Temporarily turn off the primary action's focusability. This allows\n    // shift+tab from the trailing action to move to the previous chip rather\n    // than the primary action in the same chip.\n    primaryAction.tabIndex = -1;\n    trailingAction.addEventListener(\n      'focusout',\n      () => {\n        primaryAction.tabIndex = 0;\n      },\n      {once: true},\n    );\n  }\n}\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport '../../focus/md-focus-ring.js';\nimport '../../ripple/ripple.js';\n\nimport {html, nothing} from 'lit';\n\nimport {Chip} from './chip.js';\n\ninterface RemoveButtonProperties {\n  ariaLabel: string;\n  disabled: boolean;\n  focusListener: EventListener;\n  tabbable?: boolean;\n}\n\n/** @protected */\nexport function renderRemoveButton({\n  ariaLabel,\n  disabled,\n  focusListener,\n  tabbable = false,\n}: RemoveButtonProperties) {\n  return html`\n    <button\n      class=\"trailing action\"\n      aria-label=${ariaLabel}\n      tabindex=${!tabbable ? -1 : nothing}\n      @click=${handleRemoveClick}\n      @focus=${focusListener}>\n      <md-focus-ring part=\"trailing-focus-ring\"></md-focus-ring>\n      <md-ripple ?disabled=${disabled}></md-ripple>\n      <span class=\"trailing icon\" aria-hidden=\"true\">\n        <slot name=\"remove-trailing-icon\">\n          <svg viewBox=\"0 96 960 960\">\n            <path\n              d=\"m249 849-42-42 231-231-231-231 42-42 231 231 231-231 42 42-231 231 231 231-42 42-231-231-231 231Z\" />\n          </svg>\n        </slot>\n      </span>\n      <span class=\"touch\"></span>\n    </button>\n  `;\n}\n\nfunction handleRemoveClick(this: Chip, event: Event) {\n  if (this.disabled) {\n    return;\n  }\n\n  event.stopPropagation();\n  const preventDefault = !this.dispatchEvent(\n    new Event('remove', {cancelable: true}),\n  );\n  if (preventDefault) {\n    return;\n  }\n\n  this.remove();\n}\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport '../../elevation/elevation.js';\n\nimport {html, nothing} from 'lit';\nimport {property, query} from 'lit/decorators.js';\n\nimport {ARIAMixinStrict} from '../../internal/aria/aria.js';\nimport {redispatchEvent} from '../../internal/events/redispatch-event.js';\n\nimport {MultiActionChip} from './multi-action-chip.js';\nimport {renderRemoveButton} from './trailing-icons.js';\n\n/**\n * A filter chip component.\n *\n * @fires remove {Event} Dispatched when the remove button is clicked.\n */\nexport class FilterChip extends MultiActionChip {\n  @property({type: Boolean}) elevated = false;\n  @property({type: Boolean}) removable = false;\n  @property({type: Boolean, reflect: true}) selected = false;\n\n  /**\n   * Only needed for SSR.\n   *\n   * Add this attribute when a filter chip has a `slot=\"selected-icon\"` to avoid\n   * a Flash Of Unstyled Content.\n   */\n  @property({type: Boolean, reflect: true, attribute: 'has-selected-icon'})\n  hasSelectedIcon = false;\n\n  protected get primaryId() {\n    return 'button';\n  }\n\n  @query('.primary.action')\n  protected readonly primaryAction!: HTMLElement | null;\n  @query('.trailing.action')\n  protected readonly trailingAction!: HTMLElement | null;\n\n  protected override getContainerClasses() {\n    return {\n      ...super.getContainerClasses(),\n      elevated: this.elevated,\n      selected: this.selected,\n      'has-trailing': this.removable,\n      'has-icon': this.hasIcon || this.selected,\n    };\n  }\n\n  protected override renderPrimaryAction(content: unknown) {\n    const {ariaLabel} = this as ARIAMixinStrict;\n    return html`\n      <button\n        class=\"primary action\"\n        id=\"button\"\n        aria-label=${ariaLabel || nothing}\n        aria-pressed=${this.selected}\n        ?disabled=${this.disabled && !this.alwaysFocusable}\n        @click=${this.handleClick}\n        >${content}</button\n      >\n    `;\n  }\n\n  protected override renderLeadingIcon() {\n    if (!this.selected) {\n      return super.renderLeadingIcon();\n    }\n\n    return html`\n      <slot name=\"selected-icon\">\n        <svg class=\"checkmark\" viewBox=\"0 0 18 18\" aria-hidden=\"true\">\n          <path\n            d=\"M6.75012 12.1274L3.62262 8.99988L2.55762 10.0574L6.75012 14.2499L15.7501 5.24988L14.6926 4.19238L6.75012 12.1274Z\" />\n        </svg>\n      </slot>\n    `;\n  }\n\n  protected override renderTrailingAction(focusListener: EventListener) {\n    if (this.removable) {\n      return renderRemoveButton({\n        focusListener,\n        ariaLabel: this.ariaLabelRemove,\n        disabled: this.disabled,\n      });\n    }\n\n    return nothing;\n  }\n\n  protected override renderOutline() {\n    if (this.elevated) {\n      return html`<md-elevation part=\"elevation\"></md-elevation>`;\n    }\n\n    return super.renderOutline();\n  }\n\n  private handleClick(event: MouseEvent) {\n    if (this.disabled) {\n      return;\n    }\n\n    // Store prevValue to revert in case `chip.selected` is changed during an\n    // event listener.\n    const prevValue = this.selected;\n    this.selected = !this.selected;\n\n    const preventDefault = !redispatchEvent(this, event);\n    if (preventDefault) {\n      // We should not do `this.selected = !this.selected`, since a client\n      // click listener could change its value. Instead, always revert to the\n      // original value.\n      this.selected = prevValue;\n      return;\n    }\n  }\n}\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./chips/internal/filter-styles.css.\nimport {css} from 'lit';\nexport const styles = css`:host{--_container-height: var(--md-filter-chip-container-height, 32px);--_disabled-label-text-color: var(--md-filter-chip-disabled-label-text-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-label-text-opacity: var(--md-filter-chip-disabled-label-text-opacity, 0.38);--_elevated-container-elevation: var(--md-filter-chip-elevated-container-elevation, 1);--_elevated-container-shadow-color: var(--md-filter-chip-elevated-container-shadow-color, var(--md-sys-color-shadow, #000));--_elevated-disabled-container-color: var(--md-filter-chip-elevated-disabled-container-color, var(--md-sys-color-on-surface, #1d1b20));--_elevated-disabled-container-elevation: var(--md-filter-chip-elevated-disabled-container-elevation, 0);--_elevated-disabled-container-opacity: var(--md-filter-chip-elevated-disabled-container-opacity, 0.12);--_elevated-focus-container-elevation: var(--md-filter-chip-elevated-focus-container-elevation, 1);--_elevated-hover-container-elevation: var(--md-filter-chip-elevated-hover-container-elevation, 2);--_elevated-pressed-container-elevation: var(--md-filter-chip-elevated-pressed-container-elevation, 1);--_elevated-selected-container-color: var(--md-filter-chip-elevated-selected-container-color, var(--md-sys-color-secondary-container, #e8def8));--_label-text-font: var(--md-filter-chip-label-text-font, var(--md-sys-typescale-label-large-font, var(--md-ref-typeface-plain, Roboto)));--_label-text-line-height: var(--md-filter-chip-label-text-line-height, var(--md-sys-typescale-label-large-line-height, 1.25rem));--_label-text-size: var(--md-filter-chip-label-text-size, var(--md-sys-typescale-label-large-size, 0.875rem));--_label-text-weight: var(--md-filter-chip-label-text-weight, var(--md-sys-typescale-label-large-weight, var(--md-ref-typeface-weight-medium, 500)));--_selected-focus-label-text-color: var(--md-filter-chip-selected-focus-label-text-color, var(--md-sys-color-on-secondary-container, #1d192b));--_selected-hover-label-text-color: var(--md-filter-chip-selected-hover-label-text-color, var(--md-sys-color-on-secondary-container, #1d192b));--_selected-hover-state-layer-color: var(--md-filter-chip-selected-hover-state-layer-color, var(--md-sys-color-on-secondary-container, #1d192b));--_selected-hover-state-layer-opacity: var(--md-filter-chip-selected-hover-state-layer-opacity, 0.08);--_selected-label-text-color: var(--md-filter-chip-selected-label-text-color, var(--md-sys-color-on-secondary-container, #1d192b));--_selected-pressed-label-text-color: var(--md-filter-chip-selected-pressed-label-text-color, var(--md-sys-color-on-secondary-container, #1d192b));--_selected-pressed-state-layer-color: var(--md-filter-chip-selected-pressed-state-layer-color, var(--md-sys-color-on-surface-variant, #49454f));--_selected-pressed-state-layer-opacity: var(--md-filter-chip-selected-pressed-state-layer-opacity, 0.12);--_elevated-container-color: var(--md-filter-chip-elevated-container-color, var(--md-sys-color-surface-container-low, #f7f2fa));--_disabled-outline-color: var(--md-filter-chip-disabled-outline-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-outline-opacity: var(--md-filter-chip-disabled-outline-opacity, 0.12);--_disabled-selected-container-color: var(--md-filter-chip-disabled-selected-container-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-selected-container-opacity: var(--md-filter-chip-disabled-selected-container-opacity, 0.12);--_focus-outline-color: var(--md-filter-chip-focus-outline-color, var(--md-sys-color-on-surface-variant, #49454f));--_outline-color: var(--md-filter-chip-outline-color, var(--md-sys-color-outline, #79747e));--_outline-width: var(--md-filter-chip-outline-width, 1px);--_selected-container-color: var(--md-filter-chip-selected-container-color, var(--md-sys-color-secondary-container, #e8def8));--_selected-outline-width: var(--md-filter-chip-selected-outline-width, 0px);--_focus-label-text-color: var(--md-filter-chip-focus-label-text-color, var(--md-sys-color-on-surface-variant, #49454f));--_hover-label-text-color: var(--md-filter-chip-hover-label-text-color, var(--md-sys-color-on-surface-variant, #49454f));--_hover-state-layer-color: var(--md-filter-chip-hover-state-layer-color, var(--md-sys-color-on-surface-variant, #49454f));--_hover-state-layer-opacity: var(--md-filter-chip-hover-state-layer-opacity, 0.08);--_label-text-color: var(--md-filter-chip-label-text-color, var(--md-sys-color-on-surface-variant, #49454f));--_pressed-label-text-color: var(--md-filter-chip-pressed-label-text-color, var(--md-sys-color-on-surface-variant, #49454f));--_pressed-state-layer-color: var(--md-filter-chip-pressed-state-layer-color, var(--md-sys-color-on-secondary-container, #1d192b));--_pressed-state-layer-opacity: var(--md-filter-chip-pressed-state-layer-opacity, 0.12);--_icon-size: var(--md-filter-chip-icon-size, 18px);--_disabled-leading-icon-color: var(--md-filter-chip-disabled-leading-icon-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-leading-icon-opacity: var(--md-filter-chip-disabled-leading-icon-opacity, 0.38);--_selected-focus-leading-icon-color: var(--md-filter-chip-selected-focus-leading-icon-color, var(--md-sys-color-on-secondary-container, #1d192b));--_selected-hover-leading-icon-color: var(--md-filter-chip-selected-hover-leading-icon-color, var(--md-sys-color-on-secondary-container, #1d192b));--_selected-leading-icon-color: var(--md-filter-chip-selected-leading-icon-color, var(--md-sys-color-on-secondary-container, #1d192b));--_selected-pressed-leading-icon-color: var(--md-filter-chip-selected-pressed-leading-icon-color, var(--md-sys-color-on-secondary-container, #1d192b));--_focus-leading-icon-color: var(--md-filter-chip-focus-leading-icon-color, var(--md-sys-color-primary, #6750a4));--_hover-leading-icon-color: var(--md-filter-chip-hover-leading-icon-color, var(--md-sys-color-primary, #6750a4));--_leading-icon-color: var(--md-filter-chip-leading-icon-color, var(--md-sys-color-primary, #6750a4));--_pressed-leading-icon-color: var(--md-filter-chip-pressed-leading-icon-color, var(--md-sys-color-primary, #6750a4));--_disabled-trailing-icon-color: var(--md-filter-chip-disabled-trailing-icon-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-trailing-icon-opacity: var(--md-filter-chip-disabled-trailing-icon-opacity, 0.38);--_selected-focus-trailing-icon-color: var(--md-filter-chip-selected-focus-trailing-icon-color, var(--md-sys-color-on-secondary-container, #1d192b));--_selected-hover-trailing-icon-color: var(--md-filter-chip-selected-hover-trailing-icon-color, var(--md-sys-color-on-secondary-container, #1d192b));--_selected-pressed-trailing-icon-color: var(--md-filter-chip-selected-pressed-trailing-icon-color, var(--md-sys-color-on-secondary-container, #1d192b));--_selected-trailing-icon-color: var(--md-filter-chip-selected-trailing-icon-color, var(--md-sys-color-on-secondary-container, #1d192b));--_focus-trailing-icon-color: var(--md-filter-chip-focus-trailing-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_hover-trailing-icon-color: var(--md-filter-chip-hover-trailing-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_pressed-trailing-icon-color: var(--md-filter-chip-pressed-trailing-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_trailing-icon-color: var(--md-filter-chip-trailing-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_container-shape-start-start: var(--md-filter-chip-container-shape-start-start, var(--md-filter-chip-container-shape, var(--md-sys-shape-corner-small, 8px)));--_container-shape-start-end: var(--md-filter-chip-container-shape-start-end, var(--md-filter-chip-container-shape, var(--md-sys-shape-corner-small, 8px)));--_container-shape-end-end: var(--md-filter-chip-container-shape-end-end, var(--md-filter-chip-container-shape, var(--md-sys-shape-corner-small, 8px)));--_container-shape-end-start: var(--md-filter-chip-container-shape-end-start, var(--md-filter-chip-container-shape, var(--md-sys-shape-corner-small, 8px)));--_leading-space: var(--md-filter-chip-leading-space, 16px);--_trailing-space: var(--md-filter-chip-trailing-space, 16px);--_icon-label-space: var(--md-filter-chip-icon-label-space, 8px);--_with-leading-icon-leading-space: var(--md-filter-chip-with-leading-icon-leading-space, 8px);--_with-trailing-icon-trailing-space: var(--md-filter-chip-with-trailing-icon-trailing-space, 8px)}.selected.elevated::before{background:var(--_elevated-selected-container-color)}.checkmark{height:var(--_icon-size);width:var(--_icon-size)}.disabled .checkmark{opacity:var(--_disabled-leading-icon-opacity)}@media(forced-colors: active){.disabled .checkmark{opacity:1}}\n`;\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./chips/internal/selectable-styles.css.\nimport {css} from 'lit';\nexport const styles = css`.selected{--md-ripple-hover-color: var(--_selected-hover-state-layer-color);--md-ripple-hover-opacity: var(--_selected-hover-state-layer-opacity);--md-ripple-pressed-color: var(--_selected-pressed-state-layer-color);--md-ripple-pressed-opacity: var(--_selected-pressed-state-layer-opacity)}:where(.selected)::before{background:var(--_selected-container-color)}:where(.selected) .outline{border-width:var(--_selected-outline-width)}:where(.selected.disabled)::before{background:var(--_disabled-selected-container-color);opacity:var(--_disabled-selected-container-opacity)}:where(.selected) .label{color:var(--_selected-label-text-color)}:where(.selected:hover) .label{color:var(--_selected-hover-label-text-color)}:where(.selected:focus) .label{color:var(--_selected-focus-label-text-color)}:where(.selected:active) .label{color:var(--_selected-pressed-label-text-color)}:where(.selected) .leading.icon{color:var(--_selected-leading-icon-color)}:where(.selected:hover) .leading.icon{color:var(--_selected-hover-leading-icon-color)}:where(.selected:focus) .leading.icon{color:var(--_selected-focus-leading-icon-color)}:where(.selected:active) .leading.icon{color:var(--_selected-pressed-leading-icon-color)}@media(forced-colors: active){:where(.selected:not(.elevated))::before{border:1px solid CanvasText}:where(.selected) .outline{border-width:1px}}\n`;\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./chips/internal/trailing-icon-styles.css.\nimport {css} from 'lit';\nexport const styles = css`.trailing.action{align-items:center;justify-content:center;padding-inline-start:var(--_icon-label-space);padding-inline-end:var(--_with-trailing-icon-trailing-space)}.trailing.action :is(md-ripple,md-focus-ring){border-radius:50%;height:calc(1.3333333333*var(--_icon-size));width:calc(1.3333333333*var(--_icon-size))}.trailing.action md-focus-ring{inset:unset}.has-trailing .primary.action{padding-inline-end:0}.trailing.icon{color:var(--_trailing-icon-color);height:var(--_icon-size);width:var(--_icon-size)}:where(:hover) .trailing.icon{color:var(--_hover-trailing-icon-color)}:where(:focus) .trailing.icon{color:var(--_focus-trailing-icon-color)}:where(:active) .trailing.icon{color:var(--_pressed-trailing-icon-color)}:where(.disabled) .trailing.icon{color:var(--_disabled-trailing-icon-color);opacity:var(--_disabled-trailing-icon-opacity)}:where(.selected) .trailing.icon{color:var(--_selected-trailing-icon-color)}:where(.selected:hover) .trailing.icon{color:var(--_selected-hover-trailing-icon-color)}:where(.selected:focus) .trailing.icon{color:var(--_selected-focus-trailing-icon-color)}:where(.selected:active) .trailing.icon{color:var(--_selected-pressed-trailing-icon-color)}@media(forced-colors: active){.trailing.icon{color:ButtonText}:where(.disabled) .trailing.icon{color:GrayText;opacity:1}}\n`;\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {CSSResultOrNative} from 'lit';\nimport {customElement} from 'lit/decorators.js';\n\nimport {styles as elevatedStyles} from './internal/elevated-styles.js';\nimport {FilterChip} from './internal/filter-chip.js';\nimport {styles} from './internal/filter-styles.js';\nimport {styles as selectableStyles} from './internal/selectable-styles.js';\nimport {styles as sharedStyles} from './internal/shared-styles.js';\nimport {styles as trailingIconStyles} from './internal/trailing-icon-styles.js';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'md-filter-chip': MdFilterChip;\n  }\n}\n\n/**\n * TODO(b/243982145): add docs\n *\n * @final\n * @suppress {visibility}\n */\n@customElement('md-filter-chip')\nexport class MdFilterChip extends FilterChip {\n  static override styles: CSSResultOrNative[] = [\n    sharedStyles,\n    elevatedStyles,\n    trailingIconStyles,\n    selectableStyles,\n    styles,\n  ];\n}\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {html, nothing} from 'lit';\nimport {property, query} from 'lit/decorators.js';\n\nimport {ARIAMixinStrict} from '../../internal/aria/aria.js';\n\nimport {MultiActionChip} from './multi-action-chip.js';\nimport {renderRemoveButton} from './trailing-icons.js';\n\n/**\n * An input chip component.\n *\n * @fires remove {Event} Dispatched when the remove button is clicked.\n */\nexport class InputChip extends MultiActionChip {\n  @property({type: Boolean}) avatar = false;\n  @property() href = '';\n  @property() target: '_blank' | '_parent' | '_self' | '_top' | '' = '';\n  @property({type: Boolean, attribute: 'remove-only'}) removeOnly = false;\n  @property({type: Boolean, reflect: true}) selected = false;\n\n  protected get primaryId() {\n    if (this.href) {\n      return 'link';\n    }\n\n    if (this.removeOnly) {\n      return '';\n    }\n\n    return 'button';\n  }\n\n  protected override get rippleDisabled() {\n    // Link chips cannot be disabled\n    return !this.href && this.disabled;\n  }\n\n  protected get primaryAction() {\n    // Don't use @query() since a remove-only input chip still has a span that\n    // has \"primary action\" classes.\n    if (this.removeOnly) {\n      return null;\n    }\n\n    return this.renderRoot.querySelector<HTMLElement>('.primary.action');\n  }\n\n  @query('.trailing.action')\n  protected readonly trailingAction!: HTMLElement | null;\n\n  protected override getContainerClasses() {\n    return {\n      ...super.getContainerClasses(),\n      avatar: this.avatar,\n      // Link chips cannot be disabled\n      disabled: !this.href && this.disabled,\n      link: !!this.href,\n      selected: this.selected,\n      'has-trailing': true,\n    };\n  }\n\n  protected override renderPrimaryAction(content: unknown) {\n    const {ariaLabel} = this as ARIAMixinStrict;\n    if (this.href) {\n      return html`\n        <a\n          class=\"primary action\"\n          id=\"link\"\n          aria-label=${ariaLabel || nothing}\n          href=${this.href}\n          target=${this.target || nothing}\n          >${content}</a\n        >\n      `;\n    }\n\n    if (this.removeOnly) {\n      return html`\n        <span class=\"primary action\" aria-label=${ariaLabel || nothing}>\n          ${content}\n        </span>\n      `;\n    }\n\n    return html`\n      <button\n        class=\"primary action\"\n        id=\"button\"\n        aria-label=${ariaLabel || nothing}\n        ?disabled=${this.disabled && !this.alwaysFocusable}\n        type=\"button\"\n        >${content}</button\n      >\n    `;\n  }\n\n  protected override renderTrailingAction(focusListener: EventListener) {\n    return renderRemoveButton({\n      focusListener,\n      ariaLabel: this.ariaLabelRemove,\n      disabled: !this.href && this.disabled,\n      tabbable: this.removeOnly,\n    });\n  }\n}\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./chips/internal/input-styles.css.\nimport {css} from 'lit';\nexport const styles = css`:host{--_container-height: var(--md-input-chip-container-height, 32px);--_disabled-label-text-color: var(--md-input-chip-disabled-label-text-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-label-text-opacity: var(--md-input-chip-disabled-label-text-opacity, 0.38);--_disabled-selected-container-color: var(--md-input-chip-disabled-selected-container-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-selected-container-opacity: var(--md-input-chip-disabled-selected-container-opacity, 0.12);--_label-text-font: var(--md-input-chip-label-text-font, var(--md-sys-typescale-label-large-font, var(--md-ref-typeface-plain, Roboto)));--_label-text-line-height: var(--md-input-chip-label-text-line-height, var(--md-sys-typescale-label-large-line-height, 1.25rem));--_label-text-size: var(--md-input-chip-label-text-size, var(--md-sys-typescale-label-large-size, 0.875rem));--_label-text-weight: var(--md-input-chip-label-text-weight, var(--md-sys-typescale-label-large-weight, var(--md-ref-typeface-weight-medium, 500)));--_selected-container-color: var(--md-input-chip-selected-container-color, var(--md-sys-color-secondary-container, #e8def8));--_selected-focus-label-text-color: var(--md-input-chip-selected-focus-label-text-color, var(--md-sys-color-on-secondary-container, #1d192b));--_selected-hover-label-text-color: var(--md-input-chip-selected-hover-label-text-color, var(--md-sys-color-on-secondary-container, #1d192b));--_selected-hover-state-layer-color: var(--md-input-chip-selected-hover-state-layer-color, var(--md-sys-color-on-secondary-container, #1d192b));--_selected-hover-state-layer-opacity: var(--md-input-chip-selected-hover-state-layer-opacity, 0.08);--_selected-label-text-color: var(--md-input-chip-selected-label-text-color, var(--md-sys-color-on-secondary-container, #1d192b));--_selected-outline-width: var(--md-input-chip-selected-outline-width, 0px);--_selected-pressed-label-text-color: var(--md-input-chip-selected-pressed-label-text-color, var(--md-sys-color-on-secondary-container, #1d192b));--_selected-pressed-state-layer-color: var(--md-input-chip-selected-pressed-state-layer-color, var(--md-sys-color-on-secondary-container, #1d192b));--_selected-pressed-state-layer-opacity: var(--md-input-chip-selected-pressed-state-layer-opacity, 0.12);--_disabled-outline-color: var(--md-input-chip-disabled-outline-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-outline-opacity: var(--md-input-chip-disabled-outline-opacity, 0.12);--_focus-label-text-color: var(--md-input-chip-focus-label-text-color, var(--md-sys-color-on-surface-variant, #49454f));--_focus-outline-color: var(--md-input-chip-focus-outline-color, var(--md-sys-color-on-surface-variant, #49454f));--_hover-label-text-color: var(--md-input-chip-hover-label-text-color, var(--md-sys-color-on-surface-variant, #49454f));--_hover-state-layer-color: var(--md-input-chip-hover-state-layer-color, var(--md-sys-color-on-surface-variant, #49454f));--_hover-state-layer-opacity: var(--md-input-chip-hover-state-layer-opacity, 0.08);--_label-text-color: var(--md-input-chip-label-text-color, var(--md-sys-color-on-surface-variant, #49454f));--_outline-color: var(--md-input-chip-outline-color, var(--md-sys-color-outline, #79747e));--_outline-width: var(--md-input-chip-outline-width, 1px);--_pressed-label-text-color: var(--md-input-chip-pressed-label-text-color, var(--md-sys-color-on-surface-variant, #49454f));--_pressed-state-layer-color: var(--md-input-chip-pressed-state-layer-color, var(--md-sys-color-on-surface-variant, #49454f));--_pressed-state-layer-opacity: var(--md-input-chip-pressed-state-layer-opacity, 0.12);--_avatar-shape: var(--md-input-chip-avatar-shape, var(--md-sys-shape-corner-full, 9999px));--_avatar-size: var(--md-input-chip-avatar-size, 24px);--_disabled-avatar-opacity: var(--md-input-chip-disabled-avatar-opacity, 0.38);--_disabled-leading-icon-color: var(--md-input-chip-disabled-leading-icon-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-leading-icon-opacity: var(--md-input-chip-disabled-leading-icon-opacity, 0.38);--_icon-size: var(--md-input-chip-icon-size, 18px);--_selected-focus-leading-icon-color: var(--md-input-chip-selected-focus-leading-icon-color, var(--md-sys-color-primary, #6750a4));--_selected-hover-leading-icon-color: var(--md-input-chip-selected-hover-leading-icon-color, var(--md-sys-color-primary, #6750a4));--_selected-leading-icon-color: var(--md-input-chip-selected-leading-icon-color, var(--md-sys-color-primary, #6750a4));--_selected-pressed-leading-icon-color: var(--md-input-chip-selected-pressed-leading-icon-color, var(--md-sys-color-primary, #6750a4));--_focus-leading-icon-color: var(--md-input-chip-focus-leading-icon-color, var(--md-sys-color-primary, #6750a4));--_hover-leading-icon-color: var(--md-input-chip-hover-leading-icon-color, var(--md-sys-color-primary, #6750a4));--_leading-icon-color: var(--md-input-chip-leading-icon-color, var(--md-sys-color-primary, #6750a4));--_pressed-leading-icon-color: var(--md-input-chip-pressed-leading-icon-color, var(--md-sys-color-primary, #6750a4));--_disabled-trailing-icon-color: var(--md-input-chip-disabled-trailing-icon-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-trailing-icon-opacity: var(--md-input-chip-disabled-trailing-icon-opacity, 0.38);--_selected-focus-trailing-icon-color: var(--md-input-chip-selected-focus-trailing-icon-color, var(--md-sys-color-on-secondary-container, #1d192b));--_selected-hover-trailing-icon-color: var(--md-input-chip-selected-hover-trailing-icon-color, var(--md-sys-color-on-secondary-container, #1d192b));--_selected-pressed-trailing-icon-color: var(--md-input-chip-selected-pressed-trailing-icon-color, var(--md-sys-color-on-secondary-container, #1d192b));--_selected-trailing-icon-color: var(--md-input-chip-selected-trailing-icon-color, var(--md-sys-color-on-secondary-container, #1d192b));--_focus-trailing-icon-color: var(--md-input-chip-focus-trailing-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_hover-trailing-icon-color: var(--md-input-chip-hover-trailing-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_pressed-trailing-icon-color: var(--md-input-chip-pressed-trailing-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_trailing-icon-color: var(--md-input-chip-trailing-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_container-shape-start-start: var(--md-input-chip-container-shape-start-start, var(--md-input-chip-container-shape, var(--md-sys-shape-corner-small, 8px)));--_container-shape-start-end: var(--md-input-chip-container-shape-start-end, var(--md-input-chip-container-shape, var(--md-sys-shape-corner-small, 8px)));--_container-shape-end-end: var(--md-input-chip-container-shape-end-end, var(--md-input-chip-container-shape, var(--md-sys-shape-corner-small, 8px)));--_container-shape-end-start: var(--md-input-chip-container-shape-end-start, var(--md-input-chip-container-shape, var(--md-sys-shape-corner-small, 8px)));--_leading-space: var(--md-input-chip-leading-space, 16px);--_trailing-space: var(--md-input-chip-trailing-space, 16px);--_icon-label-space: var(--md-input-chip-icon-label-space, 8px);--_with-leading-icon-leading-space: var(--md-input-chip-with-leading-icon-leading-space, 8px);--_with-trailing-icon-trailing-space: var(--md-input-chip-with-trailing-icon-trailing-space, 8px)}:host([avatar]){--_container-shape-start-start: var( --md-input-chip-container-shape-start-start, var(--md-input-chip-container-shape, calc(var(--_container-height) / 2)) );--_container-shape-start-end: var( --md-input-chip-container-shape-start-end, var(--md-input-chip-container-shape, calc(var(--_container-height) / 2)) );--_container-shape-end-end: var( --md-input-chip-container-shape-end-end, var(--md-input-chip-container-shape, calc(var(--_container-height) / 2)) );--_container-shape-end-start: var( --md-input-chip-container-shape-end-start, var(--md-input-chip-container-shape, calc(var(--_container-height) / 2)) )}.avatar .primary.action{padding-inline-start:4px}.avatar .leading.icon ::slotted(:first-child){border-radius:var(--_avatar-shape);height:var(--_avatar-size);width:var(--_avatar-size)}.disabled.avatar .leading.icon{opacity:var(--_disabled-avatar-opacity)}@media(forced-colors: active){.link .outline{border-color:ActiveText}.disabled.avatar .leading.icon{opacity:1}}\n`;\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {CSSResultOrNative} from 'lit';\nimport {customElement} from 'lit/decorators.js';\n\nimport {InputChip} from './internal/input-chip.js';\nimport {styles} from './internal/input-styles.js';\nimport {styles as selectableStyles} from './internal/selectable-styles.js';\nimport {styles as sharedStyles} from './internal/shared-styles.js';\nimport {styles as trailingIconStyles} from './internal/trailing-icon-styles.js';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'md-input-chip': MdInputChip;\n  }\n}\n\n/**\n * TODO(b/243982145): add docs\n *\n * @final\n * @suppress {visibility}\n */\n@customElement('md-input-chip')\nexport class MdInputChip extends InputChip {\n  static override styles: CSSResultOrNative[] = [\n    sharedStyles,\n    trailingIconStyles,\n    selectableStyles,\n    styles,\n  ];\n}\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {AssistChip} from './assist-chip.js';\n\n/**\n * A suggestion chip component.\n */\nexport class SuggestionChip extends AssistChip {}\n\n// Note: assist and suggestion chips are functionally identical with different\n// tokens.\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./chips/internal/suggestion-styles.css.\nimport {css} from 'lit';\nexport const styles = css`:host{--_container-height: var(--md-suggestion-chip-container-height, 32px);--_disabled-label-text-color: var(--md-suggestion-chip-disabled-label-text-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-label-text-opacity: var(--md-suggestion-chip-disabled-label-text-opacity, 0.38);--_elevated-container-color: var(--md-suggestion-chip-elevated-container-color, var(--md-sys-color-surface-container-low, #f7f2fa));--_elevated-container-elevation: var(--md-suggestion-chip-elevated-container-elevation, 1);--_elevated-container-shadow-color: var(--md-suggestion-chip-elevated-container-shadow-color, var(--md-sys-color-shadow, #000));--_elevated-disabled-container-color: var(--md-suggestion-chip-elevated-disabled-container-color, var(--md-sys-color-on-surface, #1d1b20));--_elevated-disabled-container-elevation: var(--md-suggestion-chip-elevated-disabled-container-elevation, 0);--_elevated-disabled-container-opacity: var(--md-suggestion-chip-elevated-disabled-container-opacity, 0.12);--_elevated-focus-container-elevation: var(--md-suggestion-chip-elevated-focus-container-elevation, 1);--_elevated-hover-container-elevation: var(--md-suggestion-chip-elevated-hover-container-elevation, 2);--_elevated-pressed-container-elevation: var(--md-suggestion-chip-elevated-pressed-container-elevation, 1);--_focus-label-text-color: var(--md-suggestion-chip-focus-label-text-color, var(--md-sys-color-on-surface-variant, #49454f));--_hover-label-text-color: var(--md-suggestion-chip-hover-label-text-color, var(--md-sys-color-on-surface-variant, #49454f));--_hover-state-layer-color: var(--md-suggestion-chip-hover-state-layer-color, var(--md-sys-color-on-surface-variant, #49454f));--_hover-state-layer-opacity: var(--md-suggestion-chip-hover-state-layer-opacity, 0.08);--_label-text-color: var(--md-suggestion-chip-label-text-color, var(--md-sys-color-on-surface-variant, #49454f));--_label-text-font: var(--md-suggestion-chip-label-text-font, var(--md-sys-typescale-label-large-font, var(--md-ref-typeface-plain, Roboto)));--_label-text-line-height: var(--md-suggestion-chip-label-text-line-height, var(--md-sys-typescale-label-large-line-height, 1.25rem));--_label-text-size: var(--md-suggestion-chip-label-text-size, var(--md-sys-typescale-label-large-size, 0.875rem));--_label-text-weight: var(--md-suggestion-chip-label-text-weight, var(--md-sys-typescale-label-large-weight, var(--md-ref-typeface-weight-medium, 500)));--_pressed-label-text-color: var(--md-suggestion-chip-pressed-label-text-color, var(--md-sys-color-on-surface-variant, #49454f));--_pressed-state-layer-color: var(--md-suggestion-chip-pressed-state-layer-color, var(--md-sys-color-on-surface-variant, #49454f));--_pressed-state-layer-opacity: var(--md-suggestion-chip-pressed-state-layer-opacity, 0.12);--_disabled-outline-color: var(--md-suggestion-chip-disabled-outline-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-outline-opacity: var(--md-suggestion-chip-disabled-outline-opacity, 0.12);--_focus-outline-color: var(--md-suggestion-chip-focus-outline-color, var(--md-sys-color-on-surface-variant, #49454f));--_outline-color: var(--md-suggestion-chip-outline-color, var(--md-sys-color-outline, #79747e));--_outline-width: var(--md-suggestion-chip-outline-width, 1px);--_disabled-leading-icon-color: var(--md-suggestion-chip-disabled-leading-icon-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-leading-icon-opacity: var(--md-suggestion-chip-disabled-leading-icon-opacity, 0.38);--_focus-leading-icon-color: var(--md-suggestion-chip-focus-leading-icon-color, var(--md-sys-color-primary, #6750a4));--_hover-leading-icon-color: var(--md-suggestion-chip-hover-leading-icon-color, var(--md-sys-color-primary, #6750a4));--_leading-icon-color: var(--md-suggestion-chip-leading-icon-color, var(--md-sys-color-primary, #6750a4));--_pressed-leading-icon-color: var(--md-suggestion-chip-pressed-leading-icon-color, var(--md-sys-color-primary, #6750a4));--_icon-size: var(--md-suggestion-chip-icon-size, 18px);--_container-shape-start-start: var(--md-suggestion-chip-container-shape-start-start, var(--md-suggestion-chip-container-shape, var(--md-sys-shape-corner-small, 8px)));--_container-shape-start-end: var(--md-suggestion-chip-container-shape-start-end, var(--md-suggestion-chip-container-shape, var(--md-sys-shape-corner-small, 8px)));--_container-shape-end-end: var(--md-suggestion-chip-container-shape-end-end, var(--md-suggestion-chip-container-shape, var(--md-sys-shape-corner-small, 8px)));--_container-shape-end-start: var(--md-suggestion-chip-container-shape-end-start, var(--md-suggestion-chip-container-shape, var(--md-sys-shape-corner-small, 8px)));--_leading-space: var(--md-suggestion-chip-leading-space, 16px);--_trailing-space: var(--md-suggestion-chip-trailing-space, 16px);--_icon-label-space: var(--md-suggestion-chip-icon-label-space, 8px);--_with-leading-icon-leading-space: var(--md-suggestion-chip-with-leading-icon-leading-space, 8px)}@media(forced-colors: active){.link .outline{border-color:ActiveText}}\n`;\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {CSSResultOrNative} from 'lit';\nimport {customElement} from 'lit/decorators.js';\n\nimport {styles as elevatedStyles} from './internal/elevated-styles.js';\nimport {styles as sharedStyles} from './internal/shared-styles.js';\nimport {SuggestionChip} from './internal/suggestion-chip.js';\nimport {styles} from './internal/suggestion-styles.js';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'md-suggestion-chip': MdSuggestionChip;\n  }\n}\n\n/**\n * TODO(b/243982145): add docs\n *\n * @final\n * @suppress {visibility}\n */\n@customElement('md-suggestion-chip')\nexport class MdSuggestionChip extends SuggestionChip {\n  static override styles: CSSResultOrNative[] = [sharedStyles, elevatedStyles, styles];\n}\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {LitElement} from 'lit';\nimport {property} from 'lit/decorators.js';\n\n/**\n * A divider component.\n */\nexport class Divider extends LitElement {\n  /**\n   * Indents the divider with equal padding on both sides.\n   */\n  @property({type: Boolean, reflect: true}) inset = false;\n\n  /**\n   * Indents the divider with padding on the leading side.\n   */\n  @property({type: Boolean, reflect: true, attribute: 'inset-start'})\n  insetStart = false;\n\n  /**\n   * Indents the divider with padding on the trailing side.\n   */\n  @property({type: Boolean, reflect: true, attribute: 'inset-end'})\n  insetEnd = false;\n}\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./divider/internal/divider-styles.css.\nimport {css} from 'lit';\nexport const styles = css`:host{box-sizing:border-box;color:var(--md-divider-color, var(--md-sys-color-outline-variant, #cac4d0));display:flex;height:var(--md-divider-thickness, 1px);width:100%}:host([inset]),:host([inset-start]){padding-inline-start:16px}:host([inset]),:host([inset-end]){padding-inline-end:16px}:host::before{background:currentColor;content:\"\";height:100%;width:100%}@media(forced-colors: active){:host::before{background:CanvasText}}\n`;\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {CSSResultOrNative} from 'lit';\nimport {customElement} from 'lit/decorators.js';\n\nimport {Divider} from './internal/divider.js';\nimport {styles} from './internal/divider-styles.js';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'md-divider': MdDivider;\n  }\n}\n\n/**\n * @summary A divider is a thin line that groups content in lists and\n * containers.\n *\n * @description Dividers can reinforce tapability, such as when used to separate\n * list items or define tappable regions in an accordion.\n *\n * @final\n * @suppress {visibility}\n */\n@customElement('md-divider')\nexport class MdDivider extends Divider {\n  static override styles: CSSResultOrNative[] = [styles];\n}\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {EASING} from '../../internal/motion/animation.js';\n\n/**\n * A dialog animation's arguments. See `Element.prototype.animate`.\n */\nexport type DialogAnimationArgs = Parameters<Element['animate']>;\n\n/**\n * A collection of dialog animations. Each element of a dialog may have multiple\n * animations.\n */\nexport interface DialogAnimation {\n  /**\n   * Animations for the dialog itself.\n   */\n  dialog?: DialogAnimationArgs[];\n\n  /**\n   * Animations for the scrim backdrop.\n   */\n  scrim?: DialogAnimationArgs[];\n\n  /**\n   * Animations for the container of the dialog.\n   */\n  container?: DialogAnimationArgs[];\n\n  /**\n   * Animations for the headline section.\n   */\n  headline?: DialogAnimationArgs[];\n\n  /**\n   * Animations for the contents section.\n   */\n  content?: DialogAnimationArgs[];\n  /**\n   * Animations for the actions section.\n   */\n  actions?: DialogAnimationArgs[];\n}\n\n/**\n * The default dialog open animation.\n */\nexport const DIALOG_DEFAULT_OPEN_ANIMATION: DialogAnimation = {\n  dialog: [\n    [\n      // Dialog slide down\n      [{'transform': 'translateY(-50px)'}, {'transform': 'translateY(0)'}],\n      {duration: 500, easing: EASING.EMPHASIZED},\n    ],\n  ],\n  scrim: [\n    [\n      // Scrim fade in\n      [{'opacity': 0}, {'opacity': 0.32}],\n      {duration: 500, easing: 'linear'},\n    ],\n  ],\n  container: [\n    [\n      // Container fade in\n      [{'opacity': 0}, {'opacity': 1}],\n      {duration: 50, easing: 'linear', pseudoElement: '::before'},\n    ],\n    [\n      // Container grow\n      // Note: current spec says to grow from 0dp->100% and shrink from\n      // 100%->35%. We change this to 35%->100% to simplify the animation that\n      // is supposed to clip content as it grows. From 0dp it's possible to see\n      // text/actions appear before the container has fully grown.\n      [{'height': '35%'}, {'height': '100%'}],\n      {duration: 500, easing: EASING.EMPHASIZED, pseudoElement: '::before'},\n    ],\n  ],\n  headline: [\n    [\n      // Headline fade in\n      [{'opacity': 0}, {'opacity': 0, offset: 0.2}, {'opacity': 1}],\n      {duration: 250, easing: 'linear', fill: 'forwards'},\n    ],\n  ],\n  content: [\n    [\n      // Content fade in\n      [{'opacity': 0}, {'opacity': 0, offset: 0.2}, {'opacity': 1}],\n      {duration: 250, easing: 'linear', fill: 'forwards'},\n    ],\n  ],\n  actions: [\n    [\n      // Actions fade in\n      [{'opacity': 0}, {'opacity': 0, offset: 0.5}, {'opacity': 1}],\n      {duration: 300, easing: 'linear', fill: 'forwards'},\n    ],\n  ],\n};\n\n/**\n * The default dialog close animation.\n */\nexport const DIALOG_DEFAULT_CLOSE_ANIMATION: DialogAnimation = {\n  dialog: [\n    [\n      // Dialog slide up\n      [{'transform': 'translateY(0)'}, {'transform': 'translateY(-50px)'}],\n      {duration: 150, easing: EASING.EMPHASIZED_ACCELERATE},\n    ],\n  ],\n  scrim: [\n    [\n      // Scrim fade out\n      [{'opacity': 0.32}, {'opacity': 0}],\n      {duration: 150, easing: 'linear'},\n    ],\n  ],\n  container: [\n    [\n      // Container shrink\n      [{'height': '100%'}, {'height': '35%'}],\n      {\n        duration: 150,\n        easing: EASING.EMPHASIZED_ACCELERATE,\n        pseudoElement: '::before',\n      },\n    ],\n    [\n      // Container fade out\n      [{'opacity': '1'}, {'opacity': '0'}],\n      {delay: 100, duration: 50, easing: 'linear', pseudoElement: '::before'},\n    ],\n  ],\n  headline: [\n    [\n      // Headline fade out\n      [{'opacity': 1}, {'opacity': 0}],\n      {duration: 100, easing: 'linear', fill: 'forwards'},\n    ],\n  ],\n  content: [\n    [\n      // Content fade out\n      [{'opacity': 1}, {'opacity': 0}],\n      {duration: 100, easing: 'linear', fill: 'forwards'},\n    ],\n  ],\n  actions: [\n    [\n      // Actions fade out\n      [{'opacity': 1}, {'opacity': 0}],\n      {duration: 100, easing: 'linear', fill: 'forwards'},\n    ],\n  ],\n};\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport '../../divider/divider.js';\n\nimport {html, isServer, LitElement, nothing} from 'lit';\nimport {property, query, state} from 'lit/decorators.js';\nimport {classMap} from 'lit/directives/class-map.js';\n\nimport {ARIAMixinStrict} from '../../internal/aria/aria.js';\nimport {requestUpdateOnAriaChange} from '../../internal/aria/delegate.js';\nimport {redispatchEvent} from '../../internal/events/redispatch-event.js';\n\nimport {\n  DIALOG_DEFAULT_CLOSE_ANIMATION,\n  DIALOG_DEFAULT_OPEN_ANIMATION,\n  DialogAnimation,\n  DialogAnimationArgs,\n} from './animations.js';\n\n/**\n * A dialog component.\n *\n * @fires open {Event} Dispatched when the dialog is opening before any animations.\n * @fires opened {Event} Dispatched when the dialog has opened after any animations.\n * @fires close {Event} Dispatched when the dialog is closing before any animations.\n * @fires closed {Event} Dispatched when the dialog has closed after any animations.\n * @fires cancel {Event} Dispatched when the dialog has been canceled by clicking\n * on the scrim or pressing Escape.\n */\nexport class Dialog extends LitElement {\n  static {\n    requestUpdateOnAriaChange(Dialog);\n  }\n\n  /**\n   * Opens the dialog when set to `true` and closes it when set to `false`.\n   */\n  @property({type: Boolean})\n  get open() {\n    return this.isOpen;\n  }\n\n  set open(open: boolean) {\n    if (open === this.isOpen) {\n      return;\n    }\n\n    this.isOpen = open;\n    if (open) {\n      this.setAttribute('open', '');\n      this.show();\n    } else {\n      this.removeAttribute('open');\n      this.close();\n    }\n  }\n\n  /**\n   * Skips the opening and closing animations.\n   */\n  @property({type: Boolean}) quick = false;\n\n  /**\n   * Gets or sets the dialog's return value, usually to indicate which button\n   * a user pressed to close it.\n   *\n   * https://developer.mozilla.org/en-US/docs/Web/API/HTMLDialogElement/returnValue\n   */\n  @property({attribute: false}) returnValue = '';\n\n  /**\n   * The type of dialog for accessibility. Set this to `alert` to announce a\n   * dialog as an alert dialog.\n   */\n  @property() type?: 'alert';\n\n  /**\n   * Gets the opening animation for a dialog. Set to a new function to customize\n   * the animation.\n   */\n  getOpenAnimation = () => DIALOG_DEFAULT_OPEN_ANIMATION;\n\n  /**\n   * Gets the closing animation for a dialog. Set to a new function to customize\n   * the animation.\n   */\n  getCloseAnimation = () => DIALOG_DEFAULT_CLOSE_ANIMATION;\n\n  private isOpen = false;\n  private isOpening = false;\n  // getIsConnectedPromise() immediately sets the resolve property.\n  private isConnectedPromiseResolve!: () => void;\n  private isConnectedPromise = this.getIsConnectedPromise();\n  @query('dialog') private readonly dialog!: HTMLDialogElement | null;\n  @query('.scrim') private readonly scrim!: HTMLDialogElement | null;\n  @query('.container') private readonly container!: HTMLDialogElement | null;\n  @query('.headline') private readonly headline!: HTMLDialogElement | null;\n  @query('.content') private readonly content!: HTMLDialogElement | null;\n  @query('.actions') private readonly actions!: HTMLDialogElement | null;\n  @state() private isAtScrollTop = false;\n  @state() private isAtScrollBottom = false;\n  @query('.scroller') private readonly scroller!: HTMLElement | null;\n  @query('.top.anchor') private readonly topAnchor!: HTMLElement | null;\n  @query('.bottom.anchor') private readonly bottomAnchor!: HTMLElement | null;\n  private nextClickIsFromContent = false;\n  private intersectionObserver?: IntersectionObserver;\n  // Dialogs should not be SSR'd while open, so we can just use runtime checks.\n  @state() private hasHeadline = false;\n  @state() private hasActions = false;\n  @state() private hasIcon = false;\n  private cancelAnimations?: AbortController;\n\n  // See https://bugs.chromium.org/p/chromium/issues/detail?id=1512224\n  // Chrome v120 has a bug where escape keys do not trigger cancels. If we get\n  // a dialog \"close\" event that is triggered without a \"cancel\" after an escape\n  // keydown, then we need to manually trigger our closing logic.\n  //\n  // This bug occurs when pressing escape to close a dialog without first\n  // interacting with the dialog's content.\n  //\n  // Cleanup tracking:\n  // https://github.com/material-components/material-web/issues/5330\n  // This can be removed when full CloseWatcher support added and the above bug\n  // in Chromium is fixed to fire 'cancel' with one escape press and close with\n  // multiple.\n  private escapePressedWithoutCancel = false;\n\n  constructor() {\n    super();\n    if (!isServer) {\n      this.addEventListener('submit', this.handleSubmit);\n\n      // We do not use `delegatesFocus: true` due to a Chromium bug with\n      // selecting text.\n      // See https://bugs.chromium.org/p/chromium/issues/detail?id=950357\n      //\n      // Material requires using focus trapping within the dialog (see\n      // b/314840853 for the bug to add it). This would normally mean we don't\n      // care about delegating focus since the `<dialog>` never receives it.\n      // However, we still need to handle situations when a user has not\n      // provided an focusable child in the content. When that happens, the\n      // `<dialog>` itself is focused.\n      //\n      // Listen to focus/blur instead of focusin/focusout since those can bubble\n      // from content.\n      this.addEventListener('focus', () => {\n        this.dialog?.focus();\n      });\n      this.addEventListener('blur', () => {\n        this.dialog?.blur();\n      });\n    }\n  }\n\n  /**\n   * Opens the dialog and fires a cancelable `open` event. After a dialog's\n   * animation, an `opened` event is fired.\n   *\n   * Add an `autofocus` attribute to a child of the dialog that should\n   * receive focus after opening.\n   *\n   * @return A Promise that resolves after the animation is finished and the\n   *     `opened` event was fired.\n   */\n  async show() {\n    this.isOpening = true;\n    // Dialogs can be opened before being attached to the DOM, so we need to\n    // wait until we're connected before calling `showModal()`.\n    await this.isConnectedPromise;\n    await this.updateComplete;\n    const dialog = this.dialog!;\n    // Check if already opened or if `dialog.close()` was called while awaiting.\n    if (dialog.open || !this.isOpening) {\n      this.isOpening = false;\n      return;\n    }\n\n    const preventOpen = !this.dispatchEvent(\n      new Event('open', {cancelable: true}),\n    );\n    if (preventOpen) {\n      this.open = false;\n      return;\n    }\n\n    // All Material dialogs are modal.\n    dialog.showModal();\n    this.open = true;\n    // Reset scroll position if re-opening a dialog with the same content.\n    if (this.scroller) {\n      this.scroller.scrollTop = 0;\n    }\n    // Native modal dialogs ignore autofocus and instead force focus to the\n    // first focusable child. Override this behavior if there is a child with\n    // an autofocus attribute.\n    this.querySelector<HTMLElement>('[autofocus]')?.focus();\n\n    await this.animateDialog(this.getOpenAnimation());\n    this.dispatchEvent(new Event('opened'));\n    this.isOpening = false;\n  }\n\n  /**\n   * Closes the dialog and fires a cancelable `close` event. After a dialog's\n   * animation, a `closed` event is fired.\n   *\n   * @param returnValue A return value usually indicating which button was used\n   *     to close a dialog. If a dialog is canceled by clicking the scrim or\n   *     pressing Escape, it will not change the return value after closing.\n   * @return A Promise that resolves after the animation is finished and the\n   *     `closed` event was fired.\n   */\n  async close(returnValue = this.returnValue) {\n    this.isOpening = false;\n    if (!this.isConnected) {\n      // Disconnected dialogs do not fire close events or animate.\n      this.open = false;\n      return;\n    }\n\n    await this.updateComplete;\n    const dialog = this.dialog!;\n    // Check if already closed or if `dialog.show()` was called while awaiting.\n    if (!dialog.open || this.isOpening) {\n      this.open = false;\n      return;\n    }\n\n    const prevReturnValue = this.returnValue;\n    this.returnValue = returnValue;\n    const preventClose = !this.dispatchEvent(\n      new Event('close', {cancelable: true}),\n    );\n    if (preventClose) {\n      this.returnValue = prevReturnValue;\n      return;\n    }\n\n    await this.animateDialog(this.getCloseAnimation());\n    dialog.close(returnValue);\n    this.open = false;\n    this.dispatchEvent(new Event('closed'));\n  }\n\n  override connectedCallback() {\n    super.connectedCallback();\n    this.isConnectedPromiseResolve();\n  }\n\n  override disconnectedCallback() {\n    super.disconnectedCallback();\n    this.isConnectedPromise = this.getIsConnectedPromise();\n  }\n\n  protected override render() {\n    const scrollable =\n      this.open && !(this.isAtScrollTop && this.isAtScrollBottom);\n    const classes = {\n      'has-headline': this.hasHeadline,\n      'has-actions': this.hasActions,\n      'has-icon': this.hasIcon,\n      'scrollable': scrollable,\n      'show-top-divider': scrollable && !this.isAtScrollTop,\n      'show-bottom-divider': scrollable && !this.isAtScrollBottom,\n    };\n\n    const {ariaLabel} = this as ARIAMixinStrict;\n    return html`\n      <div class=\"scrim\"></div>\n      <dialog\n        class=${classMap(classes)}\n        aria-label=${ariaLabel || nothing}\n        aria-labelledby=${this.hasHeadline ? 'headline' : nothing}\n        role=${this.type === 'alert' ? 'alertdialog' : nothing}\n        @cancel=${this.handleCancel}\n        @click=${this.handleDialogClick}\n        @close=${this.handleClose}\n        @keydown=${this.handleKeydown}\n        .returnValue=${this.returnValue || nothing}>\n        <div class=\"container\" @click=${this.handleContentClick}>\n          <div class=\"headline\">\n            <div class=\"icon\" aria-hidden=\"true\">\n              <slot name=\"icon\" @slotchange=${this.handleIconChange}></slot>\n            </div>\n            <h2 id=\"headline\" aria-hidden=${!this.hasHeadline || nothing}>\n              <slot\n                name=\"headline\"\n                @slotchange=${this.handleHeadlineChange}></slot>\n            </h2>\n            <md-divider></md-divider>\n          </div>\n          <div class=\"scroller\">\n            <div class=\"content\">\n              <div class=\"top anchor\"></div>\n              <slot name=\"content\"></slot>\n              <div class=\"bottom anchor\"></div>\n            </div>\n          </div>\n          <div class=\"actions\">\n            <md-divider></md-divider>\n            <slot name=\"actions\" @slotchange=${this.handleActionsChange}></slot>\n          </div>\n        </div>\n      </dialog>\n    `;\n  }\n\n  protected override firstUpdated() {\n    this.intersectionObserver = new IntersectionObserver(\n      (entries) => {\n        for (const entry of entries) {\n          this.handleAnchorIntersection(entry);\n        }\n      },\n      {root: this.scroller!},\n    );\n\n    this.intersectionObserver.observe(this.topAnchor!);\n    this.intersectionObserver.observe(this.bottomAnchor!);\n  }\n\n  private handleDialogClick() {\n    if (this.nextClickIsFromContent) {\n      // Avoid doing a layout calculation below if we know the click came from\n      // content.\n      this.nextClickIsFromContent = false;\n      return;\n    }\n\n    // Click originated on the backdrop. Native `<dialog>`s will not cancel,\n    // but Material dialogs do.\n    const preventDefault = !this.dispatchEvent(\n      new Event('cancel', {cancelable: true}),\n    );\n    if (preventDefault) {\n      return;\n    }\n\n    this.close();\n  }\n\n  private handleContentClick() {\n    this.nextClickIsFromContent = true;\n  }\n\n  private handleSubmit(event: SubmitEvent) {\n    const form = event.target as HTMLFormElement;\n    const {submitter} = event;\n    if (form.method !== 'dialog' || !submitter) {\n      return;\n    }\n\n    // Close reason is the submitter's value attribute, or the dialog's\n    // `returnValue` if there is no attribute.\n    this.close(submitter.getAttribute('value') ?? this.returnValue);\n  }\n\n  private handleCancel(event: Event) {\n    if (event.target !== this.dialog) {\n      // Ignore any cancel events dispatched by content.\n      return;\n    }\n\n    this.escapePressedWithoutCancel = false;\n    const preventDefault = !redispatchEvent(this, event);\n    // We always prevent default on the original dialog event since we'll\n    // animate closing it before it actually closes.\n    event.preventDefault();\n    if (preventDefault) {\n      return;\n    }\n\n    this.close();\n  }\n\n  private handleClose() {\n    if (!this.escapePressedWithoutCancel) {\n      return;\n    }\n\n    this.escapePressedWithoutCancel = false;\n    this.dialog?.dispatchEvent(new Event('cancel', {cancelable: true}));\n  }\n\n  private handleKeydown(event: KeyboardEvent) {\n    if (event.key !== 'Escape') {\n      return;\n    }\n\n    // An escape key was pressed. If a \"close\" event fires next without a\n    // \"cancel\" event first, then we know we're in the Chrome v120 bug.\n    this.escapePressedWithoutCancel = true;\n    // Wait a full task for the cancel/close event listeners to fire, then\n    // reset the flag.\n    setTimeout(() => {\n      this.escapePressedWithoutCancel = false;\n    });\n  }\n\n  private async animateDialog(animation: DialogAnimation) {\n    // Always cancel the previous animations. Animations can include `fill`\n    // modes that need to be cleared when `quick` is toggled. If not, content\n    // that faded out will remain hidden when a `quick` dialog re-opens after\n    // previously opening and closing without `quick`.\n    this.cancelAnimations?.abort();\n    this.cancelAnimations = new AbortController();\n    if (this.quick) {\n      return;\n    }\n\n    const {dialog, scrim, container, headline, content, actions} = this;\n    if (!dialog || !scrim || !container || !headline || !content || !actions) {\n      return;\n    }\n\n    const {\n      container: containerAnimate,\n      dialog: dialogAnimate,\n      scrim: scrimAnimate,\n      headline: headlineAnimate,\n      content: contentAnimate,\n      actions: actionsAnimate,\n    } = animation;\n\n    const elementAndAnimation: Array<[Element, DialogAnimationArgs[]]> = [\n      [dialog, dialogAnimate ?? []],\n      [scrim, scrimAnimate ?? []],\n      [container, containerAnimate ?? []],\n      [headline, headlineAnimate ?? []],\n      [content, contentAnimate ?? []],\n      [actions, actionsAnimate ?? []],\n    ];\n\n    const animations: Animation[] = [];\n    for (const [element, animation] of elementAndAnimation) {\n      for (const animateArgs of animation) {\n        const animation = element.animate(...animateArgs);\n        this.cancelAnimations.signal.addEventListener('abort', () => {\n          animation.cancel();\n        });\n\n        animations.push(animation);\n      }\n    }\n\n    await Promise.all(\n      animations.map((animation) =>\n        animation.finished.catch(() => {\n          // Ignore intentional AbortErrors when calling `animation.cancel()`.\n        }),\n      ),\n    );\n  }\n\n  private handleHeadlineChange(event: Event) {\n    const slot = event.target as HTMLSlotElement;\n    this.hasHeadline = slot.assignedElements().length > 0;\n  }\n\n  private handleActionsChange(event: Event) {\n    const slot = event.target as HTMLSlotElement;\n    this.hasActions = slot.assignedElements().length > 0;\n  }\n\n  private handleIconChange(event: Event) {\n    const slot = event.target as HTMLSlotElement;\n    this.hasIcon = slot.assignedElements().length > 0;\n  }\n\n  private handleAnchorIntersection(entry: IntersectionObserverEntry) {\n    const {target, isIntersecting} = entry;\n    if (target === this.topAnchor) {\n      this.isAtScrollTop = isIntersecting;\n    }\n\n    if (target === this.bottomAnchor) {\n      this.isAtScrollBottom = isIntersecting;\n    }\n  }\n\n  private getIsConnectedPromise() {\n    return new Promise<void>((resolve) => {\n      this.isConnectedPromiseResolve = resolve;\n    });\n  }\n}\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./dialog/internal/dialog-styles.css.\nimport {css} from 'lit';\nexport const styles = css`:host{border-start-start-radius:var(--md-dialog-container-shape-start-start, var(--md-dialog-container-shape, var(--md-sys-shape-corner-extra-large, 28px)));border-start-end-radius:var(--md-dialog-container-shape-start-end, var(--md-dialog-container-shape, var(--md-sys-shape-corner-extra-large, 28px)));border-end-end-radius:var(--md-dialog-container-shape-end-end, var(--md-dialog-container-shape, var(--md-sys-shape-corner-extra-large, 28px)));border-end-start-radius:var(--md-dialog-container-shape-end-start, var(--md-dialog-container-shape, var(--md-sys-shape-corner-extra-large, 28px)));display:contents;margin:auto;max-height:min(560px,100% - 48px);max-width:min(560px,100% - 48px);min-height:140px;min-width:280px;position:fixed;height:fit-content;width:fit-content}dialog{background:rgba(0,0,0,0);border:none;border-radius:inherit;flex-direction:column;height:inherit;margin:inherit;max-height:inherit;max-width:inherit;min-height:inherit;min-width:inherit;outline:none;overflow:visible;padding:0;width:inherit}dialog[open]{display:flex}::backdrop{background:none}.scrim{background:var(--md-sys-color-scrim, #000);display:none;inset:0;opacity:32%;pointer-events:none;position:fixed;z-index:1}:host([open]) .scrim{display:flex}h2{all:unset;align-self:stretch}.headline{align-items:center;color:var(--md-dialog-headline-color, var(--md-sys-color-on-surface, #1d1b20));display:flex;flex-direction:column;font-family:var(--md-dialog-headline-font, var(--md-sys-typescale-headline-small-font, var(--md-ref-typeface-brand, Roboto)));font-size:var(--md-dialog-headline-size, var(--md-sys-typescale-headline-small-size, 1.5rem));line-height:var(--md-dialog-headline-line-height, var(--md-sys-typescale-headline-small-line-height, 2rem));font-weight:var(--md-dialog-headline-weight, var(--md-sys-typescale-headline-small-weight, var(--md-ref-typeface-weight-regular, 400)));position:relative}slot[name=headline]::slotted(*){align-items:center;align-self:stretch;box-sizing:border-box;display:flex;gap:8px;padding:24px 24px 0}.icon{display:flex}slot[name=icon]::slotted(*){color:var(--md-dialog-icon-color, var(--md-sys-color-secondary, #625b71));fill:currentColor;font-size:var(--md-dialog-icon-size, 24px);margin-top:24px;height:var(--md-dialog-icon-size, 24px);width:var(--md-dialog-icon-size, 24px)}.has-icon slot[name=headline]::slotted(*){justify-content:center;padding-top:16px}.scrollable slot[name=headline]::slotted(*){padding-bottom:16px}.scrollable.has-headline slot[name=content]::slotted(*){padding-top:8px}.container{border-radius:inherit;display:flex;flex-direction:column;flex-grow:1;overflow:hidden;position:relative;transform-origin:top}.container::before{background:var(--md-dialog-container-color, var(--md-sys-color-surface-container-high, #ece6f0));border-radius:inherit;content:\"\";inset:0;position:absolute}.scroller{display:flex;flex:1;flex-direction:column;overflow:hidden;z-index:1}.scrollable .scroller{overflow-y:scroll}.content{color:var(--md-dialog-supporting-text-color, var(--md-sys-color-on-surface-variant, #49454f));font-family:var(--md-dialog-supporting-text-font, var(--md-sys-typescale-body-medium-font, var(--md-ref-typeface-plain, Roboto)));font-size:var(--md-dialog-supporting-text-size, var(--md-sys-typescale-body-medium-size, 0.875rem));line-height:var(--md-dialog-supporting-text-line-height, var(--md-sys-typescale-body-medium-line-height, 1.25rem));font-weight:var(--md-dialog-supporting-text-weight, var(--md-sys-typescale-body-medium-weight, var(--md-ref-typeface-weight-regular, 400)));height:min-content;position:relative}slot[name=content]::slotted(*){box-sizing:border-box;padding:24px}.anchor{position:absolute}.top.anchor{top:0}.bottom.anchor{bottom:0}.actions{position:relative}slot[name=actions]::slotted(*){box-sizing:border-box;display:flex;gap:8px;justify-content:flex-end;padding:16px 24px 24px}.has-actions slot[name=content]::slotted(*){padding-bottom:8px}md-divider{display:none;position:absolute}.has-headline.show-top-divider .headline md-divider,.has-actions.show-bottom-divider .actions md-divider{display:flex}.headline md-divider{bottom:0}.actions md-divider{top:0}@media(forced-colors: active){dialog{outline:2px solid WindowText}}\n`;\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {CSSResultOrNative} from 'lit';\nimport {customElement} from 'lit/decorators.js';\n\nimport {Dialog} from './internal/dialog.js';\nimport {styles} from './internal/dialog-styles.js';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'md-dialog': MdDialog;\n  }\n}\n\n/**\n * @summary Dialogs can require an action, communicate information, or help\n * users accomplish a task. There are two types of dialogs: basic and\n * full-screen.\n *\n * @description\n * A dialog is a modal window that appears in front of app content to provide\n * critical information or ask for a decision. Dialogs disable all app\n * functionality when they appear, and remain on screen until confirmed,\n * dismissed, or a required action has been taken.\n *\n * Dialogs are purposefully interruptive, so they should be used sparingly.\n * A less disruptive alternative is to use a menu, which provides options\n * without interrupting a user’s experience.\n *\n * On mobile devices only, complex dialogs should be displayed fullscreen.\n *\n * __Example usages:__\n * - Common use cases for basic dialogs include alerts, quick selection, and\n * confirmation.\n * - More complex dialogs may contain actions that require a series of tasks\n * to complete. One example is creating a calendar entry with the event title,\n * date, location, and time.\n *\n * @final\n * @suppress {visibility}\n */\n@customElement('md-dialog')\nexport class MdDialog extends Dialog {\n  static override styles: CSSResultOrNative[] = [styles];\n}\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport '../../elevation/elevation.js';\nimport '../../focus/md-focus-ring.js';\nimport '../../ripple/ripple.js';\n\nimport {html, LitElement, nothing} from 'lit';\nimport {property} from 'lit/decorators.js';\nimport {classMap} from 'lit/directives/class-map.js';\n\nimport {ARIAMixinStrict} from '../../internal/aria/aria.js';\nimport {requestUpdateOnAriaChange} from '../../internal/aria/delegate.js';\n\n/**\n * Sizes variants available to non-extended FABs.\n */\nexport type FabSize = 'medium' | 'small' | 'large';\n\n// tslint:disable-next-line:enforce-comments-on-exported-symbols\nexport abstract class SharedFab extends LitElement {\n  static {\n    requestUpdateOnAriaChange(SharedFab);\n  }\n\n  /** @nocollapse */\n  static override shadowRootOptions: ShadowRootInit = {\n    mode: 'open' as const,\n    delegatesFocus: true,\n  };\n\n  /**\n   * The size of the FAB.\n   *\n   * NOTE: Branded FABs cannot be sized to `small`, and Extended FABs do not\n   * have different sizes.\n   */\n  @property({reflect: true}) size: FabSize = 'medium';\n\n  /**\n   * The text to display on the FAB.\n   */\n  @property() label = '';\n\n  /**\n   * Lowers the FAB's elevation.\n   */\n  @property({type: Boolean}) lowered = false;\n\n  protected override render() {\n    // Needed for closure conformance\n    const {ariaLabel} = this as ARIAMixinStrict;\n    return html`\n      <button\n        class=\"fab ${classMap(this.getRenderClasses())}\"\n        aria-label=${ariaLabel || nothing}>\n        <md-elevation part=\"elevation\"></md-elevation>\n        <md-focus-ring part=\"focus-ring\"></md-focus-ring>\n        <md-ripple class=\"ripple\"></md-ripple>\n        ${this.renderTouchTarget()} ${this.renderIcon()} ${this.renderLabel()}\n      </button>\n    `;\n  }\n\n  protected getRenderClasses() {\n    const isExtended = !!this.label;\n    return {\n      'lowered': this.lowered,\n      'small': this.size === 'small' && !isExtended,\n      'large': this.size === 'large' && !isExtended,\n      'extended': isExtended,\n    };\n  }\n\n  private renderTouchTarget() {\n    return html`<div class=\"touch-target\"></div>`;\n  }\n\n  private renderLabel() {\n    return this.label ? html`<span class=\"label\">${this.label}</span>` : '';\n  }\n\n  private renderIcon() {\n    const {ariaLabel} = this as ARIAMixinStrict;\n    return html`<span class=\"icon\">\n      <slot\n        name=\"icon\"\n        aria-hidden=${ariaLabel || this.label\n          ? 'true'\n          : (nothing as unknown as 'false')}>\n        <span></span>\n      </slot>\n    </span>`;\n  }\n}\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {property} from 'lit/decorators.js';\n\nimport {SharedFab} from './shared.js';\n\n/**\n * The variants available to non-branded FABs.\n */\nexport type FabVariant = 'surface' | 'primary' | 'secondary' | 'tertiary';\n\n// tslint:disable-next-line:enforce-comments-on-exported-symbols\nexport class Fab extends SharedFab {\n  /**\n   * The FAB color variant to render.\n   */\n  @property() variant: FabVariant = 'surface';\n\n  protected override getRenderClasses() {\n    return {\n      ...super.getRenderClasses(),\n      'primary': this.variant === 'primary',\n      'secondary': this.variant === 'secondary',\n      'tertiary': this.variant === 'tertiary',\n    };\n  }\n}\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./fab/internal/fab-branded-styles.css.\nimport {css} from 'lit';\nexport const styles = css`:host{--_container-color: var(--md-fab-branded-container-color, var(--md-sys-color-surface-container-high, #ece6f0));--_container-elevation: var(--md-fab-branded-container-elevation, 3);--_container-height: var(--md-fab-branded-container-height, 56px);--_container-shadow-color: var(--md-fab-branded-container-shadow-color, var(--md-sys-color-shadow, #000));--_container-width: var(--md-fab-branded-container-width, 56px);--_focus-container-elevation: var(--md-fab-branded-focus-container-elevation, 3);--_hover-container-elevation: var(--md-fab-branded-hover-container-elevation, 4);--_hover-state-layer-color: var(--md-fab-branded-hover-state-layer-color, var(--md-sys-color-primary, #6750a4));--_hover-state-layer-opacity: var(--md-fab-branded-hover-state-layer-opacity, 0.08);--_icon-size: var(--md-fab-branded-icon-size, 36px);--_lowered-container-color: var(--md-fab-branded-lowered-container-color, var(--md-sys-color-surface-container-low, #f7f2fa));--_lowered-container-elevation: var(--md-fab-branded-lowered-container-elevation, 1);--_lowered-focus-container-elevation: var(--md-fab-branded-lowered-focus-container-elevation, 1);--_lowered-hover-container-elevation: var(--md-fab-branded-lowered-hover-container-elevation, 2);--_lowered-pressed-container-elevation: var(--md-fab-branded-lowered-pressed-container-elevation, 1);--_pressed-container-elevation: var(--md-fab-branded-pressed-container-elevation, 3);--_pressed-state-layer-color: var(--md-fab-branded-pressed-state-layer-color, var(--md-sys-color-primary, #6750a4));--_pressed-state-layer-opacity: var(--md-fab-branded-pressed-state-layer-opacity, 0.12);--_focus-label-text-color: var(--md-fab-branded-focus-label-text-color, var(--md-sys-color-primary, #6750a4));--_hover-label-text-color: var(--md-fab-branded-hover-label-text-color, var(--md-sys-color-primary, #6750a4));--_label-text-color: var(--md-fab-branded-label-text-color, var(--md-sys-color-on-surface, #1d1b20));--_label-text-font: var(--md-fab-branded-label-text-font, var(--md-sys-typescale-label-large-font, var(--md-ref-typeface-plain, Roboto)));--_label-text-size: var(--md-fab-branded-label-text-size, var(--md-sys-typescale-label-large-size, 0.875rem));--_label-text-line-height: var(--md-fab-branded-label-text-line-height, var(--md-sys-typescale-label-large-line-height, 1.25rem));--_label-text-weight: var(--md-fab-branded-label-text-weight, var(--md-sys-typescale-label-large-weight, var(--md-ref-typeface-weight-medium, 500)));--_large-container-height: var(--md-fab-branded-large-container-height, 96px);--_large-container-width: var(--md-fab-branded-large-container-width, 96px);--_large-icon-size: var(--md-fab-branded-large-icon-size, 48px);--_pressed-label-text-color: var(--md-fab-branded-pressed-label-text-color, var(--md-sys-color-primary, #6750a4));--_container-shape-start-start: var(--md-fab-branded-container-shape-start-start, var(--md-fab-branded-container-shape, var(--md-sys-shape-corner-large, 16px)));--_container-shape-start-end: var(--md-fab-branded-container-shape-start-end, var(--md-fab-branded-container-shape, var(--md-sys-shape-corner-large, 16px)));--_container-shape-end-end: var(--md-fab-branded-container-shape-end-end, var(--md-fab-branded-container-shape, var(--md-sys-shape-corner-large, 16px)));--_container-shape-end-start: var(--md-fab-branded-container-shape-end-start, var(--md-fab-branded-container-shape, var(--md-sys-shape-corner-large, 16px)));--_large-container-shape-start-start: var(--md-fab-branded-large-container-shape-start-start, var(--md-fab-branded-large-container-shape, var(--md-sys-shape-corner-extra-large, 28px)));--_large-container-shape-start-end: var(--md-fab-branded-large-container-shape-start-end, var(--md-fab-branded-large-container-shape, var(--md-sys-shape-corner-extra-large, 28px)));--_large-container-shape-end-end: var(--md-fab-branded-large-container-shape-end-end, var(--md-fab-branded-large-container-shape, var(--md-sys-shape-corner-extra-large, 28px)));--_large-container-shape-end-start: var(--md-fab-branded-large-container-shape-end-start, var(--md-fab-branded-large-container-shape, var(--md-sys-shape-corner-extra-large, 28px)))}\n`;\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./fab/internal/forced-colors-styles.css.\nimport {css} from 'lit';\nexport const styles = css`@media(forced-colors: active){.fab{border:1px solid ButtonText}.fab.extended{padding-inline-start:15px;padding-inline-end:19px}md-focus-ring{--md-focus-ring-outward-offset: 3px}}\n`;\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./fab/internal/shared-styles.css.\nimport {css} from 'lit';\nexport const styles = css`:host{--md-ripple-hover-opacity: var(--_hover-state-layer-opacity);--md-ripple-pressed-opacity: var(--_pressed-state-layer-opacity);display:inline-flex;-webkit-tap-highlight-color:rgba(0,0,0,0)}:host([size=medium][touch-target=wrapper]){margin:max(0px,48px - var(--_container-height))}:host([size=large][touch-target=wrapper]){margin:max(0px,48px - var(--_large-container-height))}.fab,.icon,.icon ::slotted(*){display:flex}.fab{align-items:center;justify-content:center;vertical-align:middle;padding:0;position:relative;height:var(--_container-height);transition-property:background-color;border-width:0px;outline:none;z-index:0;text-transform:inherit;--md-elevation-level: var(--_container-elevation);--md-elevation-shadow-color: var(--_container-shadow-color);background-color:var(--_container-color);--md-ripple-hover-color: var(--_hover-state-layer-color);--md-ripple-pressed-color: var(--_pressed-state-layer-color)}.fab.extended{width:inherit;box-sizing:border-box;padding-inline-start:16px;padding-inline-end:20px}.fab:not(.extended){width:var(--_container-width)}.fab.large{width:var(--_large-container-width);height:var(--_large-container-height)}.fab.large .icon ::slotted(*){width:var(--_large-icon-size);height:var(--_large-icon-size);font-size:var(--_large-icon-size)}.fab.large,.fab.large .ripple{border-start-start-radius:var(--_large-container-shape-start-start);border-start-end-radius:var(--_large-container-shape-start-end);border-end-start-radius:var(--_large-container-shape-end-start);border-end-end-radius:var(--_large-container-shape-end-end)}.fab.large md-focus-ring{--md-focus-ring-shape-start-start: var(--_large-container-shape-start-start);--md-focus-ring-shape-start-end: var(--_large-container-shape-start-end);--md-focus-ring-shape-end-end: var(--_large-container-shape-end-end);--md-focus-ring-shape-end-start: var(--_large-container-shape-end-start)}.fab:focus{--md-elevation-level: var(--_focus-container-elevation)}.fab:hover{--md-elevation-level: var(--_hover-container-elevation)}.fab:active{--md-elevation-level: var(--_pressed-container-elevation)}.fab.lowered{background-color:var(--_lowered-container-color);--md-elevation-level: var(--_lowered-container-elevation)}.fab.lowered:focus{--md-elevation-level: var(--_lowered-focus-container-elevation)}.fab.lowered:hover{--md-elevation-level: var(--_lowered-hover-container-elevation)}.fab.lowered:active{--md-elevation-level: var(--_lowered-pressed-container-elevation)}.fab .label{color:var(--_label-text-color)}.fab:hover .fab .label{color:var(--_hover-label-text-color)}.fab:focus .fab .label{color:var(--_focus-label-text-color)}.fab:active .fab .label{color:var(--_pressed-label-text-color)}.label{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;font-family:var(--_label-text-font);font-size:var(--_label-text-size);line-height:var(--_label-text-line-height);font-weight:var(--_label-text-weight)}.fab.extended .icon ::slotted(*){margin-inline-end:12px}.ripple{overflow:hidden}.ripple,md-elevation{z-index:-1}.touch-target{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%)}:host([touch-target=none]) .touch-target{display:none}md-elevation,.fab{transition-duration:280ms;transition-timing-function:cubic-bezier(0.2, 0, 0, 1)}.fab,.ripple{border-start-start-radius:var(--_container-shape-start-start);border-start-end-radius:var(--_container-shape-start-end);border-end-start-radius:var(--_container-shape-end-start);border-end-end-radius:var(--_container-shape-end-end)}md-focus-ring{--md-focus-ring-shape-start-start: var(--_container-shape-start-start);--md-focus-ring-shape-start-end: var(--_container-shape-start-end);--md-focus-ring-shape-end-end: var(--_container-shape-end-end);--md-focus-ring-shape-end-start: var(--_container-shape-end-start)}.icon ::slotted(*){width:var(--_icon-size);height:var(--_icon-size);font-size:var(--_icon-size)}\n`;\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {CSSResultOrNative} from 'lit';\nimport {customElement} from 'lit/decorators.js';\n\nimport {Fab, FabVariant} from './internal/fab.js';\nimport {styles} from './internal/fab-branded-styles.js';\nimport {styles as forcedColors} from './internal/forced-colors-styles.js';\nimport {styles as sharedStyles} from './internal/shared-styles.js';\n\nexport {type FabSize} from './internal/shared.js';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'md-branded-fab': MdBrandedFab;\n  }\n}\n\n/**\n * @summary Floating action buttons (FABs) help people take primary actions.\n * They’re used to represent the most important action on a screen, such as\n * Create or Reply.\n *\n * @description\n * __Emphasis:__ High emphasis – For the primary, most important, or most common\n * action on a screen\n *\n * __Rationale:__ The FAB remains the default component for a screen’s primary\n * action. It comes in three sizes: small FAB, FAB, and large FAB. The extended\n * FAB’s wider format and text label give it more visual prominence than a  FAB.\n * It’s often used on larger screens where a FAB would seem too small. Branded\n * FABs are used to specifically call attention to branded logo icons.\n *\n * __Example usages:__\n * - FAB\n *   - Create\n *   - Compose\n * - Extended FAB\n *   - Create\n *   - Compose\n *   - New Thread\n *   - New File\n *\n * @final\n * @suppress {visibility}\n */\n@customElement('md-branded-fab')\nexport class MdBrandedFab extends Fab {\n  /**\n   * Branded FABs have no variants\n   */\n  override variant!: FabVariant;\n\n  override getRenderClasses() {\n    return {\n      ...super.getRenderClasses(),\n      'primary': false,\n      'secondary': false,\n      'tertiary': false,\n      'small': false,\n    };\n  }\n  static override styles: CSSResultOrNative[] = [sharedStyles, styles, forcedColors];\n}\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./fab/internal/fab-styles.css.\nimport {css} from 'lit';\nexport const styles = css`:host{--_container-color: var(--md-fab-container-color, var(--md-sys-color-surface-container-high, #ece6f0));--_container-elevation: var(--md-fab-container-elevation, 3);--_container-height: var(--md-fab-container-height, 56px);--_container-shadow-color: var(--md-fab-container-shadow-color, var(--md-sys-color-shadow, #000));--_container-width: var(--md-fab-container-width, 56px);--_focus-container-elevation: var(--md-fab-focus-container-elevation, 3);--_focus-icon-color: var(--md-fab-focus-icon-color, var(--md-sys-color-primary, #6750a4));--_hover-container-elevation: var(--md-fab-hover-container-elevation, 4);--_hover-icon-color: var(--md-fab-hover-icon-color, var(--md-sys-color-primary, #6750a4));--_hover-state-layer-color: var(--md-fab-hover-state-layer-color, var(--md-sys-color-primary, #6750a4));--_hover-state-layer-opacity: var(--md-fab-hover-state-layer-opacity, 0.08);--_icon-color: var(--md-fab-icon-color, var(--md-sys-color-primary, #6750a4));--_icon-size: var(--md-fab-icon-size, 24px);--_lowered-container-color: var(--md-fab-lowered-container-color, var(--md-sys-color-surface-container-low, #f7f2fa));--_lowered-container-elevation: var(--md-fab-lowered-container-elevation, 1);--_lowered-focus-container-elevation: var(--md-fab-lowered-focus-container-elevation, 1);--_lowered-hover-container-elevation: var(--md-fab-lowered-hover-container-elevation, 2);--_lowered-pressed-container-elevation: var(--md-fab-lowered-pressed-container-elevation, 1);--_pressed-container-elevation: var(--md-fab-pressed-container-elevation, 3);--_pressed-icon-color: var(--md-fab-pressed-icon-color, var(--md-sys-color-primary, #6750a4));--_pressed-state-layer-color: var(--md-fab-pressed-state-layer-color, var(--md-sys-color-primary, #6750a4));--_pressed-state-layer-opacity: var(--md-fab-pressed-state-layer-opacity, 0.12);--_focus-label-text-color: var(--md-fab-focus-label-text-color, var(--md-sys-color-primary, #6750a4));--_hover-label-text-color: var(--md-fab-hover-label-text-color, var(--md-sys-color-primary, #6750a4));--_label-text-color: var(--md-fab-label-text-color, var(--md-sys-color-primary, #6750a4));--_label-text-font: var(--md-fab-label-text-font, var(--md-sys-typescale-label-large-font, var(--md-ref-typeface-plain, Roboto)));--_label-text-line-height: var(--md-fab-label-text-line-height, var(--md-sys-typescale-label-large-line-height, 1.25rem));--_label-text-size: var(--md-fab-label-text-size, var(--md-sys-typescale-label-large-size, 0.875rem));--_label-text-weight: var(--md-fab-label-text-weight, var(--md-sys-typescale-label-large-weight, var(--md-ref-typeface-weight-medium, 500)));--_large-container-height: var(--md-fab-large-container-height, 96px);--_large-container-width: var(--md-fab-large-container-width, 96px);--_large-icon-size: var(--md-fab-large-icon-size, 36px);--_pressed-label-text-color: var(--md-fab-pressed-label-text-color, var(--md-sys-color-primary, #6750a4));--_primary-container-color: var(--md-fab-primary-container-color, var(--md-sys-color-primary-container, #eaddff));--_primary-focus-icon-color: var(--md-fab-primary-focus-icon-color, var(--md-sys-color-on-primary-container, #21005d));--_primary-focus-label-text-color: var(--md-fab-primary-focus-label-text-color, var(--md-sys-color-on-primary-container, #21005d));--_primary-hover-icon-color: var(--md-fab-primary-hover-icon-color, var(--md-sys-color-on-primary-container, #21005d));--_primary-hover-label-text-color: var(--md-fab-primary-hover-label-text-color, var(--md-sys-color-on-primary-container, #21005d));--_primary-hover-state-layer-color: var(--md-fab-primary-hover-state-layer-color, var(--md-sys-color-on-primary-container, #21005d));--_primary-icon-color: var(--md-fab-primary-icon-color, var(--md-sys-color-on-primary-container, #21005d));--_primary-label-text-color: var(--md-fab-primary-label-text-color, var(--md-sys-color-on-primary-container, #21005d));--_primary-pressed-icon-color: var(--md-fab-primary-pressed-icon-color, var(--md-sys-color-on-primary-container, #21005d));--_primary-pressed-label-text-color: var(--md-fab-primary-pressed-label-text-color, var(--md-sys-color-on-primary-container, #21005d));--_primary-pressed-state-layer-color: var(--md-fab-primary-pressed-state-layer-color, var(--md-sys-color-on-primary-container, #21005d));--_secondary-container-color: var(--md-fab-secondary-container-color, var(--md-sys-color-secondary-container, #e8def8));--_secondary-focus-icon-color: var(--md-fab-secondary-focus-icon-color, var(--md-sys-color-on-secondary-container, #1d192b));--_secondary-focus-label-text-color: var(--md-fab-secondary-focus-label-text-color, var(--md-sys-color-on-secondary-container, #1d192b));--_secondary-hover-icon-color: var(--md-fab-secondary-hover-icon-color, var(--md-sys-color-on-secondary-container, #1d192b));--_secondary-hover-label-text-color: var(--md-fab-secondary-hover-label-text-color, var(--md-sys-color-on-secondary-container, #1d192b));--_secondary-hover-state-layer-color: var(--md-fab-secondary-hover-state-layer-color, var(--md-sys-color-on-secondary-container, #1d192b));--_secondary-icon-color: var(--md-fab-secondary-icon-color, var(--md-sys-color-on-secondary-container, #1d192b));--_secondary-label-text-color: var(--md-fab-secondary-label-text-color, var(--md-sys-color-on-secondary-container, #1d192b));--_secondary-pressed-icon-color: var(--md-fab-secondary-pressed-icon-color, var(--md-sys-color-on-secondary-container, #1d192b));--_secondary-pressed-label-text-color: var(--md-fab-secondary-pressed-label-text-color, var(--md-sys-color-on-secondary-container, #1d192b));--_secondary-pressed-state-layer-color: var(--md-fab-secondary-pressed-state-layer-color, var(--md-sys-color-on-secondary-container, #1d192b));--_small-container-height: var(--md-fab-small-container-height, 40px);--_small-container-width: var(--md-fab-small-container-width, 40px);--_small-icon-size: var(--md-fab-small-icon-size, 24px);--_tertiary-container-color: var(--md-fab-tertiary-container-color, var(--md-sys-color-tertiary-container, #ffd8e4));--_tertiary-focus-icon-color: var(--md-fab-tertiary-focus-icon-color, var(--md-sys-color-on-tertiary-container, #31111d));--_tertiary-focus-label-text-color: var(--md-fab-tertiary-focus-label-text-color, var(--md-sys-color-on-tertiary-container, #31111d));--_tertiary-hover-icon-color: var(--md-fab-tertiary-hover-icon-color, var(--md-sys-color-on-tertiary-container, #31111d));--_tertiary-hover-label-text-color: var(--md-fab-tertiary-hover-label-text-color, var(--md-sys-color-on-tertiary-container, #31111d));--_tertiary-hover-state-layer-color: var(--md-fab-tertiary-hover-state-layer-color, var(--md-sys-color-on-tertiary-container, #31111d));--_tertiary-icon-color: var(--md-fab-tertiary-icon-color, var(--md-sys-color-on-tertiary-container, #31111d));--_tertiary-label-text-color: var(--md-fab-tertiary-label-text-color, var(--md-sys-color-on-tertiary-container, #31111d));--_tertiary-pressed-icon-color: var(--md-fab-tertiary-pressed-icon-color, var(--md-sys-color-on-tertiary-container, #31111d));--_tertiary-pressed-label-text-color: var(--md-fab-tertiary-pressed-label-text-color, var(--md-sys-color-on-tertiary-container, #31111d));--_tertiary-pressed-state-layer-color: var(--md-fab-tertiary-pressed-state-layer-color, var(--md-sys-color-on-tertiary-container, #31111d));--_container-shape-start-start: var(--md-fab-container-shape-start-start, var(--md-fab-container-shape, var(--md-sys-shape-corner-large, 16px)));--_container-shape-start-end: var(--md-fab-container-shape-start-end, var(--md-fab-container-shape, var(--md-sys-shape-corner-large, 16px)));--_container-shape-end-end: var(--md-fab-container-shape-end-end, var(--md-fab-container-shape, var(--md-sys-shape-corner-large, 16px)));--_container-shape-end-start: var(--md-fab-container-shape-end-start, var(--md-fab-container-shape, var(--md-sys-shape-corner-large, 16px)));--_large-container-shape-start-start: var(--md-fab-large-container-shape-start-start, var(--md-fab-large-container-shape, var(--md-sys-shape-corner-extra-large, 28px)));--_large-container-shape-start-end: var(--md-fab-large-container-shape-start-end, var(--md-fab-large-container-shape, var(--md-sys-shape-corner-extra-large, 28px)));--_large-container-shape-end-end: var(--md-fab-large-container-shape-end-end, var(--md-fab-large-container-shape, var(--md-sys-shape-corner-extra-large, 28px)));--_large-container-shape-end-start: var(--md-fab-large-container-shape-end-start, var(--md-fab-large-container-shape, var(--md-sys-shape-corner-extra-large, 28px)));--_small-container-shape-start-start: var(--md-fab-small-container-shape-start-start, var(--md-fab-small-container-shape, var(--md-sys-shape-corner-medium, 12px)));--_small-container-shape-start-end: var(--md-fab-small-container-shape-start-end, var(--md-fab-small-container-shape, var(--md-sys-shape-corner-medium, 12px)));--_small-container-shape-end-end: var(--md-fab-small-container-shape-end-end, var(--md-fab-small-container-shape, var(--md-sys-shape-corner-medium, 12px)));--_small-container-shape-end-start: var(--md-fab-small-container-shape-end-start, var(--md-fab-small-container-shape, var(--md-sys-shape-corner-medium, 12px)));cursor:pointer}:host([size=small][touch-target=wrapper]){margin:max(0px,48px - var(--_small-container-height))}.fab{cursor:inherit}.fab .icon ::slotted(*){color:var(--_icon-color)}.fab:focus{color:var(--_focus-icon-color)}.fab:hover{color:var(--_hover-icon-color)}.fab:active{color:var(--_pressed-icon-color)}.fab.primary{background-color:var(--_primary-container-color);--md-ripple-hover-color: var(--_primary-hover-state-layer-color);--md-ripple-pressed-color: var(--_primary-pressed-state-layer-color)}.fab.primary .icon ::slotted(*){color:var(--_primary-icon-color)}.fab.primary:focus{color:var(--_primary-focus-icon-color)}.fab.primary:hover{color:var(--_primary-hover-icon-color)}.fab.primary:active{color:var(--_primary-pressed-icon-color)}.fab.primary .label{color:var(--_primary-label-text-color)}.fab:hover .fab.primary .label{color:var(--_primary-hover-label-text-color)}.fab:focus .fab.primary .label{color:var(--_primary-focus-label-text-color)}.fab:active .fab.primary .label{color:var(--_primary-pressed-label-text-color)}.fab.secondary{background-color:var(--_secondary-container-color);--md-ripple-hover-color: var(--_secondary-hover-state-layer-color);--md-ripple-pressed-color: var(--_secondary-pressed-state-layer-color)}.fab.secondary .icon ::slotted(*){color:var(--_secondary-icon-color)}.fab.secondary:focus{color:var(--_secondary-focus-icon-color)}.fab.secondary:hover{color:var(--_secondary-hover-icon-color)}.fab.secondary:active{color:var(--_secondary-pressed-icon-color)}.fab.secondary .label{color:var(--_secondary-label-text-color)}.fab:hover .fab.secondary .label{color:var(--_secondary-hover-label-text-color)}.fab:focus .fab.secondary .label{color:var(--_secondary-focus-label-text-color)}.fab:active .fab.secondary .label{color:var(--_secondary-pressed-label-text-color)}.fab.tertiary{background-color:var(--_tertiary-container-color);--md-ripple-hover-color: var(--_tertiary-hover-state-layer-color);--md-ripple-pressed-color: var(--_tertiary-pressed-state-layer-color)}.fab.tertiary .icon ::slotted(*){color:var(--_tertiary-icon-color)}.fab.tertiary:focus{color:var(--_tertiary-focus-icon-color)}.fab.tertiary:hover{color:var(--_tertiary-hover-icon-color)}.fab.tertiary:active{color:var(--_tertiary-pressed-icon-color)}.fab.tertiary .label{color:var(--_tertiary-label-text-color)}.fab:hover .fab.tertiary .label{color:var(--_tertiary-hover-label-text-color)}.fab:focus .fab.tertiary .label{color:var(--_tertiary-focus-label-text-color)}.fab:active .fab.tertiary .label{color:var(--_tertiary-pressed-label-text-color)}.fab.extended slot span{padding-inline-start:4px}.fab.small{width:var(--_small-container-width);height:var(--_small-container-height)}.fab.small .icon ::slotted(*){width:var(--_small-icon-size);height:var(--_small-icon-size);font-size:var(--_small-icon-size)}.fab.small,.fab.small .ripple{border-start-start-radius:var(--_small-container-shape-start-start);border-start-end-radius:var(--_small-container-shape-start-end);border-end-start-radius:var(--_small-container-shape-end-start);border-end-end-radius:var(--_small-container-shape-end-end)}.fab.small md-focus-ring{--md-focus-ring-shape-start-start: var(--_small-container-shape-start-start);--md-focus-ring-shape-start-end: var(--_small-container-shape-start-end);--md-focus-ring-shape-end-end: var(--_small-container-shape-end-end);--md-focus-ring-shape-end-start: var(--_small-container-shape-end-start)}\n`;\n", "/**\n * @license\n * Copyright 2022 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {CSSResultOrNative} from 'lit';\nimport {customElement} from 'lit/decorators.js';\n\nimport {Fab} from './internal/fab.js';\nimport {styles} from './internal/fab-styles.js';\nimport {styles as forcedColors} from './internal/forced-colors-styles.js';\nimport {styles as sharedStyles} from './internal/shared-styles.js';\n\nexport {type FabVariant} from './internal/fab.js';\nexport {type FabSize} from './internal/shared.js';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'md-fab': MdFab;\n  }\n}\n\n/**\n * @summary Floating action buttons (FABs) help people take primary actions.\n * They’re used to represent the most important action on a screen, such as\n * Create or Reply.\n *\n * @description\n * __Emphasis:__ High emphasis – For the primary, most important, or most common\n * action on a screen\n *\n * __Rationale:__ The FAB remains the default component for a screen’s primary\n * action. It comes in three sizes: small FAB, FAB, and large FAB. The extended\n * FAB’s wider format and text label give it more visual prominence than a  FAB.\n * It’s often used on larger screens where a FAB would seem too small.\n *\n * __Example usages:__\n * - FAB\n *   - Create\n *   - Compose\n * - Extended FAB\n *   - Create\n *   - Compose\n *   - New Thread\n *   - New File\n *\n * @final\n * @suppress {visibility}\n */\n@customElement('md-fab')\nexport class MdFab extends Fab {\n  static override styles: CSSResultOrNative[] = [sharedStyles, styles, forcedColors];\n}\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  html,\n  LitElement,\n  nothing,\n  PropertyValues,\n  render,\n  TemplateResult,\n} from 'lit';\nimport {property, query, queryAssignedElements, state} from 'lit/decorators.js';\nimport {classMap} from 'lit/directives/class-map.js';\n\nimport {EASING} from '../../internal/motion/animation.js';\n\n/**\n * A field component.\n */\nexport class Field extends LitElement {\n  @property({type: Boolean}) disabled = false;\n  @property({type: Boolean}) error = false;\n  @property({type: Boolean}) focused = false;\n  @property() label = '';\n  @property({type: Boolean}) populated = false;\n  @property({type: Boolean}) required = false;\n  @property({type: Boolean}) resizable = false;\n  @property({attribute: 'supporting-text'}) supportingText = '';\n  @property({attribute: 'error-text'}) errorText = '';\n  @property({type: Number}) count = -1;\n  @property({type: Number}) max = -1;\n\n  /**\n   * Whether or not the field has leading content.\n   */\n  @property({type: Boolean, attribute: 'has-start'}) hasStart = false;\n\n  /**\n   * Whether or not the field has trailing content.\n   */\n  @property({type: Boolean, attribute: 'has-end'}) hasEnd = false;\n\n  @queryAssignedElements({slot: 'aria-describedby'})\n  private readonly slottedAriaDescribedBy!: HTMLElement[];\n\n  private get counterText() {\n    // Count and max are typed as number, but can be set to null when Lit removes\n    // their attributes. These getters coerce back to a number for calculations.\n    const countAsNumber = this.count ?? -1;\n    const maxAsNumber = this.max ?? -1;\n    // Counter does not show if count is negative, or max is negative or 0.\n    if (countAsNumber < 0 || maxAsNumber <= 0) {\n      return '';\n    }\n\n    return `${countAsNumber} / ${maxAsNumber}`;\n  }\n\n  private get supportingOrErrorText() {\n    return this.error && this.errorText ? this.errorText : this.supportingText;\n  }\n\n  @state() private isAnimating = false;\n  private labelAnimation?: Animation;\n  /**\n   * When set to true, the error text's `role=\"alert\"` will be removed, then\n   * re-added after an animation frame. This will re-announce an error message\n   * to screen readers.\n   */\n  @state() private refreshErrorAlert = false;\n  @state() private disableTransitions = false;\n  @query('.label.floating')\n  private readonly floatingLabelEl!: HTMLElement | null;\n  @query('.label.resting') private readonly restingLabelEl!: HTMLElement | null;\n  @query('.container') private readonly containerEl!: HTMLElement | null;\n\n  /**\n   * Re-announces the field's error supporting text to screen readers.\n   *\n   * Error text announces to screen readers anytime it is visible and changes.\n   * Use the method to re-announce the message when the text has not changed,\n   * but announcement is still needed (such as for `reportValidity()`).\n   */\n  reannounceError() {\n    this.refreshErrorAlert = true;\n  }\n\n  protected override update(props: PropertyValues<Field>) {\n    // Client-side property updates\n    const isDisabledChanging =\n      props.has('disabled') && props.get('disabled') !== undefined;\n    if (isDisabledChanging) {\n      this.disableTransitions = true;\n    }\n\n    // When disabling, remove focus styles if focused.\n    if (this.disabled && this.focused) {\n      props.set('focused', true);\n      this.focused = false;\n    }\n\n    // Animate if focused or populated change.\n    this.animateLabelIfNeeded({\n      wasFocused: props.get('focused'),\n      wasPopulated: props.get('populated'),\n    });\n\n    super.update(props);\n  }\n\n  protected override render() {\n    const floatingLabel = this.renderLabel(/*isFloating*/ true);\n    const restingLabel = this.renderLabel(/*isFloating*/ false);\n    const outline = this.renderOutline?.(floatingLabel);\n    const classes = {\n      'disabled': this.disabled,\n      'disable-transitions': this.disableTransitions,\n      'error': this.error && !this.disabled,\n      'focused': this.focused,\n      'with-start': this.hasStart,\n      'with-end': this.hasEnd,\n      'populated': this.populated,\n      'resizable': this.resizable,\n      'required': this.required,\n      'no-label': !this.label,\n    };\n\n    return html`\n      <div class=\"field ${classMap(classes)}\">\n        <div class=\"container-overflow\">\n          ${this.renderBackground?.()} ${this.renderIndicator?.()} ${outline}\n          <div class=\"container\">\n            <div class=\"start\">\n              <slot name=\"start\"></slot>\n            </div>\n            <div class=\"middle\">\n              <div class=\"label-wrapper\">\n                ${restingLabel} ${outline ? nothing : floatingLabel}\n              </div>\n              <div class=\"content\">\n                <slot></slot>\n              </div>\n            </div>\n            <div class=\"end\">\n              <slot name=\"end\"></slot>\n            </div>\n          </div>\n        </div>\n        ${this.renderSupportingText()}\n      </div>\n    `;\n  }\n\n  protected override updated(changed: PropertyValues<Field>) {\n    if (\n      changed.has('supportingText') ||\n      changed.has('errorText') ||\n      changed.has('count') ||\n      changed.has('max')\n    ) {\n      this.updateSlottedAriaDescribedBy();\n    }\n\n    if (this.refreshErrorAlert) {\n      // The past render cycle removed the role=\"alert\" from the error message.\n      // Re-add it after an animation frame to re-announce the error.\n      requestAnimationFrame(() => {\n        this.refreshErrorAlert = false;\n      });\n    }\n\n    if (this.disableTransitions) {\n      requestAnimationFrame(() => {\n        this.disableTransitions = false;\n      });\n    }\n  }\n\n  protected renderBackground?(): TemplateResult;\n  protected renderIndicator?(): TemplateResult;\n  protected renderOutline?(floatingLabel: unknown): TemplateResult;\n\n  private renderSupportingText() {\n    const {supportingOrErrorText, counterText} = this;\n    if (!supportingOrErrorText && !counterText) {\n      return nothing;\n    }\n\n    // Always render the supporting text span so that our `space-around`\n    // container puts the counter at the end.\n    const start = html`<span>${supportingOrErrorText}</span>`;\n    // Conditionally render counter so we don't render the extra `gap`.\n    // TODO(b/244473435): add aria-label and announcements\n    const end = counterText\n      ? html`<span class=\"counter\">${counterText}</span>`\n      : nothing;\n\n    // Announce if there is an error and error text visible.\n    // If refreshErrorAlert is true, do not announce. This will remove the\n    // role=\"alert\" attribute. Another render cycle will happen after an\n    // animation frame to re-add the role.\n    const shouldErrorAnnounce =\n      this.error && this.errorText && !this.refreshErrorAlert;\n    const role = shouldErrorAnnounce ? 'alert' : nothing;\n    return html`\n      <div class=\"supporting-text\" role=${role}>${start}${end}</div>\n      <slot\n        name=\"aria-describedby\"\n        @slotchange=${this.updateSlottedAriaDescribedBy}></slot>\n    `;\n  }\n\n  private updateSlottedAriaDescribedBy() {\n    for (const element of this.slottedAriaDescribedBy) {\n      render(html`${this.supportingOrErrorText} ${this.counterText}`, element);\n      element.setAttribute('hidden', '');\n    }\n  }\n\n  private renderLabel(isFloating: boolean) {\n    if (!this.label) {\n      return nothing;\n    }\n\n    let visible: boolean;\n    if (isFloating) {\n      // Floating label is visible when focused/populated or when animating.\n      visible = this.focused || this.populated || this.isAnimating;\n    } else {\n      // Resting label is visible when unfocused. It is never visible while\n      // animating.\n      visible = !this.focused && !this.populated && !this.isAnimating;\n    }\n\n    const classes = {\n      'hidden': !visible,\n      'floating': isFloating,\n      'resting': !isFloating,\n    };\n\n    // Add '*' if a label is present and the field is required\n    const labelText = `${this.label}${this.required ? '*' : ''}`;\n\n    return html`\n      <span class=\"label ${classMap(classes)}\" aria-hidden=${!visible}\n        >${labelText}</span\n      >\n    `;\n  }\n\n  private animateLabelIfNeeded({\n    wasFocused,\n    wasPopulated,\n  }: {\n    wasFocused?: boolean;\n    wasPopulated?: boolean;\n  }) {\n    if (!this.label) {\n      return;\n    }\n\n    wasFocused ??= this.focused;\n    wasPopulated ??= this.populated;\n    const wasFloating = wasFocused || wasPopulated;\n    const shouldBeFloating = this.focused || this.populated;\n    if (wasFloating === shouldBeFloating) {\n      return;\n    }\n\n    this.isAnimating = true;\n    this.labelAnimation?.cancel();\n\n    // Only one label is visible at a time for clearer text rendering.\n    // The floating label is visible and used during animation. At the end of\n    // the animation, it will either remain visible (if floating) or hide and\n    // the resting label will be shown.\n    //\n    // We don't use forward filling because if the dimensions of the text field\n    // change (leading icon removed, density changes, etc), then the animation\n    // will be inaccurate.\n    //\n    // Re-calculating the animation each time will prevent any visual glitches\n    // from appearing.\n    // TODO(b/241113345): use animation tokens\n    this.labelAnimation = this.floatingLabelEl?.animate(\n      this.getLabelKeyframes(),\n      {duration: 150, easing: EASING.STANDARD},\n    );\n\n    this.labelAnimation?.addEventListener('finish', () => {\n      // At the end of the animation, update the visible label.\n      this.isAnimating = false;\n    });\n  }\n\n  private getLabelKeyframes() {\n    const {floatingLabelEl, restingLabelEl} = this;\n    if (!floatingLabelEl || !restingLabelEl) {\n      return [];\n    }\n\n    const {\n      x: floatingX,\n      y: floatingY,\n      height: floatingHeight,\n    } = floatingLabelEl.getBoundingClientRect();\n    const {\n      x: restingX,\n      y: restingY,\n      height: restingHeight,\n    } = restingLabelEl.getBoundingClientRect();\n    const floatingScrollWidth = floatingLabelEl.scrollWidth;\n    const restingScrollWidth = restingLabelEl.scrollWidth;\n    // Scale by width ratio instead of font size since letter-spacing will scale\n    // incorrectly. Using the width we can better approximate the adjusted\n    // scale and compensate for tracking and overflow.\n    // (use scrollWidth instead of width to account for clipped labels)\n    const scale = restingScrollWidth / floatingScrollWidth;\n    const xDelta = restingX - floatingX;\n    // The line-height of the resting and floating label are different. When\n    // we move the floating label down to the resting label's position, it won't\n    // exactly match because of this. We need to adjust by half of what the\n    // final scaled floating label's height will be.\n    const yDelta =\n      restingY -\n      floatingY +\n      Math.round((restingHeight - floatingHeight * scale) / 2);\n\n    // Create the two transforms: floating to resting (using the calculations\n    // above), and resting to floating (re-setting the transform to initial\n    // values).\n    const restTransform = `translateX(${xDelta}px) translateY(${yDelta}px) scale(${scale})`;\n    const floatTransform = `translateX(0) translateY(0) scale(1)`;\n\n    // Constrain the floating labels width to a scaled percentage of the\n    // resting label's width. This will prevent long clipped labels from\n    // overflowing the container.\n    const restingClientWidth = restingLabelEl.clientWidth;\n    const isRestingClipped = restingScrollWidth > restingClientWidth;\n    const width = isRestingClipped ? `${restingClientWidth / scale}px` : '';\n    if (this.focused || this.populated) {\n      return [\n        {transform: restTransform, width},\n        {transform: floatTransform, width},\n      ];\n    }\n\n    return [\n      {transform: floatTransform, width},\n      {transform: restTransform, width},\n    ];\n  }\n\n  getSurfacePositionClientRect() {\n    return this.containerEl!.getBoundingClientRect();\n  }\n}\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {html} from 'lit';\n\nimport {Field} from './field.js';\n\n/**\n * A filled field component.\n */\nexport class FilledField extends Field {\n  protected override renderBackground() {\n    return html`\n      <div class=\"background\"></div>\n      <div class=\"state-layer\"></div>\n    `;\n  }\n\n  protected override renderIndicator() {\n    return html`<div class=\"active-indicator\"></div>`;\n  }\n}\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./field/internal/filled-styles.css.\nimport {css} from 'lit';\nexport const styles = css`@layer styles{:host{--_active-indicator-color: var(--md-filled-field-active-indicator-color, var(--md-sys-color-on-surface-variant, #49454f));--_active-indicator-height: var(--md-filled-field-active-indicator-height, 1px);--_bottom-space: var(--md-filled-field-bottom-space, 16px);--_container-color: var(--md-filled-field-container-color, var(--md-sys-color-surface-container-highest, #e6e0e9));--_content-color: var(--md-filled-field-content-color, var(--md-sys-color-on-surface, #1d1b20));--_content-font: var(--md-filled-field-content-font, var(--md-sys-typescale-body-large-font, var(--md-ref-typeface-plain, Roboto)));--_content-line-height: var(--md-filled-field-content-line-height, var(--md-sys-typescale-body-large-line-height, 1.5rem));--_content-size: var(--md-filled-field-content-size, var(--md-sys-typescale-body-large-size, 1rem));--_content-weight: var(--md-filled-field-content-weight, var(--md-sys-typescale-body-large-weight, var(--md-ref-typeface-weight-regular, 400)));--_disabled-active-indicator-color: var(--md-filled-field-disabled-active-indicator-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-active-indicator-height: var(--md-filled-field-disabled-active-indicator-height, 1px);--_disabled-active-indicator-opacity: var(--md-filled-field-disabled-active-indicator-opacity, 0.38);--_disabled-container-color: var(--md-filled-field-disabled-container-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-container-opacity: var(--md-filled-field-disabled-container-opacity, 0.04);--_disabled-content-color: var(--md-filled-field-disabled-content-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-content-opacity: var(--md-filled-field-disabled-content-opacity, 0.38);--_disabled-label-text-color: var(--md-filled-field-disabled-label-text-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-label-text-opacity: var(--md-filled-field-disabled-label-text-opacity, 0.38);--_disabled-leading-content-color: var(--md-filled-field-disabled-leading-content-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-leading-content-opacity: var(--md-filled-field-disabled-leading-content-opacity, 0.38);--_disabled-supporting-text-color: var(--md-filled-field-disabled-supporting-text-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-supporting-text-opacity: var(--md-filled-field-disabled-supporting-text-opacity, 0.38);--_disabled-trailing-content-color: var(--md-filled-field-disabled-trailing-content-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-trailing-content-opacity: var(--md-filled-field-disabled-trailing-content-opacity, 0.38);--_error-active-indicator-color: var(--md-filled-field-error-active-indicator-color, var(--md-sys-color-error, #b3261e));--_error-content-color: var(--md-filled-field-error-content-color, var(--md-sys-color-on-surface, #1d1b20));--_error-focus-active-indicator-color: var(--md-filled-field-error-focus-active-indicator-color, var(--md-sys-color-error, #b3261e));--_error-focus-content-color: var(--md-filled-field-error-focus-content-color, var(--md-sys-color-on-surface-variant, #49454f));--_error-focus-label-text-color: var(--md-filled-field-error-focus-label-text-color, var(--md-sys-color-error, #b3261e));--_error-focus-leading-content-color: var(--md-filled-field-error-focus-leading-content-color, var(--md-sys-color-on-surface-variant, #49454f));--_error-focus-supporting-text-color: var(--md-filled-field-error-focus-supporting-text-color, var(--md-sys-color-error, #b3261e));--_error-focus-trailing-content-color: var(--md-filled-field-error-focus-trailing-content-color, var(--md-sys-color-error, #b3261e));--_error-hover-active-indicator-color: var(--md-filled-field-error-hover-active-indicator-color, var(--md-sys-color-on-error-container, #410e0b));--_error-hover-content-color: var(--md-filled-field-error-hover-content-color, var(--md-sys-color-on-surface, #1d1b20));--_error-hover-label-text-color: var(--md-filled-field-error-hover-label-text-color, var(--md-sys-color-on-error-container, #410e0b));--_error-hover-leading-content-color: var(--md-filled-field-error-hover-leading-content-color, var(--md-sys-color-on-surface-variant, #49454f));--_error-hover-state-layer-color: var(--md-filled-field-error-hover-state-layer-color, var(--md-sys-color-on-surface, #1d1b20));--_error-hover-state-layer-opacity: var(--md-filled-field-error-hover-state-layer-opacity, 0.08);--_error-hover-supporting-text-color: var(--md-filled-field-error-hover-supporting-text-color, var(--md-sys-color-error, #b3261e));--_error-hover-trailing-content-color: var(--md-filled-field-error-hover-trailing-content-color, var(--md-sys-color-on-error-container, #410e0b));--_error-label-text-color: var(--md-filled-field-error-label-text-color, var(--md-sys-color-error, #b3261e));--_error-leading-content-color: var(--md-filled-field-error-leading-content-color, var(--md-sys-color-on-surface-variant, #49454f));--_error-supporting-text-color: var(--md-filled-field-error-supporting-text-color, var(--md-sys-color-error, #b3261e));--_error-trailing-content-color: var(--md-filled-field-error-trailing-content-color, var(--md-sys-color-error, #b3261e));--_focus-active-indicator-color: var(--md-filled-field-focus-active-indicator-color, var(--md-sys-color-primary, #6750a4));--_focus-active-indicator-height: var(--md-filled-field-focus-active-indicator-height, 3px);--_focus-content-color: var(--md-filled-field-focus-content-color, var(--md-sys-color-on-surface, #1d1b20));--_focus-label-text-color: var(--md-filled-field-focus-label-text-color, var(--md-sys-color-primary, #6750a4));--_focus-leading-content-color: var(--md-filled-field-focus-leading-content-color, var(--md-sys-color-on-surface-variant, #49454f));--_focus-supporting-text-color: var(--md-filled-field-focus-supporting-text-color, var(--md-sys-color-on-surface-variant, #49454f));--_focus-trailing-content-color: var(--md-filled-field-focus-trailing-content-color, var(--md-sys-color-on-surface-variant, #49454f));--_hover-active-indicator-color: var(--md-filled-field-hover-active-indicator-color, var(--md-sys-color-on-surface, #1d1b20));--_hover-active-indicator-height: var(--md-filled-field-hover-active-indicator-height, 1px);--_hover-content-color: var(--md-filled-field-hover-content-color, var(--md-sys-color-on-surface, #1d1b20));--_hover-label-text-color: var(--md-filled-field-hover-label-text-color, var(--md-sys-color-on-surface-variant, #49454f));--_hover-leading-content-color: var(--md-filled-field-hover-leading-content-color, var(--md-sys-color-on-surface-variant, #49454f));--_hover-state-layer-color: var(--md-filled-field-hover-state-layer-color, var(--md-sys-color-on-surface, #1d1b20));--_hover-state-layer-opacity: var(--md-filled-field-hover-state-layer-opacity, 0.08);--_hover-supporting-text-color: var(--md-filled-field-hover-supporting-text-color, var(--md-sys-color-on-surface-variant, #49454f));--_hover-trailing-content-color: var(--md-filled-field-hover-trailing-content-color, var(--md-sys-color-on-surface-variant, #49454f));--_label-text-color: var(--md-filled-field-label-text-color, var(--md-sys-color-on-surface-variant, #49454f));--_label-text-font: var(--md-filled-field-label-text-font, var(--md-sys-typescale-body-large-font, var(--md-ref-typeface-plain, Roboto)));--_label-text-line-height: var(--md-filled-field-label-text-line-height, var(--md-sys-typescale-body-large-line-height, 1.5rem));--_label-text-populated-line-height: var(--md-filled-field-label-text-populated-line-height, var(--md-sys-typescale-body-small-line-height, 1rem));--_label-text-populated-size: var(--md-filled-field-label-text-populated-size, var(--md-sys-typescale-body-small-size, 0.75rem));--_label-text-size: var(--md-filled-field-label-text-size, var(--md-sys-typescale-body-large-size, 1rem));--_label-text-weight: var(--md-filled-field-label-text-weight, var(--md-sys-typescale-body-large-weight, var(--md-ref-typeface-weight-regular, 400)));--_leading-content-color: var(--md-filled-field-leading-content-color, var(--md-sys-color-on-surface-variant, #49454f));--_leading-space: var(--md-filled-field-leading-space, 16px);--_supporting-text-color: var(--md-filled-field-supporting-text-color, var(--md-sys-color-on-surface-variant, #49454f));--_supporting-text-font: var(--md-filled-field-supporting-text-font, var(--md-sys-typescale-body-small-font, var(--md-ref-typeface-plain, Roboto)));--_supporting-text-leading-space: var(--md-filled-field-supporting-text-leading-space, 16px);--_supporting-text-line-height: var(--md-filled-field-supporting-text-line-height, var(--md-sys-typescale-body-small-line-height, 1rem));--_supporting-text-size: var(--md-filled-field-supporting-text-size, var(--md-sys-typescale-body-small-size, 0.75rem));--_supporting-text-top-space: var(--md-filled-field-supporting-text-top-space, 4px);--_supporting-text-trailing-space: var(--md-filled-field-supporting-text-trailing-space, 16px);--_supporting-text-weight: var(--md-filled-field-supporting-text-weight, var(--md-sys-typescale-body-small-weight, var(--md-ref-typeface-weight-regular, 400)));--_top-space: var(--md-filled-field-top-space, 16px);--_trailing-content-color: var(--md-filled-field-trailing-content-color, var(--md-sys-color-on-surface-variant, #49454f));--_trailing-space: var(--md-filled-field-trailing-space, 16px);--_with-label-bottom-space: var(--md-filled-field-with-label-bottom-space, 8px);--_with-label-top-space: var(--md-filled-field-with-label-top-space, 8px);--_container-shape-start-start: var(--md-filled-field-container-shape-start-start, var(--md-filled-field-container-shape, var(--md-sys-shape-corner-extra-small, 4px)));--_container-shape-start-end: var(--md-filled-field-container-shape-start-end, var(--md-filled-field-container-shape, var(--md-sys-shape-corner-extra-small, 4px)));--_container-shape-end-end: var(--md-filled-field-container-shape-end-end, var(--md-filled-field-container-shape, var(--md-sys-shape-corner-none, 0px)));--_container-shape-end-start: var(--md-filled-field-container-shape-end-start, var(--md-filled-field-container-shape, var(--md-sys-shape-corner-none, 0px)))}.background,.state-layer{border-radius:inherit;inset:0;pointer-events:none;position:absolute}.background{background:var(--_container-color)}.state-layer{visibility:hidden}.field:not(.disabled):hover .state-layer{visibility:visible}.label.floating{position:absolute;top:var(--_with-label-top-space)}.field:not(.with-start) .label-wrapper{margin-inline-start:var(--_leading-space)}.field:not(.with-end) .label-wrapper{margin-inline-end:var(--_trailing-space)}.active-indicator{inset:auto 0 0 0;pointer-events:none;position:absolute;width:100%;z-index:1}.active-indicator::before,.active-indicator::after{border-bottom:var(--_active-indicator-height) solid var(--_active-indicator-color);inset:auto 0 0 0;content:\"\";position:absolute;width:100%}.active-indicator::after{opacity:0;transition:opacity 150ms cubic-bezier(0.2, 0, 0, 1)}.focused .active-indicator::after{opacity:1}.field:not(.with-start) .content ::slotted(*){padding-inline-start:var(--_leading-space)}.field:not(.with-end) .content ::slotted(*){padding-inline-end:var(--_trailing-space)}.field:not(.no-label) .content ::slotted(:not(textarea)){padding-bottom:var(--_with-label-bottom-space);padding-top:calc(var(--_with-label-top-space) + var(--_label-text-populated-line-height))}.field:not(.no-label) .content ::slotted(textarea){margin-bottom:var(--_with-label-bottom-space);margin-top:calc(var(--_with-label-top-space) + var(--_label-text-populated-line-height))}:hover .active-indicator::before{border-bottom-color:var(--_hover-active-indicator-color);border-bottom-width:var(--_hover-active-indicator-height)}.active-indicator::after{border-bottom-color:var(--_focus-active-indicator-color);border-bottom-width:var(--_focus-active-indicator-height)}:hover .state-layer{background:var(--_hover-state-layer-color);opacity:var(--_hover-state-layer-opacity)}.disabled .active-indicator::before{border-bottom-color:var(--_disabled-active-indicator-color);border-bottom-width:var(--_disabled-active-indicator-height);opacity:var(--_disabled-active-indicator-opacity)}.disabled .background{background:var(--_disabled-container-color);opacity:var(--_disabled-container-opacity)}.error .active-indicator::before{border-bottom-color:var(--_error-active-indicator-color)}.error:hover .active-indicator::before{border-bottom-color:var(--_error-hover-active-indicator-color)}.error:hover .state-layer{background:var(--_error-hover-state-layer-color);opacity:var(--_error-hover-state-layer-opacity)}.error .active-indicator::after{border-bottom-color:var(--_error-focus-active-indicator-color)}.resizable .container{bottom:var(--_focus-active-indicator-height);clip-path:inset(var(--_focus-active-indicator-height) 0 0 0)}.resizable .container>*{top:var(--_focus-active-indicator-height)}}@layer hcm{@media(forced-colors: active){.disabled .active-indicator::before{border-color:GrayText;opacity:1}}}\n`;\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./field/internal/shared-styles.css.\nimport {css} from 'lit';\nexport const styles = css`:host{display:inline-flex;resize:both}.field{display:flex;flex:1;flex-direction:column;writing-mode:horizontal-tb;max-width:100%}.container-overflow{border-start-start-radius:var(--_container-shape-start-start);border-start-end-radius:var(--_container-shape-start-end);border-end-end-radius:var(--_container-shape-end-end);border-end-start-radius:var(--_container-shape-end-start);display:flex;height:100%;position:relative}.container{align-items:center;border-radius:inherit;display:flex;flex:1;max-height:100%;min-height:100%;min-width:min-content;position:relative}.field,.container-overflow{resize:inherit}.resizable:not(.disabled) .container{resize:inherit;overflow:hidden}.disabled{pointer-events:none}@layer styles{.start,.middle,.end{display:flex;box-sizing:border-box;height:100%;position:relative}.start{color:var(--_leading-content-color)}.end{color:var(--_trailing-content-color)}.start,.end{align-items:center;justify-content:center}.with-start .start,.with-end .end{min-width:48px}.with-start .start{margin-inline-end:4px}.with-end .end{margin-inline-start:4px}.middle{align-items:stretch;align-self:baseline;flex:1}.content{color:var(--_content-color);display:flex;flex:1;opacity:0;transition:opacity 83ms cubic-bezier(0.2, 0, 0, 1)}.no-label .content,.focused .content,.populated .content{opacity:1;transition-delay:67ms}:is(.disabled,.disable-transitions) .content{transition:none}.content ::slotted(*){all:unset;color:currentColor;font-family:var(--_content-font);font-size:var(--_content-size);line-height:var(--_content-line-height);font-weight:var(--_content-weight);width:100%;overflow-wrap:revert;white-space:revert}.content ::slotted(:not(textarea)){padding-top:var(--_top-space);padding-bottom:var(--_bottom-space)}.content ::slotted(textarea){margin-top:var(--_top-space);margin-bottom:var(--_bottom-space)}:hover .content{color:var(--_hover-content-color)}:hover .start{color:var(--_hover-leading-content-color)}:hover .end{color:var(--_hover-trailing-content-color)}.focused .content{color:var(--_focus-content-color)}.focused .start{color:var(--_focus-leading-content-color)}.focused .end{color:var(--_focus-trailing-content-color)}.disabled .content{color:var(--_disabled-content-color)}.disabled.no-label .content,.disabled.focused .content,.disabled.populated .content{opacity:var(--_disabled-content-opacity)}.disabled .start{color:var(--_disabled-leading-content-color);opacity:var(--_disabled-leading-content-opacity)}.disabled .end{color:var(--_disabled-trailing-content-color);opacity:var(--_disabled-trailing-content-opacity)}.error .content{color:var(--_error-content-color)}.error .start{color:var(--_error-leading-content-color)}.error .end{color:var(--_error-trailing-content-color)}.error:hover .content{color:var(--_error-hover-content-color)}.error:hover .start{color:var(--_error-hover-leading-content-color)}.error:hover .end{color:var(--_error-hover-trailing-content-color)}.error.focused .content{color:var(--_error-focus-content-color)}.error.focused .start{color:var(--_error-focus-leading-content-color)}.error.focused .end{color:var(--_error-focus-trailing-content-color)}}@layer hcm{@media(forced-colors: active){.disabled :is(.start,.content,.end){color:GrayText;opacity:1}}}@layer styles{.label{box-sizing:border-box;color:var(--_label-text-color);overflow:hidden;max-width:100%;text-overflow:ellipsis;white-space:nowrap;z-index:1;font-family:var(--_label-text-font);font-size:var(--_label-text-size);line-height:var(--_label-text-line-height);font-weight:var(--_label-text-weight);width:min-content}.label-wrapper{inset:0;pointer-events:none;position:absolute}.label.resting{position:absolute;top:var(--_top-space)}.label.floating{font-size:var(--_label-text-populated-size);line-height:var(--_label-text-populated-line-height);transform-origin:top left}.label.hidden{opacity:0}.no-label .label{display:none}.label-wrapper{inset:0;position:absolute;text-align:initial}:hover .label{color:var(--_hover-label-text-color)}.focused .label{color:var(--_focus-label-text-color)}.disabled .label{color:var(--_disabled-label-text-color)}.disabled .label:not(.hidden){opacity:var(--_disabled-label-text-opacity)}.error .label{color:var(--_error-label-text-color)}.error:hover .label{color:var(--_error-hover-label-text-color)}.error.focused .label{color:var(--_error-focus-label-text-color)}}@layer hcm{@media(forced-colors: active){.disabled .label:not(.hidden){color:GrayText;opacity:1}}}@layer styles{.supporting-text{color:var(--_supporting-text-color);display:flex;font-family:var(--_supporting-text-font);font-size:var(--_supporting-text-size);line-height:var(--_supporting-text-line-height);font-weight:var(--_supporting-text-weight);gap:16px;justify-content:space-between;padding-inline-start:var(--_supporting-text-leading-space);padding-inline-end:var(--_supporting-text-trailing-space);padding-top:var(--_supporting-text-top-space)}.supporting-text :nth-child(2){flex-shrink:0}:hover .supporting-text{color:var(--_hover-supporting-text-color)}.focus .supporting-text{color:var(--_focus-supporting-text-color)}.disabled .supporting-text{color:var(--_disabled-supporting-text-color);opacity:var(--_disabled-supporting-text-opacity)}.error .supporting-text{color:var(--_error-supporting-text-color)}.error:hover .supporting-text{color:var(--_error-hover-supporting-text-color)}.error.focus .supporting-text{color:var(--_error-focus-supporting-text-color)}}@layer hcm{@media(forced-colors: active){.disabled .supporting-text{color:GrayText;opacity:1}}}\n`;\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {CSSResultOrNative} from 'lit';\nimport {customElement} from 'lit/decorators.js';\n\nimport {FilledField} from './internal/filled-field.js';\nimport {styles as filledStyles} from './internal/filled-styles.js';\nimport {styles as sharedStyles} from './internal/shared-styles.js';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'md-filled-field': MdFilledField;\n  }\n}\n\n/**\n * TODO(b/228525797): add docs\n * @final\n * @suppress {visibility}\n */\n@customElement('md-filled-field')\nexport class MdFilledField extends FilledField {\n  static override styles: CSSResultOrNative[] = [sharedStyles, filledStyles];\n}\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {html} from 'lit';\n\nimport {Field} from './field.js';\n\n/**\n * An outlined field component.\n */\nexport class OutlinedField extends Field {\n  protected override renderOutline(floatingLabel: unknown) {\n    return html`\n      <div class=\"outline\">\n        <div class=\"outline-start\"></div>\n        <div class=\"outline-notch\">\n          <div class=\"outline-panel-inactive\"></div>\n          <div class=\"outline-panel-active\"></div>\n          <div class=\"outline-label\">${floatingLabel}</div>\n        </div>\n        <div class=\"outline-end\"></div>\n      </div>\n    `;\n  }\n}\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./field/internal/outlined-styles.css.\nimport {css} from 'lit';\nexport const styles = css`@layer styles{:host{--_bottom-space: var(--md-outlined-field-bottom-space, 16px);--_content-color: var(--md-outlined-field-content-color, var(--md-sys-color-on-surface, #1d1b20));--_content-font: var(--md-outlined-field-content-font, var(--md-sys-typescale-body-large-font, var(--md-ref-typeface-plain, Roboto)));--_content-line-height: var(--md-outlined-field-content-line-height, var(--md-sys-typescale-body-large-line-height, 1.5rem));--_content-size: var(--md-outlined-field-content-size, var(--md-sys-typescale-body-large-size, 1rem));--_content-weight: var(--md-outlined-field-content-weight, var(--md-sys-typescale-body-large-weight, var(--md-ref-typeface-weight-regular, 400)));--_disabled-content-color: var(--md-outlined-field-disabled-content-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-content-opacity: var(--md-outlined-field-disabled-content-opacity, 0.38);--_disabled-label-text-color: var(--md-outlined-field-disabled-label-text-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-label-text-opacity: var(--md-outlined-field-disabled-label-text-opacity, 0.38);--_disabled-leading-content-color: var(--md-outlined-field-disabled-leading-content-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-leading-content-opacity: var(--md-outlined-field-disabled-leading-content-opacity, 0.38);--_disabled-outline-color: var(--md-outlined-field-disabled-outline-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-outline-opacity: var(--md-outlined-field-disabled-outline-opacity, 0.12);--_disabled-outline-width: var(--md-outlined-field-disabled-outline-width, 1px);--_disabled-supporting-text-color: var(--md-outlined-field-disabled-supporting-text-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-supporting-text-opacity: var(--md-outlined-field-disabled-supporting-text-opacity, 0.38);--_disabled-trailing-content-color: var(--md-outlined-field-disabled-trailing-content-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-trailing-content-opacity: var(--md-outlined-field-disabled-trailing-content-opacity, 0.38);--_error-content-color: var(--md-outlined-field-error-content-color, var(--md-sys-color-on-surface, #1d1b20));--_error-focus-content-color: var(--md-outlined-field-error-focus-content-color, var(--md-sys-color-on-surface, #1d1b20));--_error-focus-label-text-color: var(--md-outlined-field-error-focus-label-text-color, var(--md-sys-color-error, #b3261e));--_error-focus-leading-content-color: var(--md-outlined-field-error-focus-leading-content-color, var(--md-sys-color-on-surface-variant, #49454f));--_error-focus-outline-color: var(--md-outlined-field-error-focus-outline-color, var(--md-sys-color-error, #b3261e));--_error-focus-supporting-text-color: var(--md-outlined-field-error-focus-supporting-text-color, var(--md-sys-color-error, #b3261e));--_error-focus-trailing-content-color: var(--md-outlined-field-error-focus-trailing-content-color, var(--md-sys-color-error, #b3261e));--_error-hover-content-color: var(--md-outlined-field-error-hover-content-color, var(--md-sys-color-on-surface, #1d1b20));--_error-hover-label-text-color: var(--md-outlined-field-error-hover-label-text-color, var(--md-sys-color-on-error-container, #410e0b));--_error-hover-leading-content-color: var(--md-outlined-field-error-hover-leading-content-color, var(--md-sys-color-on-surface-variant, #49454f));--_error-hover-outline-color: var(--md-outlined-field-error-hover-outline-color, var(--md-sys-color-on-error-container, #410e0b));--_error-hover-supporting-text-color: var(--md-outlined-field-error-hover-supporting-text-color, var(--md-sys-color-error, #b3261e));--_error-hover-trailing-content-color: var(--md-outlined-field-error-hover-trailing-content-color, var(--md-sys-color-on-error-container, #410e0b));--_error-label-text-color: var(--md-outlined-field-error-label-text-color, var(--md-sys-color-error, #b3261e));--_error-leading-content-color: var(--md-outlined-field-error-leading-content-color, var(--md-sys-color-on-surface-variant, #49454f));--_error-outline-color: var(--md-outlined-field-error-outline-color, var(--md-sys-color-error, #b3261e));--_error-supporting-text-color: var(--md-outlined-field-error-supporting-text-color, var(--md-sys-color-error, #b3261e));--_error-trailing-content-color: var(--md-outlined-field-error-trailing-content-color, var(--md-sys-color-error, #b3261e));--_focus-content-color: var(--md-outlined-field-focus-content-color, var(--md-sys-color-on-surface, #1d1b20));--_focus-label-text-color: var(--md-outlined-field-focus-label-text-color, var(--md-sys-color-primary, #6750a4));--_focus-leading-content-color: var(--md-outlined-field-focus-leading-content-color, var(--md-sys-color-on-surface-variant, #49454f));--_focus-outline-color: var(--md-outlined-field-focus-outline-color, var(--md-sys-color-primary, #6750a4));--_focus-outline-width: var(--md-outlined-field-focus-outline-width, 3px);--_focus-supporting-text-color: var(--md-outlined-field-focus-supporting-text-color, var(--md-sys-color-on-surface-variant, #49454f));--_focus-trailing-content-color: var(--md-outlined-field-focus-trailing-content-color, var(--md-sys-color-on-surface-variant, #49454f));--_hover-content-color: var(--md-outlined-field-hover-content-color, var(--md-sys-color-on-surface, #1d1b20));--_hover-label-text-color: var(--md-outlined-field-hover-label-text-color, var(--md-sys-color-on-surface, #1d1b20));--_hover-leading-content-color: var(--md-outlined-field-hover-leading-content-color, var(--md-sys-color-on-surface-variant, #49454f));--_hover-outline-color: var(--md-outlined-field-hover-outline-color, var(--md-sys-color-on-surface, #1d1b20));--_hover-outline-width: var(--md-outlined-field-hover-outline-width, 1px);--_hover-supporting-text-color: var(--md-outlined-field-hover-supporting-text-color, var(--md-sys-color-on-surface-variant, #49454f));--_hover-trailing-content-color: var(--md-outlined-field-hover-trailing-content-color, var(--md-sys-color-on-surface-variant, #49454f));--_label-text-color: var(--md-outlined-field-label-text-color, var(--md-sys-color-on-surface-variant, #49454f));--_label-text-font: var(--md-outlined-field-label-text-font, var(--md-sys-typescale-body-large-font, var(--md-ref-typeface-plain, Roboto)));--_label-text-line-height: var(--md-outlined-field-label-text-line-height, var(--md-sys-typescale-body-large-line-height, 1.5rem));--_label-text-padding-bottom: var(--md-outlined-field-label-text-padding-bottom, 8px);--_label-text-populated-line-height: var(--md-outlined-field-label-text-populated-line-height, var(--md-sys-typescale-body-small-line-height, 1rem));--_label-text-populated-size: var(--md-outlined-field-label-text-populated-size, var(--md-sys-typescale-body-small-size, 0.75rem));--_label-text-size: var(--md-outlined-field-label-text-size, var(--md-sys-typescale-body-large-size, 1rem));--_label-text-weight: var(--md-outlined-field-label-text-weight, var(--md-sys-typescale-body-large-weight, var(--md-ref-typeface-weight-regular, 400)));--_leading-content-color: var(--md-outlined-field-leading-content-color, var(--md-sys-color-on-surface-variant, #49454f));--_leading-space: var(--md-outlined-field-leading-space, 16px);--_outline-color: var(--md-outlined-field-outline-color, var(--md-sys-color-outline, #79747e));--_outline-label-padding: var(--md-outlined-field-outline-label-padding, 4px);--_outline-width: var(--md-outlined-field-outline-width, 1px);--_supporting-text-color: var(--md-outlined-field-supporting-text-color, var(--md-sys-color-on-surface-variant, #49454f));--_supporting-text-font: var(--md-outlined-field-supporting-text-font, var(--md-sys-typescale-body-small-font, var(--md-ref-typeface-plain, Roboto)));--_supporting-text-leading-space: var(--md-outlined-field-supporting-text-leading-space, 16px);--_supporting-text-line-height: var(--md-outlined-field-supporting-text-line-height, var(--md-sys-typescale-body-small-line-height, 1rem));--_supporting-text-size: var(--md-outlined-field-supporting-text-size, var(--md-sys-typescale-body-small-size, 0.75rem));--_supporting-text-top-space: var(--md-outlined-field-supporting-text-top-space, 4px);--_supporting-text-trailing-space: var(--md-outlined-field-supporting-text-trailing-space, 16px);--_supporting-text-weight: var(--md-outlined-field-supporting-text-weight, var(--md-sys-typescale-body-small-weight, var(--md-ref-typeface-weight-regular, 400)));--_top-space: var(--md-outlined-field-top-space, 16px);--_trailing-content-color: var(--md-outlined-field-trailing-content-color, var(--md-sys-color-on-surface-variant, #49454f));--_trailing-space: var(--md-outlined-field-trailing-space, 16px);--_container-shape-start-start: var(--md-outlined-field-container-shape-start-start, var(--md-outlined-field-container-shape, var(--md-sys-shape-corner-extra-small, 4px)));--_container-shape-start-end: var(--md-outlined-field-container-shape-start-end, var(--md-outlined-field-container-shape, var(--md-sys-shape-corner-extra-small, 4px)));--_container-shape-end-end: var(--md-outlined-field-container-shape-end-end, var(--md-outlined-field-container-shape, var(--md-sys-shape-corner-extra-small, 4px)));--_container-shape-end-start: var(--md-outlined-field-container-shape-end-start, var(--md-outlined-field-container-shape, var(--md-sys-shape-corner-extra-small, 4px)))}.outline{border-color:var(--_outline-color);border-radius:inherit;display:flex;pointer-events:none;height:100%;position:absolute;width:100%;z-index:1}.outline-start::before,.outline-start::after,.outline-panel-inactive::before,.outline-panel-inactive::after,.outline-panel-active::before,.outline-panel-active::after,.outline-end::before,.outline-end::after{border:inherit;content:\"\";inset:0;position:absolute}.outline-start,.outline-end{border:inherit;border-radius:inherit;box-sizing:border-box;position:relative}.outline-start::before,.outline-start::after,.outline-end::before,.outline-end::after{border-bottom-style:solid;border-top-style:solid}.outline-start::after,.outline-end::after{opacity:0;transition:opacity 150ms cubic-bezier(0.2, 0, 0, 1)}.focused .outline-start::after,.focused .outline-end::after{opacity:1}.outline-start::before,.outline-start::after{border-inline-start-style:solid;border-inline-end-style:none;border-start-start-radius:inherit;border-start-end-radius:0;border-end-start-radius:inherit;border-end-end-radius:0;margin-inline-end:var(--_outline-label-padding)}.outline-end{flex-grow:1;margin-inline-start:calc(-1*var(--_outline-label-padding))}.outline-end::before,.outline-end::after{border-inline-start-style:none;border-inline-end-style:solid;border-start-start-radius:0;border-start-end-radius:inherit;border-end-start-radius:0;border-end-end-radius:inherit}.outline-notch{align-items:flex-start;border:inherit;display:flex;margin-inline-start:calc(-1*var(--_outline-label-padding));margin-inline-end:var(--_outline-label-padding);max-width:calc(100% - var(--_leading-space) - var(--_trailing-space));padding:0 var(--_outline-label-padding);position:relative}.no-label .outline-notch{display:none}.outline-panel-inactive,.outline-panel-active{border:inherit;border-bottom-style:solid;inset:0;position:absolute}.outline-panel-inactive::before,.outline-panel-inactive::after,.outline-panel-active::before,.outline-panel-active::after{border-top-style:solid;border-bottom:none;bottom:auto;transform:scaleX(1);transition:transform 150ms cubic-bezier(0.2, 0, 0, 1)}.outline-panel-inactive::before,.outline-panel-active::before{right:50%;transform-origin:top left}.outline-panel-inactive::after,.outline-panel-active::after{left:50%;transform-origin:top right}.populated .outline-panel-inactive::before,.populated .outline-panel-inactive::after,.populated .outline-panel-active::before,.populated .outline-panel-active::after,.focused .outline-panel-inactive::before,.focused .outline-panel-inactive::after,.focused .outline-panel-active::before,.focused .outline-panel-active::after{transform:scaleX(0)}.outline-panel-active{opacity:0;transition:opacity 150ms cubic-bezier(0.2, 0, 0, 1)}.focused .outline-panel-active{opacity:1}.outline-label{display:flex;max-width:100%;transform:translateY(calc(-100% + var(--_label-text-padding-bottom)))}.outline-start,.field:not(.with-start) .content ::slotted(*){padding-inline-start:max(var(--_leading-space),max(var(--_container-shape-start-start),var(--_container-shape-end-start)) + var(--_outline-label-padding))}.field:not(.with-start) .label-wrapper{margin-inline-start:max(var(--_leading-space),max(var(--_container-shape-start-start),var(--_container-shape-end-start)) + var(--_outline-label-padding))}.field:not(.with-end) .content ::slotted(*){padding-inline-end:max(var(--_trailing-space),max(var(--_container-shape-start-end),var(--_container-shape-end-end)))}.field:not(.with-end) .label-wrapper{margin-inline-end:max(var(--_trailing-space),max(var(--_container-shape-start-end),var(--_container-shape-end-end)))}.outline-start::before,.outline-end::before,.outline-panel-inactive,.outline-panel-inactive::before,.outline-panel-inactive::after{border-width:var(--_outline-width)}:hover .outline{border-color:var(--_hover-outline-color);color:var(--_hover-outline-color)}:hover .outline-start::before,:hover .outline-end::before,:hover .outline-panel-inactive,:hover .outline-panel-inactive::before,:hover .outline-panel-inactive::after{border-width:var(--_hover-outline-width)}.focused .outline{border-color:var(--_focus-outline-color);color:var(--_focus-outline-color)}.outline-start::after,.outline-end::after,.outline-panel-active,.outline-panel-active::before,.outline-panel-active::after{border-width:var(--_focus-outline-width)}.disabled .outline{border-color:var(--_disabled-outline-color);color:var(--_disabled-outline-color)}.disabled .outline-start,.disabled .outline-end,.disabled .outline-panel-inactive{opacity:var(--_disabled-outline-opacity)}.disabled .outline-start::before,.disabled .outline-end::before,.disabled .outline-panel-inactive,.disabled .outline-panel-inactive::before,.disabled .outline-panel-inactive::after{border-width:var(--_disabled-outline-width)}.error .outline{border-color:var(--_error-outline-color);color:var(--_error-outline-color)}.error:hover .outline{border-color:var(--_error-hover-outline-color);color:var(--_error-hover-outline-color)}.error.focused .outline{border-color:var(--_error-focus-outline-color);color:var(--_error-focus-outline-color)}.resizable .container{bottom:var(--_focus-outline-width);inset-inline-end:var(--_focus-outline-width);clip-path:inset(var(--_focus-outline-width) 0 0 var(--_focus-outline-width))}.resizable .container>*{top:var(--_focus-outline-width);inset-inline-start:var(--_focus-outline-width)}.resizable .container:dir(rtl){clip-path:inset(var(--_focus-outline-width) var(--_focus-outline-width) 0 0)}}@layer hcm{@media(forced-colors: active){.disabled .outline{border-color:GrayText;color:GrayText}.disabled :is(.outline-start,.outline-end,.outline-panel-inactive){opacity:1}}}\n`;\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {CSSResultOrNative} from 'lit';\nimport {customElement} from 'lit/decorators.js';\n\nimport {OutlinedField} from './internal/outlined-field.js';\nimport {styles as outlinedStyles} from './internal/outlined-styles.js';\nimport {styles as sharedStyles} from './internal/shared-styles.js';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'md-outlined-field': MdOutlinedField;\n  }\n}\n\n/**\n * TODO(b/228525797): add docs\n * @final\n * @suppress {visibility}\n */\n@customElement('md-outlined-field')\nexport class MdOutlinedField extends OutlinedField {\n  static override styles: CSSResultOrNative[] = [sharedStyles, outlinedStyles];\n}\n", "/**\n * @license\n * Copyright 2022 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {html, LitElement} from 'lit';\n\n/**\n * TODO(b/265336902): add docs\n */\nexport class Icon extends LitElement {\n  protected override render() {\n    return html`<slot></slot>`;\n  }\n\n  override connectedCallback() {\n    super.connectedCallback();\n    const ariaHidden = this.getAttribute('aria-hidden');\n    if (ariaHidden === 'false') {\n      // Allow the user to set `aria-hidden=\"false\"` to create an icon that is\n      // announced by screenreaders.\n      this.removeAttribute('aria-hidden');\n      return;\n    }\n\n    // Needed for VoiceOver, which will create a \"group\" if the element is a\n    // sibling to other content.\n    this.setAttribute('aria-hidden', 'true');\n  }\n}\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./icon/internal/icon-styles.css.\nimport {css} from 'lit';\nexport const styles = css`:host{font-size:var(--md-icon-size, 24px);width:var(--md-icon-size, 24px);height:var(--md-icon-size, 24px);color:inherit;font-variation-settings:inherit;font-weight:400;font-family:var(--md-icon-font, Material Symbols Outlined);display:inline-flex;font-style:normal;place-items:center;place-content:center;line-height:1;overflow:hidden;letter-spacing:normal;text-transform:none;user-select:none;white-space:nowrap;word-wrap:normal;flex-shrink:0;-webkit-font-smoothing:antialiased;text-rendering:optimizeLegibility;-moz-osx-font-smoothing:grayscale}::slotted(svg){fill:currentColor}::slotted(*){height:100%;width:100%}\n`;\n", "/**\n * @license\n * Copyright 2022 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {CSSResultOrNative} from 'lit';\nimport {customElement} from 'lit/decorators.js';\n\nimport {Icon} from './internal/icon.js';\nimport {styles} from './internal/icon-styles.js';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'md-icon': MdIcon;\n  }\n}\n\n/**\n * @final\n * @suppress {visibility}\n */\n@customElement('md-icon')\nexport class MdIcon extends Icon {\n  /** @nocollapse */\n  static override styles: CSSResultOrNative[] = [styles];\n}\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./iconbutton/internal/filled-styles.css.\nimport {css} from 'lit';\nexport const styles = css`:host{--_container-color: var(--md-filled-icon-button-container-color, var(--md-sys-color-primary, #6750a4));--_container-height: var(--md-filled-icon-button-container-height, 40px);--_container-width: var(--md-filled-icon-button-container-width, 40px);--_disabled-container-color: var(--md-filled-icon-button-disabled-container-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-container-opacity: var(--md-filled-icon-button-disabled-container-opacity, 0.12);--_disabled-icon-color: var(--md-filled-icon-button-disabled-icon-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-icon-opacity: var(--md-filled-icon-button-disabled-icon-opacity, 0.38);--_focus-icon-color: var(--md-filled-icon-button-focus-icon-color, var(--md-sys-color-on-primary, #fff));--_hover-icon-color: var(--md-filled-icon-button-hover-icon-color, var(--md-sys-color-on-primary, #fff));--_hover-state-layer-color: var(--md-filled-icon-button-hover-state-layer-color, var(--md-sys-color-on-primary, #fff));--_hover-state-layer-opacity: var(--md-filled-icon-button-hover-state-layer-opacity, 0.08);--_icon-color: var(--md-filled-icon-button-icon-color, var(--md-sys-color-on-primary, #fff));--_icon-size: var(--md-filled-icon-button-icon-size, 24px);--_pressed-icon-color: var(--md-filled-icon-button-pressed-icon-color, var(--md-sys-color-on-primary, #fff));--_pressed-state-layer-color: var(--md-filled-icon-button-pressed-state-layer-color, var(--md-sys-color-on-primary, #fff));--_pressed-state-layer-opacity: var(--md-filled-icon-button-pressed-state-layer-opacity, 0.12);--_selected-container-color: var(--md-filled-icon-button-selected-container-color, var(--md-sys-color-primary, #6750a4));--_toggle-selected-focus-icon-color: var(--md-filled-icon-button-toggle-selected-focus-icon-color, var(--md-sys-color-on-primary, #fff));--_toggle-selected-hover-icon-color: var(--md-filled-icon-button-toggle-selected-hover-icon-color, var(--md-sys-color-on-primary, #fff));--_toggle-selected-hover-state-layer-color: var(--md-filled-icon-button-toggle-selected-hover-state-layer-color, var(--md-sys-color-on-primary, #fff));--_toggle-selected-icon-color: var(--md-filled-icon-button-toggle-selected-icon-color, var(--md-sys-color-on-primary, #fff));--_toggle-selected-pressed-icon-color: var(--md-filled-icon-button-toggle-selected-pressed-icon-color, var(--md-sys-color-on-primary, #fff));--_toggle-selected-pressed-state-layer-color: var(--md-filled-icon-button-toggle-selected-pressed-state-layer-color, var(--md-sys-color-on-primary, #fff));--_unselected-container-color: var(--md-filled-icon-button-unselected-container-color, var(--md-sys-color-surface-container-highest, #e6e0e9));--_toggle-focus-icon-color: var(--md-filled-icon-button-toggle-focus-icon-color, var(--md-sys-color-primary, #6750a4));--_toggle-hover-icon-color: var(--md-filled-icon-button-toggle-hover-icon-color, var(--md-sys-color-primary, #6750a4));--_toggle-hover-state-layer-color: var(--md-filled-icon-button-toggle-hover-state-layer-color, var(--md-sys-color-primary, #6750a4));--_toggle-icon-color: var(--md-filled-icon-button-toggle-icon-color, var(--md-sys-color-primary, #6750a4));--_toggle-pressed-icon-color: var(--md-filled-icon-button-toggle-pressed-icon-color, var(--md-sys-color-primary, #6750a4));--_toggle-pressed-state-layer-color: var(--md-filled-icon-button-toggle-pressed-state-layer-color, var(--md-sys-color-primary, #6750a4));--_container-shape-start-start: var(--md-filled-icon-button-container-shape-start-start, var(--md-filled-icon-button-container-shape, var(--md-sys-shape-corner-full, 9999px)));--_container-shape-start-end: var(--md-filled-icon-button-container-shape-start-end, var(--md-filled-icon-button-container-shape, var(--md-sys-shape-corner-full, 9999px)));--_container-shape-end-end: var(--md-filled-icon-button-container-shape-end-end, var(--md-filled-icon-button-container-shape, var(--md-sys-shape-corner-full, 9999px)));--_container-shape-end-start: var(--md-filled-icon-button-container-shape-end-start, var(--md-filled-icon-button-container-shape, var(--md-sys-shape-corner-full, 9999px)))}.icon-button{color:var(--_icon-color);--md-ripple-hover-color: var(--_hover-state-layer-color);--md-ripple-hover-opacity: var(--_hover-state-layer-opacity);--md-ripple-pressed-color: var(--_pressed-state-layer-color);--md-ripple-pressed-opacity: var(--_pressed-state-layer-opacity)}.icon-button:hover{color:var(--_hover-icon-color)}.icon-button:focus{color:var(--_focus-icon-color)}.icon-button:active{color:var(--_pressed-icon-color)}.icon-button:disabled{color:var(--_disabled-icon-color)}.icon-button::before{background-color:var(--_container-color);border-radius:inherit;content:\"\";inset:0;position:absolute;z-index:-1}.icon-button:disabled::before{background-color:var(--_disabled-container-color);opacity:var(--_disabled-container-opacity)}.icon-button:disabled .icon{opacity:var(--_disabled-icon-opacity)}.toggle-filled{--md-ripple-hover-color: var(--_toggle-hover-state-layer-color);--md-ripple-pressed-color: var(--_toggle-pressed-state-layer-color)}.toggle-filled:not(:disabled){color:var(--_toggle-icon-color)}.toggle-filled:not(:disabled):hover{color:var(--_toggle-hover-icon-color)}.toggle-filled:not(:disabled):focus{color:var(--_toggle-focus-icon-color)}.toggle-filled:not(:disabled):active{color:var(--_toggle-pressed-icon-color)}.toggle-filled:not(:disabled)::before{background-color:var(--_unselected-container-color)}.selected{--md-ripple-hover-color: var(--_toggle-selected-hover-state-layer-color);--md-ripple-pressed-color: var(--_toggle-selected-pressed-state-layer-color)}.selected:not(:disabled){color:var(--_toggle-selected-icon-color)}.selected:not(:disabled):hover{color:var(--_toggle-selected-hover-icon-color)}.selected:not(:disabled):focus{color:var(--_toggle-selected-focus-icon-color)}.selected:not(:disabled):active{color:var(--_toggle-selected-pressed-icon-color)}.selected:not(:disabled)::before{background-color:var(--_selected-container-color)}\n`;\n", "/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n// Any new exports need to be added to the export statement in\n// `packages/lit/src/index.all.ts`.\n\nimport {html as coreHtml, svg as coreSvg, TemplateResult} from './lit-html.js';\n\nexport interface StaticValue {\n  /** The value to interpolate as-is into the template. */\n  _$litStatic$: string;\n\n  /**\n   * A value that can't be decoded from ordinary JSON, make it harder for\n   * a attacker-controlled data that goes through JSON.parse to produce a valid\n   * StaticValue.\n   */\n  r: typeof brand;\n}\n\n/**\n * Prevents JSON injection attacks.\n *\n * The goals of this brand:\n *   1) fast to check\n *   2) code is small on the wire\n *   3) multiple versions of Lit in a single page will all produce mutually\n *      interoperable StaticValues\n *   4) normal JSON.parse (without an unusual reviver) can not produce a\n *      StaticValue\n *\n * Symbols satisfy (1), (2), and (4). We use Symbol.for to satisfy (3), but\n * we don't care about the key, so we break ties via (2) and use the empty\n * string.\n */\nconst brand = Symbol.for('');\n\n/** Safely extracts the string part of a StaticValue. */\nconst unwrapStaticValue = (value: unknown): string | undefined => {\n  if ((value as Partial<StaticValue>)?.r !== brand) {\n    return undefined;\n  }\n  return (value as Partial<StaticValue>)?.['_$litStatic$'];\n};\n\n/**\n * Wraps a string so that it behaves like part of the static template\n * strings instead of a dynamic value.\n *\n * Users must take care to ensure that adding the static string to the template\n * results in well-formed HTML, or else templates may break unexpectedly.\n *\n * Note that this function is unsafe to use on untrusted content, as it will be\n * directly parsed into HTML. Do not pass user input to this function\n * without sanitizing it.\n *\n * Static values can be changed, but they will cause a complete re-render\n * since they effectively create a new template.\n */\nexport const unsafeStatic = (value: string): StaticValue => ({\n  ['_$litStatic$']: value,\n  r: brand,\n});\n\nconst textFromStatic = (value: StaticValue) => {\n  if (value['_$litStatic$'] !== undefined) {\n    return value['_$litStatic$'];\n  } else {\n    throw new Error(\n      `Value passed to 'literal' function must be a 'literal' result: ${value}. Use 'unsafeStatic' to pass non-literal values, but\n            take care to ensure page security.`\n    );\n  }\n};\n\n/**\n * Tags a string literal so that it behaves like part of the static template\n * strings instead of a dynamic value.\n *\n * The only values that may be used in template expressions are other tagged\n * `literal` results or `unsafeStatic` values (note that untrusted content\n * should never be passed to `unsafeStatic`).\n *\n * Users must take care to ensure that adding the static string to the template\n * results in well-formed HTML, or else templates may break unexpectedly.\n *\n * Static values can be changed, but they will cause a complete re-render since\n * they effectively create a new template.\n */\nexport const literal = (\n  strings: TemplateStringsArray,\n  ...values: unknown[]\n): StaticValue => ({\n  ['_$litStatic$']: values.reduce(\n    (acc, v, idx) => acc + textFromStatic(v as StaticValue) + strings[idx + 1],\n    strings[0]\n  ) as string,\n  r: brand,\n});\n\nconst stringsCache = new Map<string, TemplateStringsArray>();\n\n/**\n * Wraps a lit-html template tag (`html` or `svg`) to add static value support.\n */\nexport const withStatic =\n  (coreTag: typeof coreHtml | typeof coreSvg) =>\n  (strings: TemplateStringsArray, ...values: unknown[]): TemplateResult => {\n    const l = values.length;\n    let staticValue: string | undefined;\n    let dynamicValue: unknown;\n    const staticStrings: Array<string> = [];\n    const dynamicValues: Array<unknown> = [];\n    let i = 0;\n    let hasStatics = false;\n    let s: string;\n\n    while (i < l) {\n      s = strings[i];\n      // Collect any unsafeStatic values, and their following template strings\n      // so that we treat a run of template strings and unsafe static values as\n      // a single template string.\n      while (\n        i < l &&\n        ((dynamicValue = values[i]),\n        (staticValue = unwrapStaticValue(dynamicValue))) !== undefined\n      ) {\n        s += staticValue + strings[++i];\n        hasStatics = true;\n      }\n      // If the last value is static, we don't need to push it.\n      if (i !== l) {\n        dynamicValues.push(dynamicValue);\n      }\n      staticStrings.push(s);\n      i++;\n    }\n    // If the last value isn't static (which would have consumed the last\n    // string), then we need to add the last string.\n    if (i === l) {\n      staticStrings.push(strings[l]);\n    }\n\n    if (hasStatics) {\n      const key = staticStrings.join('$$lit$$');\n      strings = stringsCache.get(key)!;\n      if (strings === undefined) {\n        // Beware: in general this pattern is unsafe, and doing so may bypass\n        // lit's security checks and allow an attacker to execute arbitrary\n        // code and inject arbitrary content.\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (staticStrings as any).raw = staticStrings;\n        stringsCache.set(\n          key,\n          (strings = staticStrings as unknown as TemplateStringsArray)\n        );\n      }\n      values = dynamicValues;\n    }\n    return coreTag(strings, ...values);\n  };\n\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n *\n * Includes static value support from `lit-html/static.js`.\n */\nexport const html = withStatic(coreHtml);\n\n/**\n * Interprets a template literal as an SVG template that can efficiently\n * render to and update a container.\n *\n * Includes static value support from `lit-html/static.js`.\n */\nexport const svg = withStatic(coreSvg);\n", "/**\n * @license\n * Copyright 2022 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Returns `true` if the given element is in a right-to-left direction.\n *\n * @param el Element to determine direction from\n * @param shouldCheck Optional. If `false`, return `false` without checking\n *     direction. Determining the direction of `el` is somewhat expensive, so\n *     this parameter can be used as a conditional guard. Defaults to `true`.\n */\nexport function isRtl(el: HTMLElement, shouldCheck = true) {\n  return (\n    shouldCheck &&\n    getComputedStyle(el).getPropertyValue('direction').trim() === 'rtl'\n  );\n}\n", "/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport '../../focus/md-focus-ring.js';\nimport '../../ripple/ripple.js';\n\nimport {html, LitElement, nothing} from 'lit';\nimport {property, state} from 'lit/decorators.js';\nimport {classMap} from 'lit/directives/class-map.js';\nimport {literal, html as staticHtml} from 'lit/static-html.js';\n\nimport {ARIAMixinStrict} from '../../internal/aria/aria.js';\nimport {requestUpdateOnAriaChange} from '../../internal/aria/delegate.js';\nimport {\n  FormSubmitter,\n  setupFormSubmitter,\n  type FormSubmitterType,\n} from '../../internal/controller/form-submitter.js';\nimport {isRtl} from '../../internal/controller/is-rtl.js';\nimport {\n  internals,\n  mixinElementInternals,\n} from '../../labs/behaviors/element-internals.js';\n\ntype LinkTarget = '_blank' | '_parent' | '_self' | '_top';\n\n// Separate variable needed for closure.\nconst iconButtonBaseClass = mixinElementInternals(LitElement);\n\n/**\n * A button for rendering icons.\n *\n * @fires input {InputEvent} Dispatched when a toggle button toggles --bubbles\n * --composed\n * @fires change {Event} Dispatched when a toggle button toggles --bubbles\n */\nexport class IconButton extends iconButtonBaseClass implements FormSubmitter {\n  static {\n    requestUpdateOnAriaChange(IconButton);\n    setupFormSubmitter(IconButton);\n  }\n\n  /** @nocollapse */\n  static readonly formAssociated = true;\n\n  /** @nocollapse */\n  static override shadowRootOptions: ShadowRootInit = {\n    mode: 'open',\n    delegatesFocus: true,\n  };\n\n  /**\n   * Disables the icon button and makes it non-interactive.\n   */\n  @property({type: Boolean, reflect: true}) disabled = false;\n\n  /**\n   * Flips the icon if it is in an RTL context at startup.\n   */\n  @property({type: Boolean, attribute: 'flip-icon-in-rtl'})\n  flipIconInRtl = false;\n\n  /**\n   * Sets the underlying `HTMLAnchorElement`'s `href` resource attribute.\n   */\n  @property() href = '';\n\n  /**\n   * Sets the underlying `HTMLAnchorElement`'s `target` attribute.\n   */\n  @property() target: LinkTarget | '' = '';\n\n  /**\n   * The `aria-label` of the button when the button is toggleable and selected.\n   */\n  @property({attribute: 'aria-label-selected'}) ariaLabelSelected = '';\n\n  /**\n   * When true, the button will toggle between selected and unselected\n   * states\n   */\n  @property({type: Boolean}) toggle = false;\n\n  /**\n   * Sets the selected state. When false, displays the default icon. When true,\n   * displays the selected icon, or the default icon If no `slot=\"selected\"`\n   * icon is provided.\n   */\n  @property({type: Boolean, reflect: true}) selected = false;\n\n  /**\n   * The default behavior of the button. May be \"text\", \"reset\", or \"submit\"\n   * (default).\n   */\n  @property() type: FormSubmitterType = 'submit';\n\n  /**\n   * The value added to a form with the button's name when the button submits a\n   * form.\n   */\n  @property({reflect: true}) value = '';\n\n  get name() {\n    return this.getAttribute('name') ?? '';\n  }\n  set name(name: string) {\n    this.setAttribute('name', name);\n  }\n\n  /**\n   * The associated form element with which this element's value will submit.\n   */\n  get form() {\n    return this[internals].form;\n  }\n\n  /**\n   * The labels this element is associated with.\n   */\n  get labels() {\n    return this[internals].labels;\n  }\n\n  @state() private flipIcon = isRtl(this, this.flipIconInRtl);\n\n  /**\n   * Link buttons cannot be disabled.\n   */\n  protected override willUpdate() {\n    if (this.href) {\n      this.disabled = false;\n    }\n  }\n\n  protected override render() {\n    const tag = this.href ? literal`div` : literal`button`;\n    // Needed for closure conformance\n    const {ariaLabel, ariaHasPopup, ariaExpanded} = this as ARIAMixinStrict;\n    const hasToggledAriaLabel = ariaLabel && this.ariaLabelSelected;\n    const ariaPressedValue = !this.toggle ? nothing : this.selected;\n    let ariaLabelValue: string | null | typeof nothing = nothing;\n    if (!this.href) {\n      ariaLabelValue =\n        hasToggledAriaLabel && this.selected\n          ? this.ariaLabelSelected\n          : ariaLabel;\n    }\n    return staticHtml`<${tag}\n        class=\"icon-button ${classMap(this.getRenderClasses())}\"\n        id=\"button\"\n        aria-label=\"${ariaLabelValue || nothing}\"\n        aria-haspopup=\"${(!this.href && ariaHasPopup) || nothing}\"\n        aria-expanded=\"${(!this.href && ariaExpanded) || nothing}\"\n        aria-pressed=\"${ariaPressedValue}\"\n        ?disabled=\"${!this.href && this.disabled}\"\n        @click=\"${this.handleClick}\">\n        ${this.renderFocusRing()}\n        ${this.renderRipple()}\n        ${!this.selected ? this.renderIcon() : nothing}\n        ${this.selected ? this.renderSelectedIcon() : nothing}\n        ${this.renderTouchTarget()}\n        ${this.href && this.renderLink()}\n  </${tag}>`;\n  }\n\n  private renderLink() {\n    // Needed for closure conformance\n    const {ariaLabel} = this as ARIAMixinStrict;\n    return html`\n      <a\n        class=\"link\"\n        id=\"link\"\n        href=\"${this.href}\"\n        target=\"${this.target || nothing}\"\n        aria-label=\"${ariaLabel || nothing}\"></a>\n    `;\n  }\n\n  protected getRenderClasses() {\n    return {\n      'flip-icon': this.flipIcon,\n      'selected': this.toggle && this.selected,\n    };\n  }\n\n  private renderIcon() {\n    return html`<span class=\"icon\"><slot></slot></span>`;\n  }\n\n  private renderSelectedIcon() {\n    // Use default slot as fallback to not require specifying multiple icons\n    return html`<span class=\"icon icon--selected\"\n      ><slot name=\"selected\"><slot></slot></slot\n    ></span>`;\n  }\n\n  private renderTouchTarget() {\n    return html`<span class=\"touch\"></span>`;\n  }\n\n  private renderFocusRing() {\n    // TODO(b/310046938): use the same id for both elements\n    return html`<md-focus-ring\n      part=\"focus-ring\"\n      for=${this.href ? 'link' : 'button'}></md-focus-ring>`;\n  }\n\n  private renderRipple() {\n    // TODO(b/310046938): use the same id for both elements\n    return html`<md-ripple\n      for=${this.href ? 'link' : nothing}\n      ?disabled=\"${!this.href && this.disabled}\"></md-ripple>`;\n  }\n\n  override connectedCallback() {\n    this.flipIcon = isRtl(this, this.flipIconInRtl);\n    super.connectedCallback();\n  }\n\n  private async handleClick(event: Event) {\n    // Allow the event to propagate\n    await 0;\n    if (!this.toggle || this.disabled || event.defaultPrevented) {\n      return;\n    }\n\n    this.selected = !this.selected;\n    this.dispatchEvent(\n      new InputEvent('input', {bubbles: true, composed: true}),\n    );\n    // Bubbles but does not compose to mimic native browser <input> & <select>\n    // Additionally, native change event is not an InputEvent.\n    this.dispatchEvent(new Event('change', {bubbles: true}));\n  }\n}\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./iconbutton/internal/shared-styles.css.\nimport {css} from 'lit';\nexport const styles = css`:host{display:inline-flex;outline:none;-webkit-tap-highlight-color:rgba(0,0,0,0);height:var(--_container-height);width:var(--_container-width);justify-content:center}:host([touch-target=wrapper]){margin:max(0px,(48px - var(--_container-height))/2) max(0px,(48px - var(--_container-width))/2)}md-focus-ring{--md-focus-ring-shape-start-start: var(--_container-shape-start-start);--md-focus-ring-shape-start-end: var(--_container-shape-start-end);--md-focus-ring-shape-end-end: var(--_container-shape-end-end);--md-focus-ring-shape-end-start: var(--_container-shape-end-start)}:host([disabled]){pointer-events:none}.icon-button{place-items:center;background:none;border:none;box-sizing:border-box;cursor:pointer;display:flex;place-content:center;outline:none;padding:0;position:relative;text-decoration:none;user-select:none;z-index:0;flex:1;border-start-start-radius:var(--_container-shape-start-start);border-start-end-radius:var(--_container-shape-start-end);border-end-start-radius:var(--_container-shape-end-start);border-end-end-radius:var(--_container-shape-end-end)}.icon ::slotted(*){font-size:var(--_icon-size);height:var(--_icon-size);width:var(--_icon-size);font-weight:inherit}md-ripple{z-index:-1;border-start-start-radius:var(--_container-shape-start-start);border-start-end-radius:var(--_container-shape-start-end);border-end-start-radius:var(--_container-shape-end-start);border-end-end-radius:var(--_container-shape-end-end)}.flip-icon .icon{transform:scaleX(-1)}.icon{display:inline-flex}.link{height:100%;outline:none;position:absolute;width:100%}.touch{position:absolute;height:max(48px,100%);width:max(48px,100%)}:host([touch-target=none]) .touch{display:none}@media(forced-colors: active){:host([disabled]){--_disabled-icon-opacity: 1}}\n`;\n", "/**\n * @license\n * Copyright 2022 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {CSSResultOrNative} from 'lit';\nimport {customElement} from 'lit/decorators.js';\n\nimport {styles} from './internal/filled-styles.js';\nimport {IconButton} from './internal/icon-button.js';\nimport {styles as sharedStyles} from './internal/shared-styles.js';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'md-filled-icon-button': MdFilledIconButton;\n  }\n}\n\n/**\n * @summary Icon buttons help people take supplementary actions with a single\n * tap.\n *\n * @description\n * __Emphasis:__ Low emphasis – For optional or supplementary actions with the\n * least amount of prominence.\n *\n * __Rationale:__ The most compact and unobtrusive type of button, icon buttons\n * are used for optional supplementary actions such as \"Bookmark\" or \"Star.\"\n *\n * __Example usages:__\n * - Add to Favorites\n * - Print\n *\n * @final\n * @suppress {visibility}\n */\n@customElement('md-filled-icon-button')\nexport class MdFilledIconButton extends IconButton {\n  static override styles: CSSResultOrNative[] = [sharedStyles, styles];\n\n  protected override getRenderClasses() {\n    return {\n      ...super.getRenderClasses(),\n      'filled': true,\n      'toggle-filled': this.toggle,\n    };\n  }\n}\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./iconbutton/internal/filled-tonal-styles.css.\nimport {css} from 'lit';\nexport const styles = css`:host{--_container-color: var(--md-filled-tonal-icon-button-container-color, var(--md-sys-color-secondary-container, #e8def8));--_container-height: var(--md-filled-tonal-icon-button-container-height, 40px);--_container-width: var(--md-filled-tonal-icon-button-container-width, 40px);--_disabled-container-color: var(--md-filled-tonal-icon-button-disabled-container-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-container-opacity: var(--md-filled-tonal-icon-button-disabled-container-opacity, 0.12);--_disabled-icon-color: var(--md-filled-tonal-icon-button-disabled-icon-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-icon-opacity: var(--md-filled-tonal-icon-button-disabled-icon-opacity, 0.38);--_focus-icon-color: var(--md-filled-tonal-icon-button-focus-icon-color, var(--md-sys-color-on-secondary-container, #1d192b));--_hover-icon-color: var(--md-filled-tonal-icon-button-hover-icon-color, var(--md-sys-color-on-secondary-container, #1d192b));--_hover-state-layer-color: var(--md-filled-tonal-icon-button-hover-state-layer-color, var(--md-sys-color-on-secondary-container, #1d192b));--_hover-state-layer-opacity: var(--md-filled-tonal-icon-button-hover-state-layer-opacity, 0.08);--_icon-color: var(--md-filled-tonal-icon-button-icon-color, var(--md-sys-color-on-secondary-container, #1d192b));--_icon-size: var(--md-filled-tonal-icon-button-icon-size, 24px);--_pressed-icon-color: var(--md-filled-tonal-icon-button-pressed-icon-color, var(--md-sys-color-on-secondary-container, #1d192b));--_pressed-state-layer-color: var(--md-filled-tonal-icon-button-pressed-state-layer-color, var(--md-sys-color-on-secondary-container, #1d192b));--_pressed-state-layer-opacity: var(--md-filled-tonal-icon-button-pressed-state-layer-opacity, 0.12);--_selected-container-color: var(--md-filled-tonal-icon-button-selected-container-color, var(--md-sys-color-secondary-container, #e8def8));--_toggle-selected-focus-icon-color: var(--md-filled-tonal-icon-button-toggle-selected-focus-icon-color, var(--md-sys-color-on-secondary-container, #1d192b));--_toggle-selected-hover-icon-color: var(--md-filled-tonal-icon-button-toggle-selected-hover-icon-color, var(--md-sys-color-on-secondary-container, #1d192b));--_toggle-selected-hover-state-layer-color: var(--md-filled-tonal-icon-button-toggle-selected-hover-state-layer-color, var(--md-sys-color-on-secondary-container, #1d192b));--_toggle-selected-icon-color: var(--md-filled-tonal-icon-button-toggle-selected-icon-color, var(--md-sys-color-on-secondary-container, #1d192b));--_toggle-selected-pressed-icon-color: var(--md-filled-tonal-icon-button-toggle-selected-pressed-icon-color, var(--md-sys-color-on-secondary-container, #1d192b));--_toggle-selected-pressed-state-layer-color: var(--md-filled-tonal-icon-button-toggle-selected-pressed-state-layer-color, var(--md-sys-color-on-secondary-container, #1d192b));--_unselected-container-color: var(--md-filled-tonal-icon-button-unselected-container-color, var(--md-sys-color-surface-container-highest, #e6e0e9));--_toggle-focus-icon-color: var(--md-filled-tonal-icon-button-toggle-focus-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_toggle-hover-icon-color: var(--md-filled-tonal-icon-button-toggle-hover-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_toggle-hover-state-layer-color: var(--md-filled-tonal-icon-button-toggle-hover-state-layer-color, var(--md-sys-color-on-surface-variant, #49454f));--_toggle-icon-color: var(--md-filled-tonal-icon-button-toggle-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_toggle-pressed-icon-color: var(--md-filled-tonal-icon-button-toggle-pressed-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_toggle-pressed-state-layer-color: var(--md-filled-tonal-icon-button-toggle-pressed-state-layer-color, var(--md-sys-color-on-surface-variant, #49454f));--_container-shape-start-start: var(--md-filled-tonal-icon-button-container-shape-start-start, var(--md-filled-tonal-icon-button-container-shape, var(--md-sys-shape-corner-full, 9999px)));--_container-shape-start-end: var(--md-filled-tonal-icon-button-container-shape-start-end, var(--md-filled-tonal-icon-button-container-shape, var(--md-sys-shape-corner-full, 9999px)));--_container-shape-end-end: var(--md-filled-tonal-icon-button-container-shape-end-end, var(--md-filled-tonal-icon-button-container-shape, var(--md-sys-shape-corner-full, 9999px)));--_container-shape-end-start: var(--md-filled-tonal-icon-button-container-shape-end-start, var(--md-filled-tonal-icon-button-container-shape, var(--md-sys-shape-corner-full, 9999px)))}.icon-button{color:var(--_icon-color);--md-ripple-hover-color: var(--_hover-state-layer-color);--md-ripple-hover-opacity: var(--_hover-state-layer-opacity);--md-ripple-pressed-color: var(--_pressed-state-layer-color);--md-ripple-pressed-opacity: var(--_pressed-state-layer-opacity)}.icon-button:hover{color:var(--_hover-icon-color)}.icon-button:focus{color:var(--_focus-icon-color)}.icon-button:active{color:var(--_pressed-icon-color)}.icon-button:disabled{color:var(--_disabled-icon-color)}.icon-button::before{background-color:var(--_container-color);border-radius:inherit;content:\"\";inset:0;position:absolute;z-index:-1}.icon-button:disabled::before{background-color:var(--_disabled-container-color);opacity:var(--_disabled-container-opacity)}.icon-button:disabled .icon{opacity:var(--_disabled-icon-opacity)}.toggle-filled-tonal{--md-ripple-hover-color: var(--_toggle-hover-state-layer-color);--md-ripple-pressed-color: var(--_toggle-pressed-state-layer-color)}.toggle-filled-tonal:not(:disabled){color:var(--_toggle-icon-color)}.toggle-filled-tonal:not(:disabled):hover{color:var(--_toggle-hover-icon-color)}.toggle-filled-tonal:not(:disabled):focus{color:var(--_toggle-focus-icon-color)}.toggle-filled-tonal:not(:disabled):active{color:var(--_toggle-pressed-icon-color)}.toggle-filled-tonal:not(:disabled)::before{background-color:var(--_unselected-container-color)}.selected{--md-ripple-hover-color: var(--_toggle-selected-hover-state-layer-color);--md-ripple-pressed-color: var(--_toggle-selected-pressed-state-layer-color)}.selected:not(:disabled){color:var(--_toggle-selected-icon-color)}.selected:not(:disabled):hover{color:var(--_toggle-selected-hover-icon-color)}.selected:not(:disabled):focus{color:var(--_toggle-selected-focus-icon-color)}.selected:not(:disabled):active{color:var(--_toggle-selected-pressed-icon-color)}.selected:not(:disabled)::before{background-color:var(--_selected-container-color)}\n`;\n", "/**\n * @license\n * Copyright 2022 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {CSSResultOrNative} from 'lit';\nimport {customElement} from 'lit/decorators.js';\n\nimport {styles} from './internal/filled-tonal-styles.js';\nimport {IconButton} from './internal/icon-button.js';\nimport {styles as sharedStyles} from './internal/shared-styles.js';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'md-filled-tonal-icon-button': MdFilledTonalIconButton;\n  }\n}\n\n/**\n * @summary Icon buttons help people take supplementary actions with a single\n * tap.\n *\n * @description\n * __Emphasis:__ Low emphasis – For optional or supplementary actions with the\n * least amount of prominence.\n *\n * __Rationale:__ The most compact and unobtrusive type of button, icon buttons\n * are used for optional supplementary actions such as \"Bookmark\" or \"Star.\"\n *\n * __Example usages:__\n * - Add to Favorites\n * - Print\n *\n * @final\n * @suppress {visibility}\n */\n@customElement('md-filled-tonal-icon-button')\nexport class MdFilledTonalIconButton extends IconButton {\n  static override styles: CSSResultOrNative[] = [sharedStyles, styles];\n\n  protected override getRenderClasses() {\n    return {\n      ...super.getRenderClasses(),\n      'filled-tonal': true,\n      'toggle-filled-tonal': this.toggle,\n    };\n  }\n}\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./iconbutton/internal/standard-styles.css.\nimport {css} from 'lit';\nexport const styles = css`:host{--_disabled-icon-color: var(--md-icon-button-disabled-icon-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-icon-opacity: var(--md-icon-button-disabled-icon-opacity, 0.38);--_icon-size: var(--md-icon-button-icon-size, 24px);--_selected-focus-icon-color: var(--md-icon-button-selected-focus-icon-color, var(--md-sys-color-primary, #6750a4));--_selected-hover-icon-color: var(--md-icon-button-selected-hover-icon-color, var(--md-sys-color-primary, #6750a4));--_selected-hover-state-layer-color: var(--md-icon-button-selected-hover-state-layer-color, var(--md-sys-color-primary, #6750a4));--_selected-hover-state-layer-opacity: var(--md-icon-button-selected-hover-state-layer-opacity, 0.08);--_selected-icon-color: var(--md-icon-button-selected-icon-color, var(--md-sys-color-primary, #6750a4));--_selected-pressed-icon-color: var(--md-icon-button-selected-pressed-icon-color, var(--md-sys-color-primary, #6750a4));--_selected-pressed-state-layer-color: var(--md-icon-button-selected-pressed-state-layer-color, var(--md-sys-color-primary, #6750a4));--_selected-pressed-state-layer-opacity: var(--md-icon-button-selected-pressed-state-layer-opacity, 0.12);--_state-layer-height: var(--md-icon-button-state-layer-height, 40px);--_state-layer-shape: var(--md-icon-button-state-layer-shape, var(--md-sys-shape-corner-full, 9999px));--_state-layer-width: var(--md-icon-button-state-layer-width, 40px);--_focus-icon-color: var(--md-icon-button-focus-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_hover-icon-color: var(--md-icon-button-hover-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_hover-state-layer-color: var(--md-icon-button-hover-state-layer-color, var(--md-sys-color-on-surface-variant, #49454f));--_hover-state-layer-opacity: var(--md-icon-button-hover-state-layer-opacity, 0.08);--_icon-color: var(--md-icon-button-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_pressed-icon-color: var(--md-icon-button-pressed-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_pressed-state-layer-color: var(--md-icon-button-pressed-state-layer-color, var(--md-sys-color-on-surface-variant, #49454f));--_pressed-state-layer-opacity: var(--md-icon-button-pressed-state-layer-opacity, 0.12);--_container-shape-start-start: 0;--_container-shape-start-end: 0;--_container-shape-end-end: 0;--_container-shape-end-start: 0;--_container-height: 0;--_container-width: 0;height:var(--_state-layer-height);width:var(--_state-layer-width)}:host([touch-target=wrapper]){margin:max(0px,(48px - var(--_state-layer-height))/2) max(0px,(48px - var(--_state-layer-width))/2)}md-focus-ring{--md-focus-ring-shape-start-start: var(--_state-layer-shape);--md-focus-ring-shape-start-end: var(--_state-layer-shape);--md-focus-ring-shape-end-end: var(--_state-layer-shape);--md-focus-ring-shape-end-start: var(--_state-layer-shape)}.standard{background-color:rgba(0,0,0,0);color:var(--_icon-color);--md-ripple-hover-color: var(--_hover-state-layer-color);--md-ripple-hover-opacity: var(--_hover-state-layer-opacity);--md-ripple-pressed-color: var(--_pressed-state-layer-color);--md-ripple-pressed-opacity: var(--_pressed-state-layer-opacity)}.standard:hover{color:var(--_hover-icon-color)}.standard:focus{color:var(--_focus-icon-color)}.standard:active{color:var(--_pressed-icon-color)}.standard:disabled{color:var(--_disabled-icon-color)}md-ripple{border-radius:var(--_state-layer-shape)}.standard:disabled .icon{opacity:var(--_disabled-icon-opacity)}.selected{--md-ripple-hover-color: var(--_selected-hover-state-layer-color);--md-ripple-hover-opacity: var(--_selected-hover-state-layer-opacity);--md-ripple-pressed-color: var(--_selected-pressed-state-layer-color);--md-ripple-pressed-opacity: var(--_selected-pressed-state-layer-opacity)}.selected:not(:disabled){color:var(--_selected-icon-color)}.selected:not(:disabled):hover{color:var(--_selected-hover-icon-color)}.selected:not(:disabled):focus{color:var(--_selected-focus-icon-color)}.selected:not(:disabled):active{color:var(--_selected-pressed-icon-color)}\n`;\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {CSSResultOrNative} from 'lit';\nimport {customElement} from 'lit/decorators.js';\n\nimport {IconButton} from './internal/icon-button.js';\nimport {styles as sharedStyles} from './internal/shared-styles.js';\nimport {styles} from './internal/standard-styles.js';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'md-icon-button': MdIconButton;\n  }\n}\n\n/**\n * @summary Icon buttons help people take supplementary actions with a single\n * tap.\n *\n * @description\n * __Emphasis:__ Low emphasis – For optional or supplementary actions with the\n * least amount of prominence.\n *\n * __Rationale:__ The most compact and unobtrusive type of button, icon buttons\n * are used for optional supplementary actions such as \"Bookmark\" or \"Star.\"\n *\n * __Example usages:__\n * - Add to Favorites\n * - Print\n *\n * @final\n * @suppress {visibility}\n */\n@customElement('md-icon-button')\nexport class MdIconButton extends IconButton {\n  static override styles: CSSResultOrNative[] = [sharedStyles, styles];\n\n  protected override getRenderClasses() {\n    return {\n      ...super.getRenderClasses(),\n      'standard': true,\n    };\n  }\n}\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./iconbutton/internal/outlined-styles.css.\nimport {css} from 'lit';\nexport const styles = css`:host{--_container-height: var(--md-outlined-icon-button-container-height, 40px);--_container-width: var(--md-outlined-icon-button-container-width, 40px);--_disabled-icon-color: var(--md-outlined-icon-button-disabled-icon-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-icon-opacity: var(--md-outlined-icon-button-disabled-icon-opacity, 0.38);--_disabled-selected-container-color: var(--md-outlined-icon-button-disabled-selected-container-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-selected-container-opacity: var(--md-outlined-icon-button-disabled-selected-container-opacity, 0.12);--_hover-state-layer-opacity: var(--md-outlined-icon-button-hover-state-layer-opacity, 0.08);--_icon-size: var(--md-outlined-icon-button-icon-size, 24px);--_pressed-state-layer-opacity: var(--md-outlined-icon-button-pressed-state-layer-opacity, 0.12);--_selected-container-color: var(--md-outlined-icon-button-selected-container-color, var(--md-sys-color-inverse-surface, #322f35));--_selected-focus-icon-color: var(--md-outlined-icon-button-selected-focus-icon-color, var(--md-sys-color-inverse-on-surface, #f5eff7));--_selected-hover-icon-color: var(--md-outlined-icon-button-selected-hover-icon-color, var(--md-sys-color-inverse-on-surface, #f5eff7));--_selected-hover-state-layer-color: var(--md-outlined-icon-button-selected-hover-state-layer-color, var(--md-sys-color-inverse-on-surface, #f5eff7));--_selected-icon-color: var(--md-outlined-icon-button-selected-icon-color, var(--md-sys-color-inverse-on-surface, #f5eff7));--_selected-pressed-icon-color: var(--md-outlined-icon-button-selected-pressed-icon-color, var(--md-sys-color-inverse-on-surface, #f5eff7));--_selected-pressed-state-layer-color: var(--md-outlined-icon-button-selected-pressed-state-layer-color, var(--md-sys-color-inverse-on-surface, #f5eff7));--_disabled-outline-color: var(--md-outlined-icon-button-disabled-outline-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-outline-opacity: var(--md-outlined-icon-button-disabled-outline-opacity, 0.12);--_focus-icon-color: var(--md-outlined-icon-button-focus-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_hover-icon-color: var(--md-outlined-icon-button-hover-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_hover-state-layer-color: var(--md-outlined-icon-button-hover-state-layer-color, var(--md-sys-color-on-surface-variant, #49454f));--_icon-color: var(--md-outlined-icon-button-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_outline-color: var(--md-outlined-icon-button-outline-color, var(--md-sys-color-outline, #79747e));--_outline-width: var(--md-outlined-icon-button-outline-width, 1px);--_pressed-icon-color: var(--md-outlined-icon-button-pressed-icon-color, var(--md-sys-color-on-surface, #1d1b20));--_pressed-state-layer-color: var(--md-outlined-icon-button-pressed-state-layer-color, var(--md-sys-color-on-surface, #1d1b20));--_container-shape-start-start: var(--md-outlined-icon-button-container-shape-start-start, var(--md-outlined-icon-button-container-shape, var(--md-sys-shape-corner-full, 9999px)));--_container-shape-start-end: var(--md-outlined-icon-button-container-shape-start-end, var(--md-outlined-icon-button-container-shape, var(--md-sys-shape-corner-full, 9999px)));--_container-shape-end-end: var(--md-outlined-icon-button-container-shape-end-end, var(--md-outlined-icon-button-container-shape, var(--md-sys-shape-corner-full, 9999px)));--_container-shape-end-start: var(--md-outlined-icon-button-container-shape-end-start, var(--md-outlined-icon-button-container-shape, var(--md-sys-shape-corner-full, 9999px)))}.outlined{background-color:rgba(0,0,0,0);color:var(--_icon-color);--md-ripple-hover-color: var(--_hover-state-layer-color);--md-ripple-hover-opacity: var(--_hover-state-layer-opacity);--md-ripple-pressed-color: var(--_pressed-state-layer-color);--md-ripple-pressed-opacity: var(--_pressed-state-layer-opacity)}.outlined::before{border-color:var(--_outline-color);border-width:var(--_outline-width)}.outlined:hover{color:var(--_hover-icon-color)}.outlined:focus{color:var(--_focus-icon-color)}.outlined:active{color:var(--_pressed-icon-color)}.outlined:disabled{color:var(--_disabled-icon-color)}.outlined:disabled::before{border-color:var(--_disabled-outline-color);opacity:var(--_disabled-outline-opacity)}.outlined:disabled .icon{opacity:var(--_disabled-icon-opacity)}.outlined::before{block-size:100%;border-style:solid;border-radius:inherit;box-sizing:border-box;content:\"\";inline-size:100%;inset:0;pointer-events:none;position:absolute;z-index:-1}.outlined.selected::before{border-width:0}.selected{--md-ripple-hover-color: var(--_selected-hover-state-layer-color);--md-ripple-hover-opacity: var(--_hover-state-layer-opacity);--md-ripple-pressed-color: var(--_selected-pressed-state-layer-color);--md-ripple-pressed-opacity: var(--_pressed-state-layer-opacity)}.selected:not(:disabled){color:var(--_selected-icon-color)}.selected:not(:disabled):hover{color:var(--_selected-hover-icon-color)}.selected:not(:disabled):focus{color:var(--_selected-focus-icon-color)}.selected:not(:disabled):active{color:var(--_selected-pressed-icon-color)}.selected:not(:disabled)::before{background-color:var(--_selected-container-color)}.selected:disabled::before{background-color:var(--_disabled-selected-container-color);opacity:var(--_disabled-selected-container-opacity)}@media(forced-colors: active){:host([disabled]){--_disabled-outline-opacity: 1}.selected::before{border-color:CanvasText;border-width:var(--_outline-width)}.selected:disabled::before{border-color:GrayText;opacity:1}}\n`;\n", "/**\n * @license\n * Copyright 2022 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {CSSResultOrNative} from 'lit';\nimport {customElement} from 'lit/decorators.js';\n\nimport {IconButton} from './internal/icon-button.js';\nimport {styles} from './internal/outlined-styles.js';\nimport {styles as sharedStyles} from './internal/shared-styles.js';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'md-outlined-icon-button': MdOutlinedIconButton;\n  }\n}\n\n/**\n * @summary Icon buttons help people take supplementary actions with a single\n * tap.\n *\n * @description\n * __Emphasis:__ Low emphasis – For optional or supplementary actions with the\n * least amount of prominence.\n *\n * __Rationale:__ The most compact and unobtrusive type of button, icon buttons\n * are used for optional supplementary actions such as \"Bookmark\" or \"Star.\"\n *\n * __Example usages:__\n * - Add to Favorites\n * - Print\n *\n * @final\n * @suppress {visibility}\n */\n@customElement('md-outlined-icon-button')\nexport class MdOutlinedIconButton extends IconButton {\n  static override styles: CSSResultOrNative[] = [sharedStyles, styles];\n\n  protected override getRenderClasses() {\n    return {\n      ...super.getRenderClasses(),\n      'outlined': true,\n    };\n  }\n}\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport interface ListItem extends HTMLElement {\n  disabled: boolean;\n}\n\n/**\n * A record that describes a list item in a list with metadata such a reference\n * to the item and its index in the list.\n */\nexport interface ItemRecord<Item extends ListItem> {\n  item: Item;\n  index: number;\n}\n\n/**\n * Activates the first non-disabled item of a given array of items.\n *\n * @param items {Array<ListItem>} The items from which to activate the\n *     first item.\n * @param isActivatable Function to determine if an item can be  activated.\n *     Defaults to non-disabled items.\n */\nexport function activateFirstItem<Item extends ListItem>(\n  items: Item[],\n  isActivatable = isItemNotDisabled<Item>,\n) {\n  // NOTE: These selector functions are static and not on the instance such\n  // that multiple operations can be chained and we do not have to re-query\n  // the DOM\n  const firstItem = getFirstActivatableItem(items, isActivatable);\n  if (firstItem) {\n    firstItem.tabIndex = 0;\n    firstItem.focus();\n  }\n  return firstItem;\n}\n\n/**\n * Activates the last non-disabled item of a given array of items.\n *\n * @param items {Array<ListItem>} The items from which to activate the\n *     last item.\n * @param isActivatable Function to determine if an item can be  activated.\n *     Defaults to non-disabled items.\n * @nocollapse\n */\nexport function activateLastItem<Item extends ListItem>(\n  items: Item[],\n  isActivatable = isItemNotDisabled<Item>,\n) {\n  const lastItem = getLastActivatableItem(items, isActivatable);\n  if (lastItem) {\n    lastItem.tabIndex = 0;\n    lastItem.focus();\n  }\n  return lastItem;\n}\n\n/**\n * Deactivates the currently active item of a given array of items.\n *\n * @param items {Array<ListItem>} The items from which to deactivate the\n *     active item.\n * @param isActivatable Function to determine if an item can be  activated.\n *     Defaults to non-disabled items.\n * @return A record of the deleselcted activated item including the item and\n *     the index of the item or `null` if none are deactivated.\n * @nocollapse\n */\nexport function deactivateActiveItem<Item extends ListItem>(\n  items: Item[],\n  isActivatable = isItemNotDisabled<Item>,\n) {\n  const activeItem = getActiveItem(items, isActivatable);\n  if (activeItem) {\n    activeItem.item.tabIndex = -1;\n  }\n  return activeItem;\n}\n\n/**\n * Retrieves the first activated item of a given array of items.\n *\n * @param items {Array<ListItem>} The items to search.\n * @param isActivatable Function to determine if an item can be  activated.\n *     Defaults to non-disabled items.\n * @return A record of the first activated item including the item and the\n *     index of the item or `null` if none are activated.\n * @nocollapse\n */\nexport function getActiveItem<Item extends ListItem>(\n  items: Item[],\n  isActivatable = isItemNotDisabled<Item>,\n) {\n  for (let i = 0; i < items.length; i++) {\n    const item = items[i];\n    if (item.tabIndex === 0 && isActivatable(item)) {\n      return {\n        item,\n        index: i,\n      } as ItemRecord<Item>;\n    }\n  }\n  return null;\n}\n\n/**\n * Retrieves the first non-disabled item of a given array of items. This\n * the first item that is not disabled.\n *\n * @param items {Array<ListItem>} The items to search.\n * @param isActivatable Function to determine if an item can be  activated.\n *     Defaults to non-disabled items.\n * @return The first activatable item or `null` if none are activatable.\n * @nocollapse\n */\nexport function getFirstActivatableItem<Item extends ListItem>(\n  items: Item[],\n  isActivatable = isItemNotDisabled<Item>,\n) {\n  for (const item of items) {\n    if (isActivatable(item)) {\n      return item;\n    }\n  }\n\n  return null;\n}\n\n/**\n * Retrieves the last non-disabled item of a given array of items.\n *\n * @param items {Array<ListItem>} The items to search.\n * @param isActivatable Function to determine if an item can be  activated.\n *     Defaults to non-disabled items.\n * @return The last activatable item or `null` if none are activatable.\n * @nocollapse\n */\nexport function getLastActivatableItem<Item extends ListItem>(\n  items: Item[],\n  isActivatable = isItemNotDisabled<Item>,\n) {\n  for (let i = items.length - 1; i >= 0; i--) {\n    const item = items[i];\n    if (isActivatable(item)) {\n      return item;\n    }\n  }\n\n  return null;\n}\n\n/**\n * Retrieves the next non-disabled item of a given array of items.\n *\n * @param items {Array<ListItem>} The items to search.\n * @param index {{index: number}} The index to search from.\n * @param isActivatable Function to determine if an item can be  activated.\n *     Defaults to non-disabled items.\n * @param wrap If true, then the next item at the end of the list is the first\n *     item. Defaults to true.\n * @return The next activatable item or `null` if none are activatable.\n */\nexport function getNextItem<Item extends ListItem>(\n  items: Item[],\n  index: number,\n  isActivatable = isItemNotDisabled<Item>,\n  wrap = true,\n) {\n  for (let i = 1; i < items.length; i++) {\n    const nextIndex = (i + index) % items.length;\n    if (nextIndex < index && !wrap) {\n      // Return if the index loops back to the beginning and not wrapping.\n      return null;\n    }\n\n    const item = items[nextIndex];\n    if (isActivatable(item)) {\n      return item;\n    }\n  }\n\n  return items[index] ? items[index] : null;\n}\n\n/**\n * Retrieves the previous non-disabled item of a given array of items.\n *\n * @param items {Array<ListItem>} The items to search.\n * @param index {{index: number}} The index to search from.\n * @param isActivatable Function to determine if an item can be  activated.\n *     Defaults to non-disabled items.\n * @param wrap If true, then the previous item at the beginning of the list is\n *     the last item. Defaults to true.\n * @return The previous activatable item or `null` if none are activatable.\n */\nexport function getPrevItem<Item extends ListItem>(\n  items: Item[],\n  index: number,\n  isActivatable = isItemNotDisabled<Item>,\n  wrap = true,\n) {\n  for (let i = 1; i < items.length; i++) {\n    const prevIndex = (index - i + items.length) % items.length;\n    if (prevIndex > index && !wrap) {\n      // Return if the index loops back to the end and not wrapping.\n      return null;\n    }\n\n    const item = items[prevIndex];\n\n    if (isActivatable(item)) {\n      return item;\n    }\n  }\n\n  return items[index] ? items[index] : null;\n}\n\n/**\n * Activates the next item and focuses it. If nothing is currently activated,\n * activates the first item.\n */\nexport function activateNextItem<Item extends ListItem>(\n  items: Item[],\n  activeItemRecord: null | ItemRecord<Item>,\n  isActivatable = isItemNotDisabled<Item>,\n  wrap = true,\n): Item | null {\n  if (activeItemRecord) {\n    const next = getNextItem(\n      items,\n      activeItemRecord.index,\n      isActivatable,\n      wrap,\n    );\n\n    if (next) {\n      next.tabIndex = 0;\n      next.focus();\n    }\n\n    return next;\n  } else {\n    return activateFirstItem(items, isActivatable);\n  }\n}\n\n/**\n * Activates the previous item and focuses it. If nothing is currently\n * activated, activates the last item.\n */\nexport function activatePreviousItem<Item extends ListItem>(\n  items: Item[],\n  activeItemRecord: null | ItemRecord<Item>,\n  isActivatable = isItemNotDisabled<Item>,\n  wrap = true,\n): Item | null {\n  if (activeItemRecord) {\n    const prev = getPrevItem(\n      items,\n      activeItemRecord.index,\n      isActivatable,\n      wrap,\n    );\n    if (prev) {\n      prev.tabIndex = 0;\n      prev.focus();\n    }\n    return prev;\n  } else {\n    return activateLastItem(items, isActivatable);\n  }\n}\n\n/**\n * Creates an event that requests the parent md-list to deactivate all other\n * items.\n */\nexport function createDeactivateItemsEvent() {\n  return new Event('deactivate-items', {bubbles: true, composed: true});\n}\n\n/**\n * The type of the event that requests the parent md-list to deactivate all\n * other items.\n */\nexport type DeactivateItemsEvent = ReturnType<\n  typeof createDeactivateItemsEvent\n>;\n\n/**\n * Creates an event that requests the menu to set `tabindex=0` on the item and\n * focus it. We use this pattern because List keeps track of what element is\n * active in the List by maintaining tabindex. We do not want list items\n * to set tabindex on themselves or focus themselves so that we can organize all\n * that logic in the parent List and Menus, and list item stays as dumb as\n * possible.\n */\nexport function createRequestActivationEvent() {\n  return new Event('request-activation', {bubbles: true, composed: true});\n}\n\n/**\n * The type of the event that requests the list activates and focuses the item.\n */\nexport type RequestActivationEvent = ReturnType<\n  typeof createRequestActivationEvent\n>;\n\n/**\n * The default `isActivatable` function, which checks if an item is not\n * disabled.\n *\n * @param item The item to check.\n * @return true if `item.disabled` is `false.\n */\nfunction isItemNotDisabled<Item extends ListItem>(item: Item) {\n  return !item.disabled;\n}\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  activateFirstItem,\n  activateLastItem,\n  activateNextItem,\n  activatePreviousItem,\n  getActiveItem,\n  getFirstActivatableItem,\n  ListItem,\n} from './list-navigation-helpers.js';\n\n// TODO: move this file to List and make List use this\n\n/**\n * Default keys that trigger navigation.\n */\n// tslint:disable:enforce-name-casing Following Enum style\nexport const NavigableKeys = {\n  ArrowDown: 'ArrowDown',\n  ArrowLeft: 'ArrowLeft',\n  ArrowUp: 'ArrowUp',\n  ArrowRight: 'ArrowRight',\n  Home: 'Home',\n  End: 'End',\n} as const;\n// tslint:enable:enforce-name-casing\n\n/**\n * Default set of navigable keys.\n */\nexport type NavigableKeys = (typeof NavigableKeys)[keyof typeof NavigableKeys];\n\n/**\n * The configuration object to customize the behavior of the List Controller\n */\nexport interface ListControllerConfig<Item extends ListItem> {\n  /**\n   * A function that determines whether or not the given element is an Item\n   */\n  isItem: (item: HTMLElement) => item is Item;\n  /**\n   * A function that returns an array of elements to consider as items. For\n   * example, all the slotted elements.\n   */\n  getPossibleItems: () => HTMLElement[];\n  /**\n   * A function that returns whether or not the list is in an RTL context.\n   */\n  isRtl: () => boolean;\n  /**\n   * Deactivates an item such as setting the tabindex to -1 and or sets selected\n   * to false.\n   */\n  deactivateItem: (item: Item) => void;\n  /**\n   * Activates an item such as setting the tabindex to 1 and or sets selected to\n   * true (but does not focus).\n   */\n  activateItem: (item: Item) => void;\n  /**\n   * Whether or not the key should be handled by the list for navigation.\n   */\n  isNavigableKey: (key: string) => boolean;\n  /**\n   * Whether or not the item can be activated. Defaults to items that are not\n   * disabled.\n   */\n  isActivatable?: (item: Item) => boolean;\n  /**\n   * Whether or not navigating past the end of the list wraps to the beginning\n   * and vice versa. Defaults to true.\n   */\n  wrapNavigation?: () => boolean;\n}\n\n/**\n * A controller that handles list keyboard navigation and item management.\n */\nexport class ListController<Item extends ListItem> {\n  isItem: (item: HTMLElement) => item is Item;\n  private readonly getPossibleItems: () => HTMLElement[];\n  private readonly isRtl: () => boolean;\n  private readonly deactivateItem: (item: Item) => void;\n  private readonly activateItem: (item: Item) => void;\n  private readonly isNavigableKey: (key: string) => boolean;\n  private readonly isActivatable?: (item: Item) => boolean;\n  private readonly wrapNavigation: () => boolean;\n\n  constructor(config: ListControllerConfig<Item>) {\n    const {\n      isItem,\n      getPossibleItems,\n      isRtl,\n      deactivateItem,\n      activateItem,\n      isNavigableKey,\n      isActivatable,\n      wrapNavigation,\n    } = config;\n    this.isItem = isItem;\n    this.getPossibleItems = getPossibleItems;\n    this.isRtl = isRtl;\n    this.deactivateItem = deactivateItem;\n    this.activateItem = activateItem;\n    this.isNavigableKey = isNavigableKey;\n    this.isActivatable = isActivatable;\n    this.wrapNavigation = wrapNavigation ?? (() => true);\n  }\n\n  /**\n   * The items being managed by the list. Additionally, attempts to see if the\n   * object has a sub-item in the `.item` property.\n   */\n  get items(): Item[] {\n    const maybeItems = this.getPossibleItems();\n    const items: Item[] = [];\n\n    for (const itemOrParent of maybeItems) {\n      const isItem = this.isItem(itemOrParent);\n      // if the item is a list item, add it to the list of items\n      if (isItem) {\n        items.push(itemOrParent);\n        continue;\n      }\n\n      // If the item exposes an `item` property check if it is a list item.\n      const subItem = (itemOrParent as HTMLElement & {item?: Item}).item;\n      if (subItem && this.isItem(subItem)) {\n        items.push(subItem);\n      }\n    }\n\n    return items;\n  }\n\n  /**\n   * Handles keyboard navigation. Should be bound to the node that will act as\n   * the List.\n   */\n  handleKeydown = (event: KeyboardEvent) => {\n    const key = event.key;\n    if (event.defaultPrevented || !this.isNavigableKey(key)) {\n      return;\n    }\n    // do not use this.items directly in upcoming calculations so we don't\n    // re-query the DOM unnecessarily\n    const items = this.items;\n\n    if (!items.length) {\n      return;\n    }\n\n    const activeItemRecord = getActiveItem(items, this.isActivatable);\n\n    event.preventDefault();\n\n    const isRtl = this.isRtl();\n    const inlinePrevious = isRtl\n      ? NavigableKeys.ArrowRight\n      : NavigableKeys.ArrowLeft;\n    const inlineNext = isRtl\n      ? NavigableKeys.ArrowLeft\n      : NavigableKeys.ArrowRight;\n\n    let nextActiveItem: Item | null = null;\n    switch (key) {\n      // Activate the next item\n      case NavigableKeys.ArrowDown:\n      case inlineNext:\n        nextActiveItem = activateNextItem(\n          items,\n          activeItemRecord,\n          this.isActivatable,\n          this.wrapNavigation(),\n        );\n        break;\n\n      // Activate the previous item\n      case NavigableKeys.ArrowUp:\n      case inlinePrevious:\n        nextActiveItem = activatePreviousItem(\n          items,\n          activeItemRecord,\n          this.isActivatable,\n          this.wrapNavigation(),\n        );\n        break;\n\n      // Activate the first item\n      case NavigableKeys.Home:\n        nextActiveItem = activateFirstItem(items, this.isActivatable);\n        break;\n\n      // Activate the last item\n      case NavigableKeys.End:\n        nextActiveItem = activateLastItem(items, this.isActivatable);\n        break;\n\n      default:\n        break;\n    }\n\n    if (\n      nextActiveItem &&\n      activeItemRecord &&\n      activeItemRecord.item !== nextActiveItem\n    ) {\n      // If a new item was activated, remove the tabindex of the previous\n      // activated item.\n      activeItemRecord.item.tabIndex = -1;\n    }\n  };\n\n  /**\n   * Activates the next item in the list. If at the end of the list, the first\n   * item will be activated.\n   *\n   * @return The activated list item or `null` if there are no items.\n   */\n  activateNextItem(): Item | null {\n    const items = this.items;\n    const activeItemRecord = getActiveItem(items, this.isActivatable);\n    if (activeItemRecord) {\n      activeItemRecord.item.tabIndex = -1;\n    }\n    return activateNextItem(\n      items,\n      activeItemRecord,\n      this.isActivatable,\n      this.wrapNavigation(),\n    );\n  }\n\n  /**\n   * Activates the previous item in the list. If at the start of the list, the\n   * last item will be activated.\n   *\n   * @return The activated list item or `null` if there are no items.\n   */\n  activatePreviousItem(): Item | null {\n    const items = this.items;\n    const activeItemRecord = getActiveItem(items, this.isActivatable);\n    if (activeItemRecord) {\n      activeItemRecord.item.tabIndex = -1;\n    }\n    return activatePreviousItem(\n      items,\n      activeItemRecord,\n      this.isActivatable,\n      this.wrapNavigation(),\n    );\n  }\n\n  /**\n   * Listener to be bound to the `deactivate-items` item event.\n   */\n  onDeactivateItems = () => {\n    const items = this.items;\n\n    for (const item of items) {\n      this.deactivateItem(item);\n    }\n  };\n\n  /**\n   * Listener to be bound to the `request-activation` item event..\n   */\n  onRequestActivation = (event: Event) => {\n    this.onDeactivateItems();\n    const target = event.target as Item;\n    this.activateItem(target);\n    target.focus();\n  };\n\n  /**\n   * Listener to be bound to the `slotchange` event for the slot that renders\n   * the items.\n   */\n  onSlotchange = () => {\n    const items = this.items;\n    // Whether we have encountered an item that has been activated\n    let encounteredActivated = false;\n\n    for (const item of items) {\n      const isActivated = !item.disabled && item.tabIndex > -1;\n\n      if (isActivated && !encounteredActivated) {\n        encounteredActivated = true;\n        item.tabIndex = 0;\n        continue;\n      }\n\n      // Deactivate the rest including disabled\n      item.tabIndex = -1;\n    }\n\n    if (encounteredActivated) {\n      return;\n    }\n\n    const firstActivatableItem = getFirstActivatableItem(\n      items,\n      this.isActivatable,\n    );\n\n    if (!firstActivatableItem) {\n      return;\n    }\n\n    firstActivatableItem.tabIndex = 0;\n  };\n}\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {html, isServer, LitElement} from 'lit';\nimport {queryAssignedElements} from 'lit/decorators.js';\n\nimport {ListController, NavigableKeys} from './list-controller.js';\nimport {ListItem as SharedListItem} from './list-navigation-helpers.js';\n\nconst NAVIGABLE_KEY_SET = new Set<string>(Object.values(NavigableKeys));\n\ninterface ListItem extends SharedListItem {\n  type: 'text' | 'button' | 'link';\n}\n\n// tslint:disable-next-line:enforce-comments-on-exported-symbols\nexport class List extends LitElement {\n  /**\n   * An array of activatable and disableable list items. Queries every assigned\n   * element that has the `md-list-item` attribute.\n   *\n   * _NOTE:_ This is a shallow, flattened query via\n   * `HTMLSlotElement.queryAssignedElements` and thus will _only_ include direct\n   * children / directly slotted elements.\n   */\n  @queryAssignedElements({flatten: true})\n  protected slotItems!: Array<ListItem | (HTMLElement & {item?: ListItem})>;\n\n  /** @export */\n  get items() {\n    return this.listController.items;\n  }\n\n  private readonly listController = new ListController<ListItem>({\n    isItem: (item: HTMLElement): item is ListItem =>\n      item.hasAttribute('md-list-item'),\n    getPossibleItems: () => this.slotItems,\n    isRtl: () => getComputedStyle(this).direction === 'rtl',\n    deactivateItem: (item) => {\n      item.tabIndex = -1;\n    },\n    activateItem: (item) => {\n      item.tabIndex = 0;\n    },\n    isNavigableKey: (key) => NAVIGABLE_KEY_SET.has(key),\n    isActivatable: (item) => !item.disabled && item.type !== 'text',\n  });\n\n  private readonly internals =\n    // Cast needed for closure\n    (this as HTMLElement).attachInternals();\n\n  constructor() {\n    super();\n    if (!isServer) {\n      this.internals.role = 'list';\n      this.addEventListener('keydown', this.listController.handleKeydown);\n    }\n  }\n\n  protected override render() {\n    return html`\n      <slot\n        @deactivate-items=${this.listController.onDeactivateItems}\n        @request-activation=${this.listController.onRequestActivation}\n        @slotchange=${this.listController.onSlotchange}>\n      </slot>\n    `;\n  }\n\n  /**\n   * Activates the next item in the list. If at the end of the list, the first\n   * item will be activated.\n   *\n   * @return The activated list item or `null` if there are no items.\n   */\n  activateNextItem(): ListItem | null {\n    return this.listController.activateNextItem();\n  }\n\n  /**\n   * Activates the previous item in the list. If at the start of the list, the\n   * last item will be activated.\n   *\n   * @return The activated list item or `null` if there are no items.\n   */\n  activatePreviousItem(): ListItem | null {\n    return this.listController.activatePreviousItem();\n  }\n}\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./list/internal/list-styles.css.\nimport {css} from 'lit';\nexport const styles = css`:host{background:var(--md-list-container-color, var(--md-sys-color-surface, #fef7ff));color:unset;display:flex;flex-direction:column;outline:none;padding:8px 0;position:relative}\n`;\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {CSSResultOrNative} from 'lit';\nimport {customElement} from 'lit/decorators.js';\n\nimport {List} from './internal/list.js';\nimport {styles} from './internal/list-styles.js';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'md-list': MdList;\n  }\n}\n\n/**\n * @summary Lists are continuous, vertical indexes of text or images.\n *\n * @description\n * Lists consist of one or more list items, and can contain actions represented\n * by icons and text. List items come in three sizes: one-line, two-line, and\n * three-line.\n *\n * __Takeaways:__\n *\n * - Lists should be sorted in logical ways that make content easy to scan, such\n *   as alphabetical, numerical, chronological, or by user preference.\n * - Lists present content in a way that makes it easy to identify a specific\n *   item in a collection and act on it.\n * - Lists should present icons, text, and actions in a consistent format.\n *\n * @final\n * @suppress {visibility}\n */\n@customElement('md-list')\nexport class MdList extends List {\n  static override styles: CSSResultOrNative[] = [styles];\n}\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {html, LitElement} from 'lit';\nimport {property, queryAll} from 'lit/decorators.js';\n\n/**\n * An item layout component.\n */\nexport class Item extends LitElement {\n  /**\n   * Only needed for SSR.\n   *\n   * Add this attribute when an item has two lines to avoid a Flash Of Unstyled\n   * Content. This attribute is not needed for single line items or items with\n   * three or more lines.\n   */\n  @property({type: Boolean, reflect: true}) multiline = false;\n\n  @queryAll('.text slot') private readonly textSlots!: HTMLSlotElement[];\n\n  override render() {\n    return html`\n      <slot name=\"container\"></slot>\n      <slot class=\"non-text\" name=\"start\"></slot>\n      <div class=\"text\">\n        <slot name=\"overline\" @slotchange=${this.handleTextSlotChange}></slot>\n        <slot\n          class=\"default-slot\"\n          @slotchange=${this.handleTextSlotChange}></slot>\n        <slot name=\"headline\" @slotchange=${this.handleTextSlotChange}></slot>\n        <slot\n          name=\"supporting-text\"\n          @slotchange=${this.handleTextSlotChange}></slot>\n      </div>\n      <slot class=\"non-text\" name=\"trailing-supporting-text\"></slot>\n      <slot class=\"non-text\" name=\"end\"></slot>\n    `;\n  }\n\n  private handleTextSlotChange() {\n    // Check if there's more than one text slot with content. If so, the item is\n    // multiline, which has a different min-height than single line items.\n    let isMultiline = false;\n    let slotsWithContent = 0;\n    for (const slot of this.textSlots) {\n      if (slotHasContent(slot)) {\n        slotsWithContent += 1;\n      }\n\n      if (slotsWithContent > 1) {\n        isMultiline = true;\n        break;\n      }\n    }\n\n    this.multiline = isMultiline;\n  }\n}\n\nfunction slotHasContent(slot: HTMLSlotElement) {\n  for (const node of slot.assignedNodes({flatten: true})) {\n    // Assume there's content if there's an element slotted in\n    const isElement = node.nodeType === Node.ELEMENT_NODE;\n    // If there's only text nodes for the default slot, check if there's\n    // non-whitespace.\n    const isTextWithContent =\n      node.nodeType === Node.TEXT_NODE && node.textContent?.match(/\\S/);\n    if (isElement || isTextWithContent) {\n      return true;\n    }\n  }\n\n  return false;\n}\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./labs/item/internal/item-styles.css.\nimport {css} from 'lit';\nexport const styles = css`:host{color:var(--md-sys-color-on-surface, #1d1b20);font-family:var(--md-sys-typescale-body-large-font, var(--md-ref-typeface-plain, Roboto));font-size:var(--md-sys-typescale-body-large-size, 1rem);font-weight:var(--md-sys-typescale-body-large-weight, var(--md-ref-typeface-weight-regular, 400));line-height:var(--md-sys-typescale-body-large-line-height, 1.5rem);align-items:center;box-sizing:border-box;display:flex;gap:16px;min-height:56px;overflow:hidden;padding:12px 16px;position:relative;text-overflow:ellipsis}:host([multiline]){min-height:72px}[name=overline]{color:var(--md-sys-color-on-surface-variant, #49454f);font-family:var(--md-sys-typescale-label-small-font, var(--md-ref-typeface-plain, Roboto));font-size:var(--md-sys-typescale-label-small-size, 0.6875rem);font-weight:var(--md-sys-typescale-label-small-weight, var(--md-ref-typeface-weight-medium, 500));line-height:var(--md-sys-typescale-label-small-line-height, 1rem)}[name=supporting-text]{color:var(--md-sys-color-on-surface-variant, #49454f);font-family:var(--md-sys-typescale-body-medium-font, var(--md-ref-typeface-plain, Roboto));font-size:var(--md-sys-typescale-body-medium-size, 0.875rem);font-weight:var(--md-sys-typescale-body-medium-weight, var(--md-ref-typeface-weight-regular, 400));line-height:var(--md-sys-typescale-body-medium-line-height, 1.25rem)}[name=trailing-supporting-text]{color:var(--md-sys-color-on-surface-variant, #49454f);font-family:var(--md-sys-typescale-label-small-font, var(--md-ref-typeface-plain, Roboto));font-size:var(--md-sys-typescale-label-small-size, 0.6875rem);font-weight:var(--md-sys-typescale-label-small-weight, var(--md-ref-typeface-weight-medium, 500));line-height:var(--md-sys-typescale-label-small-line-height, 1rem)}[name=container]::slotted(*){inset:0;position:absolute}.default-slot{display:inline}.default-slot,.text ::slotted(*){overflow:hidden;text-overflow:ellipsis}.text{display:flex;flex:1;flex-direction:column;overflow:hidden}\n`;\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {CSSResultOrNative} from 'lit';\nimport {customElement} from 'lit/decorators.js';\n\nimport {Item} from './internal/item.js';\nimport {styles} from './internal/item-styles.js';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'md-item': MdItem;\n  }\n}\n\n/**\n * An item layout component that can be used inside list items to give them\n * their customizable structure.\n *\n * `<md-item>` does not have any functionality, which must be added by the\n * component using it.\n *\n * All text will wrap unless `white-space: nowrap` is set on the item or any of\n * its children.\n *\n * Slots available:\n * - `<default>`: The headline, or custom content.\n * - `headline`: The first line.\n * - `supporting-text`: Supporting text lines underneath the headline.\n * - `trailing-supporting-text`: A small text snippet at the end of the item.\n * - `start`: Any leading content, such as icons, avatars, or checkboxes.\n * - `end`: Any trailing content, such as icons and buttons.\n * - `container`: Background container content, intended for adding additional\n *     styles, such as ripples or focus rings.\n *\n * @example\n * ```html\n * <md-item>Single line</md-item>\n *\n * <md-item>\n *   <div class=\"custom-content\">...</div>\n * </md-item>\n *\n * <!-- Classic 1 to 3+ line list items -->\n * <md-item>\n *   <md-icon slot=\"start\">image</md-icon>\n *   <div slot=\"overline\">Overline</div>\n *   <div slot=\"headline\">Headline</div>\n *   <div=\"supporting-text\">Supporting text</div>\n *   <div=\"trailing-supporting-text\">Trailing</div>\n *   <md-icon slot=\"end\">image</md-icon>\n * </md-item>\n * ```\n *\n * When wrapping `<md-item>`, forward the available slots to use the same slot\n * structure for the wrapping component (this is what `<md-list-item>` does).\n *\n * @example\n * ```html\n * <md-item>\n *   <slot></slot>\n *   <slot name=\"overline\" slot=\"overline\"></slot>\n *   <slot name=\"headline\" slot=\"headline\"></slot>\n *   <slot name=\"supporting-text\" slot=\"supporting-text\"></slot>\n *   <slot name=\"trailing-supporting-text\"\n *       slot=\"trailing-supporting-text\"></slot>\n *   <slot name=\"start\" slot=\"start\"></slot>\n *   <slot name=\"end\" slot=\"end\"></slot>\n * </md-item>\n * ```\n *\n * @final\n * @suppress {visibility}\n */\n@customElement('md-item')\nexport class MdItem extends Item {\n  static override styles: CSSResultOrNative[] = [styles];\n}\n", "/**\n * @license\n * Copyright 2022 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport '../../../focus/md-focus-ring.js';\nimport '../../../labs/item/item.js';\nimport '../../../ripple/ripple.js';\n\nimport {html, LitElement, nothing, PropertyValues, TemplateResult} from 'lit';\nimport {property, query} from 'lit/decorators.js';\nimport {ClassInfo, classMap} from 'lit/directives/class-map.js';\nimport {literal, html as staticHtml, StaticValue} from 'lit/static-html.js';\n\nimport {ARIAMixinStrict} from '../../../internal/aria/aria.js';\nimport {requestUpdateOnAriaChange} from '../../../internal/aria/delegate.js';\nimport {\n  createRequestActivationEvent,\n  ListItem,\n} from '../list-navigation-helpers.js';\n\n/**\n * Supported behaviors for a list item.\n */\nexport type ListItemType = 'text' | 'button' | 'link';\n\n/**\n * @fires request-activation {Event} Requests the list to set `tabindex=0` on\n * the item and focus it. --bubbles --composed\n */\nexport class ListItemEl extends LitElement implements ListItem {\n  static {\n    requestUpdateOnAriaChange(ListItemEl);\n  }\n\n  /** @nocollapse */\n  static override shadowRootOptions = {\n    ...LitElement.shadowRootOptions,\n    delegatesFocus: true,\n  };\n\n  /**\n   * Disables the item and makes it non-selectable and non-interactive.\n   */\n  @property({type: Boolean, reflect: true}) disabled = false;\n\n  /**\n   * Sets the behavior of the list item, defaults to \"text\". Change to \"link\" or\n   * \"button\" for interactive items.\n   */\n  @property({reflect: true}) type: ListItemType = 'text';\n\n  /**\n   * READONLY. Sets the `md-list-item` attribute on the element.\n   */\n  @property({type: Boolean, attribute: 'md-list-item', reflect: true})\n  isListItem = true;\n\n  /**\n   * Sets the underlying `HTMLAnchorElement`'s `href` resource attribute.\n   */\n  @property() href = '';\n\n  /**\n   * Sets the underlying `HTMLAnchorElement`'s `target` attribute when `href` is\n   * set.\n   */\n  @property() target: '_blank' | '_parent' | '_self' | '_top' | '' = '';\n\n  @query('.list-item') protected readonly listItemRoot!: HTMLElement | null;\n\n  private get isDisabled() {\n    return this.disabled && this.type !== 'link';\n  }\n\n  protected override willUpdate(changed: PropertyValues<ListItemEl>) {\n    if (this.href) {\n      this.type = 'link';\n    }\n\n    super.willUpdate(changed);\n  }\n\n  protected override render() {\n    return this.renderListItem(html`\n      <md-item>\n        <div slot=\"container\">\n          ${this.renderRipple()} ${this.renderFocusRing()}\n        </div>\n        <slot name=\"start\" slot=\"start\"></slot>\n        <slot name=\"end\" slot=\"end\"></slot>\n        ${this.renderBody()}\n      </md-item>\n    `);\n  }\n\n  /**\n   * Renders the root list item.\n   *\n   * @param content the child content of the list item.\n   */\n  protected renderListItem(content: unknown) {\n    const isAnchor = this.type === 'link';\n    let tag: StaticValue;\n    switch (this.type) {\n      case 'link':\n        tag = literal`a`;\n        break;\n      case 'button':\n        tag = literal`button`;\n        break;\n      default:\n      case 'text':\n        tag = literal`li`;\n        break;\n    }\n\n    const isInteractive = this.type !== 'text';\n    // TODO(b/265339866): announce \"button\"/\"link\" inside of a list item. Until\n    // then all are \"listitem\" roles for correct announcement.\n    const target = isAnchor && !!this.target ? this.target : nothing;\n    return staticHtml`\n      <${tag}\n        id=\"item\"\n        tabindex=\"${this.isDisabled || !isInteractive ? -1 : 0}\"\n        ?disabled=${this.isDisabled}\n        role=\"listitem\"\n        aria-selected=${(this as ARIAMixinStrict).ariaSelected || nothing}\n        aria-checked=${(this as ARIAMixinStrict).ariaChecked || nothing}\n        aria-expanded=${(this as ARIAMixinStrict).ariaExpanded || nothing}\n        aria-haspopup=${(this as ARIAMixinStrict).ariaHasPopup || nothing}\n        class=\"list-item ${classMap(this.getRenderClasses())}\"\n        href=${this.href || nothing}\n        target=${target}\n        @focus=${this.onFocus}\n      >${content}</${tag}>\n    `;\n  }\n\n  /**\n   * Handles rendering of the ripple element.\n   */\n  protected renderRipple(): TemplateResult | typeof nothing {\n    if (this.type === 'text') {\n      return nothing;\n    }\n\n    return html` <md-ripple\n      part=\"ripple\"\n      for=\"item\"\n      ?disabled=${this.isDisabled}></md-ripple>`;\n  }\n\n  /**\n   * Handles rendering of the focus ring.\n   */\n  protected renderFocusRing(): TemplateResult | typeof nothing {\n    if (this.type === 'text') {\n      return nothing;\n    }\n\n    return html` <md-focus-ring\n      @visibility-changed=${this.onFocusRingVisibilityChanged}\n      part=\"focus-ring\"\n      for=\"item\"\n      inward></md-focus-ring>`;\n  }\n\n  protected onFocusRingVisibilityChanged(e: Event) {}\n\n  /**\n   * Classes applied to the list item root.\n   */\n  protected getRenderClasses(): ClassInfo {\n    return {'disabled': this.isDisabled};\n  }\n\n  /**\n   * Handles rendering the headline and supporting text.\n   */\n  protected renderBody() {\n    return html`\n      <slot></slot>\n      <slot name=\"overline\" slot=\"overline\"></slot>\n      <slot name=\"headline\" slot=\"headline\"></slot>\n      <slot name=\"supporting-text\" slot=\"supporting-text\"></slot>\n      <slot\n        name=\"trailing-supporting-text\"\n        slot=\"trailing-supporting-text\"></slot>\n    `;\n  }\n\n  protected onFocus() {\n    if (this.tabIndex !== -1) {\n      return;\n    }\n    // Handles the case where the user clicks on the element and then tabs.\n    this.dispatchEvent(createRequestActivationEvent());\n  }\n\n  override focus() {\n    // TODO(b/300334509): needed for some cases where delegatesFocus doesn't\n    // work programmatically like in FF and select-option\n    this.listItemRoot?.focus();\n  }\n}\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./list/internal/listitem/list-item-styles.css.\nimport {css} from 'lit';\nexport const styles = css`:host{display:flex;-webkit-tap-highlight-color:rgba(0,0,0,0);--md-ripple-hover-color: var(--md-list-item-hover-state-layer-color, var(--md-sys-color-on-surface, #1d1b20));--md-ripple-hover-opacity: var(--md-list-item-hover-state-layer-opacity, 0.08);--md-ripple-pressed-color: var(--md-list-item-pressed-state-layer-color, var(--md-sys-color-on-surface, #1d1b20));--md-ripple-pressed-opacity: var(--md-list-item-pressed-state-layer-opacity, 0.12)}:host(:is([type=button]:not([disabled]),[type=link])){cursor:pointer}md-focus-ring{z-index:1;--md-focus-ring-shape: 8px}a,button,li{background:none;border:none;cursor:inherit;padding:0;margin:0;text-align:unset;text-decoration:none}.list-item{border-radius:inherit;display:flex;flex:1;max-width:inherit;min-width:inherit;outline:none;-webkit-tap-highlight-color:rgba(0,0,0,0);width:100%}.list-item.interactive{cursor:pointer}.list-item.disabled{opacity:var(--md-list-item-disabled-opacity, 0.3);pointer-events:none}[slot=container]{pointer-events:none}md-ripple{border-radius:inherit}md-item{border-radius:inherit;flex:1;height:100%;color:var(--md-list-item-label-text-color, var(--md-sys-color-on-surface, #1d1b20));font-family:var(--md-list-item-label-text-font, var(--md-sys-typescale-body-large-font, var(--md-ref-typeface-plain, Roboto)));font-size:var(--md-list-item-label-text-size, var(--md-sys-typescale-body-large-size, 1rem));line-height:var(--md-list-item-label-text-line-height, var(--md-sys-typescale-body-large-line-height, 1.5rem));font-weight:var(--md-list-item-label-text-weight, var(--md-sys-typescale-body-large-weight, var(--md-ref-typeface-weight-regular, 400)));min-height:var(--md-list-item-one-line-container-height, 56px);padding-top:var(--md-list-item-top-space, 12px);padding-bottom:var(--md-list-item-bottom-space, 12px);padding-inline-start:var(--md-list-item-leading-space, 16px);padding-inline-end:var(--md-list-item-trailing-space, 16px)}md-item[multiline]{min-height:var(--md-list-item-two-line-container-height, 72px)}[slot=supporting-text]{color:var(--md-list-item-supporting-text-color, var(--md-sys-color-on-surface-variant, #49454f));font-family:var(--md-list-item-supporting-text-font, var(--md-sys-typescale-body-medium-font, var(--md-ref-typeface-plain, Roboto)));font-size:var(--md-list-item-supporting-text-size, var(--md-sys-typescale-body-medium-size, 0.875rem));line-height:var(--md-list-item-supporting-text-line-height, var(--md-sys-typescale-body-medium-line-height, 1.25rem));font-weight:var(--md-list-item-supporting-text-weight, var(--md-sys-typescale-body-medium-weight, var(--md-ref-typeface-weight-regular, 400)))}[slot=trailing-supporting-text]{color:var(--md-list-item-trailing-supporting-text-color, var(--md-sys-color-on-surface-variant, #49454f));font-family:var(--md-list-item-trailing-supporting-text-font, var(--md-sys-typescale-label-small-font, var(--md-ref-typeface-plain, Roboto)));font-size:var(--md-list-item-trailing-supporting-text-size, var(--md-sys-typescale-label-small-size, 0.6875rem));line-height:var(--md-list-item-trailing-supporting-text-line-height, var(--md-sys-typescale-label-small-line-height, 1rem));font-weight:var(--md-list-item-trailing-supporting-text-weight, var(--md-sys-typescale-label-small-weight, var(--md-ref-typeface-weight-medium, 500)))}:is([slot=start],[slot=end])::slotted(*){fill:currentColor}[slot=start]{color:var(--md-list-item-leading-icon-color, var(--md-sys-color-on-surface-variant, #49454f))}[slot=end]{color:var(--md-list-item-trailing-icon-color, var(--md-sys-color-on-surface-variant, #49454f))}@media(forced-colors: active){.disabled slot{color:GrayText}.list-item.disabled{color:GrayText;opacity:1}}\n`;\n", "/**\n * @license\n * Copyright 2022 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {CSSResultOrNative} from 'lit';\nimport {customElement} from 'lit/decorators.js';\n\nimport {ListItemEl as ListItem} from './internal/listitem/list-item.js';\nimport {styles} from './internal/listitem/list-item-styles.js';\n\nexport {type ListItemType} from './internal/listitem/list-item.js';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'md-list-item': MdListItem;\n  }\n}\n\n/**\n * @summary\n * Lists are continuous, vertical indexes of text or images. Items are placed\n * inside the list.\n *\n * @description\n * Lists consist of one or more list items, and can contain actions represented\n * by icons and text. List items come in three sizes: one-line, two-line, and\n * three-line.\n *\n * __Takeaways:__\n *\n * - Lists should be sorted in logical ways that make content easy to scan, such\n *   as alphabetical, numerical, chronological, or by user preference.\n * - Lists present content in a way that makes it easy to identify a specific\n *   item in a collection and act on it.\n * - Lists should present icons, text, and actions in a consistent format.\n *\n * Acceptable slot child variants are:\n *\n * - `img[slot=end]`\n * - `img[slot=start]`\n *\n *  @example\n * ```html\n * <md-list-item\n *     headline=\"User Name\"\n *     supportingText=\"user@name.com\">\n *   <md-icon slot=\"start\">account_circle</md-icon>\n *   <md-icon slot=\"end\">check</md-icon>\n * </md-list-item>\n * ```\n *\n * @example\n *\n * @final\n * @suppress {visibility}\n */\n@customElement('md-list-item')\nexport class MdListItem extends ListItem {\n  static override styles: CSSResultOrNative[] = [styles];\n}\n", "/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {AttributePart, noChange} from '../lit-html.js';\nimport {\n  directive,\n  Directive,\n  DirectiveParameters,\n  PartInfo,\n  PartType,\n} from '../directive.js';\n\n/**\n * A key-value set of CSS properties and values.\n *\n * The key should be either a valid CSS property name string, like\n * `'background-color'`, or a valid JavaScript camel case property name\n * for CSSStyleDeclaration like `backgroundColor`.\n */\nexport interface StyleInfo {\n  [name: string]: string | number | undefined | null;\n}\n\nconst important = 'important';\n// The leading space is important\nconst importantFlag = ' !' + important;\n// How many characters to remove from a value, as a negative number\nconst flagTrim = 0 - importantFlag.length;\n\nclass StyleMapDirective extends Directive {\n  _previousStyleProperties?: Set<string>;\n\n  constructor(partInfo: PartInfo) {\n    super(partInfo);\n    if (\n      partInfo.type !== PartType.ATTRIBUTE ||\n      partInfo.name !== 'style' ||\n      (partInfo.strings?.length as number) > 2\n    ) {\n      throw new Error(\n        'The `styleMap` directive must be used in the `style` attribute ' +\n          'and must be the only part in the attribute.'\n      );\n    }\n  }\n\n  render(styleInfo: Readonly<StyleInfo>) {\n    return Object.keys(styleInfo).reduce((style, prop) => {\n      const value = styleInfo[prop];\n      if (value == null) {\n        return style;\n      }\n      // Convert property names from camel-case to dash-case, i.e.:\n      //  `backgroundColor` -> `background-color`\n      // Vendor-prefixed names need an extra `-` appended to front:\n      //  `webkitAppearance` -> `-webkit-appearance`\n      // Exception is any property name containing a dash, including\n      // custom properties; we assume these are already dash-cased i.e.:\n      //  `--my-button-color` --> `--my-button-color`\n      prop = prop.includes('-')\n        ? prop\n        : prop\n            .replace(/(?:^(webkit|moz|ms|o)|)(?=[A-Z])/g, '-$&')\n            .toLowerCase();\n      return style + `${prop}:${value};`;\n    }, '');\n  }\n\n  override update(part: AttributePart, [styleInfo]: DirectiveParameters<this>) {\n    const {style} = part.element as HTMLElement;\n\n    if (this._previousStyleProperties === undefined) {\n      this._previousStyleProperties = new Set();\n      for (const name in styleInfo) {\n        this._previousStyleProperties.add(name);\n      }\n      return this.render(styleInfo);\n    }\n\n    // Remove old properties that no longer exist in styleInfo\n    // We use forEach() instead of for-of so that re don't require down-level\n    // iteration.\n    this._previousStyleProperties!.forEach((name) => {\n      // If the name isn't in styleInfo or it's null/undefined\n      if (styleInfo[name] == null) {\n        this._previousStyleProperties!.delete(name);\n        if (name.includes('-')) {\n          style.removeProperty(name);\n        } else {\n          // Note reset using empty string (vs null) as IE11 does not always\n          // reset via null (https://developer.mozilla.org/en-US/docs/Web/API/ElementCSSInlineStyle/style#setting_styles)\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          (style as any)[name] = '';\n        }\n      }\n    });\n\n    // Add or update properties\n    for (const name in styleInfo) {\n      const value = styleInfo[name];\n      if (value != null) {\n        this._previousStyleProperties.add(name);\n        const isImportant =\n          typeof value === 'string' && value.endsWith(importantFlag);\n        if (name.includes('-') || isImportant) {\n          style.setProperty(\n            name,\n            isImportant\n              ? (value as string).slice(0, flagTrim)\n              : (value as string),\n            isImportant ? important : ''\n          );\n        } else {\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          (style as any)[name] = value;\n        }\n      }\n    }\n    return noChange;\n  }\n}\n\n/**\n * A directive that applies CSS properties to an element.\n *\n * `styleMap` can only be used in the `style` attribute and must be the only\n * expression in the attribute. It takes the property names in the\n * {@link StyleInfo styleInfo} object and adds the properties to the inline\n * style of the element.\n *\n * Property names with dashes (`-`) are assumed to be valid CSS\n * property names and set on the element's style object using `setProperty()`.\n * Names without dashes are assumed to be camelCased JavaScript property names\n * and set on the element's style object using property assignment, allowing the\n * style object to translate JavaScript-style names to CSS property names.\n *\n * For example `styleMap({backgroundColor: 'red', 'border-top': '5px', '--size':\n * '0'})` sets the `background-color`, `border-top` and `--size` properties.\n *\n * @param styleInfo\n * @see {@link https://lit.dev/docs/templates/directives/#stylemap styleMap code samples on Lit.dev}\n */\nexport const styleMap = directive(StyleMapDirective);\n\n/**\n * The type of the class that powers this directive. Necessary for naming the\n * directive's return type.\n */\nexport type {StyleMapDirective};\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {LitElement} from 'lit';\n\nimport {MenuItem} from './menuItemController.js';\nimport type {Corner, SurfacePositionTarget} from './surfacePositionController.js';\n\n/**\n * The interface needed for a Menu to work with other md-menu elements.\n */\nexport interface MenuSelf {\n  /**\n   * Whether or not the menu is currently opened.\n   */\n  open: boolean;\n  /**\n   * Skips the opening and closing animations.\n   */\n  quick: boolean;\n  /**\n   * Displays overflow content like a submenu.\n   *\n   * __NOTE__: This may cause adverse effects if you set\n   * `md-menu {max-height:...}`\n   * and have items overflowing items in the \"y\" direction.\n   */\n  hasOverflow: boolean;\n  /**\n   * Communicates to the menu that it is a submenu and should not handle the\n   * ArrowLeft button in LTR and ArrowRight button in RTL.\n   */\n  isSubmenu: boolean;\n  /**\n   * After closing, does not restore focus to the last focused element before\n   * the menu was opened.\n   */\n  skipRestoreFocus: boolean;\n  /**\n   * The corner of the anchor in which the menu should anchor to.\n   */\n  anchorCorner: Corner;\n  /**\n   * The corner of the menu in which the menu should anchor from.\n   */\n  menuCorner: Corner;\n  /**\n   * The element the menu should anchor to.\n   */\n  anchorElement: (HTMLElement & Partial<SurfacePositionTarget>) | null;\n  /**\n   * What the menu should focus by default when opened.\n   */\n  defaultFocus: FocusState;\n  /**\n   * An array of items managed by the list.\n   */\n  items: MenuItem[];\n  /**\n   * The positioning strategy of the menu.\n   *\n   * - `absolute` is relative to the anchor element.\n   * - `fixed` is relative to the window\n   * - `document` is relative to the document\n   */\n  positioning?: 'absolute' | 'fixed' | 'document';\n  /**\n   * Opens the menu.\n   */\n  show: () => void;\n  /**\n   * Closes the menu.\n   */\n  close: () => void;\n}\n\n/**\n * The interface needed for a Menu to work with other md-menu elements. Useful\n * for keeping your types safe when wrapping `md-menu`.\n */\nexport type Menu = MenuSelf & LitElement;\n\n/**\n * The reason the `close-menu` event was dispatched.\n */\nexport interface Reason {\n  kind: string;\n}\n\n/**\n * The click selection reason for the `close-menu` event. The menu was closed\n * because an item was selected via user click.\n */\nexport interface ClickReason extends Reason {\n  kind: typeof CloseReason.CLICK_SELECTION;\n}\n\n/**\n * The keydown reason for the `close-menu` event. The menu was closed\n * because a specific key was pressed. The default closing keys for\n * `md-menu-item` are, Space, Enter or Escape.\n */\nexport interface KeydownReason extends Reason {\n  kind: typeof CloseReason.KEYDOWN;\n  key: string;\n}\n\n/**\n * The default menu closing reasons for the material md-menu package.\n */\nexport type DefaultReasons = ClickReason | KeydownReason;\n\n/**\n * Creates an event that closes any parent menus.\n */\nexport function createCloseMenuEvent<T extends Reason = DefaultReasons>(\n  initiator: MenuItem,\n  reason: T,\n) {\n  return new CustomEvent<{\n    initiator: MenuItem;\n    itemPath: MenuItem[];\n    reason: T;\n  }>('close-menu', {\n    bubbles: true,\n    composed: true,\n    detail: {initiator, reason, itemPath: [initiator]},\n  });\n}\n\n/**\n * Creates an event that signals to the menu that it should stay open on the\n * focusout event.\n */\nexport function createStayOpenOnFocusoutEvent() {\n  return new Event('stay-open-on-focusout', {bubbles: true, composed: true});\n}\n\n/**\n * Creates an event that signals to the menu that it should close open on the\n * focusout event.\n */\nexport function createCloseOnFocusoutEvent() {\n  return new Event('close-on-focusout', {bubbles: true, composed: true});\n}\n\n/**\n * Creates a default close menu event used by md-menu.\n */\nexport const createDefaultCloseMenuEvent = createCloseMenuEvent<DefaultReasons>;\n\n/**\n * The type of the default close menu event used by md-menu.\n */\n// tslint:disable-next-line\nexport type CloseMenuEvent<T extends Reason = DefaultReasons> = ReturnType<\n  typeof createCloseMenuEvent<T>\n>;\n\n/**\n * Creates an event that requests the given item be selected.\n */\nexport function createDeactivateTypeaheadEvent() {\n  return new Event('deactivate-typeahead', {bubbles: true, composed: true});\n}\n\n/**\n * The type of the event that requests the typeahead functionality of containing\n * menu be deactivated.\n */\nexport type DeactivateTypeaheadEvent = ReturnType<\n  typeof createDeactivateTypeaheadEvent\n>;\n\n/**\n * Creates an event that requests the typeahead functionality of containing menu\n * be activated.\n */\nexport function createActivateTypeaheadEvent() {\n  return new Event('activate-typeahead', {bubbles: true, composed: true});\n}\n\n/**\n * The type of the event that requests the typeahead functionality of containing\n * menu be activated.\n */\nexport type ActivateTypeaheadEvent = ReturnType<\n  typeof createActivateTypeaheadEvent\n>;\n\n/**\n * Keys that are used to navigate menus.\n */\n// tslint:disable-next-line:enforce-name-casing We are mimicking enum style\nexport const NavigableKey = {\n  UP: 'ArrowUp',\n  DOWN: 'ArrowDown',\n  RIGHT: 'ArrowRight',\n  LEFT: 'ArrowLeft',\n} as const;\n\n/**\n * Keys that are used for selection in menus.\n */\n// tslint:disable-next-line:enforce-name-casing We are mimicking enum style\nexport const SelectionKey = {\n  SPACE: 'Space',\n  ENTER: 'Enter',\n} as const;\n\n/**\n * Default close `Reason` kind values.\n */\n// tslint:disable-next-line:enforce-name-casing We are mimicking enum style\nexport const CloseReason = {\n  CLICK_SELECTION: 'click-selection',\n  KEYDOWN: 'keydown',\n} as const;\n\n/**\n * Keys that can close menus.\n */\n// tslint:disable-next-line:enforce-name-casing We are mimicking enum style\nexport const KeydownCloseKey = {\n  ESCAPE: 'Escape',\n  SPACE: SelectionKey.SPACE,\n  ENTER: SelectionKey.ENTER,\n} as const;\n\ntype Values<T> = T[keyof T];\n\n/**\n * Determines whether the given key code is a key code that should close the\n * menu.\n *\n * @param code The KeyboardEvent code to check.\n * @return Whether or not the key code is in the predetermined list to close the\n * menu.\n */\nexport function isClosableKey(\n  code: string,\n): code is Values<typeof KeydownCloseKey> {\n  return Object.values(KeydownCloseKey).some((value) => value === code);\n}\n\n/**\n * Determines whether the given key code is a key code that should select a menu\n * item.\n *\n * @param code They KeyboardEvent code to check.\n * @return Whether or not the key code is in the predetermined list to select a\n * menu item.\n */\nexport function isSelectableKey(\n  code: string,\n): code is Values<typeof SelectionKey> {\n  return Object.values(SelectionKey).some((value) => value === code);\n}\n\n/**\n * Determines whether a target element is contained inside another element's\n * composed tree.\n *\n * @param target The potential contained element.\n * @param container The potential containing element of the target.\n * @returns Whether the target element is contained inside the container's\n * composed subtree\n */\nexport function isElementInSubtree(\n  target: EventTarget,\n  container: EventTarget,\n) {\n  // Dispatch a composed, bubbling event to check its path to see if the\n  // newly-focused element is contained in container's subtree\n  const focusEv = new Event('md-contains', {bubbles: true, composed: true});\n  let composedPath: EventTarget[] = [];\n  const listener = (ev: Event) => {\n    composedPath = ev.composedPath();\n  };\n\n  container.addEventListener('md-contains', listener);\n  target.dispatchEvent(focusEv);\n  container.removeEventListener('md-contains', listener);\n\n  const isContained = composedPath.length > 0;\n  return isContained;\n}\n\n/**\n * Element to focus on when menu is first opened.\n */\n// tslint:disable-next-line:enforce-name-casing We are mimicking enum style\nexport const FocusState = {\n  NONE: 'none',\n  LIST_ROOT: 'list-root',\n  FIRST_ITEM: 'first-item',\n  LAST_ITEM: 'last-item',\n} as const;\n\n/**\n * Element to focus on when menu is first opened.\n */\nexport type FocusState = (typeof FocusState)[keyof typeof FocusState];\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {ReactiveController, ReactiveControllerHost} from 'lit';\nimport {StyleInfo} from 'lit/directives/style-map.js';\n\n/**\n * Declare popoverAPI functions and properties. See\n * https://developer.mozilla.org/en-US/docs/Web/API/Popover_API\n * Without this, closure will rename these functions. Can remove once these\n * functions make it into the typescript lib.\n */\ndeclare global {\n  interface HTMLElement {\n    showPopover(): void;\n    hidePopover(): void;\n    togglePopover(force: boolean): void;\n    popover: string | null;\n  }\n}\n\n/**\n * An enum of supported Menu corners\n */\n// tslint:disable-next-line:enforce-name-casing We are mimicking enum style\nexport const Corner = {\n  END_START: 'end-start',\n  END_END: 'end-end',\n  START_START: 'start-start',\n  START_END: 'start-end',\n} as const;\n\n/**\n * A corner of a box in the standard logical property style of <block>_<inline>\n */\nexport type Corner = (typeof Corner)[keyof typeof Corner];\n\n/**\n * An interface that provides a method to customize the rect from which to\n * calculate the anchor positioning. Useful for when you want a surface to\n * anchor to an element in your shadow DOM rather than the host element.\n */\nexport interface SurfacePositionTarget extends HTMLElement {\n  getSurfacePositionClientRect?: () => DOMRect;\n}\n\n/**\n * The configurable options for the surface position controller.\n */\nexport interface SurfacePositionControllerProperties {\n  /**\n   * The corner of the anchor to align the surface's position.\n   */\n  anchorCorner: Corner;\n  /**\n   * The corner of the surface to align to the given anchor corner.\n   */\n  surfaceCorner: Corner;\n  /**\n   * The HTMLElement reference of the surface to be positioned.\n   */\n  surfaceEl: SurfacePositionTarget | null;\n  /**\n   * The HTMLElement reference of the anchor to align to.\n   */\n  anchorEl: SurfacePositionTarget | null;\n  /**\n   * Whether the positioning algorithim should calculate relative to the parent\n   * of the anchor element (absolute) or relative to the window (fixed).\n   *\n   * Examples for `position = 'fixed'`:\n   *\n   * - If there is no `position:relative` in the given parent tree and the\n   *   surface is `position:absolute`\n   * - If the surface is `position:fixed`\n   * - If the surface is in the \"top layer\"\n   * - The anchor and the surface do not share a common `position:relative`\n   *   ancestor\n   */\n  positioning: 'absolute' | 'fixed' | 'document';\n  /**\n   * Whether or not the surface should be \"open\" and visible\n   */\n  isOpen: boolean;\n  /**\n   * The number of pixels in which to offset from the inline axis relative to\n   * logical property.\n   *\n   * Positive is right in LTR and left in RTL.\n   */\n  xOffset: number;\n  /**\n   * The number of pixes in which to offset the block axis.\n   *\n   * Positive is down and negative is up.\n   */\n  yOffset: number;\n  /**\n   * The strategy to follow when repositioning the menu to stay inside the\n   * viewport. \"move\" will simply move the surface to stay in the viewport.\n   * \"resize\" will attempt to resize the surface.\n   *\n   * Both strategies will still attempt to flip the anchor and surface corners.\n   */\n  repositionStrategy: 'move' | 'resize';\n  /**\n   * A function to call after the surface has been positioned.\n   */\n  onOpen: () => void;\n  /**\n   * A function to call before the surface should be closed. (A good time to\n   * perform animations while the surface is still visible)\n   */\n  beforeClose: () => Promise<void>;\n  /**\n   * A function to call after the surface has been closed.\n   */\n  onClose: () => void;\n}\n\n/**\n * Given a surface, an anchor, corners, and some options, this surface will\n * calculate the position of a surface to align the two given corners and keep\n * the surface inside the window viewport. It also provides a StyleInfo map that\n * can be applied to the surface to handle visiblility and position.\n */\nexport class SurfacePositionController implements ReactiveController {\n  // The current styles to apply to the surface.\n  private surfaceStylesInternal: StyleInfo = {\n    'display': 'none',\n  };\n  // Previous values stored for change detection. Open change detection is\n  // calculated separately so initialize it here.\n  private lastValues: SurfacePositionControllerProperties = {\n    isOpen: false,\n  } as SurfacePositionControllerProperties;\n\n  /**\n   * @param host The host to connect the controller to.\n   * @param getProperties A function that returns the properties for the\n   * controller.\n   */\n  constructor(\n    private readonly host: ReactiveControllerHost,\n    private readonly getProperties: () => SurfacePositionControllerProperties,\n  ) {\n    this.host.addController(this);\n  }\n\n  /**\n   * The StyleInfo map to apply to the surface via Lit's stylemap\n   */\n  get surfaceStyles() {\n    return this.surfaceStylesInternal;\n  }\n\n  /**\n   * Calculates the surface's new position required so that the surface's\n   * `surfaceCorner` aligns to the anchor's `anchorCorner` while keeping the\n   * surface inside the window viewport. This positioning also respects RTL by\n   * checking `getComputedStyle()` on the surface element.\n   */\n  async position() {\n    const {\n      surfaceEl,\n      anchorEl,\n      anchorCorner: anchorCornerRaw,\n      surfaceCorner: surfaceCornerRaw,\n      positioning,\n      xOffset,\n      yOffset,\n      repositionStrategy,\n    } = this.getProperties();\n    const anchorCorner = anchorCornerRaw.toLowerCase().trim();\n    const surfaceCorner = surfaceCornerRaw.toLowerCase().trim();\n\n    if (!surfaceEl || !anchorEl) {\n      return;\n    }\n\n    // Store these before we potentially resize the window with the next set of\n    // lines\n    const windowInnerWidth = window.innerWidth;\n    const windowInnerHeight = window.innerHeight;\n\n    const div = document.createElement('div');\n    div.style.opacity = '0';\n    div.style.position = 'fixed';\n    div.style.display = 'block';\n    div.style.inset = '0';\n    document.body.appendChild(div);\n    const scrollbarTestRect = div.getBoundingClientRect();\n    div.remove();\n\n    // Calculate the widths of the scrollbars in the inline and block directions\n    // to account for window-relative calculations.\n    const blockScrollbarHeight = window.innerHeight - scrollbarTestRect.bottom;\n    const inlineScrollbarWidth = window.innerWidth - scrollbarTestRect.right;\n\n    // Paint the surface transparently so that we can get the position and the\n    // rect info of the surface.\n    this.surfaceStylesInternal = {\n      'display': 'block',\n      'opacity': '0',\n    };\n\n    // Wait for it to be visible.\n    this.host.requestUpdate();\n    await this.host.updateComplete;\n\n    // Safari has a bug that makes popovers render incorrectly if the node is\n    // made visible + Animation Frame before calling showPopover().\n    // https://bugs.webkit.org/show_bug.cgi?id=264069\n    // also the cast is required due to differing TS types in Google and OSS.\n    if (\n      (surfaceEl as unknown as {popover: string}).popover &&\n      surfaceEl.isConnected\n    ) {\n      (surfaceEl as unknown as {showPopover: () => void}).showPopover();\n    }\n\n    const surfaceRect = surfaceEl.getSurfacePositionClientRect\n      ? surfaceEl.getSurfacePositionClientRect()\n      : surfaceEl.getBoundingClientRect();\n    const anchorRect = anchorEl.getSurfacePositionClientRect\n      ? anchorEl.getSurfacePositionClientRect()\n      : anchorEl.getBoundingClientRect();\n    const [surfaceBlock, surfaceInline] = surfaceCorner.split('-') as Array<\n      'start' | 'end'\n    >;\n    const [anchorBlock, anchorInline] = anchorCorner.split('-') as Array<\n      'start' | 'end'\n    >;\n\n    // LTR depends on the direction of the SURFACE not the anchor.\n    const isLTR =\n      getComputedStyle(surfaceEl as HTMLElement).direction === 'ltr';\n\n    /*\n     * For more on inline and block dimensions, see MDN article:\n     * https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_logical_properties_and_values\n     *\n     * ┌───── inline/blockDocumentOffset  inlineScrollbarWidth\n     * │       │                                    │\n     * │     ┌─▼─────┐                              │Document\n     * │    ┌┼───────┴──────────────────────────────┼────────┐\n     * │    ││                                      │        │\n     * └──► ││ ┌───── inline/blockWindowOffset      │        │\n     *      ││ │       │                            ▼        │\n     *      ││ │     ┌─▼───┐                 Window┌┐        │\n     *      └┤ │    ┌┼─────┴───────────────────────┼│        │\n     *       │ │    ││                             ││        │\n     *       │ └──► ││  ┌──inline/blockAnchorOffset││        │\n     *       │      ││  │     │                    ││        │\n     *       │      └┤  │  ┌──▼───┐                ││        │\n     *       │       │  │ ┌┼──────┤                ││        │\n     *       │       │  └─►│Anchor│                ││        │\n     *       │       │    └┴──────┘                ││        │\n     *       │       │                             ││        │\n     *       │       │     ┌───────────────────────┼┼────┐   │\n     *       │       │     │ Surface               ││    │   │\n     *       │       │     │                       ││    │   │\n     *       │       │     │                       ││    │   │\n     *       │       │     │                       ││    │   │\n     *       │       │     │                       ││    │   │\n     *       │      ┌┼─────┼───────────────────────┼│    │   │\n     *       │   ┌─►┴──────┼────────────────────────┘    ├┐  │\n     *       │   │         │ inline/blockOOBCorrection   ││  │\n     *       │   │         │                         │   ││  │\n     *       │   │         │                         ├──►├│  │\n     *       │   │         │                         │   ││  │\n     *       │   │         └────────────────────────┐▼───┼┘  │\n     *       │  blockScrollbarHeight                └────┘   │\n     *       │                                               │\n     *       └───────────────────────────────────────────────┘\n     */\n\n    // Calculate the block positioning properties\n    let {blockInset, blockOutOfBoundsCorrection, surfaceBlockProperty} =\n      this.calculateBlock({\n        surfaceRect,\n        anchorRect,\n        anchorBlock,\n        surfaceBlock,\n        yOffset,\n        positioning,\n        windowInnerHeight,\n        blockScrollbarHeight,\n      });\n\n    // If the surface should be out of bounds in the block direction, flip the\n    // surface and anchor corner block values and recalculate\n    if (blockOutOfBoundsCorrection) {\n      const flippedSurfaceBlock = surfaceBlock === 'start' ? 'end' : 'start';\n      const flippedAnchorBlock = anchorBlock === 'start' ? 'end' : 'start';\n\n      const flippedBlock = this.calculateBlock({\n        surfaceRect,\n        anchorRect,\n        anchorBlock: flippedAnchorBlock,\n        surfaceBlock: flippedSurfaceBlock,\n        yOffset,\n        positioning,\n        windowInnerHeight,\n        blockScrollbarHeight,\n      });\n\n      // In the case that the flipped verion would require less out of bounds\n      // correcting, use the flipped corner block values\n      if (\n        blockOutOfBoundsCorrection > flippedBlock.blockOutOfBoundsCorrection\n      ) {\n        blockInset = flippedBlock.blockInset;\n        blockOutOfBoundsCorrection = flippedBlock.blockOutOfBoundsCorrection;\n        surfaceBlockProperty = flippedBlock.surfaceBlockProperty;\n      }\n    }\n\n    // Calculate the inline positioning properties\n    let {inlineInset, inlineOutOfBoundsCorrection, surfaceInlineProperty} =\n      this.calculateInline({\n        surfaceRect,\n        anchorRect,\n        anchorInline,\n        surfaceInline,\n        xOffset,\n        positioning,\n        isLTR,\n        windowInnerWidth,\n        inlineScrollbarWidth,\n      });\n\n    // If the surface should be out of bounds in the inline direction, flip the\n    // surface and anchor corner inline values and recalculate\n    if (inlineOutOfBoundsCorrection) {\n      const flippedSurfaceInline = surfaceInline === 'start' ? 'end' : 'start';\n      const flippedAnchorInline = anchorInline === 'start' ? 'end' : 'start';\n\n      const flippedInline = this.calculateInline({\n        surfaceRect,\n        anchorRect,\n        anchorInline: flippedAnchorInline,\n        surfaceInline: flippedSurfaceInline,\n        xOffset,\n        positioning,\n        isLTR,\n        windowInnerWidth,\n        inlineScrollbarWidth,\n      });\n\n      // In the case that the flipped verion would require less out of bounds\n      // correcting, use the flipped corner inline values\n      if (\n        Math.abs(inlineOutOfBoundsCorrection) >\n        Math.abs(flippedInline.inlineOutOfBoundsCorrection)\n      ) {\n        inlineInset = flippedInline.inlineInset;\n        inlineOutOfBoundsCorrection = flippedInline.inlineOutOfBoundsCorrection;\n        surfaceInlineProperty = flippedInline.surfaceInlineProperty;\n      }\n    }\n\n    // If we are simply repositioning the surface back inside the viewport,\n    // subtract the out of bounds correction values from the positioning.\n    if (repositionStrategy === 'move') {\n      blockInset = blockInset - blockOutOfBoundsCorrection;\n      inlineInset = inlineInset - inlineOutOfBoundsCorrection;\n    }\n\n    this.surfaceStylesInternal = {\n      'display': 'block',\n      'opacity': '1',\n      [surfaceBlockProperty]: `${blockInset}px`,\n      [surfaceInlineProperty]: `${inlineInset}px`,\n    };\n\n    // In the case that we are resizing the surface to stay inside the viewport\n    // we need to set height and width on the surface.\n    if (repositionStrategy === 'resize') {\n      // Add a height property to the styles if there is block height correction\n      if (blockOutOfBoundsCorrection) {\n        this.surfaceStylesInternal['height'] = `${\n          surfaceRect.height - blockOutOfBoundsCorrection\n        }px`;\n      }\n\n      // Add a width property to the styles if there is block height correction\n      if (inlineOutOfBoundsCorrection) {\n        this.surfaceStylesInternal['width'] = `${\n          surfaceRect.width - inlineOutOfBoundsCorrection\n        }px`;\n      }\n    }\n\n    this.host.requestUpdate();\n  }\n\n  /**\n   * Calculates the css property, the inset, and the out of bounds correction\n   * for the surface in the block direction.\n   */\n  private calculateBlock(config: {\n    surfaceRect: DOMRect;\n    anchorRect: DOMRect;\n    anchorBlock: 'start' | 'end';\n    surfaceBlock: 'start' | 'end';\n    yOffset: number;\n    positioning: 'absolute' | 'fixed' | 'document';\n    windowInnerHeight: number;\n    blockScrollbarHeight: number;\n  }) {\n    const {\n      surfaceRect,\n      anchorRect,\n      anchorBlock,\n      surfaceBlock,\n      yOffset,\n      positioning,\n      windowInnerHeight,\n      blockScrollbarHeight,\n    } = config;\n    // We use number booleans to multiply values rather than `if` / ternary\n    // statements because it _heavily_ cuts down on nesting and readability\n    const relativeToWindow =\n      positioning === 'fixed' || positioning === 'document' ? 1 : 0;\n    const relativeToDocument = positioning === 'document' ? 1 : 0;\n    const isSurfaceBlockStart = surfaceBlock === 'start' ? 1 : 0;\n    const isSurfaceBlockEnd = surfaceBlock === 'end' ? 1 : 0;\n    const isOneBlockEnd = anchorBlock !== surfaceBlock ? 1 : 0;\n\n    // Whether or not to apply the height of the anchor\n    const blockAnchorOffset = isOneBlockEnd * anchorRect.height + yOffset;\n    // The absolute block position of the anchor relative to window\n    const blockTopLayerOffset =\n      isSurfaceBlockStart * anchorRect.top +\n      isSurfaceBlockEnd *\n        (windowInnerHeight - anchorRect.bottom - blockScrollbarHeight);\n    const blockDocumentOffset =\n      isSurfaceBlockStart * window.scrollY - isSurfaceBlockEnd * window.scrollY;\n\n    // If the surface's block would be out of bounds of the window, move it back\n    // in\n    const blockOutOfBoundsCorrection = Math.abs(\n      Math.min(\n        0,\n        windowInnerHeight -\n          blockTopLayerOffset -\n          blockAnchorOffset -\n          surfaceRect.height,\n      ),\n    );\n\n    // The block logical value of the surface\n    const blockInset =\n      relativeToWindow * blockTopLayerOffset +\n      relativeToDocument * blockDocumentOffset +\n      blockAnchorOffset;\n\n    const surfaceBlockProperty =\n      surfaceBlock === 'start' ? 'inset-block-start' : 'inset-block-end';\n\n    return {blockInset, blockOutOfBoundsCorrection, surfaceBlockProperty};\n  }\n\n  /**\n   * Calculates the css property, the inset, and the out of bounds correction\n   * for the surface in the inline direction.\n   */\n  private calculateInline(config: {\n    isLTR: boolean;\n    surfaceInline: 'start' | 'end';\n    anchorInline: 'start' | 'end';\n    anchorRect: DOMRect;\n    surfaceRect: DOMRect;\n    xOffset: number;\n    positioning: 'absolute' | 'fixed' | 'document';\n    windowInnerWidth: number;\n    inlineScrollbarWidth: number;\n  }) {\n    const {\n      isLTR: isLTRBool,\n      surfaceInline,\n      anchorInline,\n      anchorRect,\n      surfaceRect,\n      xOffset,\n      positioning,\n      windowInnerWidth,\n      inlineScrollbarWidth,\n    } = config;\n    // We use number booleans to multiply values rather than `if` / ternary\n    // statements because it _heavily_ cuts down on nesting and readability\n    const relativeToWindow =\n      positioning === 'fixed' || positioning === 'document' ? 1 : 0;\n    const relativeToDocument = positioning === 'document' ? 1 : 0;\n    const isLTR = isLTRBool ? 1 : 0;\n    const isRTL = isLTRBool ? 0 : 1;\n    const isSurfaceInlineStart = surfaceInline === 'start' ? 1 : 0;\n    const isSurfaceInlineEnd = surfaceInline === 'end' ? 1 : 0;\n    const isOneInlineEnd = anchorInline !== surfaceInline ? 1 : 0;\n\n    // Whether or not to apply the width of the anchor\n    const inlineAnchorOffset = isOneInlineEnd * anchorRect.width + xOffset;\n    // The inline position of the anchor relative to window in LTR\n    const inlineTopLayerOffsetLTR =\n      isSurfaceInlineStart * anchorRect.left +\n      isSurfaceInlineEnd *\n        (windowInnerWidth - anchorRect.right - inlineScrollbarWidth);\n    // The inline position of the anchor relative to window in RTL\n    const inlineTopLayerOffsetRTL =\n      isSurfaceInlineStart *\n        (windowInnerWidth - anchorRect.right - inlineScrollbarWidth) +\n      isSurfaceInlineEnd * anchorRect.left;\n    // The inline position of the anchor relative to window\n    const inlineTopLayerOffset =\n      isLTR * inlineTopLayerOffsetLTR + isRTL * inlineTopLayerOffsetRTL;\n\n    // The inline position of the anchor relative to window in LTR\n    const inlineDocumentOffsetLTR =\n      isSurfaceInlineStart * window.scrollX -\n      isSurfaceInlineEnd * window.scrollX;\n    // The inline position of the anchor relative to window in RTL\n    const inlineDocumentOffsetRTL =\n      isSurfaceInlineEnd * window.scrollX -\n      isSurfaceInlineStart * window.scrollX;\n    // The inline position of the anchor relative to window\n    const inlineDocumentOffset =\n      isLTR * inlineDocumentOffsetLTR + isRTL * inlineDocumentOffsetRTL;\n\n    // If the surface's inline would be out of bounds of the window, move it\n    // back in\n    const inlineOutOfBoundsCorrection = Math.abs(\n      Math.min(\n        0,\n        windowInnerWidth -\n          inlineTopLayerOffset -\n          inlineAnchorOffset -\n          surfaceRect.width,\n      ),\n    );\n\n    // The inline logical value of the surface\n    const inlineInset =\n      relativeToWindow * inlineTopLayerOffset +\n      inlineAnchorOffset +\n      relativeToDocument * inlineDocumentOffset;\n\n    let surfaceInlineProperty =\n      surfaceInline === 'start' ? 'inset-inline-start' : 'inset-inline-end';\n\n    // There are cases where the element is RTL but the root of the page is not.\n    // In these cases we want to not use logical properties.\n    if (positioning === 'document' || positioning === 'fixed') {\n      if (\n        (surfaceInline === 'start' && isLTRBool) ||\n        (surfaceInline === 'end' && !isLTRBool)\n      ) {\n        surfaceInlineProperty = 'left';\n      } else {\n        surfaceInlineProperty = 'right';\n      }\n    }\n\n    return {\n      inlineInset,\n      inlineOutOfBoundsCorrection,\n      surfaceInlineProperty,\n    };\n  }\n\n  hostUpdate() {\n    this.onUpdate();\n  }\n\n  hostUpdated() {\n    this.onUpdate();\n  }\n\n  /**\n   * Checks whether the properties passed into the controller have changed since\n   * the last positioning. If so, it will reposition if the surface is open or\n   * close it if the surface should close.\n   */\n  private async onUpdate() {\n    const props = this.getProperties();\n    let hasChanged = false;\n    for (const [key, value] of Object.entries(props)) {\n      // tslint:disable-next-line\n      hasChanged = hasChanged || value !== (this.lastValues as any)[key];\n      if (hasChanged) break;\n    }\n\n    const openChanged = this.lastValues.isOpen !== props.isOpen;\n    const hasAnchor = !!props.anchorEl;\n    const hasSurface = !!props.surfaceEl;\n\n    if (hasChanged && hasAnchor && hasSurface) {\n      // Only update isOpen, because if it's closed, we do not want to waste\n      // time on a useless reposition calculation. So save the other \"dirty\"\n      // values until next time it opens.\n      this.lastValues.isOpen = props.isOpen;\n\n      if (props.isOpen) {\n        // We are going to do a reposition, so save the prop values for future\n        // dirty checking.\n        this.lastValues = props;\n\n        await this.position();\n        props.onOpen();\n      } else if (openChanged) {\n        await props.beforeClose();\n        this.close();\n        props.onClose();\n      }\n    }\n  }\n\n  /**\n   * Hides the surface.\n   */\n  private close() {\n    this.surfaceStylesInternal = {\n      'display': 'none',\n    };\n    this.host.requestUpdate();\n    const surfaceEl = this.getProperties().surfaceEl;\n\n    // The following type casts are required due to differing TS types in Google\n    // and open source.\n    if (\n      (surfaceEl as unknown as {popover?: string})?.popover &&\n      surfaceEl?.isConnected\n    ) {\n      (surfaceEl as unknown as {hidePopover: () => void}).hidePopover();\n    }\n  }\n}\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {MenuItem} from './menuItemController.js';\n\n/**\n * The options that are passed to the typeahead controller.\n */\nexport interface TypeaheadControllerProperties {\n  /**\n   * A function that returns an array of menu items to be searched.\n   * @return An array of menu items to be searched by typing.\n   */\n  getItems: () => MenuItem[];\n  /**\n   * The maximum time between each keystroke to keep the current type buffer\n   * alive.\n   */\n  typeaheadBufferTime: number;\n  /**\n   * Whether or not the typeahead should listen for keystrokes or not.\n   */\n  active: boolean;\n}\n\n/**\n * Data structure tuple that helps with indexing.\n *\n * [index, item, normalized header text]\n */\ntype TypeaheadRecord = [number, MenuItem, string];\n/**\n * Indicies to access the TypeaheadRecord tuple type.\n */\nexport const TYPEAHEAD_RECORD = {\n  INDEX: 0,\n  ITEM: 1,\n  TEXT: 2,\n} as const;\n\n/**\n * This controller listens to `keydown` events and searches the header text of\n * an array of `MenuItem`s with the corresponding entered keys within the buffer\n * time and activates the item.\n *\n * @example\n * ```ts\n * const typeaheadController = new TypeaheadController(() => ({\n *   typeaheadBufferTime: 50,\n *   getItems: () => Array.from(document.querySelectorAll('md-menu-item'))\n * }));\n * html`\n *   <div\n *       @keydown=${typeaheadController.onKeydown}\n *       tabindex=\"0\"\n *       class=\"activeItemText\">\n *     <!-- focusable element that will receive keydown events -->\n *     Apple\n *   </div>\n *   <div>\n *     <md-menu-item active header=\"Apple\"></md-menu-item>\n *     <md-menu-item header=\"Apricot\"></md-menu-item>\n *     <md-menu-item header=\"Banana\"></md-menu-item>\n *     <md-menu-item header=\"Olive\"></md-menu-item>\n *     <md-menu-item header=\"Orange\"></md-menu-item>\n *   </div>\n * `;\n * ```\n */\nexport class TypeaheadController {\n  /**\n   * Array of tuples that helps with indexing.\n   */\n  private typeaheadRecords: TypeaheadRecord[] = [];\n  /**\n   * Currently-typed text since last buffer timeout\n   */\n  private typaheadBuffer = '';\n  /**\n   * The timeout id from the current buffer's setTimeout\n   */\n  private cancelTypeaheadTimeout = 0;\n  /**\n   * If we are currently \"typing\"\n   */\n  isTypingAhead = false;\n  /**\n   * The record of the last active item.\n   */\n  lastActiveRecord: TypeaheadRecord | null = null;\n\n  /**\n   * @param getProperties A function that returns the options of the typeahead\n   * controller:\n   *\n   * {\n   *   getItems: A function that returns an array of menu items to be searched.\n   *   typeaheadBufferTime: The maximum time between each keystroke to keep the\n   *       current type buffer alive.\n   * }\n   */\n  constructor(\n    private readonly getProperties: () => TypeaheadControllerProperties,\n  ) {}\n\n  private get items() {\n    return this.getProperties().getItems();\n  }\n\n  private get active() {\n    return this.getProperties().active;\n  }\n\n  /**\n   * Apply this listener to the element that will receive `keydown` events that\n   * should trigger this controller.\n   *\n   * @param event The native browser `KeyboardEvent` from the `keydown` event.\n   */\n  readonly onKeydown = (event: KeyboardEvent) => {\n    if (this.isTypingAhead) {\n      this.typeahead(event);\n    } else {\n      this.beginTypeahead(event);\n    }\n  };\n\n  /**\n   * Sets up typingahead\n   */\n  private beginTypeahead(event: KeyboardEvent) {\n    if (!this.active) {\n      return;\n    }\n\n    // We don't want to typeahead if the _beginning_ of the typeahead is a menu\n    // navigation, or a selection. We will handle \"Space\" only if it's in the\n    // middle of a typeahead\n    if (\n      event.code === 'Space' ||\n      event.code === 'Enter' ||\n      event.code.startsWith('Arrow') ||\n      event.code === 'Escape'\n    ) {\n      return;\n    }\n\n    this.isTypingAhead = true;\n    // Generates the record array data structure which is the index, the element\n    // and a normalized header.\n    this.typeaheadRecords = this.items.map((el, index) => [\n      index,\n      el,\n      el.typeaheadText.trim().toLowerCase(),\n    ]);\n    this.lastActiveRecord =\n      this.typeaheadRecords.find(\n        (record) => record[TYPEAHEAD_RECORD.ITEM].tabIndex === 0,\n      ) ?? null;\n    if (this.lastActiveRecord) {\n      this.lastActiveRecord[TYPEAHEAD_RECORD.ITEM].tabIndex = -1;\n    }\n    this.typeahead(event);\n  }\n\n  /**\n   * Performs the typeahead. Based on the normalized items and the current text\n   * buffer, finds the _next_ item with matching text and activates it.\n   *\n   * @example\n   *\n   * items: Apple, Banana, Olive, Orange, Cucumber\n   * buffer: ''\n   * user types: o\n   *\n   * activates Olive\n   *\n   * @example\n   *\n   * items: Apple, Banana, Olive (active), Orange, Cucumber\n   * buffer: 'o'\n   * user types: l\n   *\n   * activates Olive\n   *\n   * @example\n   *\n   * items: Apple, Banana, Olive (active), Orange, Cucumber\n   * buffer: ''\n   * user types: o\n   *\n   * activates Orange\n   *\n   * @example\n   *\n   * items: Apple, Banana, Olive, Orange (active), Cucumber\n   * buffer: ''\n   * user types: o\n   *\n   * activates Olive\n   */\n  private typeahead(event: KeyboardEvent) {\n    if (event.defaultPrevented) return;\n    clearTimeout(this.cancelTypeaheadTimeout);\n    // Stop typingahead if one of the navigation or selection keys (except for\n    // Space) are pressed\n    if (\n      event.code === 'Enter' ||\n      event.code.startsWith('Arrow') ||\n      event.code === 'Escape'\n    ) {\n      this.endTypeahead();\n      if (this.lastActiveRecord) {\n        this.lastActiveRecord[TYPEAHEAD_RECORD.ITEM].tabIndex = -1;\n      }\n      return;\n    }\n\n    // If Space is pressed, prevent it from selecting and closing the menu\n    if (event.code === 'Space') {\n      event.preventDefault();\n    }\n\n    // Start up a new keystroke buffer timeout\n    this.cancelTypeaheadTimeout = setTimeout(\n      this.endTypeahead,\n      this.getProperties().typeaheadBufferTime,\n    );\n\n    this.typaheadBuffer += event.key.toLowerCase();\n\n    const lastActiveIndex = this.lastActiveRecord\n      ? this.lastActiveRecord[TYPEAHEAD_RECORD.INDEX]\n      : -1;\n    const numRecords = this.typeaheadRecords.length;\n\n    /**\n     * Sorting function that will resort the items starting with the given index\n     *\n     * @example\n     *\n     * this.typeaheadRecords =\n     * 0: [0, <reference>, 'apple']\n     * 1: [1, <reference>, 'apricot']\n     * 2: [2, <reference>, 'banana']\n     * 3: [3, <reference>, 'olive'] <-- lastActiveIndex\n     * 4: [4, <reference>, 'orange']\n     * 5: [5, <reference>, 'strawberry']\n     *\n     * this.typeaheadRecords.sort((a,b) => rebaseIndexOnActive(a)\n     *                                       - rebaseIndexOnActive(b)) ===\n     * 0: [3, <reference>, 'olive'] <-- lastActiveIndex\n     * 1: [4, <reference>, 'orange']\n     * 2: [5, <reference>, 'strawberry']\n     * 3: [0, <reference>, 'apple']\n     * 4: [1, <reference>, 'apricot']\n     * 5: [2, <reference>, 'banana']\n     */\n    const rebaseIndexOnActive = (record: TypeaheadRecord) => {\n      return (\n        (record[TYPEAHEAD_RECORD.INDEX] + numRecords - lastActiveIndex) %\n        numRecords\n      );\n    };\n\n    // records filtered and sorted / rebased around the last active index\n    const matchingRecords = this.typeaheadRecords\n      .filter(\n        (record) =>\n          !record[TYPEAHEAD_RECORD.ITEM].disabled &&\n          record[TYPEAHEAD_RECORD.TEXT].startsWith(this.typaheadBuffer),\n      )\n      .sort((a, b) => rebaseIndexOnActive(a) - rebaseIndexOnActive(b));\n\n    // Just leave if there's nothing that matches. Native select will just\n    // choose the first thing that starts with the next letter in the alphabet\n    // but that's out of scope and hard to localize\n    if (matchingRecords.length === 0) {\n      clearTimeout(this.cancelTypeaheadTimeout);\n      if (this.lastActiveRecord) {\n        this.lastActiveRecord[TYPEAHEAD_RECORD.ITEM].tabIndex = -1;\n      }\n      this.endTypeahead();\n      return;\n    }\n\n    const isNewQuery = this.typaheadBuffer.length === 1;\n    let nextRecord: TypeaheadRecord;\n\n    // This is likely the case that someone is trying to \"tab\" through different\n    // entries that start with the same letter\n    if (this.lastActiveRecord === matchingRecords[0] && isNewQuery) {\n      nextRecord = matchingRecords[1] ?? matchingRecords[0];\n    } else {\n      nextRecord = matchingRecords[0];\n    }\n\n    if (this.lastActiveRecord) {\n      this.lastActiveRecord[TYPEAHEAD_RECORD.ITEM].tabIndex = -1;\n    }\n\n    this.lastActiveRecord = nextRecord;\n    nextRecord[TYPEAHEAD_RECORD.ITEM].tabIndex = 0;\n    nextRecord[TYPEAHEAD_RECORD.ITEM].focus();\n    return;\n  }\n\n  /**\n   * Ends the current typeahead and clears the buffer.\n   */\n  private readonly endTypeahead = () => {\n    this.isTypingAhead = false;\n    this.typaheadBuffer = '';\n    this.typeaheadRecords = [];\n  };\n}\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport '../../elevation/elevation.js';\nimport '../../focus/md-focus-ring.js';\n\nimport {LitElement, PropertyValues, html, isServer, nothing} from 'lit';\nimport {property, query, queryAssignedElements, state} from 'lit/decorators.js';\nimport {ClassInfo, classMap} from 'lit/directives/class-map.js';\nimport {styleMap} from 'lit/directives/style-map.js';\n\nimport {EASING, createAnimationSignal} from '../../internal/motion/animation.js';\nimport {\n  ListController,\n  NavigableKeys,\n} from '../../list/internal/list-controller.js';\nimport {\n  getActiveItem,\n  getFirstActivatableItem,\n  getLastActivatableItem,\n} from '../../list/internal/list-navigation-helpers.js';\n\nimport {MenuItem} from './controllers/menuItemController.js';\nimport {\n  ActivateTypeaheadEvent,\n  DeactivateTypeaheadEvent,\n  FocusState,\n  isClosableKey,\n  isElementInSubtree,\n} from './controllers/shared.js';\nimport {\n  Corner,\n  SurfacePositionController,\n  SurfacePositionTarget,\n} from './controllers/surfacePositionController.js';\nimport {TypeaheadController} from './controllers/typeaheadController.js';\n\nexport {Corner} from './controllers/surfacePositionController.js';\n\n/**\n * The default value for the typeahead buffer time in Milliseconds.\n */\nexport const DEFAULT_TYPEAHEAD_BUFFER_TIME = 200;\n\nconst submenuNavKeys = new Set<string>([\n  NavigableKeys.ArrowDown,\n  NavigableKeys.ArrowUp,\n  NavigableKeys.Home,\n  NavigableKeys.End,\n]);\n\nconst menuNavKeys = new Set<string>([\n  NavigableKeys.ArrowLeft,\n  NavigableKeys.ArrowRight,\n  ...submenuNavKeys,\n]);\n\n/**\n * Gets the currently focused element on the page.\n *\n * @param activeDoc The document or shadowroot from which to start the search.\n *    Defaults to `window.document`\n * @return Returns the currently deeply focused element or `null` if none.\n */\nfunction getFocusedElement(\n  activeDoc: Document | ShadowRoot = document,\n): HTMLElement | null {\n  let activeEl = activeDoc.activeElement as HTMLElement | null;\n\n  // Check for activeElement in the case that an element with a shadow root host\n  // is currently focused.\n  while (activeEl && activeEl?.shadowRoot?.activeElement) {\n    activeEl = activeEl.shadowRoot.activeElement as HTMLElement | null;\n  }\n\n  return activeEl;\n}\n\n/**\n * @fires opening {Event} Fired before the opening animation begins\n * @fires opened {Event} Fired once the menu is open, after any animations\n * @fires closing {Event} Fired before the closing animation begins\n * @fires closed {Event} Fired once the menu is closed, after any animations\n */\nexport abstract class Menu extends LitElement {\n  @query('.menu') private readonly surfaceEl!: HTMLElement | null;\n  @query('slot') private readonly slotEl!: HTMLSlotElement | null;\n\n  /**\n   * The ID of the element in the same root node in which the menu should align\n   * to. Overrides setting `anchorElement = elementReference`.\n   *\n   * __NOTE__: anchor or anchorElement must either be an HTMLElement or resolve\n   * to an HTMLElement in order for menu to open.\n   */\n  @property() anchor = '';\n  /**\n   * Whether the positioning algorithm should calculate relative to the parent\n   * of the anchor element (`absolute`), relative to the window (`fixed`), or\n   * relative to the document (`document`). `popover` will use the popover API\n   * to render the menu in the top-layer. If your browser does not support the\n   * popover API, it will fall back to `fixed`.\n   *\n   * __Examples for `position = 'fixed'`:__\n   *\n   * - If there is no `position:relative` in the given parent tree and the\n   *   surface is `position:absolute`\n   * - If the surface is `position:fixed`\n   * - If the surface is in the \"top layer\"\n   * - The anchor and the surface do not share a common `position:relative`\n   *   ancestor\n   *\n   * When using `positioning=fixed`, in most cases, the menu should position\n   * itself above most other `position:absolute` or `position:fixed` elements\n   * when placed inside of them. e.g. using a menu inside of an `md-dialog`.\n   *\n   * __NOTE__: Fixed menus will not scroll with the page and will be fixed to\n   * the window instead.\n   *\n   * __Examples for `position = 'document'`:__\n   *\n   * - There is no parent that creates a relative positioning context e.g.\n   *   `position: relative`, `position: absolute`, `transform: translate(x, y)`,\n   *   etc.\n   * - You put the effort into hoisting the menu to the top of the DOM like the\n   *   end of the `<body>` to render over everything or in a top-layer.\n   * - You are reusing a single `md-menu` element that dynamically renders\n   *   content.\n   *\n   * __Examples for `position = 'popover'`:__\n   *\n   * - Your browser supports `popover`.\n   * - Most cases. Once popover is in browsers, this will become the default.\n   */\n  @property() positioning: 'absolute' | 'fixed' | 'document' | 'popover' =\n    'absolute';\n  /**\n   * Skips the opening and closing animations.\n   */\n  @property({type: Boolean}) quick = false;\n  /**\n   * Displays overflow content like a submenu. Not required in most cases when\n   * using `positioning=\"popover\"`.\n   *\n   * __NOTE__: This may cause adverse effects if you set\n   * `md-menu {max-height:...}`\n   * and have items overflowing items in the \"y\" direction.\n   */\n  @property({type: Boolean, attribute: 'has-overflow'}) hasOverflow = false;\n  /**\n   * Opens the menu and makes it visible. Alternative to the `.show()` and\n   * `.close()` methods\n   */\n  @property({type: Boolean, reflect: true}) open = false;\n  /**\n   * Offsets the menu's inline alignment from the anchor by the given number in\n   * pixels. This value is direction aware and will follow the LTR / RTL\n   * direction.\n   *\n   * e.g. LTR: positive -> right, negative -> left\n   *      RTL: positive -> left, negative -> right\n   */\n  @property({type: Number, attribute: 'x-offset'}) xOffset = 0;\n  /**\n   * Offsets the menu's block alignment from the anchor by the given number in\n   * pixels.\n   *\n   * e.g. positive -> down, negative -> up\n   */\n  @property({type: Number, attribute: 'y-offset'}) yOffset = 0;\n  /**\n   * The max time between the keystrokes of the typeahead menu behavior before\n   * it clears the typeahead buffer.\n   */\n  @property({type: Number, attribute: 'typeahead-delay'})\n  typeaheadDelay = DEFAULT_TYPEAHEAD_BUFFER_TIME;\n  /**\n   * The corner of the anchor which to align the menu in the standard logical\n   * property style of <block>-<inline> e.g. `'end-start'`.\n   *\n   * NOTE: This value may not be respected by the menu positioning algorithm\n   * if the menu would render outisde the viewport.\n   */\n  @property({attribute: 'anchor-corner'})\n  anchorCorner: Corner = Corner.END_START;\n  /**\n   * The corner of the menu which to align the anchor in the standard logical\n   * property style of <block>-<inline> e.g. `'start-start'`.\n   *\n   * NOTE: This value may not be respected by the menu positioning algorithm\n   * if the menu would render outisde the viewport.\n   */\n  @property({attribute: 'menu-corner'}) menuCorner: Corner = Corner.START_START;\n  /**\n   * Keeps the user clicks outside the menu.\n   *\n   * NOTE: clicking outside may still cause focusout to close the menu so see\n   * `stayOpenOnFocusout`.\n   */\n  @property({type: Boolean, attribute: 'stay-open-on-outside-click'})\n  stayOpenOnOutsideClick = false;\n  /**\n   * Keeps the menu open when focus leaves the menu's composed subtree.\n   *\n   * NOTE: Focusout behavior will stop propagation of the focusout event. Set\n   * this property to true to opt-out of menu's focusout handling altogether.\n   */\n  @property({type: Boolean, attribute: 'stay-open-on-focusout'})\n  stayOpenOnFocusout = false;\n  /**\n   * After closing, does not restore focus to the last focused element before\n   * the menu was opened.\n   */\n  @property({type: Boolean, attribute: 'skip-restore-focus'})\n  skipRestoreFocus = false;\n  /**\n   * The element that should be focused by default once opened.\n   *\n   * NOTE: When setting default focus to 'LIST_ROOT', remember to change\n   * `tabindex` to `0` and change md-menu's display to something other than\n   * `display: contents` when necessary.\n   */\n  @property({attribute: 'default-focus'})\n  defaultFocus: FocusState = FocusState.FIRST_ITEM;\n\n  /**\n   * Turns off navigation wrapping. By default, navigating past the end of the\n   * menu items will wrap focus back to the beginning and vice versa. Use this\n   * for ARIA patterns that do not wrap focus, like combobox.\n   */\n  @property({type: Boolean, attribute: 'no-navigation-wrap'})\n  noNavigationWrap = false;\n\n  @queryAssignedElements({flatten: true}) protected slotItems!: HTMLElement[];\n  @state() private typeaheadActive = true;\n\n  /**\n   * Whether or not the current menu is a submenu and should not handle specific\n   * navigation keys.\n   *\n   * @export\n   */\n  isSubmenu = false;\n\n  /**\n   * The event path of the last window pointerdown event.\n   */\n  private pointerPath: EventTarget[] = [];\n\n  /**\n   * Whether or not the menu is repositoining due to window / document resize\n   */\n  private isRepositioning = false;\n  private readonly openCloseAnimationSignal = createAnimationSignal();\n\n  private readonly listController = new ListController<MenuItem>({\n    isItem: (maybeItem: HTMLElement): maybeItem is MenuItem => {\n      return maybeItem.hasAttribute('md-menu-item');\n    },\n    getPossibleItems: () => this.slotItems,\n    isRtl: () => getComputedStyle(this).direction === 'rtl',\n    deactivateItem: (item: MenuItem) => {\n      item.selected = false;\n      item.tabIndex = -1;\n    },\n    activateItem: (item: MenuItem) => {\n      item.selected = true;\n      item.tabIndex = 0;\n    },\n    isNavigableKey: (key: string) => {\n      if (!this.isSubmenu) {\n        return menuNavKeys.has(key);\n      }\n\n      const isRtl = getComputedStyle(this).direction === 'rtl';\n      // we want md-submenu to handle the submenu's left/right arrow exit\n      // key so it can close the menu instead of navigate the list.\n      // Therefore we need to include all keys but left/right arrow close\n      // key\n      const arrowOpen = isRtl\n        ? NavigableKeys.ArrowLeft\n        : NavigableKeys.ArrowRight;\n\n      if (key === arrowOpen) {\n        return true;\n      }\n\n      return submenuNavKeys.has(key);\n    },\n    wrapNavigation: () => !this.noNavigationWrap,\n  });\n\n  /**\n   * Whether the menu is animating upwards or downwards when opening. This is\n   * helpful for calculating some animation calculations.\n   */\n  private get openDirection(): 'UP' | 'DOWN' {\n    const menuCornerBlock = this.menuCorner.split('-')[0];\n    return menuCornerBlock === 'start' ? 'DOWN' : 'UP';\n  }\n\n  /**\n   * The element that was focused before the menu opened.\n   */\n  private lastFocusedElement: HTMLElement | null = null;\n\n  /**\n   * Handles typeahead navigation through the menu.\n   */\n  typeaheadController = new TypeaheadController(() => {\n    return {\n      getItems: () => this.items,\n      typeaheadBufferTime: this.typeaheadDelay,\n      active: this.typeaheadActive,\n    };\n  });\n\n  private currentAnchorElement: HTMLElement | null = null;\n\n  /**\n   * The element which the menu should align to. If `anchor` is set to a\n   * non-empty idref string, then `anchorEl` will resolve to the element with\n   * the given id in the same root node. Otherwise, `null`.\n   */\n  get anchorElement(): (HTMLElement & Partial<SurfacePositionTarget>) | null {\n    if (this.anchor) {\n      return (this.getRootNode() as Document | ShadowRoot).querySelector(\n        `#${this.anchor}`,\n      );\n    }\n\n    return this.currentAnchorElement;\n  }\n\n  set anchorElement(\n    element: (HTMLElement & Partial<SurfacePositionTarget>) | null,\n  ) {\n    this.currentAnchorElement = element;\n    this.requestUpdate('anchorElement');\n  }\n\n  private readonly internals =\n    // Cast needed for closure\n    (this as HTMLElement).attachInternals();\n\n  constructor() {\n    super();\n    if (!isServer) {\n      this.internals.role = 'menu';\n      this.addEventListener('keydown', this.handleKeydown);\n      // Capture so that we can grab the event before it reaches the menu item\n      // istelf. Specifically useful for the case where typeahead encounters a\n      // space and we don't want the menu item to close the menu.\n      this.addEventListener('keydown', this.captureKeydown, {capture: true});\n      this.addEventListener('focusout', this.handleFocusout);\n    }\n  }\n\n  /**\n   * Handles positioning the surface and aligning it to the anchor as well as\n   * keeping it in the viewport.\n   */\n  private readonly menuPositionController = new SurfacePositionController(\n    this,\n    () => {\n      return {\n        anchorCorner: this.anchorCorner,\n        surfaceCorner: this.menuCorner,\n        surfaceEl: this.surfaceEl,\n        anchorEl: this.anchorElement,\n        positioning:\n          this.positioning === 'popover' ? 'document' : this.positioning,\n        isOpen: this.open,\n        xOffset: this.xOffset,\n        yOffset: this.yOffset,\n        onOpen: this.onOpened,\n        beforeClose: this.beforeClose,\n        onClose: this.onClosed,\n        // We can't resize components that have overflow like menus with\n        // submenus because the overflow-y will show menu items / content\n        // outside the bounds of the menu. Popover API fixes this because each\n        // submenu is hoisted to the top-layer and are not considered overflow\n        // content.\n        repositionStrategy:\n          this.hasOverflow && this.positioning !== 'popover'\n            ? 'move'\n            : 'resize',\n      };\n    },\n  );\n\n  /**\n   * The menu items associated with this menu. The items must be `MenuItem`s and\n   * have both the `md-menu-item` and `md-list-item` attributes.\n   */\n  get items(): MenuItem[] {\n    return this.listController.items;\n  }\n\n  protected override willUpdate(changed: PropertyValues<Menu>) {\n    if (!changed.has('open')) {\n      return;\n    }\n\n    if (this.open) {\n      this.removeAttribute('aria-hidden');\n      return;\n    }\n\n    this.setAttribute('aria-hidden', 'true');\n  }\n\n  override update(changed: PropertyValues<Menu>) {\n    if (changed.has('open')) {\n      if (this.open) {\n        this.setUpGlobalEventListeners();\n      } else {\n        this.cleanUpGlobalEventListeners();\n      }\n    }\n\n    // Firefox does not support popover. Fall-back to using fixed.\n    if (\n      changed.has('positioning') &&\n      this.positioning === 'popover' &&\n      // type required for Google JS conformance\n      !(this as unknown as {showPopover?: () => void}).showPopover\n    ) {\n      this.positioning = 'fixed';\n    }\n\n    super.update(changed);\n  }\n\n  private readonly onWindowResize = () => {\n    if (\n      this.isRepositioning ||\n      (this.positioning !== 'document' &&\n        this.positioning !== 'fixed' &&\n        this.positioning !== 'popover')\n    ) {\n      return;\n    }\n    this.isRepositioning = true;\n    this.reposition();\n    this.isRepositioning = false;\n  };\n\n  override connectedCallback() {\n    super.connectedCallback();\n    if (this.open) {\n      this.setUpGlobalEventListeners();\n    }\n  }\n\n  override disconnectedCallback() {\n    super.disconnectedCallback();\n    this.cleanUpGlobalEventListeners();\n  }\n\n  protected override render() {\n    return this.renderSurface();\n  }\n\n  /**\n   * Renders the positionable surface element and its contents.\n   */\n  private renderSurface() {\n    return html`\n      <div\n        class=\"menu ${classMap(this.getSurfaceClasses())}\"\n        style=${styleMap(this.menuPositionController.surfaceStyles)}\n        popover=${this.positioning === 'popover' ? 'manual' : nothing}>\n        ${this.renderElevation()}\n        <div class=\"items\">\n          <div class=\"item-padding\"> ${this.renderMenuItems()} </div>\n        </div>\n      </div>\n    `;\n  }\n\n  /**\n   * Renders the menu items' slot\n   */\n  private renderMenuItems() {\n    return html`<slot\n      @close-menu=${this.onCloseMenu}\n      @deactivate-items=${this.onDeactivateItems}\n      @request-activation=${this.onRequestActivation}\n      @deactivate-typeahead=${this.handleDeactivateTypeahead}\n      @activate-typeahead=${this.handleActivateTypeahead}\n      @stay-open-on-focusout=${this.handleStayOpenOnFocusout}\n      @close-on-focusout=${this.handleCloseOnFocusout}\n      @slotchange=${this.listController.onSlotchange}></slot>`;\n  }\n\n  /**\n   * Renders the elevation component.\n   */\n  private renderElevation() {\n    return html`<md-elevation part=\"elevation\"></md-elevation>`;\n  }\n\n  private getSurfaceClasses(): ClassInfo {\n    return {\n      open: this.open,\n      fixed: this.positioning === 'fixed',\n      'has-overflow': this.hasOverflow,\n    };\n  }\n\n  private readonly handleFocusout = async (event: FocusEvent) => {\n    const anchorEl = this.anchorElement!;\n    // Do not close if we focused out by clicking on the anchor element. We\n    // can't assume anchor buttons can be the related target because of iOS does\n    // not focus buttons.\n    if (\n      this.stayOpenOnFocusout ||\n      !this.open ||\n      this.pointerPath.includes(anchorEl)\n    ) {\n      return;\n    }\n\n    if (event.relatedTarget) {\n      // Don't close the menu if we are switching focus between menu,\n      // md-menu-item, and md-list or if the anchor was click focused, but check\n      // if length of pointerPath is 0 because that means something was at least\n      // clicked (shift+tab case).\n      if (\n        isElementInSubtree(event.relatedTarget, this) ||\n        (this.pointerPath.length !== 0 &&\n          isElementInSubtree(event.relatedTarget, anchorEl))\n      ) {\n        return;\n      }\n    } else if (this.pointerPath.includes(this)) {\n      // If menu tabindex == -1 and the user clicks on the menu or a divider, we\n      // want to keep the menu open.\n      return;\n    }\n\n    const oldRestoreFocus = this.skipRestoreFocus;\n    // allow focus to continue to the next focused object rather than returning\n    this.skipRestoreFocus = true;\n    this.close();\n    // await for close\n    await this.updateComplete;\n    // return to previous behavior\n    this.skipRestoreFocus = oldRestoreFocus;\n  };\n\n  private captureKeydown(event: KeyboardEvent) {\n    if (\n      event.target === this &&\n      !event.defaultPrevented &&\n      isClosableKey(event.code)\n    ) {\n      event.preventDefault();\n      this.close();\n    }\n\n    this.typeaheadController.onKeydown(event);\n  }\n\n  /**\n   * Saves the last focused element focuses the new element based on\n   * `defaultFocus`, and animates open.\n   */\n  private readonly onOpened = async () => {\n    this.lastFocusedElement = getFocusedElement();\n\n    const items = this.items;\n    const activeItemRecord = getActiveItem(items);\n\n    if (activeItemRecord && this.defaultFocus !== FocusState.NONE) {\n      activeItemRecord.item.tabIndex = -1;\n    }\n\n    let animationAborted = !this.quick;\n\n    if (this.quick) {\n      this.dispatchEvent(new Event('opening'));\n    } else {\n      animationAborted = !!(await this.animateOpen());\n    }\n\n    // This must come after the opening animation or else it may focus one of\n    // the items before the animation has begun and causes the list to slide\n    // (block-padding-of-the-menu)px at the end of the animation\n    switch (this.defaultFocus) {\n      case FocusState.FIRST_ITEM:\n        const first = getFirstActivatableItem(items);\n        if (first) {\n          first.tabIndex = 0;\n          first.focus();\n          await (first as LitElement & MenuItem).updateComplete;\n        }\n        break;\n      case FocusState.LAST_ITEM:\n        const last = getLastActivatableItem(items);\n        if (last) {\n          last.tabIndex = 0;\n          last.focus();\n          await (last as LitElement & MenuItem).updateComplete;\n        }\n        break;\n      case FocusState.LIST_ROOT:\n        this.focus();\n        break;\n      default:\n      case FocusState.NONE:\n        // Do nothing.\n        break;\n    }\n\n    if (!animationAborted) {\n      this.dispatchEvent(new Event('opened'));\n    }\n  };\n\n  /**\n   * Animates closed.\n   */\n  private readonly beforeClose = async () => {\n    this.open = false;\n\n    if (!this.skipRestoreFocus) {\n      this.lastFocusedElement?.focus?.();\n    }\n\n    if (!this.quick) {\n      await this.animateClose();\n    }\n  };\n\n  /**\n   * Focuses the last focused element.\n   */\n  private readonly onClosed = () => {\n    if (this.quick) {\n      this.dispatchEvent(new Event('closing'));\n      this.dispatchEvent(new Event('closed'));\n    }\n  };\n\n  /**\n   * Performs the opening animation:\n   *\n   * https://direct.googleplex.com/#/spec/295000003+271060003\n   *\n   * @return A promise that resolve to `true` if the animation was aborted,\n   *     `false` if it was not aborted.\n   */\n  private async animateOpen() {\n    const surfaceEl = this.surfaceEl;\n    const slotEl = this.slotEl;\n\n    if (!surfaceEl || !slotEl) return true;\n\n    const openDirection = this.openDirection;\n    this.dispatchEvent(new Event('opening'));\n    // needs to be imperative because we don't want to mix animation and Lit\n    // render timing\n    surfaceEl.classList.toggle('animating', true);\n\n    const signal = this.openCloseAnimationSignal.start();\n    const height = surfaceEl.offsetHeight;\n    const openingUpwards = openDirection === 'UP';\n    const children = this.items;\n    const FULL_DURATION = 500;\n    const SURFACE_OPACITY_DURATION = 50;\n    const ITEM_OPACITY_DURATION = 250;\n    // We want to fit every child fade-in animation within the full duration of\n    // the animation.\n    const DELAY_BETWEEN_ITEMS =\n      (FULL_DURATION - ITEM_OPACITY_DURATION) / children.length;\n\n    const surfaceHeightAnimation = surfaceEl.animate(\n      [{height: '0px'}, {height: `${height}px`}],\n      {\n        duration: FULL_DURATION,\n        easing: EASING.EMPHASIZED,\n      },\n    );\n    // When we are opening upwards, we want to make sure the last item is always\n    // in view, so we need to translate it upwards the opposite direction of the\n    // height animation\n    const upPositionCorrectionAnimation = slotEl.animate(\n      [\n        {transform: openingUpwards ? `translateY(-${height}px)` : ''},\n        {transform: ''},\n      ],\n      {duration: FULL_DURATION, easing: EASING.EMPHASIZED},\n    );\n\n    const surfaceOpacityAnimation = surfaceEl.animate(\n      [{opacity: 0}, {opacity: 1}],\n      SURFACE_OPACITY_DURATION,\n    );\n\n    const childrenAnimations: Array<[HTMLElement, Animation]> = [];\n\n    for (let i = 0; i < children.length; i++) {\n      // If we are animating upwards, then reverse the children list.\n      const directionalIndex = openingUpwards ? children.length - 1 - i : i;\n      const child = children[directionalIndex];\n      const animation = child.animate([{opacity: 0}, {opacity: 1}], {\n        duration: ITEM_OPACITY_DURATION,\n        delay: DELAY_BETWEEN_ITEMS * i,\n      });\n\n      // Make them all initially hidden and then clean up at the end of each\n      // animation.\n      child.classList.toggle('md-menu-hidden', true);\n      animation.addEventListener('finish', () => {\n        child.classList.toggle('md-menu-hidden', false);\n      });\n\n      childrenAnimations.push([child, animation]);\n    }\n\n    let resolveAnimation = (value: boolean) => {};\n    const animationFinished = new Promise<boolean>((resolve) => {\n      resolveAnimation = resolve;\n    });\n\n    signal.addEventListener('abort', () => {\n      surfaceHeightAnimation.cancel();\n      upPositionCorrectionAnimation.cancel();\n      surfaceOpacityAnimation.cancel();\n      childrenAnimations.forEach(([child, animation]) => {\n        child.classList.toggle('md-menu-hidden', false);\n        animation.cancel();\n      });\n\n      resolveAnimation(true);\n    });\n\n    surfaceHeightAnimation.addEventListener('finish', () => {\n      surfaceEl.classList.toggle('animating', false);\n      this.openCloseAnimationSignal.finish();\n      resolveAnimation(false);\n    });\n\n    return await animationFinished;\n  }\n\n  /**\n   * Performs the closing animation:\n   *\n   * https://direct.googleplex.com/#/spec/295000003+271060003\n   */\n  private animateClose() {\n    let resolve!: (value: unknown) => void;\n    let reject!: () => void;\n\n    // This promise blocks the surface position controller from setting\n    // display: none on the surface which will interfere with this animation.\n    const animationEnded = new Promise((res, rej) => {\n      resolve = res;\n      reject = rej;\n    });\n\n    const surfaceEl = this.surfaceEl;\n    const slotEl = this.slotEl;\n\n    if (!surfaceEl || !slotEl) {\n      reject();\n      return animationEnded;\n    }\n\n    const openDirection = this.openDirection;\n    const closingDownwards = openDirection === 'UP';\n    this.dispatchEvent(new Event('closing'));\n    // needs to be imperative because we don't want to mix animation and Lit\n    // render timing\n    surfaceEl.classList.toggle('animating', true);\n    const signal = this.openCloseAnimationSignal.start();\n    const height = surfaceEl.offsetHeight;\n    const children = this.items;\n    const FULL_DURATION = 150;\n    const SURFACE_OPACITY_DURATION = 50;\n    // The surface fades away at the very end\n    const SURFACE_OPACITY_DELAY = FULL_DURATION - SURFACE_OPACITY_DURATION;\n    const ITEM_OPACITY_DURATION = 50;\n    const ITEM_OPACITY_INITIAL_DELAY = 50;\n    const END_HEIGHT_PERCENTAGE = 0.35;\n\n    // We want to fit every child fade-out animation within the full duration of\n    // the animation.\n    const DELAY_BETWEEN_ITEMS =\n      (FULL_DURATION - ITEM_OPACITY_INITIAL_DELAY - ITEM_OPACITY_DURATION) /\n      children.length;\n\n    // The mock has the animation shrink to 35%\n    const surfaceHeightAnimation = surfaceEl.animate(\n      [\n        {height: `${height}px`},\n        {height: `${height * END_HEIGHT_PERCENTAGE}px`},\n      ],\n      {\n        duration: FULL_DURATION,\n        easing: EASING.EMPHASIZED_ACCELERATE,\n      },\n    );\n\n    // When we are closing downwards, we want to make sure the last item is\n    // always in view, so we need to translate it upwards the opposite direction\n    // of the height animation\n    const downPositionCorrectionAnimation = slotEl.animate(\n      [\n        {transform: ''},\n        {\n          transform: closingDownwards\n            ? `translateY(-${height * (1 - END_HEIGHT_PERCENTAGE)}px)`\n            : '',\n        },\n      ],\n      {duration: FULL_DURATION, easing: EASING.EMPHASIZED_ACCELERATE},\n    );\n\n    const surfaceOpacityAnimation = surfaceEl.animate(\n      [{opacity: 1}, {opacity: 0}],\n      {duration: SURFACE_OPACITY_DURATION, delay: SURFACE_OPACITY_DELAY},\n    );\n\n    const childrenAnimations: Array<[HTMLElement, Animation]> = [];\n\n    for (let i = 0; i < children.length; i++) {\n      // If the animation is closing upwards, then reverse the list of\n      // children so that we animate in the opposite direction.\n      const directionalIndex = closingDownwards ? i : children.length - 1 - i;\n      const child = children[directionalIndex];\n      const animation = child.animate([{opacity: 1}, {opacity: 0}], {\n        duration: ITEM_OPACITY_DURATION,\n        delay: ITEM_OPACITY_INITIAL_DELAY + DELAY_BETWEEN_ITEMS * i,\n      });\n\n      // Make sure the items stay hidden at the end of each child animation.\n      // We clean this up at the end of the overall animation.\n      animation.addEventListener('finish', () => {\n        child.classList.toggle('md-menu-hidden', true);\n      });\n      childrenAnimations.push([child, animation]);\n    }\n\n    signal.addEventListener('abort', () => {\n      surfaceHeightAnimation.cancel();\n      downPositionCorrectionAnimation.cancel();\n      surfaceOpacityAnimation.cancel();\n      childrenAnimations.forEach(([child, animation]) => {\n        animation.cancel();\n        child.classList.toggle('md-menu-hidden', false);\n      });\n      reject();\n    });\n\n    surfaceHeightAnimation.addEventListener('finish', () => {\n      surfaceEl.classList.toggle('animating', false);\n      childrenAnimations.forEach(([child]) => {\n        child.classList.toggle('md-menu-hidden', false);\n      });\n      this.openCloseAnimationSignal.finish();\n      this.dispatchEvent(new Event('closed'));\n      resolve(true);\n    });\n\n    return animationEnded;\n  }\n\n  private handleKeydown(event: KeyboardEvent) {\n    // At any key event, the pointer interaction is done so we need to clear our\n    // cached pointerpath. This handles the case where the user clicks on the\n    // anchor, and then hits shift+tab\n    this.pointerPath = [];\n    this.listController.handleKeydown(event);\n  }\n\n  private setUpGlobalEventListeners() {\n    document.addEventListener('click', this.onDocumentClick, {capture: true});\n    window.addEventListener('pointerdown', this.onWindowPointerdown);\n    document.addEventListener('resize', this.onWindowResize, {passive: true});\n    window.addEventListener('resize', this.onWindowResize, {passive: true});\n  }\n\n  private cleanUpGlobalEventListeners() {\n    document.removeEventListener('click', this.onDocumentClick, {\n      capture: true,\n    });\n    window.removeEventListener('pointerdown', this.onWindowPointerdown);\n    document.removeEventListener('resize', this.onWindowResize);\n    window.removeEventListener('resize', this.onWindowResize);\n  }\n\n  private readonly onWindowPointerdown = (event: PointerEvent) => {\n    this.pointerPath = event.composedPath();\n  };\n\n  /**\n   * We cannot listen to window click because Safari on iOS will not bubble a\n   * click event on window if the item clicked is not a \"clickable\" item such as\n   * <body>\n   */\n  private readonly onDocumentClick = (event: Event) => {\n    if (!this.open) {\n      return;\n    }\n\n    const path = event.composedPath();\n\n    if (\n      !this.stayOpenOnOutsideClick &&\n      !path.includes(this) &&\n      !path.includes(this.anchorElement!)\n    ) {\n      this.open = false;\n    }\n  };\n\n  private onCloseMenu() {\n    this.close();\n  }\n\n  private onDeactivateItems(event: Event) {\n    event.stopPropagation();\n    this.listController.onDeactivateItems();\n  }\n\n  private onRequestActivation(event: Event) {\n    event.stopPropagation();\n    this.listController.onRequestActivation(event);\n  }\n\n  private handleDeactivateTypeahead(event: DeactivateTypeaheadEvent) {\n    // stopPropagation so that this does not deactivate any typeaheads in menus\n    // nested above it e.g. md-sub-menu\n    event.stopPropagation();\n    this.typeaheadActive = false;\n  }\n\n  private handleActivateTypeahead(event: ActivateTypeaheadEvent) {\n    // stopPropagation so that this does not activate any typeaheads in menus\n    // nested above it e.g. md-sub-menu\n    event.stopPropagation();\n    this.typeaheadActive = true;\n  }\n\n  private handleStayOpenOnFocusout(event: Event) {\n    event.stopPropagation();\n    this.stayOpenOnFocusout = true;\n  }\n\n  private handleCloseOnFocusout(event: Event) {\n    event.stopPropagation();\n    this.stayOpenOnFocusout = false;\n  }\n\n  close() {\n    this.open = false;\n    const maybeSubmenu = this.slotItems as Array<\n      HTMLElement & {close?: () => void}\n    >;\n    maybeSubmenu.forEach((item) => {\n      item.close?.();\n    });\n  }\n\n  show() {\n    this.open = true;\n  }\n\n  /**\n   * Activates the next item in the menu. If at the end of the menu, the first\n   * item will be activated.\n   *\n   * @return The activated menu item or `null` if there are no items.\n   */\n  activateNextItem() {\n    return this.listController.activateNextItem() ?? null;\n  }\n\n  /**\n   * Activates the previous item in the menu. If at the start of the menu, the\n   * last item will be activated.\n   *\n   * @return The activated menu item or `null` if there are no items.\n   */\n  activatePreviousItem() {\n    return this.listController.activatePreviousItem() ?? null;\n  }\n\n  /**\n   * Repositions the menu if it is open.\n   *\n   * Useful for the case where document or window-positioned menus have their\n   * anchors moved while open.\n   */\n  reposition() {\n    if (this.open) {\n      this.menuPositionController.position();\n    }\n  }\n}\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./menu/internal/menu-styles.css.\nimport {css} from 'lit';\nexport const styles = css`:host{--md-elevation-level: var(--md-menu-container-elevation, 2);--md-elevation-shadow-color: var(--md-menu-container-shadow-color, var(--md-sys-color-shadow, #000));min-width:112px;color:unset;display:contents}md-focus-ring{--md-focus-ring-shape: var(--md-menu-container-shape, var(--md-sys-shape-corner-extra-small, 4px))}.menu{border-radius:var(--md-menu-container-shape, var(--md-sys-shape-corner-extra-small, 4px));display:none;inset:auto;border:none;padding:0px;overflow:visible;background-color:rgba(0,0,0,0);color:inherit;opacity:0;z-index:20;position:absolute;user-select:none;max-height:inherit;height:inherit;min-width:inherit;max-width:inherit}.menu::backdrop{display:none}.fixed{position:fixed}.items{display:block;list-style-type:none;margin:0;outline:none;box-sizing:border-box;background-color:var(--md-menu-container-color, var(--md-sys-color-surface-container, #f3edf7));height:inherit;max-height:inherit;overflow:auto;min-width:inherit;max-width:inherit;border-radius:inherit}.item-padding{padding-block:8px}.has-overflow:not([popover]) .items{overflow:visible}.has-overflow.animating .items,.animating .items{overflow:hidden}.has-overflow.animating .items{pointer-events:none}.animating ::slotted(.md-menu-hidden){opacity:0}slot{display:block;height:inherit;max-height:inherit}::slotted(:is(md-divider,[role=separator])){margin:8px 0}@media(forced-colors: active){.menu{border-style:solid;border-color:CanvasText;border-width:1px}}\n`;\n", "/**\n * @license\n * Copyright 2022 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {CSSResultOrNative} from 'lit';\nimport {customElement} from 'lit/decorators.js';\n\nimport {Menu} from './internal/menu.js';\nimport {styles} from './internal/menu-styles.js';\n\nexport {type ListItem} from '../list/internal/list-navigation-helpers.js';\nexport {type MenuItem} from './internal/controllers/menuItemController.js';\nexport {\n  FocusState,\n  type CloseMenuEvent,\n  type Menu,\n} from './internal/controllers/shared.js';\nexport {Corner} from './internal/menu.js';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'md-menu': MdMenu;\n  }\n}\n\n/**\n * @summary Menus display a list of choices on a temporary surface.\n *\n * @description\n * Menus appear when users interact with a button, action, or other control.\n *\n * They can be opened from a variety of elements, most commonly icon buttons,\n * buttons, and text fields.\n *\n * md-menu listens for the `close-menu` and `deselect-items` events.\n *\n * - `close-menu` closes the menu when dispatched from a child element.\n * - `deselect-items` deselects all of its immediate menu-item children.\n *\n * @example\n * ```html\n * <div style=\"position:relative;\">\n *   <button\n *       id=\"anchor\"\n *       @click=${() => this.menuRef.value.show()}>\n *     Click to open menu\n *   </button>\n *   <!--\n *     `has-overflow` is required when using a submenu which overflows the\n *     menu's contents.\n *\n *     Additionally, `anchor` ingests an idref which do not pass through shadow\n *     roots. You can also set `.anchorElement` to an element reference if\n *     necessary.\n *   -->\n *   <md-menu anchor=\"anchor\" has-overflow ${ref(menuRef)}>\n *     <md-menu-item headline=\"This is a headline\"></md-menu-item>\n *     <md-sub-menu>\n *       <md-menu-item\n *           slot=\"item\"\n *           headline=\"this is a submenu item\">\n *       </md-menu-item>\n *       <md-menu slot=\"menu\">\n *         <md-menu-item headline=\"This is an item inside a submenu\">\n *         </md-menu-item>\n *       </md-menu>\n *     </md-sub-menu>\n *   </md-menu>\n * </div>\n * ```\n *\n * @final\n * @suppress {visibility}\n */\n@customElement('md-menu')\nexport class MdMenu extends Menu {\n  static override styles: CSSResultOrNative[] = [styles];\n}\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {ReactiveController, ReactiveControllerHost} from 'lit';\n\nimport {\n  CloseReason,\n  createDefaultCloseMenuEvent,\n  isClosableKey,\n} from './shared.js';\n\n/**\n * Interface specific to menu item and not HTMLElement.\n *\n * NOTE: required properties are expected to be reactive.\n */\ninterface MenuItemAdditions {\n  /**\n   * Whether or not the item is in the disabled state.\n   */\n  disabled: boolean;\n  /**\n   * The text of the item that will be used for typeahead. If not set, defaults\n   * to the textContent of the element slotted into the headline.\n   */\n  typeaheadText: string;\n  /**\n   * Whether or not the item is in the selected visual state.\n   */\n  selected: boolean;\n  /**\n   * Sets the behavior and role of the menu item, defaults to \"menuitem\".\n   */\n  type: MenuItemType;\n  /**\n   * Whether it should keep the menu open after click.\n   */\n  keepOpen?: boolean;\n  /**\n   * Sets the underlying `HTMLAnchorElement`'s `href` resource attribute.\n   */\n  href?: string;\n  /**\n   * Focuses the item.\n   */\n  focus: () => void;\n}\n\n/**\n * The interface of every menu item interactive with a menu. All menu items\n * should implement this interface to be compatible with md-menu. Additionally\n * it should have the `md-menu-item` attribute set.\n *\n * NOTE, the required properties are recommended to be reactive properties.\n */\nexport type MenuItem = MenuItemAdditions & HTMLElement;\n\n/**\n * Supported behaviors for a menu item.\n */\nexport type MenuItemType = 'menuitem' | 'option' | 'button' | 'link';\n\n/**\n * The options used to inialize MenuItemController.\n */\nexport interface MenuItemControllerConfig {\n  /**\n   * A function that returns the headline element of the menu item.\n   */\n  getHeadlineElements: () => HTMLElement[];\n\n  /**\n   * A function that returns the supporting-text element of the menu item.\n   */\n  getSupportingTextElements: () => HTMLElement[];\n\n  /**\n   * A function that returns the default slot / misc content.\n   */\n  getDefaultElements: () => Node[];\n\n  /**\n   * The HTML Element that accepts user interactions like click. Used for\n   * occasions like programmatically clicking anchor tags when `Enter` is\n   * pressed.\n   */\n  getInteractiveElement: () => HTMLElement | null;\n}\n\n/**\n * A controller that provides most functionality of an element that implements\n * the MenuItem interface.\n */\nexport class MenuItemController implements ReactiveController {\n  private internalTypeaheadText: string | null = null;\n  private readonly getHeadlineElements: MenuItemControllerConfig['getHeadlineElements'];\n  private readonly getSupportingTextElements: MenuItemControllerConfig['getSupportingTextElements'];\n  private readonly getDefaultElements: MenuItemControllerConfig['getDefaultElements'];\n  private readonly getInteractiveElement: MenuItemControllerConfig['getInteractiveElement'];\n\n  /**\n   * @param host The MenuItem in which to attach this controller to.\n   * @param config The object that configures this controller's behavior.\n   */\n  constructor(\n    private readonly host: ReactiveControllerHost & MenuItem,\n    config: MenuItemControllerConfig,\n  ) {\n    this.getHeadlineElements = config.getHeadlineElements;\n    this.getSupportingTextElements = config.getSupportingTextElements;\n    this.getDefaultElements = config.getDefaultElements;\n    this.getInteractiveElement = config.getInteractiveElement;\n    this.host.addController(this);\n  }\n\n  /**\n   * The text that is selectable via typeahead. If not set, defaults to the\n   * innerText of the item slotted into the `\"headline\"` slot, and if there are\n   * no slotted elements into headline, then it checks the _default_ slot, and\n   * then the `\"supporting-text\"` slot if nothing is in _default_.\n   */\n  get typeaheadText() {\n    if (this.internalTypeaheadText !== null) {\n      return this.internalTypeaheadText;\n    }\n\n    const headlineElements = this.getHeadlineElements();\n\n    const textParts: string[] = [];\n    headlineElements.forEach((headlineElement) => {\n      if (headlineElement.textContent && headlineElement.textContent.trim()) {\n        textParts.push(headlineElement.textContent.trim());\n      }\n    });\n\n    // If there are no headline elements, check the default slot's text content\n    if (textParts.length === 0) {\n      this.getDefaultElements().forEach((defaultElement) => {\n        if (defaultElement.textContent && defaultElement.textContent.trim()) {\n          textParts.push(defaultElement.textContent.trim());\n        }\n      });\n    }\n\n    // If there are no headline nor default slot elements, check the\n    //supporting-text slot's text content\n    if (textParts.length === 0) {\n      this.getSupportingTextElements().forEach((supportingTextElement) => {\n        if (\n          supportingTextElement.textContent &&\n          supportingTextElement.textContent.trim()\n        ) {\n          textParts.push(supportingTextElement.textContent.trim());\n        }\n      });\n    }\n\n    return textParts.join(' ');\n  }\n\n  /**\n   * The recommended tag name to render as the list item.\n   */\n  get tagName() {\n    const type = this.host.type;\n\n    switch (type) {\n      case 'link':\n        return 'a' as const;\n      case 'button':\n        return 'button' as const;\n      default:\n      case 'menuitem':\n      case 'option':\n        return 'li' as const;\n    }\n  }\n\n  /**\n   * The recommended role of the menu item.\n   */\n  get role() {\n    return this.host.type === 'option' ? 'option' : 'menuitem';\n  }\n\n  hostConnected() {\n    this.host.toggleAttribute('md-menu-item', true);\n  }\n\n  hostUpdate() {\n    if (this.host.href) {\n      this.host.type = 'link';\n    }\n  }\n\n  /**\n   * Bind this click listener to the interactive element. Handles closing the\n   * menu.\n   */\n  onClick = () => {\n    if (this.host.keepOpen) return;\n\n    this.host.dispatchEvent(\n      createDefaultCloseMenuEvent(this.host, {\n        kind: CloseReason.CLICK_SELECTION,\n      }),\n    );\n  };\n\n  /**\n   * Bind this click listener to the interactive element. Handles closing the\n   * menu.\n   */\n  onKeydown = (event: KeyboardEvent) => {\n    // Check if the interactive element is an anchor tag. If so, click it.\n    if (this.host.href && event.code === 'Enter') {\n      const interactiveElement = this.getInteractiveElement();\n      if (interactiveElement instanceof HTMLAnchorElement) {\n        interactiveElement.click();\n      }\n    }\n\n    if (event.defaultPrevented) return;\n\n    // If the host has keepOpen = true we should ignore clicks & Space/Enter,\n    // however we always maintain the ability to close a menu with a explicit\n    // `escape` keypress.\n    const keyCode = event.code;\n    if (this.host.keepOpen && keyCode !== 'Escape') return;\n\n    if (isClosableKey(keyCode)) {\n      event.preventDefault();\n      this.host.dispatchEvent(\n        createDefaultCloseMenuEvent(this.host, {\n          kind: CloseReason.KEYDOWN,\n          key: keyCode,\n        }),\n      );\n    }\n  };\n\n  /**\n   * Use to set the typeaheadText when it changes.\n   */\n  setTypeaheadText(text: string) {\n    this.internalTypeaheadText = text;\n  }\n}\n", "/**\n * @license\n * Copyright 2022 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport '../../../focus/md-focus-ring.js';\nimport '../../../labs/item/item.js';\nimport '../../../ripple/ripple.js';\n\nimport {html, LitElement, nothing, TemplateResult} from 'lit';\nimport {\n  property,\n  query,\n  queryAssignedElements,\n  queryAssignedNodes,\n} from 'lit/decorators.js';\nimport {ClassInfo, classMap} from 'lit/directives/class-map.js';\nimport {literal, html as staticHtml, StaticValue} from 'lit/static-html.js';\n\nimport {ARIAMixinStrict} from '../../../internal/aria/aria.js';\nimport {requestUpdateOnAriaChange} from '../../../internal/aria/delegate.js';\nimport {\n  MenuItem,\n  MenuItemController,\n  type MenuItemType,\n} from '../controllers/menuItemController.js';\n\n/**\n * @fires close-menu {CustomEvent<{initiator: SelectOption, reason: Reason, itemPath: SelectOption[]}>}\n * Closes the encapsulating menu on closable interaction. --bubbles --composed\n */\nexport class MenuItemEl extends LitElement implements MenuItem {\n  static {\n    requestUpdateOnAriaChange(MenuItemEl);\n  }\n\n  /** @nocollapse */\n  static override shadowRootOptions = {\n    ...LitElement.shadowRootOptions,\n    delegatesFocus: true,\n  };\n\n  /**\n   * Disables the item and makes it non-selectable and non-interactive.\n   */\n  @property({type: Boolean, reflect: true}) disabled = false;\n\n  /**\n   * Sets the behavior and role of the menu item, defaults to \"menuitem\".\n   */\n  @property() type: MenuItemType = 'menuitem';\n\n  /**\n   * Sets the underlying `HTMLAnchorElement`'s `href` resource attribute.\n   */\n  @property() href = '';\n\n  /**\n   * Sets the underlying `HTMLAnchorElement`'s `target` attribute when `href` is\n   * set.\n   */\n  @property() target: '_blank' | '_parent' | '_self' | '_top' | '' = '';\n\n  /**\n   * Keeps the menu open if clicked or keyboard selected.\n   */\n  @property({type: Boolean, attribute: 'keep-open'}) keepOpen = false;\n\n  /**\n   * Sets the item in the selected visual state when a submenu is opened.\n   */\n  @property({type: Boolean}) selected = false;\n\n  @query('.list-item') protected readonly listItemRoot!: HTMLElement | null;\n\n  @queryAssignedElements({slot: 'headline'})\n  protected readonly headlineElements!: HTMLElement[];\n  @queryAssignedElements({slot: 'supporting-text'})\n  protected readonly supportingTextElements!: HTMLElement[];\n  @queryAssignedNodes({slot: ''})\n  protected readonly defaultElements!: Node[];\n\n  /**\n   * The text that is selectable via typeahead. If not set, defaults to the\n   * innerText of the item slotted into the `\"headline\"` slot.\n   */\n  get typeaheadText() {\n    return this.menuItemController.typeaheadText;\n  }\n\n  @property({attribute: 'typeahead-text'})\n  set typeaheadText(text: string) {\n    this.menuItemController.setTypeaheadText(text);\n  }\n\n  private readonly menuItemController = new MenuItemController(this, {\n    getHeadlineElements: () => {\n      return this.headlineElements;\n    },\n    getSupportingTextElements: () => {\n      return this.supportingTextElements;\n    },\n    getDefaultElements: () => {\n      return this.defaultElements;\n    },\n    getInteractiveElement: () => this.listItemRoot,\n  });\n\n  protected override render() {\n    return this.renderListItem(html`\n      <md-item>\n        <div slot=\"container\">\n          ${this.renderRipple()} ${this.renderFocusRing()}\n        </div>\n        <slot name=\"start\" slot=\"start\"></slot>\n        <slot name=\"end\" slot=\"end\"></slot>\n        ${this.renderBody()}\n      </md-item>\n    `);\n  }\n\n  /**\n   * Renders the root list item.\n   *\n   * @param content the child content of the list item.\n   */\n  protected renderListItem(content: unknown) {\n    const isAnchor = this.type === 'link';\n    let tag: StaticValue;\n    switch (this.menuItemController.tagName) {\n      case 'a':\n        tag = literal`a`;\n        break;\n      case 'button':\n        tag = literal`button`;\n        break;\n      default:\n      case 'li':\n        tag = literal`li`;\n        break;\n    }\n\n    // TODO(b/265339866): announce \"button\"/\"link\" inside of a list item. Until\n    // then all are \"menuitem\" roles for correct announcement.\n    const target = isAnchor && !!this.target ? this.target : nothing;\n    return staticHtml`\n      <${tag}\n        id=\"item\"\n        tabindex=${this.disabled && !isAnchor ? -1 : 0}\n        role=${this.menuItemController.role}\n        aria-label=${(this as ARIAMixinStrict).ariaLabel || nothing}\n        aria-selected=${(this as ARIAMixinStrict).ariaSelected || nothing}\n        aria-checked=${(this as ARIAMixinStrict).ariaChecked || nothing}\n        aria-expanded=${(this as ARIAMixinStrict).ariaExpanded || nothing}\n        aria-haspopup=${(this as ARIAMixinStrict).ariaHasPopup || nothing}\n        class=\"list-item ${classMap(this.getRenderClasses())}\"\n        href=${this.href || nothing}\n        target=${target}\n        @click=${this.menuItemController.onClick}\n        @keydown=${this.menuItemController.onKeydown}\n      >${content}</${tag}>\n    `;\n  }\n\n  /**\n   * Handles rendering of the ripple element.\n   */\n  protected renderRipple(): TemplateResult | typeof nothing {\n    return html` <md-ripple\n      part=\"ripple\"\n      for=\"item\"\n      ?disabled=${this.disabled}></md-ripple>`;\n  }\n\n  /**\n   * Handles rendering of the focus ring.\n   */\n  protected renderFocusRing(): TemplateResult | typeof nothing {\n    return html` <md-focus-ring\n      part=\"focus-ring\"\n      for=\"item\"\n      inward></md-focus-ring>`;\n  }\n\n  /**\n   * Classes applied to the list item root.\n   */\n  protected getRenderClasses(): ClassInfo {\n    return {\n      'disabled': this.disabled,\n      'selected': this.selected,\n    };\n  }\n\n  /**\n   * Handles rendering the headline and supporting text.\n   */\n  protected renderBody() {\n    return html`\n      <slot></slot>\n      <slot name=\"overline\" slot=\"overline\"></slot>\n      <slot name=\"headline\" slot=\"headline\"></slot>\n      <slot name=\"supporting-text\" slot=\"supporting-text\"></slot>\n      <slot\n        name=\"trailing-supporting-text\"\n        slot=\"trailing-supporting-text\"></slot>\n    `;\n  }\n\n  override focus() {\n    // TODO(b/300334509): needed for some cases where delegatesFocus doesn't\n    // work programmatically like in FF and select-option\n    this.listItemRoot?.focus();\n  }\n}\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./menu/internal/menuitem/menu-item-styles.css.\nimport {css} from 'lit';\nexport const styles = css`:host{display:flex;--md-ripple-hover-color: var(--md-menu-item-hover-state-layer-color, var(--md-sys-color-on-surface, #1d1b20));--md-ripple-hover-opacity: var(--md-menu-item-hover-state-layer-opacity, 0.08);--md-ripple-pressed-color: var(--md-menu-item-pressed-state-layer-color, var(--md-sys-color-on-surface, #1d1b20));--md-ripple-pressed-opacity: var(--md-menu-item-pressed-state-layer-opacity, 0.12)}:host([disabled]){opacity:var(--md-menu-item-disabled-opacity, 0.3);pointer-events:none}md-focus-ring{z-index:1;--md-focus-ring-shape: 8px}a,button,li{background:none;border:none;padding:0;margin:0;text-align:unset;text-decoration:none}.list-item{border-radius:inherit;display:flex;flex:1;max-width:inherit;min-width:inherit;outline:none;-webkit-tap-highlight-color:rgba(0,0,0,0)}.list-item:not(.disabled){cursor:pointer}[slot=container]{pointer-events:none}md-ripple{border-radius:inherit}md-item{border-radius:inherit;flex:1;color:var(--md-menu-item-label-text-color, var(--md-sys-color-on-surface, #1d1b20));font-family:var(--md-menu-item-label-text-font, var(--md-sys-typescale-body-large-font, var(--md-ref-typeface-plain, Roboto)));font-size:var(--md-menu-item-label-text-size, var(--md-sys-typescale-body-large-size, 1rem));line-height:var(--md-menu-item-label-text-line-height, var(--md-sys-typescale-body-large-line-height, 1.5rem));font-weight:var(--md-menu-item-label-text-weight, var(--md-sys-typescale-body-large-weight, var(--md-ref-typeface-weight-regular, 400)));min-height:var(--md-menu-item-one-line-container-height, 56px);padding-top:var(--md-menu-item-top-space, 12px);padding-bottom:var(--md-menu-item-bottom-space, 12px);padding-inline-start:var(--md-menu-item-leading-space, 16px);padding-inline-end:var(--md-menu-item-trailing-space, 16px)}md-item[multiline]{min-height:var(--md-menu-item-two-line-container-height, 72px)}[slot=supporting-text]{color:var(--md-menu-item-supporting-text-color, var(--md-sys-color-on-surface-variant, #49454f));font-family:var(--md-menu-item-supporting-text-font, var(--md-sys-typescale-body-medium-font, var(--md-ref-typeface-plain, Roboto)));font-size:var(--md-menu-item-supporting-text-size, var(--md-sys-typescale-body-medium-size, 0.875rem));line-height:var(--md-menu-item-supporting-text-line-height, var(--md-sys-typescale-body-medium-line-height, 1.25rem));font-weight:var(--md-menu-item-supporting-text-weight, var(--md-sys-typescale-body-medium-weight, var(--md-ref-typeface-weight-regular, 400)))}[slot=trailing-supporting-text]{color:var(--md-menu-item-trailing-supporting-text-color, var(--md-sys-color-on-surface-variant, #49454f));font-family:var(--md-menu-item-trailing-supporting-text-font, var(--md-sys-typescale-label-small-font, var(--md-ref-typeface-plain, Roboto)));font-size:var(--md-menu-item-trailing-supporting-text-size, var(--md-sys-typescale-label-small-size, 0.6875rem));line-height:var(--md-menu-item-trailing-supporting-text-line-height, var(--md-sys-typescale-label-small-line-height, 1rem));font-weight:var(--md-menu-item-trailing-supporting-text-weight, var(--md-sys-typescale-label-small-weight, var(--md-ref-typeface-weight-medium, 500)))}:is([slot=start],[slot=end])::slotted(*){fill:currentColor}[slot=start]{color:var(--md-menu-item-leading-icon-color, var(--md-sys-color-on-surface-variant, #49454f))}[slot=end]{color:var(--md-menu-item-trailing-icon-color, var(--md-sys-color-on-surface-variant, #49454f))}.list-item{background-color:var(--md-menu-item-container-color, transparent)}.list-item.selected{background-color:var(--md-menu-item-selected-container-color, var(--md-sys-color-secondary-container, #e8def8))}.selected:not(.disabled) ::slotted(*){color:var(--md-menu-item-selected-label-text-color, var(--md-sys-color-on-secondary-container, #1d192b))}@media(forced-colors: active){:host([disabled]),:host([disabled]) slot{color:GrayText;opacity:1}.list-item{position:relative}.list-item.selected::before{content:\"\";position:absolute;inset:0;box-sizing:border-box;border-radius:inherit;pointer-events:none;border:3px double CanvasText}}\n`;\n", "/**\n * @license\n * Copyright 2022 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {CSSResultOrNative} from 'lit';\nimport {customElement} from 'lit/decorators.js';\n\nimport {MenuItemEl} from './internal/menuitem/menu-item.js';\nimport {styles} from './internal/menuitem/menu-item-styles.js';\n\nexport {type MenuItem} from './internal/controllers/menuItemController.js';\nexport {type CloseMenuEvent} from './internal/controllers/shared.js';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'md-menu-item': MdMenuItem;\n  }\n}\n\n/**\n * @summary Menus display a list of choices on a temporary surface.\n *\n * @description\n * Menu items are the selectable choices within the menu. Menu items must\n * implement the `MenuItem` interface and also have the `md-menu-item`\n * attribute. Additionally menu items are list items so they must also have the\n * `md-list-item` attribute.\n *\n * Menu items can control a menu by selectively firing the `close-menu` and\n * `deselect-items` events.\n *\n * @final\n * @suppress {visibility}\n */\n@customElement('md-menu-item')\nexport class MdMenuItem extends MenuItemEl {\n  static override styles: CSSResultOrNative[] = [styles];\n}\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {html, isServer, LitElement} from 'lit';\nimport {property, queryAssignedElements} from 'lit/decorators.js';\n\nimport {\n  createDeactivateItemsEvent,\n  createRequestActivationEvent,\n  deactivateActiveItem,\n  getFirstActivatableItem,\n} from '../../../list/internal/list-navigation-helpers.js';\nimport {MenuItem} from '../controllers/menuItemController.js';\nimport {\n  CloseMenuEvent,\n  CloseReason,\n  createActivateTypeaheadEvent,\n  createDeactivateTypeaheadEvent,\n  KeydownCloseKey,\n  Menu,\n  NavigableKey,\n  SelectionKey,\n} from '../controllers/shared.js';\nimport {Corner} from '../menu.js';\n\n/**\n * @fires deactivate-items {Event} Requests the parent menu to deselect other\n * items when a submenu opens. --bubbles --composed\n * @fires request-activation {Event} Requests the parent to make the slotted item\n * focusable and focus the item. --bubbles --composed\n * @fires deactivate-typeahead {Event} Requests the parent menu to deactivate\n * the typeahead functionality when a submenu opens. --bubbles --composed\n * @fires activate-typeahead {Event} Requests the parent menu to activate the\n * typeahead functionality when a submenu closes. --bubbles --composed\n */\nexport class SubMenu extends LitElement {\n  /**\n   * The anchorCorner to set on the submenu.\n   */\n  @property({attribute: 'anchor-corner'})\n  anchorCorner: Corner = Corner.START_END;\n  /**\n   * The menuCorner to set on the submenu.\n   */\n  @property({attribute: 'menu-corner'}) menuCorner: Corner = Corner.START_START;\n  /**\n   * The delay between mouseenter and submenu opening.\n   */\n  @property({type: Number, attribute: 'hover-open-delay'}) hoverOpenDelay = 400;\n  /**\n   * The delay between ponterleave and the submenu closing.\n   */\n  @property({type: Number, attribute: 'hover-close-delay'})\n  hoverCloseDelay = 400;\n\n  /**\n   * READONLY: self-identifies as a menu item and sets its identifying attribute\n   */\n  @property({type: Boolean, reflect: true, attribute: 'md-sub-menu'})\n  isSubMenu = true;\n\n  get item() {\n    return this.items[0] ?? null;\n  }\n\n  get menu() {\n    return this.menus[0] ?? null;\n  }\n\n  @queryAssignedElements({slot: 'item', flatten: true})\n  private readonly items!: MenuItem[];\n\n  @queryAssignedElements({slot: 'menu', flatten: true})\n  private readonly menus!: Menu[];\n\n  private previousOpenTimeout = 0;\n  private previousCloseTimeout = 0;\n\n  constructor() {\n    super();\n\n    if (!isServer) {\n      this.addEventListener('mouseenter', this.onMouseenter);\n      this.addEventListener('mouseleave', this.onMouseleave);\n    }\n  }\n\n  override render() {\n    return html`\n      <slot\n        name=\"item\"\n        @click=${this.onClick}\n        @keydown=${this.onKeydown}\n        @slotchange=${this.onSlotchange}>\n      </slot>\n      <slot\n        name=\"menu\"\n        @keydown=${this.onSubMenuKeydown}\n        @close-menu=${this.onCloseSubmenu}\n        @slotchange=${this.onSlotchange}>\n      </slot>\n    `;\n  }\n\n  protected override firstUpdated() {\n    // slotchange is not fired if the contents have been SSRd\n    this.onSlotchange();\n  }\n\n  /**\n   * Shows the submenu.\n   */\n  async show() {\n    const menu = this.menu;\n    if (!menu || menu.open) return;\n\n    // Ensures that we deselect items when the menu closes and reactivate\n    // typeahead when the menu closes, so that we do not have dirty state of\n    // `sub-menu > menu-item[selected]` when we reopen.\n    //\n    // This cannot happen in `close()` because the menu may close via other\n    // means Additionally, this cannot happen in onCloseSubmenu because\n    // `close-menu` may not be called via focusout of outside click and not\n    // triggered by an item\n    menu.addEventListener(\n      'closed',\n      () => {\n        this.item.ariaExpanded = 'false';\n        this.dispatchEvent(createActivateTypeaheadEvent());\n        this.dispatchEvent(createDeactivateItemsEvent());\n        // aria-hidden required so ChromeVox doesn't announce the closed menu\n        menu.ariaHidden = 'true';\n      },\n      {once: true},\n    );\n\n    // Parent menu is `position: absolute` – this creates a new CSS relative\n    // positioning context (similar to doing `position: relative`), so the\n    // submenu's `<md-menu slot=\"submenu\" positioning=\"document\">` would be\n    // wrong even if we change `md-sub-menu` from `position: relative` to\n    // `position: static` because the submenu it would still be positioning\n    // itself relative to the parent menu.\n    if (menu.positioning === 'document') {\n      menu.positioning = 'absolute';\n    }\n    menu.quick = true;\n    // Submenus are in overflow when not fixed. Can remove once we have native\n    // popup support\n    menu.hasOverflow = true;\n    menu.anchorCorner = this.anchorCorner;\n    menu.menuCorner = this.menuCorner;\n    menu.anchorElement = this.item;\n    menu.defaultFocus = 'first-item';\n    // aria-hidden management required so ChromeVox doesn't announce the closed\n    // menu. Remove it here since we are about to show and focus it.\n    menu.removeAttribute('aria-hidden');\n    // This is required in the case where we have a leaf menu open and and the\n    // user hovers a parent menu's item which is not an md-sub-menu item.\n    // If this were set to true, then the menu would close and focus would be\n    // lost. That means the focusout event would have a `relatedTarget` of\n    // `null` since nothing in the menu would be focused anymore due to the\n    // leaf menu closing. restoring focus ensures that we keep focus in the\n    // submenu tree.\n    menu.skipRestoreFocus = false;\n\n    // Menu could already be opened because of mouse interaction\n    const menuAlreadyOpen = menu.open;\n    menu.show();\n    this.item.ariaExpanded = 'true';\n    this.item.ariaHasPopup = 'menu';\n    if (menu.id) {\n      this.item.setAttribute('aria-controls', menu.id);\n    }\n\n    // Deactivate other items. This can be the case if the user has tabbed\n    // around the menu and then mouses over an md-sub-menu.\n    this.dispatchEvent(createDeactivateItemsEvent());\n    this.dispatchEvent(createDeactivateTypeaheadEvent());\n    this.item.selected = true;\n\n    // This is the case of mouse hovering when already opened via keyboard or\n    // vice versa\n    if (!menuAlreadyOpen) {\n      let open = (value: unknown) => {};\n      const opened = new Promise((resolve) => {\n        open = resolve;\n      });\n      menu.addEventListener('opened', open, {once: true});\n      await opened;\n    }\n  }\n\n  /**\n   * Closes the submenu.\n   */\n  async close() {\n    const menu = this.menu;\n    if (!menu || !menu.open) return;\n\n    this.dispatchEvent(createActivateTypeaheadEvent());\n    menu.quick = true;\n    menu.close();\n    this.dispatchEvent(createDeactivateItemsEvent());\n    let close = (value: unknown) => {};\n    const closed = new Promise((resolve) => {\n      close = resolve;\n    });\n    menu.addEventListener('closed', close, {once: true});\n    await closed;\n  }\n\n  protected onSlotchange() {\n    if (!this.item) {\n      return;\n    }\n\n    // TODO(b/301296618): clean up old aria values on change\n    this.item.ariaExpanded = 'false';\n    this.item.ariaHasPopup = 'menu';\n    if (this.menu?.id) {\n      this.item.setAttribute('aria-controls', this.menu.id);\n    }\n    this.item.keepOpen = true;\n\n    const menu = this.menu;\n    if (!menu) return;\n\n    menu.isSubmenu = true;\n    // Required for ChromeVox to not linearly navigate to the menu while closed\n    menu.ariaHidden = 'true';\n  }\n\n  /**\n   * Starts the default 400ms countdown to open the submenu.\n   *\n   * NOTE: We explicitly use mouse events and not pointer events because\n   * pointer events apply to touch events. And if a user were to tap a\n   * sub-menu, it would fire the \"pointerenter\", \"pointerleave\", \"click\" events\n   * which would open the menu on click, and then set the timeout to close the\n   * menu due to pointerleave.\n   */\n  protected onMouseenter = () => {\n    clearTimeout(this.previousOpenTimeout);\n    clearTimeout(this.previousCloseTimeout);\n    if (this.menu?.open) return;\n\n    // Open synchronously if delay is 0. (screenshot tests infra\n    // would never resolve otherwise)\n    if (!this.hoverOpenDelay) {\n      this.show();\n    } else {\n      this.previousOpenTimeout = setTimeout(() => {\n        this.show();\n      }, this.hoverOpenDelay);\n    }\n  };\n\n  /**\n   * Starts the default 400ms countdown to close the submenu.\n   *\n   * NOTE: We explicitly use mouse events and not pointer events because\n   * pointer events apply to touch events. And if a user were to tap a\n   * sub-menu, it would fire the \"pointerenter\", \"pointerleave\", \"click\" events\n   * which would open the menu on click, and then set the timeout to close the\n   * menu due to pointerleave.\n   */\n  protected onMouseleave = () => {\n    clearTimeout(this.previousCloseTimeout);\n    clearTimeout(this.previousOpenTimeout);\n\n    // Close synchronously if delay is 0. (screenshot tests infra\n    // would never resolve otherwise)\n    if (!this.hoverCloseDelay) {\n      this.close();\n    } else {\n      this.previousCloseTimeout = setTimeout(() => {\n        this.close();\n      }, this.hoverCloseDelay);\n    }\n  };\n\n  protected onClick() {\n    this.show();\n  }\n\n  /**\n   * On item keydown handles opening the submenu.\n   */\n  protected async onKeydown(event: KeyboardEvent) {\n    const shouldOpenSubmenu = this.isSubmenuOpenKey(event.code);\n\n    if (event.defaultPrevented) return;\n\n    const openedWithLR =\n      shouldOpenSubmenu &&\n      (NavigableKey.LEFT === event.code || NavigableKey.RIGHT === event.code);\n\n    if (event.code === SelectionKey.SPACE || openedWithLR) {\n      // prevent space from scrolling and Left + Right from selecting previous /\n      // next items or opening / closing parent menus. Only open the submenu.\n      event.preventDefault();\n\n      if (openedWithLR) {\n        event.stopPropagation();\n      }\n    }\n\n    if (!shouldOpenSubmenu) {\n      return;\n    }\n\n    const submenu = this.menu;\n    if (!submenu) return;\n\n    const submenuItems = submenu.items;\n    const firstActivatableItem = getFirstActivatableItem(submenuItems);\n\n    if (firstActivatableItem) {\n      await this.show();\n\n      firstActivatableItem.tabIndex = 0;\n      firstActivatableItem.focus();\n\n      return;\n    }\n  }\n\n  private onCloseSubmenu(event: CloseMenuEvent) {\n    const {itemPath, reason} = event.detail;\n    itemPath.push(this.item);\n\n    this.dispatchEvent(createActivateTypeaheadEvent());\n    // Escape should only close one menu not all of the menus unlike space or\n    // click selection which should close all menus.\n    if (\n      reason.kind === CloseReason.KEYDOWN &&\n      reason.key === KeydownCloseKey.ESCAPE\n    ) {\n      event.stopPropagation();\n      this.item.dispatchEvent(createRequestActivationEvent());\n      return;\n    }\n\n    this.dispatchEvent(createDeactivateItemsEvent());\n  }\n\n  private async onSubMenuKeydown(event: KeyboardEvent) {\n    if (event.defaultPrevented) return;\n    const {close: shouldClose, keyCode} = this.isSubmenuCloseKey(event.code);\n    if (!shouldClose) return;\n\n    // Communicate that it's handled so that we don't accidentally close every\n    // parent menu. Additionally, we want to isolate things like the typeahead\n    // keydowns from bubbling up to the parent menu and confounding things.\n    event.preventDefault();\n\n    if (keyCode === NavigableKey.LEFT || keyCode === NavigableKey.RIGHT) {\n      // Prevent this from bubbling to parents\n      event.stopPropagation();\n    }\n\n    await this.close();\n\n    deactivateActiveItem(this.menu.items);\n    this.item?.focus();\n    this.item.tabIndex = 0;\n    this.item.focus();\n  }\n\n  /**\n   * Determines whether the given KeyboardEvent code is one that should open\n   * the submenu. This is RTL-aware. By default, left, right, space, or enter.\n   *\n   * @param code The native KeyboardEvent code.\n   * @return Whether or not the key code should open the submenu.\n   */\n  private isSubmenuOpenKey(code: string) {\n    const isRtl = getComputedStyle(this).direction === 'rtl';\n    const arrowEnterKey = isRtl ? NavigableKey.LEFT : NavigableKey.RIGHT;\n    switch (code) {\n      case arrowEnterKey:\n      case SelectionKey.SPACE:\n      case SelectionKey.ENTER:\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  /**\n   * Determines whether the given KeyboardEvent code is one that should close\n   * the submenu. This is RTL-aware. By default right, left, or escape.\n   *\n   * @param code The native KeyboardEvent code.\n   * @return Whether or not the key code should close the submenu.\n   */\n  private isSubmenuCloseKey(code: string) {\n    const isRtl = getComputedStyle(this).direction === 'rtl';\n    const arrowEnterKey = isRtl ? NavigableKey.RIGHT : NavigableKey.LEFT;\n    switch (code) {\n      case arrowEnterKey:\n      case KeydownCloseKey.ESCAPE:\n        return {close: true, keyCode: code} as const;\n      default:\n        return {close: false} as const;\n    }\n  }\n}\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./menu/internal/submenu/sub-menu-styles.css.\nimport {css} from 'lit';\nexport const styles = css`:host{position:relative;display:flex;flex-direction:column}\n`;\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {CSSResultOrNative} from 'lit';\nimport {customElement} from 'lit/decorators.js';\n\nimport {SubMenu} from './internal/submenu/sub-menu.js';\nimport {styles} from './internal/submenu/sub-menu-styles.js';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'md-sub-menu': MdSubMenu;\n  }\n}\n\n/**\n * @summary Menus display a list of choices on a temporary surface.\n *\n * @description\n * Menu items are the selectable choices within the menu. Menu items must\n * implement the `Menu` interface and also have the `md-menu`\n * attribute. Additionally menu items are list items so they must also have the\n * `md-list-item` attribute.\n *\n * Menu items can control a menu by selectively firing the `close-menu` and\n * `deselect-items` events.\n *\n * This menu item will open a sub-menu that is slotted in the `submenu` slot.\n * Additionally, the containing menu must either have `has-overflow` or\n * `positioning=fixed` set to `true` in order to display the containing menu\n * properly.\n *\n * @example\n * ```html\n * <div style=\"position:relative;\">\n *   <button\n *       id=\"anchor\"\n *       @click=${() => this.menuRef.value.show()}>\n *     Click to open menu\n *   </button>\n *   <!--\n *     `has-overflow` is required when using a submenu which overflows the\n *     menu's contents\n *   -->\n *   <md-menu anchor=\"anchor\" has-overflow ${ref(menuRef)}>\n *     <md-menu-item headline=\"This is a headline\"></md-menu-item>\n *     <md-sub-menu>\n *       <md-menu-item\n *           slot=\"item\"\n *           headline=\"this is a submenu item\">\n *       </md-menu-item>\n *       <md-menu slot=\"menu\">\n *         <md-menu-item headline=\"This is an item inside a submenu\">\n *         </md-menu-item>\n *       </md-menu>\n *     </md-sub-menu>\n *   </md-menu>\n * </div>\n * ```\n *\n * @final\n * @suppress {visibility}\n */\n@customElement('md-sub-menu')\nexport class MdSubMenu extends SubMenu {\n  static override styles: CSSResultOrNative[] = [styles];\n}\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {html, LitElement, nothing, TemplateResult} from 'lit';\nimport {property} from 'lit/decorators.js';\nimport {classMap} from 'lit/directives/class-map.js';\n\nimport {ARIAMixinStrict} from '../../internal/aria/aria.js';\nimport {requestUpdateOnAriaChange} from '../../internal/aria/delegate.js';\n\n/**\n * A progress component.\n */\nexport abstract class Progress extends LitElement {\n  static {\n    requestUpdateOnAriaChange(Progress);\n  }\n\n  /**\n   * Progress to display, a fraction between 0 and `max`.\n   */\n  @property({type: Number}) value = 0;\n\n  /**\n   * Maximum progress to display, defaults to 1.\n   */\n  @property({type: Number}) max = 1;\n\n  /**\n   * Whether or not to display indeterminate progress, which gives no indication\n   * to how long an activity will take.\n   */\n  @property({type: Boolean}) indeterminate = false;\n\n  /**\n   * Whether or not to render indeterminate mode using 4 colors instead of one.\n   */\n  @property({type: Boolean, attribute: 'four-color'}) fourColor = false;\n\n  protected override render() {\n    // Needed for closure conformance\n    const {ariaLabel} = this as ARIAMixinStrict;\n    return html`\n      <div\n        class=\"progress ${classMap(this.getRenderClasses())}\"\n        role=\"progressbar\"\n        aria-label=\"${ariaLabel || nothing}\"\n        aria-valuemin=\"0\"\n        aria-valuemax=${this.max}\n        aria-valuenow=${this.indeterminate ? nothing : this.value}\n        >${this.renderIndicator()}</div\n      >\n    `;\n  }\n\n  protected getRenderClasses() {\n    return {\n      'indeterminate': this.indeterminate,\n      'four-color': this.fourColor,\n    };\n  }\n\n  protected abstract renderIndicator(): TemplateResult;\n}\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {html} from 'lit';\n\nimport {Progress} from './progress.js';\n\n/**\n * A circular progress component.\n */\nexport class CircularProgress extends Progress {\n  protected override renderIndicator() {\n    if (this.indeterminate) {\n      return this.renderIndeterminateContainer();\n    }\n\n    return this.renderDeterminateContainer();\n  }\n\n  // Determinate mode is rendered with an svg so the progress arc can be\n  // easily animated via stroke-dashoffset.\n  private renderDeterminateContainer() {\n    const dashOffset = (1 - this.value / this.max) * 100;\n    // note, dash-array/offset are relative to Setting `pathLength` but\n    // Chrome seems to render this inaccurately and using a large viewbox helps.\n    return html`\n      <svg viewBox=\"0 0 4800 4800\">\n        <circle class=\"track\" pathLength=\"100\"></circle>\n        <circle\n          class=\"active-track\"\n          pathLength=\"100\"\n          stroke-dashoffset=${dashOffset}></circle>\n      </svg>\n    `;\n  }\n\n  // Indeterminate mode rendered with 2 bordered-divs. The borders are\n  // clipped into half circles by their containers. The divs are then carefully\n  // animated to produce changes to the spinner arc size.\n  // This approach has 4.5x the FPS of rendering via svg on Chrome 111.\n  // See https://lit.dev/playground/#gist=febb773565272f75408ab06a0eb49746.\n  private renderIndeterminateContainer() {\n    return html` <div class=\"spinner\">\n      <div class=\"left\">\n        <div class=\"circle\"></div>\n      </div>\n      <div class=\"right\">\n        <div class=\"circle\"></div>\n      </div>\n    </div>`;\n  }\n}\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./progress/internal/circular-progress-styles.css.\nimport {css} from 'lit';\nexport const styles = css`:host{--_active-indicator-color: var(--md-circular-progress-active-indicator-color, var(--md-sys-color-primary, #6750a4));--_active-indicator-width: var(--md-circular-progress-active-indicator-width, 10);--_four-color-active-indicator-four-color: var(--md-circular-progress-four-color-active-indicator-four-color, var(--md-sys-color-tertiary-container, #ffd8e4));--_four-color-active-indicator-one-color: var(--md-circular-progress-four-color-active-indicator-one-color, var(--md-sys-color-primary, #6750a4));--_four-color-active-indicator-three-color: var(--md-circular-progress-four-color-active-indicator-three-color, var(--md-sys-color-tertiary, #7d5260));--_four-color-active-indicator-two-color: var(--md-circular-progress-four-color-active-indicator-two-color, var(--md-sys-color-primary-container, #eaddff));--_size: var(--md-circular-progress-size, 48px);display:inline-flex;vertical-align:middle;width:var(--_size);height:var(--_size);position:relative;align-items:center;justify-content:center;contain:strict;content-visibility:auto}.progress{flex:1;align-self:stretch;margin:4px}.progress,.spinner,.left,.right,.circle,svg,.track,.active-track{position:absolute;inset:0}svg{transform:rotate(-90deg)}circle{cx:50%;cy:50%;r:calc(50%*(1 - var(--_active-indicator-width)/100));stroke-width:calc(var(--_active-indicator-width)*1%);stroke-dasharray:100;fill:rgba(0,0,0,0)}.active-track{transition:stroke-dashoffset 500ms cubic-bezier(0, 0, 0.2, 1);stroke:var(--_active-indicator-color)}.track{stroke:rgba(0,0,0,0)}.progress.indeterminate{animation:linear infinite linear-rotate;animation-duration:1568.2352941176ms}.spinner{animation:infinite both rotate-arc;animation-duration:5332ms;animation-timing-function:cubic-bezier(0.4, 0, 0.2, 1)}.left{overflow:hidden;inset:0 50% 0 0}.right{overflow:hidden;inset:0 0 0 50%}.circle{box-sizing:border-box;border-radius:50%;border:solid calc(var(--_active-indicator-width)/100*(var(--_size) - 8px));border-color:var(--_active-indicator-color) var(--_active-indicator-color) rgba(0,0,0,0) rgba(0,0,0,0);animation:expand-arc;animation-iteration-count:infinite;animation-fill-mode:both;animation-duration:1333ms,5332ms;animation-timing-function:cubic-bezier(0.4, 0, 0.2, 1)}.four-color .circle{animation-name:expand-arc,four-color}.left .circle{rotate:135deg;inset:0 -100% 0 0}.right .circle{rotate:100deg;inset:0 0 0 -100%;animation-delay:-666.5ms,0ms}@media(forced-colors: active){.active-track{stroke:CanvasText}.circle{border-color:CanvasText CanvasText Canvas Canvas}}@keyframes expand-arc{0%{transform:rotate(265deg)}50%{transform:rotate(130deg)}100%{transform:rotate(265deg)}}@keyframes rotate-arc{12.5%{transform:rotate(135deg)}25%{transform:rotate(270deg)}37.5%{transform:rotate(405deg)}50%{transform:rotate(540deg)}62.5%{transform:rotate(675deg)}75%{transform:rotate(810deg)}87.5%{transform:rotate(945deg)}100%{transform:rotate(1080deg)}}@keyframes linear-rotate{to{transform:rotate(360deg)}}@keyframes four-color{0%{border-top-color:var(--_four-color-active-indicator-one-color);border-right-color:var(--_four-color-active-indicator-one-color)}15%{border-top-color:var(--_four-color-active-indicator-one-color);border-right-color:var(--_four-color-active-indicator-one-color)}25%{border-top-color:var(--_four-color-active-indicator-two-color);border-right-color:var(--_four-color-active-indicator-two-color)}40%{border-top-color:var(--_four-color-active-indicator-two-color);border-right-color:var(--_four-color-active-indicator-two-color)}50%{border-top-color:var(--_four-color-active-indicator-three-color);border-right-color:var(--_four-color-active-indicator-three-color)}65%{border-top-color:var(--_four-color-active-indicator-three-color);border-right-color:var(--_four-color-active-indicator-three-color)}75%{border-top-color:var(--_four-color-active-indicator-four-color);border-right-color:var(--_four-color-active-indicator-four-color)}90%{border-top-color:var(--_four-color-active-indicator-four-color);border-right-color:var(--_four-color-active-indicator-four-color)}100%{border-top-color:var(--_four-color-active-indicator-one-color);border-right-color:var(--_four-color-active-indicator-one-color)}}\n`;\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {CSSResultOrNative} from 'lit';\nimport {customElement} from 'lit/decorators.js';\n\nimport {CircularProgress} from './internal/circular-progress.js';\nimport {styles} from './internal/circular-progress-styles.js';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'md-circular-progress': MdCircularProgress;\n  }\n}\n\n/**\n * @summary Circular progress indicators display progress by animating along an\n * invisible circular track in a clockwise direction. They can be applied\n * directly to a surface, such as a button or card.\n *\n * @description\n * Progress indicators inform users about the status of ongoing processes.\n * - Determinate indicators display how long a process will take.\n * - Indeterminate indicators express an unspecified amount of wait time.\n *\n * @final\n * @suppress {visibility}\n */\n@customElement('md-circular-progress')\nexport class MdCircularProgress extends CircularProgress {\n  static override styles: CSSResultOrNative[] = [styles];\n}\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {html} from 'lit';\nimport {property} from 'lit/decorators.js';\nimport {styleMap} from 'lit/directives/style-map.js';\n\nimport {Progress} from './progress.js';\n\n/**\n * A linear progress component.\n */\nexport class LinearProgress extends Progress {\n  /**\n   * Buffer amount to display, a fraction between 0 and `max`.\n   * If the value is 0 or negative, the buffer is not displayed.\n   */\n  @property({type: Number}) buffer = 0;\n\n  // Note, the indeterminate animation is rendered with transform %'s\n  // Previously, this was optimized to use px calculated with the resizeObserver\n  // due to a now fixed Chrome bug: crbug.com/389359.\n  protected override renderIndicator() {\n    const progressStyles = {\n      transform: `scaleX(${\n        (this.indeterminate ? 1 : this.value / this.max) * 100\n      }%)`,\n    };\n\n    const bufferValue = this.buffer ?? 0;\n    const hasBuffer = bufferValue > 0;\n\n    const dotSize = this.indeterminate || !hasBuffer ? 1 : bufferValue / this.max;\n\n    const dotStyles = {\n      transform: `scaleX(${dotSize * 100}%)`,\n    };\n\n    // Only display dots when visible - this prevents invisible infinite\n    // animation.\n    const hideDots =\n      this.indeterminate || !hasBuffer || bufferValue >= this.max || this.value >= this.max;\n    return html`\n      <div class=\"dots\" ?hidden=${hideDots}></div>\n      <div class=\"inactive-track\" style=${styleMap(dotStyles)}></div>\n      <div class=\"bar primary-bar\" style=${styleMap(progressStyles)}>\n        <div class=\"bar-inner\"></div>\n      </div>\n      <div class=\"bar secondary-bar\">\n        <div class=\"bar-inner\"></div>\n      </div>\n    `;\n  }\n}\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./progress/internal/linear-progress-styles.css.\nimport {css} from 'lit';\nexport const styles = css`:host{--_active-indicator-color: var(--md-linear-progress-active-indicator-color, var(--md-sys-color-primary, #6750a4));--_active-indicator-height: var(--md-linear-progress-active-indicator-height, 4px);--_four-color-active-indicator-four-color: var(--md-linear-progress-four-color-active-indicator-four-color, var(--md-sys-color-tertiary-container, #ffd8e4));--_four-color-active-indicator-one-color: var(--md-linear-progress-four-color-active-indicator-one-color, var(--md-sys-color-primary, #6750a4));--_four-color-active-indicator-three-color: var(--md-linear-progress-four-color-active-indicator-three-color, var(--md-sys-color-tertiary, #7d5260));--_four-color-active-indicator-two-color: var(--md-linear-progress-four-color-active-indicator-two-color, var(--md-sys-color-primary-container, #eaddff));--_track-color: var(--md-linear-progress-track-color, var(--md-sys-color-surface-container-highest, #e6e0e9));--_track-height: var(--md-linear-progress-track-height, 4px);--_track-shape: var(--md-linear-progress-track-shape, var(--md-sys-shape-corner-none, 0px));border-radius:var(--_track-shape);display:flex;position:relative;min-width:80px;height:var(--_track-height);content-visibility:auto;contain:strict}.progress,.dots,.inactive-track,.bar,.bar-inner{position:absolute}.progress{direction:ltr;inset:0;border-radius:inherit;overflow:hidden;display:flex;align-items:center}.bar{animation:none;width:100%;height:var(--_active-indicator-height);transform-origin:left center;transition:transform 250ms cubic-bezier(0.4, 0, 0.6, 1)}.secondary-bar{display:none}.bar-inner{inset:0;animation:none;background:var(--_active-indicator-color)}.inactive-track{background:var(--_track-color);inset:0;transition:transform 250ms cubic-bezier(0.4, 0, 0.6, 1);transform-origin:left center}.dots{inset:0;animation:linear infinite 250ms;animation-name:buffering;background-color:var(--_track-color);background-repeat:repeat-x;-webkit-mask-image:url(\"data:image/svg+xml,%3Csvg version='1.1' xmlns='http://www.w3.org/2000/svg' viewBox='0 0 5 2' preserveAspectRatio='xMinYMin slice'%3E%3Ccircle cx='1' cy='1' r='1'/%3E%3C/svg%3E\");mask-image:url(\"data:image/svg+xml,%3Csvg version='1.1' xmlns='http://www.w3.org/2000/svg' viewBox='0 0 5 2' preserveAspectRatio='xMinYMin slice'%3E%3Ccircle cx='1' cy='1' r='1'/%3E%3C/svg%3E\");z-index:-1}.dots[hidden]{display:none}.indeterminate .bar{transition:none}.indeterminate .primary-bar{inset-inline-start:-145.167%}.indeterminate .secondary-bar{inset-inline-start:-54.8889%;display:block}.indeterminate .primary-bar{animation:linear infinite 2s;animation-name:primary-indeterminate-translate}.indeterminate .primary-bar>.bar-inner{animation:linear infinite 2s primary-indeterminate-scale}.indeterminate.four-color .primary-bar>.bar-inner{animation-name:primary-indeterminate-scale,four-color;animation-duration:2s,4s}.indeterminate .secondary-bar{animation:linear infinite 2s;animation-name:secondary-indeterminate-translate}.indeterminate .secondary-bar>.bar-inner{animation:linear infinite 2s secondary-indeterminate-scale}.indeterminate.four-color .secondary-bar>.bar-inner{animation-name:secondary-indeterminate-scale,four-color;animation-duration:2s,4s}:host(:dir(rtl)){transform:scale(-1)}@keyframes primary-indeterminate-scale{0%{transform:scaleX(0.08)}36.65%{animation-timing-function:cubic-bezier(0.334731, 0.12482, 0.785844, 1);transform:scaleX(0.08)}69.15%{animation-timing-function:cubic-bezier(0.06, 0.11, 0.6, 1);transform:scaleX(0.661479)}100%{transform:scaleX(0.08)}}@keyframes secondary-indeterminate-scale{0%{animation-timing-function:cubic-bezier(0.205028, 0.057051, 0.57661, 0.453971);transform:scaleX(0.08)}19.15%{animation-timing-function:cubic-bezier(0.152313, 0.196432, 0.648374, 1.00432);transform:scaleX(0.457104)}44.15%{animation-timing-function:cubic-bezier(0.257759, -0.003163, 0.211762, 1.38179);transform:scaleX(0.72796)}100%{transform:scaleX(0.08)}}@keyframes buffering{0%{transform:translateX(calc(var(--_track-height) / 2 * 5))}}@keyframes primary-indeterminate-translate{0%{transform:translateX(0px)}20%{animation-timing-function:cubic-bezier(0.5, 0, 0.701732, 0.495819);transform:translateX(0px)}59.15%{animation-timing-function:cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);transform:translateX(83.6714%)}100%{transform:translateX(200.611%)}}@keyframes secondary-indeterminate-translate{0%{animation-timing-function:cubic-bezier(0.15, 0, 0.515058, 0.409685);transform:translateX(0px)}25%{animation-timing-function:cubic-bezier(0.31033, 0.284058, 0.8, 0.733712);transform:translateX(37.6519%)}48.35%{animation-timing-function:cubic-bezier(0.4, 0.627035, 0.6, 0.902026);transform:translateX(84.3862%)}100%{transform:translateX(160.278%)}}@keyframes four-color{0%{background:var(--_four-color-active-indicator-one-color)}15%{background:var(--_four-color-active-indicator-one-color)}25%{background:var(--_four-color-active-indicator-two-color)}40%{background:var(--_four-color-active-indicator-two-color)}50%{background:var(--_four-color-active-indicator-three-color)}65%{background:var(--_four-color-active-indicator-three-color)}75%{background:var(--_four-color-active-indicator-four-color)}90%{background:var(--_four-color-active-indicator-four-color)}100%{background:var(--_four-color-active-indicator-one-color)}}@media(forced-colors: active){:host{outline:1px solid CanvasText}.bar-inner,.dots{background-color:CanvasText}}\n`;\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {CSSResultOrNative} from 'lit';\nimport {customElement} from 'lit/decorators.js';\n\nimport {LinearProgress} from './internal/linear-progress.js';\nimport {styles} from './internal/linear-progress-styles.js';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'md-linear-progress': MdLinearProgress;\n  }\n}\n\n/**\n * @summary Linear progress indicators display progress by animating along the\n * length of a fixed, visible track.\n *\n * @description\n * Progress indicators inform users about the status of ongoing processes.\n * - Determinate indicators display how long a process will take.\n * - Indeterminate indicators express an unspecified amount of wait time.\n *\n * @final\n * @suppress {visibility}\n */\n@customElement('md-linear-progress')\nexport class MdLinearProgress extends LinearProgress {\n  static override styles: CSSResultOrNative[] = [styles];\n}\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {LitElement} from 'lit';\nimport {property} from 'lit/decorators.js';\n\nimport {MixinBase, MixinReturn} from './mixin.js';\n\n/**\n * An element that can enable and disable `tabindex` focusability.\n */\nexport interface Focusable {\n  /**\n   * Whether or not the element can be focused. Defaults to true. Set to false\n   * to disable focusing (unless a user has set a `tabindex`).\n   */\n  [isFocusable]: boolean;\n}\n\n/**\n * A property symbol that indicates whether or not a `Focusable` element can be\n * focused.\n */\nexport const isFocusable = Symbol('isFocusable');\n\nconst privateIsFocusable = Symbol('privateIsFocusable');\nconst externalTabIndex = Symbol('externalTabIndex');\nconst isUpdatingTabIndex = Symbol('isUpdatingTabIndex');\nconst updateTabIndex = Symbol('updateTabIndex');\n\n/**\n * Mixes in focusable functionality for a class.\n *\n * Elements can enable and disable their focusability with the `isFocusable`\n * symbol property. Changing `tabIndex` will trigger a lit render, meaning\n * `this.tabIndex` can be used in template expressions.\n *\n * This mixin will preserve externally-set tabindices. If an element turns off\n * focusability, but a user sets `tabindex=\"0\"`, it will still be focusable.\n *\n * To remove user overrides and restore focusability control to the element,\n * remove the `tabindex` attribute.\n *\n * @param base The class to mix functionality into.\n * @return The provided class with `Focusable` mixed in.\n */\nexport function mixinFocusable<T extends MixinBase<LitElement>>(\n  base: T,\n): MixinReturn<T, Focusable> {\n  abstract class FocusableElement extends base implements Focusable {\n    @property({noAccessor: true})\n    declare tabIndex: number;\n\n    get [isFocusable]() {\n      return this[privateIsFocusable];\n    }\n\n    set [isFocusable](value: boolean) {\n      if (this[isFocusable] === value) {\n        return;\n      }\n\n      this[privateIsFocusable] = value;\n      this[updateTabIndex]();\n    }\n\n    [privateIsFocusable] = true;\n    [externalTabIndex]: number | null = null;\n    [isUpdatingTabIndex] = false;\n\n    override connectedCallback() {\n      super.connectedCallback();\n      this[updateTabIndex]();\n    }\n\n    override attributeChangedCallback(\n      name: string,\n      old: string | null,\n      value: string | null,\n    ) {\n      if (name !== 'tabindex') {\n        super.attributeChangedCallback(name, old, value);\n        return;\n      }\n\n      this.requestUpdate('tabIndex', Number(old ?? -1));\n      if (this[isUpdatingTabIndex]) {\n        // Not an externally-initiated update.\n        return;\n      }\n\n      if (!this.hasAttribute('tabindex')) {\n        // User removed the attribute, can now use internal tabIndex\n        this[externalTabIndex] = null;\n        this[updateTabIndex]();\n        return;\n      }\n\n      this[externalTabIndex] = this.tabIndex;\n    }\n\n    [updateTabIndex]() {\n      const internalTabIndex = this[isFocusable] ? 0 : -1;\n      const computedTabIndex = this[externalTabIndex] ?? internalTabIndex;\n\n      this[isUpdatingTabIndex] = true;\n      this.tabIndex = computedTabIndex;\n      this[isUpdatingTabIndex] = false;\n    }\n  }\n\n  return FocusableElement;\n}\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {Validator} from './validator.js';\n\n/**\n * Constraint validation properties for a radio.\n */\nexport interface RadioState {\n  /**\n   * Whether the radio is checked.\n   */\n  readonly checked: boolean;\n\n  /**\n   * Whether the radio is required.\n   */\n  readonly required: boolean;\n}\n\n/**\n * Radio constraint validation properties for a single radio and its siblings.\n */\nexport type RadioGroupState = readonly [RadioState, ...RadioState[]];\n\n/**\n * A validator that provides constraint validation that emulates\n * `<input type=\"radio\">` validation.\n */\nexport class RadioValidator extends Validator<RadioGroupState> {\n  private radioElement?: HTMLInputElement;\n\n  protected override computeValidity(states: RadioGroupState) {\n    if (!this.radioElement) {\n      // Lazily create the radio element\n      this.radioElement = document.createElement('input');\n      this.radioElement.type = 'radio';\n      // A name is required for validation to run\n      this.radioElement.name = 'group';\n    }\n\n    let isRequired = false;\n    let isChecked = false;\n    for (const {checked, required} of states) {\n      if (required) {\n        isRequired = true;\n      }\n\n      if (checked) {\n        isChecked = true;\n      }\n    }\n\n    // Firefox v119 doesn't compute grouped radio validation correctly while\n    // they are detached from the DOM, which is why we don't render multiple\n    // virtual <input>s. Instead, we can check the required/checked states and\n    // grab the i18n'd validation message if the value is missing.\n    this.radioElement.checked = isChecked;\n    this.radioElement.required = isRequired;\n    return {\n      validity: {\n        valueMissing: isRequired && !isChecked,\n      },\n      validationMessage: this.radioElement.validationMessage,\n    };\n  }\n\n  protected override equals(\n    prevGroup: RadioGroupState,\n    nextGroup: RadioGroupState,\n  ) {\n    if (prevGroup.length !== nextGroup.length) {\n      return false;\n    }\n\n    for (let i = 0; i < prevGroup.length; i++) {\n      const prev = prevGroup[i];\n      const next = nextGroup[i];\n      if (prev.checked !== next.checked || prev.required !== next.required) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  protected override copy(states: RadioGroupState): RadioGroupState {\n    // Cast as unknown since typescript does not have enough information to\n    // infer that the array always has at least one element.\n    return states.map(({checked, required}) => ({\n      checked,\n      required,\n    })) as unknown as RadioGroupState;\n  }\n}\n", "/**\n * @license\n * Copyright 2022 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {ReactiveController} from 'lit';\n\n/**\n * An element that supports single-selection with `SingleSelectionController`.\n */\nexport interface SingleSelectionElement extends HTMLElement {\n  /**\n   * Whether or not the element is selected.\n   */\n  checked: boolean;\n}\n\n/**\n * A `ReactiveController` that provides root node-scoped single selection for\n * elements, similar to native `<input type=\"radio\">` selection.\n *\n * To use, elements should add the controller and call\n * `selectionController.handleCheckedChange()` in a getter/setter. This must\n * be synchronous to match native behavior.\n *\n * @example\n * const CHECKED = Symbol('checked');\n *\n * class MyToggle extends LitElement {\n *   get checked() { return this[CHECKED]; }\n *   set checked(checked: boolean) {\n *     const oldValue = this.checked;\n *     if (oldValue === checked) {\n *       return;\n *     }\n *\n *     this[CHECKED] = checked;\n *     this.selectionController.handleCheckedChange();\n *     this.requestUpdate('checked', oldValue);\n *   }\n *\n *   [CHECKED] = false;\n *\n *   private selectionController = new SingleSelectionController(this);\n *\n *   constructor() {\n *     super();\n *     this.addController(this.selectionController);\n *   }\n * }\n */\nexport class SingleSelectionController implements ReactiveController {\n  /**\n   * All single selection elements in the host element's root with the same\n   * `name` attribute, including the host element.\n   */\n  get controls(): [SingleSelectionElement, ...SingleSelectionElement[]] {\n    const name = this.host.getAttribute('name');\n    if (!name || !this.root || !this.host.isConnected) {\n      return [this.host];\n    }\n\n    // Cast as unknown since there is not enough information for typescript to\n    // know that there is always at least one element (the host).\n    return Array.from(\n      this.root.querySelectorAll<SingleSelectionElement>(`[name=\"${name}\"]`),\n    ) as unknown as [SingleSelectionElement, ...SingleSelectionElement[]];\n  }\n\n  private focused = false;\n  private root: ParentNode | null = null;\n\n  constructor(private readonly host: SingleSelectionElement) {}\n\n  hostConnected() {\n    this.root = this.host.getRootNode() as ParentNode;\n    this.host.addEventListener('keydown', this.handleKeyDown);\n    this.host.addEventListener('focusin', this.handleFocusIn);\n    this.host.addEventListener('focusout', this.handleFocusOut);\n    if (this.host.checked) {\n      // Uncheck other siblings when attached if already checked. This mimics\n      // native <input type=\"radio\"> behavior.\n      this.uncheckSiblings();\n    }\n\n    // Update for the newly added host.\n    this.updateTabIndices();\n  }\n\n  hostDisconnected() {\n    this.host.removeEventListener('keydown', this.handleKeyDown);\n    this.host.removeEventListener('focusin', this.handleFocusIn);\n    this.host.removeEventListener('focusout', this.handleFocusOut);\n    // Update for siblings that are still connected.\n    this.updateTabIndices();\n    this.root = null;\n  }\n\n  /**\n   * Should be called whenever the host's `checked` property changes\n   * synchronously.\n   */\n  handleCheckedChange() {\n    if (!this.host.checked) {\n      return;\n    }\n\n    this.uncheckSiblings();\n    this.updateTabIndices();\n  }\n\n  private readonly handleFocusIn = () => {\n    this.focused = true;\n    this.updateTabIndices();\n  };\n\n  private readonly handleFocusOut = () => {\n    this.focused = false;\n    this.updateTabIndices();\n  };\n\n  private uncheckSiblings() {\n    for (const sibling of this.controls) {\n      if (sibling !== this.host) {\n        sibling.checked = false;\n      }\n    }\n  }\n\n  /**\n   * Updates the `tabindex` of the host and its siblings.\n   */\n  private updateTabIndices() {\n    // There are three tabindex states for a group of elements:\n    // 1. If any are checked, that element is focusable.\n    const siblings = this.controls;\n    const checkedSibling = siblings.find((sibling) => sibling.checked);\n    // 2. If an element is focused, the others are no longer focusable.\n    if (checkedSibling || this.focused) {\n      const focusable = checkedSibling || this.host;\n      focusable.tabIndex = 0;\n\n      for (const sibling of siblings) {\n        if (sibling !== focusable) {\n          sibling.tabIndex = -1;\n        }\n      }\n      return;\n    }\n\n    // 3. If none are checked or focused, all are focusable.\n    for (const sibling of siblings) {\n      sibling.tabIndex = 0;\n    }\n  }\n\n  /**\n   * Handles arrow key events from the host. Using the arrow keys will\n   * select and check the next or previous sibling with the host's\n   * `name` attribute.\n   */\n  private readonly handleKeyDown = (event: KeyboardEvent) => {\n    const isDown = event.key === 'ArrowDown';\n    const isUp = event.key === 'ArrowUp';\n    const isLeft = event.key === 'ArrowLeft';\n    const isRight = event.key === 'ArrowRight';\n    // Ignore non-arrow keys\n    if (!isLeft && !isRight && !isDown && !isUp) {\n      return;\n    }\n\n    // Don't try to select another sibling if there aren't any.\n    const siblings = this.controls;\n    if (!siblings.length) {\n      return;\n    }\n\n    // Prevent default interactions on the element for arrow keys,\n    // since this controller will introduce new behavior.\n    event.preventDefault();\n\n    // Check if moving forwards or backwards\n    const isRtl = getComputedStyle(this.host).direction === 'rtl';\n    const forwards = isRtl ? isLeft || isDown : isRight || isDown;\n\n    const hostIndex = siblings.indexOf(this.host);\n    let nextIndex = forwards ? hostIndex + 1 : hostIndex - 1;\n    // Search for the next sibling that is not disabled to select.\n    // If we return to the host index, there is nothing to select.\n    while (nextIndex !== hostIndex) {\n      if (nextIndex >= siblings.length) {\n        // Return to start if moving past the last item.\n        nextIndex = 0;\n      } else if (nextIndex < 0) {\n        // Go to end if moving before the first item.\n        nextIndex = siblings.length - 1;\n      }\n\n      // Check if the next sibling is disabled. If so,\n      // move the index and continue searching.\n      const nextSibling = siblings[nextIndex];\n      if (nextSibling.hasAttribute('disabled')) {\n        if (forwards) {\n          nextIndex++;\n        } else {\n          nextIndex--;\n        }\n\n        continue;\n      }\n\n      // Uncheck and remove focusability from other siblings.\n      for (const sibling of siblings) {\n        if (sibling !== nextSibling) {\n          sibling.checked = false;\n          sibling.tabIndex = -1;\n          sibling.blur();\n        }\n      }\n\n      // The next sibling should be checked, focused and dispatch a change event\n      nextSibling.checked = true;\n      nextSibling.tabIndex = 0;\n      nextSibling.focus();\n      // Fire a change event since the change is triggered by a user action.\n      // This matches native <input type=\"radio\"> behavior.\n      nextSibling.dispatchEvent(new Event('change', {bubbles: true}));\n\n      break;\n    }\n  };\n}\n", "/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport '../../focus/md-focus-ring.js';\nimport '../../ripple/ripple.js';\n\nimport {html, isServer, LitElement} from 'lit';\nimport {property, query} from 'lit/decorators.js';\nimport {classMap} from 'lit/directives/class-map.js';\n\nimport {isActivationClick} from '../../internal/events/form-label-activation.js';\nimport {\n  createValidator,\n  getValidityAnchor,\n  mixinConstraintValidation,\n} from '../../labs/behaviors/constraint-validation.js';\nimport {\n  internals,\n  mixinElementInternals,\n} from '../../labs/behaviors/element-internals.js';\nimport {mixinFocusable} from '../../labs/behaviors/focusable.js';\nimport {\n  getFormState,\n  getFormValue,\n  mixinFormAssociated,\n} from '../../labs/behaviors/form-associated.js';\nimport {RadioValidator} from '../../labs/behaviors/validators/radio-validator.js';\n\nimport {SingleSelectionController} from './single-selection-controller.js';\n\nconst CHECKED = Symbol('checked');\nlet maskId = 0;\n\n// Separate variable needed for closure.\nconst radioBaseClass = mixinConstraintValidation(\n  mixinFormAssociated(mixinElementInternals(mixinFocusable(LitElement))),\n);\n\n/**\n * A radio component.\n *\n * @fires input {InputEvent} Dispatched when the value changes from user\n * interaction. --bubbles\n * @fires change {Event} Dispatched when the value changes from user\n * interaction. --bubbles --composed\n */\nexport class Radio extends radioBaseClass {\n  // Unique maskId is required because of a Safari bug that fail to persist\n  // reference to the mask. This should be removed once the bug is fixed.\n  private readonly maskId = `cutout${++maskId}`;\n\n  /**\n   * Whether or not the radio is selected.\n   */\n  @property({type: Boolean})\n  get checked() {\n    return this[CHECKED];\n  }\n  set checked(checked: boolean) {\n    const wasChecked = this.checked;\n    if (wasChecked === checked) {\n      return;\n    }\n\n    this[CHECKED] = checked;\n    this.requestUpdate('checked', wasChecked);\n    this.selectionController.handleCheckedChange();\n  }\n\n  [CHECKED] = false;\n\n  /**\n   * Whether or not the radio is required. If any radio is required in a group,\n   * all radios are implicitly required.\n   */\n  @property({type: Boolean}) required = false;\n\n  /**\n   * The element value to use in form submission when checked.\n   */\n  @property() value = 'on';\n\n  @query('.container') private readonly container!: HTMLElement;\n  private readonly selectionController = new SingleSelectionController(this);\n\n  constructor() {\n    super();\n    this.addController(this.selectionController);\n    if (!isServer) {\n      this[internals].role = 'radio';\n      this.addEventListener('click', this.handleClick.bind(this));\n      this.addEventListener('keydown', this.handleKeydown.bind(this));\n    }\n  }\n\n  protected override render() {\n    const classes = {'checked': this.checked};\n    return html`\n      <div class=\"container ${classMap(classes)}\" aria-hidden=\"true\">\n        <md-ripple\n          part=\"ripple\"\n          .control=${this}\n          ?disabled=${this.disabled}></md-ripple>\n        <md-focus-ring part=\"focus-ring\" .control=${this}></md-focus-ring>\n        <svg class=\"icon\" viewBox=\"0 0 20 20\">\n          <mask id=\"${this.maskId}\">\n            <rect width=\"100%\" height=\"100%\" fill=\"white\" />\n            <circle cx=\"10\" cy=\"10\" r=\"8\" fill=\"black\" />\n          </mask>\n          <circle\n            class=\"outer circle\"\n            cx=\"10\"\n            cy=\"10\"\n            r=\"10\"\n            mask=\"url(#${this.maskId})\" />\n          <circle class=\"inner circle\" cx=\"10\" cy=\"10\" r=\"5\" />\n        </svg>\n\n        <input\n          id=\"input\"\n          type=\"radio\"\n          tabindex=\"-1\"\n          .checked=${this.checked}\n          .value=${this.value}\n          ?disabled=${this.disabled} />\n      </div>\n    `;\n  }\n\n  protected override updated() {\n    this[internals].ariaChecked = String(this.checked);\n  }\n\n  private async handleClick(event: Event) {\n    if (this.disabled) {\n      return;\n    }\n\n    // allow event to propagate to user code after a microtask.\n    await 0;\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    if (isActivationClick(event)) {\n      this.focus();\n    }\n\n    // Per spec, clicking on a radio input always selects it.\n    this.checked = true;\n    this.dispatchEvent(new Event('change', {bubbles: true}));\n    this.dispatchEvent(\n      new InputEvent('input', {bubbles: true, composed: true}),\n    );\n  }\n\n  private async handleKeydown(event: KeyboardEvent) {\n    // allow event to propagate to user code after a microtask.\n    await 0;\n    if (event.key !== ' ' || event.defaultPrevented) {\n      return;\n    }\n\n    this.click();\n  }\n\n  // Writable mixin properties for lit-html binding, needed for lit-analyzer\n  declare disabled: boolean;\n  declare name: string;\n\n  override [getFormValue]() {\n    return this.checked ? this.value : null;\n  }\n\n  override [getFormState]() {\n    return String(this.checked);\n  }\n\n  override formResetCallback() {\n    // The checked property does not reflect, so the original attribute set by\n    // the user is used to determine the default value.\n    this.checked = this.hasAttribute('checked');\n  }\n\n  override formStateRestoreCallback(state: string) {\n    this.checked = state === 'true';\n  }\n\n  [createValidator]() {\n    return new RadioValidator(() => {\n      if (!this.selectionController) {\n        // Validation runs on superclass construction, so selection controller\n        // might not actually be ready until this class constructs.\n        return [this];\n      }\n\n      return this.selectionController.controls as [Radio, ...Radio[]];\n    });\n  }\n\n  [getValidityAnchor]() {\n    return this.container;\n  }\n}\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./radio/internal/radio-styles.css.\nimport {css} from 'lit';\nexport const styles = css`@layer{:host{display:inline-flex;height:var(--md-radio-icon-size, 20px);outline:none;position:relative;vertical-align:top;width:var(--md-radio-icon-size, 20px);-webkit-tap-highlight-color:rgba(0,0,0,0);cursor:pointer;--md-ripple-hover-color: var(--md-radio-hover-state-layer-color, var(--md-sys-color-on-surface, #1d1b20));--md-ripple-hover-opacity: var(--md-radio-hover-state-layer-opacity, 0.08);--md-ripple-pressed-color: var(--md-radio-pressed-state-layer-color, var(--md-sys-color-primary, #6750a4));--md-ripple-pressed-opacity: var(--md-radio-pressed-state-layer-opacity, 0.12)}:host([disabled]){cursor:default}:host([touch-target=wrapper]){margin:max(0px,(48px - var(--md-radio-icon-size, 20px))/2)}.container{display:flex;height:100%;place-content:center;place-items:center;width:100%}md-focus-ring{height:44px;inset:unset;width:44px}.checked{--md-ripple-hover-color: var(--md-radio-selected-hover-state-layer-color, var(--md-sys-color-primary, #6750a4));--md-ripple-hover-opacity: var(--md-radio-selected-hover-state-layer-opacity, 0.08);--md-ripple-pressed-color: var(--md-radio-selected-pressed-state-layer-color, var(--md-sys-color-on-surface, #1d1b20));--md-ripple-pressed-opacity: var(--md-radio-selected-pressed-state-layer-opacity, 0.12)}input{appearance:none;height:48px;margin:0;position:absolute;width:48px;cursor:inherit}:host([touch-target=none]) input{width:100%;height:100%}md-ripple{border-radius:50%;height:var(--md-radio-state-layer-size, 40px);inset:unset;width:var(--md-radio-state-layer-size, 40px)}.icon{fill:var(--md-radio-icon-color, var(--md-sys-color-on-surface-variant, #49454f));inset:0;position:absolute}.outer.circle{transition:fill 50ms linear}.inner.circle{opacity:0;transform-origin:center;transition:opacity 50ms linear}.checked .icon{fill:var(--md-radio-selected-icon-color, var(--md-sys-color-primary, #6750a4))}.checked .inner.circle{animation:inner-circle-grow 300ms cubic-bezier(0.05, 0.7, 0.1, 1);opacity:1}@keyframes inner-circle-grow{from{transform:scale(0)}to{transform:scale(1)}}:host([disabled]) .circle{animation-duration:0s;transition-duration:0s}:host(:hover) .icon{fill:var(--md-radio-hover-icon-color, var(--md-sys-color-on-surface, #1d1b20))}:host(:focus-within) .icon{fill:var(--md-radio-focus-icon-color, var(--md-sys-color-on-surface, #1d1b20))}:host(:active) .icon{fill:var(--md-radio-pressed-icon-color, var(--md-sys-color-on-surface, #1d1b20))}:host([disabled]) .icon{fill:var(--md-radio-disabled-unselected-icon-color, var(--md-sys-color-on-surface, #1d1b20));opacity:var(--md-radio-disabled-unselected-icon-opacity, 0.38)}:host(:hover) .checked .icon{fill:var(--md-radio-selected-hover-icon-color, var(--md-sys-color-primary, #6750a4))}:host(:focus-within) .checked .icon{fill:var(--md-radio-selected-focus-icon-color, var(--md-sys-color-primary, #6750a4))}:host(:active) .checked .icon{fill:var(--md-radio-selected-pressed-icon-color, var(--md-sys-color-primary, #6750a4))}:host([disabled]) .checked .icon{fill:var(--md-radio-disabled-selected-icon-color, var(--md-sys-color-on-surface, #1d1b20));opacity:var(--md-radio-disabled-selected-icon-opacity, 0.38)}}@layer hcm{@media(forced-colors: active){.icon{fill:CanvasText}:host([disabled]) .icon{fill:GrayText;opacity:1}}}\n`;\n", "/**\n * @license\n * Copyright 2022 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {CSSResultOrNative} from 'lit';\nimport {customElement} from 'lit/decorators.js';\n\nimport {Radio} from './internal/radio.js';\nimport {styles} from './internal/radio-styles.js';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'md-radio': MdRadio;\n  }\n}\n\n/**\n * @summary Radio buttons allow users to select one option from a set.\n *\n * @description\n * Radio buttons are the recommended way to allow users to make a single\n * selection from a list of options.\n *\n * Only one radio button can be selected at a time.\n *\n * Use radio buttons to:\n * - Select a single option from a set\n * - Expose all available options\n *\n * @final\n * @suppress {visibility}\n */\n@customElement('md-radio')\nexport class MdRadio extends Radio {\n  static override styles: CSSResultOrNative[] = [styles];\n}\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {LitElement, isServer} from 'lit';\n\nimport {ConstraintValidation} from './constraint-validation.js';\nimport {WithElementInternals, internals} from './element-internals.js';\nimport {MixinBase, MixinReturn} from './mixin.js';\n\n/**\n * A constraint validation element that has a callback for when the element\n * should report validity styles and error messages to the user.\n *\n * This is commonly used in text-field-like controls that display error styles\n * and error messages.\n */\nexport interface OnReportValidity extends ConstraintValidation {\n  /**\n   * A callback that is invoked when validity should be reported. Components\n   * that can display their own error state can use this and update their\n   * styles.\n   *\n   * If an invalid event is provided, the element is invalid. If `null`, the\n   * element is valid.\n   *\n   * The invalid event's `preventDefault()` may be called to stop the platform\n   * popup from displaying.\n   *\n   * @param invalidEvent The `invalid` event dispatched when an element is\n   *     invalid, or `null` if the element is valid.\n   */\n  [onReportValidity](invalidEvent: Event | null): void;\n\n  // `mixinOnReportValidity()` implements this optional method. If overriden,\n  // call `super.formAssociatedCallback(form)`.\n  // (inherit jsdoc from `FormAssociated`)\n  formAssociatedCallback(form: HTMLFormElement | null): void;\n}\n\n/**\n * A symbol property used for a callback when validity has been reported.\n */\nexport const onReportValidity = Symbol('onReportValidity');\n\n// Private symbol members, used to avoid name clashing.\nconst privateCleanupFormListeners = Symbol('privateCleanupFormListeners');\nconst privateDoNotReportInvalid = Symbol('privateDoNotReportInvalid');\nconst privateIsSelfReportingValidity = Symbol('privateIsSelfReportingValidity');\nconst privateCallOnReportValidity = Symbol('privateCallOnReportValidity');\n\n/**\n * Mixes in a callback for constraint validation when validity should be\n * styled and reported to the user.\n *\n * This is commonly used in text-field-like controls that display error styles\n * and error messages.\n *\n * @example\n * ```ts\n * const baseClass = mixinOnReportValidity(\n *   mixinConstraintValidation(\n *     mixinFormAssociated(mixinElementInternals(LitElement)),\n *   ),\n * );\n *\n * class MyField extends baseClass {\n *   \\@property({type: Boolean}) error = false;\n *   \\@property() errorMessage = '';\n *\n *   [onReportValidity](invalidEvent: Event | null) {\n *     this.error = !!invalidEvent;\n *     this.errorMessage = this.validationMessage;\n *\n *     // Optionally prevent platform popup from displaying\n *     invalidEvent?.preventDefault();\n *   }\n * }\n * ```\n *\n * @param base The class to mix functionality into.\n * @return The provided class with `OnReportValidity` mixed in.\n */\nexport function mixinOnReportValidity<\n  T extends MixinBase<LitElement & ConstraintValidation & WithElementInternals>,\n>(base: T): MixinReturn<T, OnReportValidity> {\n  abstract class OnReportValidityElement\n    extends base\n    implements OnReportValidity\n  {\n    /**\n     * Used to clean up event listeners when a new form is associated.\n     */\n    [privateCleanupFormListeners] = new AbortController();\n\n    /**\n     * Used to determine if an invalid event should report validity. Invalid\n     * events from `checkValidity()` do not trigger reporting.\n     */\n    [privateDoNotReportInvalid] = false;\n\n    /**\n     * Used to determine if the control is reporting validity from itself, or\n     * if a `<form>` is causing the validity report. Forms have different\n     * control focusing behavior.\n     */\n    [privateIsSelfReportingValidity] = false;\n\n    // Mixins must have a constructor with `...args: any[]`\n    // tslint:disable-next-line:no-any\n    constructor(...args: any[]) {\n      super(...args);\n      if (isServer) {\n        return;\n      }\n\n      this.addEventListener(\n        'invalid',\n        (invalidEvent) => {\n          // Listen for invalid events dispatched by a `<form>` when it tries to\n          // submit and the element is invalid. We ignore events dispatched when\n          // calling `checkValidity()` as well as untrusted events, since the\n          // `reportValidity()` and `<form>`-dispatched events are always\n          // trusted.\n          if (this[privateDoNotReportInvalid] || !invalidEvent.isTrusted) {\n            return;\n          }\n\n          this.addEventListener(\n            'invalid',\n            () => {\n              // A normal bubbling phase event listener. By adding it here, we\n              // ensure it's the last event listener that is called during the\n              // bubbling phase.\n              this[privateCallOnReportValidity](invalidEvent);\n            },\n            {once: true},\n          );\n        },\n        {\n          // Listen during the capture phase, which will happen before the\n          // bubbling phase. That way, we can add a final event listener that\n          // will run after other event listeners, and we can check if it was\n          // default prevented. This works because invalid does not bubble.\n          capture: true,\n        },\n      );\n    }\n\n    override checkValidity() {\n      this[privateDoNotReportInvalid] = true;\n      const valid = super.checkValidity();\n      this[privateDoNotReportInvalid] = false;\n      return valid;\n    }\n\n    override reportValidity() {\n      this[privateIsSelfReportingValidity] = true;\n      const valid = super.reportValidity();\n      // Constructor's invalid listener will handle reporting invalid events.\n      if (valid) {\n        this[privateCallOnReportValidity](null);\n      }\n\n      this[privateIsSelfReportingValidity] = false;\n      return valid;\n    }\n\n    [privateCallOnReportValidity](invalidEvent: Event | null) {\n      // Since invalid events do not bubble to parent listeners, and because\n      // our invalid listeners are added lazily after other listeners, we can\n      // reliably read `defaultPrevented` synchronously without worrying\n      // about waiting for another listener that could cancel it.\n      const wasCanceled = invalidEvent?.defaultPrevented;\n      if (wasCanceled) {\n        return;\n      }\n\n      this[onReportValidity](invalidEvent);\n\n      // If an implementation calls invalidEvent.preventDefault() to stop the\n      // platform popup from displaying, focusing is also prevented, so we need\n      // to manually focus.\n      const implementationCanceledFocus =\n        !wasCanceled && invalidEvent?.defaultPrevented;\n      if (!implementationCanceledFocus) {\n        return;\n      }\n\n      // The control should be focused when:\n      // - `control.reportValidity()` is called (self-reporting).\n      // - a form is reporting validity for its controls and this is the first\n      //   invalid control.\n      if (\n        this[privateIsSelfReportingValidity] ||\n        isFirstInvalidControlInForm(this[internals].form, this)\n      ) {\n        this.focus();\n      }\n    }\n\n    [onReportValidity](invalidEvent: Event | null) {\n      throw new Error('Implement [onReportValidity]');\n    }\n\n    override formAssociatedCallback(form: HTMLFormElement | null) {\n      // can't use super.formAssociatedCallback?.() due to closure\n      if (super.formAssociatedCallback) {\n        super.formAssociatedCallback(form);\n      }\n\n      // Clean up previous form listeners.\n      this[privateCleanupFormListeners].abort();\n      if (!form) {\n        return;\n      }\n\n      this[privateCleanupFormListeners] = new AbortController();\n\n      // Add a listener that fires when the form runs constraint validation and\n      // the control is valid, so that it may remove its error styles.\n      //\n      // This happens on `form.reportValidity()` and `form.requestSubmit()`\n      // (both when the submit fails and passes).\n      addFormReportValidListener(\n        this,\n        form,\n        () => {\n          this[privateCallOnReportValidity](null);\n        },\n        this[privateCleanupFormListeners].signal,\n      );\n    }\n  }\n\n  return OnReportValidityElement;\n}\n\n/**\n * Add a listener that fires when a form runs constraint validation on a control\n * and it is valid. This is needed to clear previously invalid styles.\n *\n * @param control The control of the form to listen for valid events.\n * @param form The control's form that can run constraint validation.\n * @param onControlValid A listener that is called when the form runs constraint\n *     validation and the control is valid.\n * @param cleanup A cleanup signal to remove the listener.\n */\nfunction addFormReportValidListener(\n  control: Element,\n  form: HTMLFormElement,\n  onControlValid: () => void,\n  cleanup: AbortSignal,\n) {\n  const validateHooks = getFormValidateHooks(form);\n\n  // When a form validates its controls, check if an invalid event is dispatched\n  // on the control. If it is not, then inform the control to report its valid\n  // state.\n  let controlFiredInvalid = false;\n  let cleanupInvalidListener: AbortController | undefined;\n  let isNextSubmitFromHook = false;\n  validateHooks.addEventListener(\n    'before',\n    () => {\n      isNextSubmitFromHook = true;\n      cleanupInvalidListener = new AbortController();\n      controlFiredInvalid = false;\n      control.addEventListener(\n        'invalid',\n        () => {\n          controlFiredInvalid = true;\n        },\n        {\n          signal: cleanupInvalidListener.signal,\n        },\n      );\n    },\n    {signal: cleanup},\n  );\n\n  validateHooks.addEventListener(\n    'after',\n    () => {\n      isNextSubmitFromHook = false;\n      cleanupInvalidListener?.abort();\n      if (controlFiredInvalid) {\n        return;\n      }\n\n      onControlValid();\n    },\n    {signal: cleanup},\n  );\n\n  // The above hooks handle imperatively submitting the form, but not\n  // declaratively submitting the form. This happens when:\n  // 1. A non-custom element `<button type=\"submit\">` is clicked.\n  // 2. Enter is pressed on a non-custom element text editable `<input>`.\n  form.addEventListener(\n    'submit',\n    () => {\n      // This submit was from `form.requestSubmit()`, which already calls the\n      // listener.\n      if (isNextSubmitFromHook) {\n        return;\n      }\n\n      onControlValid();\n    },\n    {\n      signal: cleanup,\n    },\n  );\n\n  // Note: it is a known limitation that we cannot detect if a form tries to\n  // submit declaratively, but fails to do so because an unrelated sibling\n  // control failed its constraint validation.\n  //\n  // Since we cannot detect when that happens, a previously invalid control may\n  // not clear its error styling when it becomes valid again.\n  //\n  // To work around this, call `form.reportValidity()` when submitting a form\n  // declaratively. This can be down on the `<button type=\"submit\">`'s click or\n  // the text editable `<input>`'s 'Enter' keydown.\n}\n\nconst FORM_VALIDATE_HOOKS = new WeakMap<HTMLFormElement, EventTarget>();\n\n/**\n * Get a hooks `EventTarget` that dispatches 'before' and 'after' events that\n * fire before a form runs constraint validation and immediately after it\n * finishes running constraint validation on its controls.\n *\n * This happens during `form.reportValidity()` and `form.requestSubmit()`.\n *\n * @param form The form to get or set up hooks for.\n * @return A hooks `EventTarget` to add listeners to.\n */\nfunction getFormValidateHooks(form: HTMLFormElement) {\n  if (!FORM_VALIDATE_HOOKS.has(form)) {\n    // Patch form methods to add event listener hooks. These are needed to react\n    // to form behaviors that do not dispatch events, such as a form asking its\n    // controls to report their validity.\n    //\n    // We should only patch the methods once, since multiple controls and other\n    // forces may want to patch this method. We cannot reliably clean it up if\n    // there are multiple patched and re-patched methods referring holding\n    // references to each other.\n    //\n    // Instead, we never clean up the patch but add and clean up event listeners\n    // added to the hooks after the patch.\n    const hooks = new EventTarget();\n    FORM_VALIDATE_HOOKS.set(form, hooks);\n\n    // Add hooks to support notifying before and after a form has run constraint\n    // validation on its controls.\n    // Note: `form.submit()` does not run constraint validation per spec.\n    for (const methodName of ['reportValidity', 'requestSubmit'] as const) {\n      const superMethod = form[methodName];\n      form[methodName] = function (this: HTMLFormElement) {\n        hooks.dispatchEvent(new Event('before'));\n        const result = Reflect.apply(superMethod, this, arguments);\n        hooks.dispatchEvent(new Event('after'));\n        return result;\n      };\n    }\n  }\n\n  return FORM_VALIDATE_HOOKS.get(form)!;\n}\n\n/**\n * Checks if a control is the first invalid control in a form.\n *\n * @param form The control's form. When `null`, the control doesn't have a form\n *     and the method returns true.\n * @param control The control to check.\n * @return True if there is no form or if the control is the form's first\n *     invalid control.\n */\nfunction isFirstInvalidControlInForm(\n  form: HTMLFormElement | null,\n  control: HTMLElement,\n) {\n  if (!form) {\n    return true;\n  }\n\n  let firstInvalidControl: Element | undefined;\n  for (const element of form.elements) {\n    if (element.matches(':invalid')) {\n      firstInvalidControl = element;\n      break;\n    }\n  }\n\n  return firstInvalidControl === control;\n}\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {html, render} from 'lit';\n\nimport {Validator} from './validator.js';\n\n/**\n * Constraint validation properties for a select dropdown.\n */\nexport interface SelectState {\n  /**\n   * The current selected value.\n   */\n  readonly value: string;\n\n  /**\n   * Whether the select is required.\n   */\n  readonly required: boolean;\n}\n\n/**\n * A validator that provides constraint validation that emulates `<select>`\n * validation.\n */\nexport class SelectValidator extends Validator<SelectState> {\n  private selectControl?: HTMLSelectElement;\n\n  protected override computeValidity(state: SelectState) {\n    if (!this.selectControl) {\n      // Lazily create the platform select\n      this.selectControl = document.createElement('select');\n    }\n\n    render(html`<option value=${state.value}></option>`, this.selectControl);\n\n    this.selectControl.value = state.value;\n    this.selectControl.required = state.required;\n    return {\n      validity: this.selectControl.validity,\n      validationMessage: this.selectControl.validationMessage,\n    };\n  }\n\n  protected override equals(prev: SelectState, next: SelectState) {\n    return prev.value === next.value && prev.required === next.required;\n  }\n\n  protected override copy({value, required}: SelectState) {\n    return {value, required};\n  }\n}\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {SelectOption} from './selectoption/select-option.js';\n\n/**\n * A type that describes a SelectOption and its index.\n */\nexport type SelectOptionRecord = [SelectOption, number];\n\n/**\n * Given a list of select options, this function will return an array of\n * SelectOptionRecords that are selected.\n *\n * @return An array of SelectOptionRecords describing the options that are\n * selected.\n */\nexport function getSelectedItems(items: SelectOption[]) {\n  const selectedItemRecords: SelectOptionRecord[] = [];\n\n  for (let i = 0; i < items.length; i++) {\n    const item = items[i];\n    if (item.selected) {\n      selectedItemRecords.push([item, i]);\n    }\n  }\n\n  return selectedItemRecords;\n}\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport '../../menu/menu.js';\n\nimport {html, isServer, LitElement, nothing, PropertyValues} from 'lit';\nimport {property, query, queryAssignedElements, state} from 'lit/decorators.js';\nimport {ClassInfo, classMap} from 'lit/directives/class-map.js';\nimport {styleMap} from 'lit/directives/style-map.js';\nimport {html as staticHtml, StaticValue} from 'lit/static-html.js';\n\nimport {Field} from '../../field/internal/field.js';\nimport {ARIAMixinStrict} from '../../internal/aria/aria.js';\nimport {requestUpdateOnAriaChange} from '../../internal/aria/delegate.js';\nimport {redispatchEvent} from '../../internal/events/redispatch-event.js';\nimport {\n  createValidator,\n  getValidityAnchor,\n  mixinConstraintValidation,\n} from '../../labs/behaviors/constraint-validation.js';\nimport {mixinElementInternals} from '../../labs/behaviors/element-internals.js';\nimport {\n  getFormValue,\n  mixinFormAssociated,\n} from '../../labs/behaviors/form-associated.js';\nimport {\n  mixinOnReportValidity,\n  onReportValidity,\n} from '../../labs/behaviors/on-report-validity.js';\nimport {SelectValidator} from '../../labs/behaviors/validators/select-validator.js';\nimport {getActiveItem} from '../../list/internal/list-navigation-helpers.js';\nimport {\n  CloseMenuEvent,\n  FocusState,\n  isElementInSubtree,\n  isSelectableKey,\n} from '../../menu/internal/controllers/shared.js';\nimport {TYPEAHEAD_RECORD} from '../../menu/internal/controllers/typeaheadController.js';\nimport {DEFAULT_TYPEAHEAD_BUFFER_TIME, Menu} from '../../menu/internal/menu.js';\nimport {SelectOption} from './selectoption/select-option.js';\nimport {\n  createRequestDeselectionEvent,\n  createRequestSelectionEvent,\n} from './selectoption/selectOptionController.js';\nimport {getSelectedItems, SelectOptionRecord} from './shared.js';\n\nconst VALUE = Symbol('value');\n\n// Separate variable needed for closure.\nconst selectBaseClass = mixinOnReportValidity(\n  mixinConstraintValidation(\n    mixinFormAssociated(mixinElementInternals(LitElement)),\n  ),\n);\n\n/**\n * @fires change {Event} The native `change` event on\n * [`<input>`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/change_event)\n * --bubbles\n * @fires input {InputEvent} The native `input` event on\n * [`<input>`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/input_event)\n * --bubbles --composed\n * @fires opening {Event} Fired when the select's menu is about to open.\n * @fires opened {Event} Fired when the select's menu has finished animations\n * and opened.\n * @fires closing {Event} Fired when the select's menu is about to close.\n * @fires closed {Event} Fired when the select's menu has finished animations\n * and closed.\n */\nexport abstract class Select extends selectBaseClass {\n  static {\n    requestUpdateOnAriaChange(Select);\n  }\n\n  /** @nocollapse */\n  static override shadowRootOptions = {\n    ...LitElement.shadowRootOptions,\n    delegatesFocus: true,\n  };\n\n  /**\n   * Opens the menu synchronously with no animation.\n   */\n  @property({type: Boolean}) quick = false;\n\n  /**\n   * Whether or not the select is required.\n   */\n  @property({type: Boolean}) required = false;\n\n  /**\n   * The error message that replaces supporting text when `error` is true. If\n   * `errorText` is an empty string, then the supporting text will continue to\n   * show.\n   *\n   * This error message overrides the error message displayed by\n   * `reportValidity()`.\n   */\n  @property({type: String, attribute: 'error-text'}) errorText = '';\n\n  /**\n   * The floating label for the field.\n   */\n  @property() label = '';\n\n  /**\n   * Conveys additional information below the select, such as how it should\n   * be used.\n   */\n  @property({type: String, attribute: 'supporting-text'}) supportingText = '';\n\n  /**\n   * Gets or sets whether or not the select is in a visually invalid state.\n   *\n   * This error state overrides the error state controlled by\n   * `reportValidity()`.\n   */\n  @property({type: Boolean, reflect: true}) error = false;\n\n  /**\n   * Whether or not the underlying md-menu should be position: fixed to display\n   * in a top-level manner, or position: absolute.\n   *\n   * position:fixed is useful for cases where select is inside of another\n   * element with stacking context and hidden overflows such as `md-dialog`.\n   */\n  @property({attribute: 'menu-positioning'})\n  menuPositioning: 'absolute' | 'fixed' | 'popover' = 'popover';\n\n  /**\n   * Clamps the menu-width to the width of the select.\n   */\n  @property({type: Boolean, attribute: 'clamp-menu-width'})\n  clampMenuWidth = false;\n\n  /**\n   * The max time between the keystrokes of the typeahead select / menu behavior\n   * before it clears the typeahead buffer.\n   */\n  @property({type: Number, attribute: 'typeahead-delay'})\n  typeaheadDelay = DEFAULT_TYPEAHEAD_BUFFER_TIME;\n\n  /**\n   * Whether or not the text field has a leading icon. Used for SSR.\n   */\n  @property({type: Boolean, attribute: 'has-leading-icon'})\n  hasLeadingIcon = false;\n\n  /**\n   * Text to display in the field. Only set for SSR.\n   */\n  @property({attribute: 'display-text'}) displayText = '';\n\n  /**\n   * Whether the menu should be aligned to the start or the end of the select's\n   * textbox.\n   */\n  @property({attribute: 'menu-align'}) menuAlign: 'start' | 'end' = 'start';\n\n  /**\n   * The value of the currently selected option.\n   *\n   * Note: For SSR, set `[selected]` on the requested option and `displayText`\n   * rather than setting `value` setting `value` will incur a DOM query.\n   */\n  @property()\n  get value(): string {\n    return this[VALUE];\n  }\n\n  set value(value: string) {\n    if (isServer) return;\n    this.lastUserSetValue = value;\n    this.select(value);\n  }\n\n  [VALUE] = '';\n\n  get options() {\n    // NOTE: this does a DOM query.\n    return (this.menu?.items ?? []) as SelectOption[];\n  }\n\n  /**\n   * The index of the currently selected option.\n   *\n   * Note: For SSR, set `[selected]` on the requested option and `displayText`\n   * rather than setting `selectedIndex` setting `selectedIndex` will incur a\n   * DOM query.\n   */\n  @property({type: Number, attribute: 'selected-index'})\n  get selectedIndex(): number {\n    // tslint:disable-next-line:enforce-name-casing\n    const [_option, index] = (this.getSelectedOptions() ?? [])[0] ?? [];\n    return index ?? -1;\n  }\n\n  set selectedIndex(index: number) {\n    this.lastUserSetSelectedIndex = index;\n    this.selectIndex(index);\n  }\n\n  /**\n   * Returns an array of selected options.\n   *\n   * NOTE: md-select only suppoprts single selection.\n   */\n  get selectedOptions() {\n    return (this.getSelectedOptions() ?? []).map(([option]) => option);\n  }\n\n  protected abstract readonly fieldTag: StaticValue;\n\n  /**\n   * Used for initializing select when the user sets the `value` directly.\n   */\n  private lastUserSetValue: string | null = null;\n\n  /**\n   * Used for initializing select when the user sets the `selectedIndex`\n   * directly.\n   */\n  private lastUserSetSelectedIndex: number | null = null;\n\n  /**\n   * Used for `input` and `change` event change detection.\n   */\n  private lastSelectedOption: SelectOption | null = null;\n\n  // tslint:disable-next-line:enforce-name-casing\n  private lastSelectedOptionRecords: SelectOptionRecord[] = [];\n\n  /**\n   * Whether or not a native error has been reported via `reportValidity()`.\n   */\n  @state() private nativeError = false;\n\n  /**\n   * The validation message displayed from a native error via\n   * `reportValidity()`.\n   */\n  @state() private nativeErrorText = '';\n  private get hasError() {\n    return this.error || this.nativeError;\n  }\n\n  @state() private focused = false;\n  @state() private open = false;\n  @state() private defaultFocus: FocusState = FocusState.NONE;\n  @query('.field') private readonly field!: Field | null;\n  @query('md-menu') private readonly menu!: Menu | null;\n  @query('#label') private readonly labelEl!: HTMLElement;\n  @queryAssignedElements({slot: 'leading-icon', flatten: true})\n  private readonly leadingIcons!: Element[];\n  // Have to keep track of previous open because it's state and private and thus\n  // cannot be tracked in PropertyValues<this> map.\n  private prevOpen = this.open;\n  private selectWidth = 0;\n\n  constructor() {\n    super();\n    if (isServer) {\n      return;\n    }\n\n    this.addEventListener('focus', this.handleFocus.bind(this));\n    this.addEventListener('blur', this.handleBlur.bind(this));\n  }\n\n  /**\n   * Selects an option given the value of the option, and updates MdSelect's\n   * value.\n   */\n  select(value: string) {\n    const optionToSelect = this.options.find(\n      (option) => option.value === value,\n    );\n    if (optionToSelect) {\n      this.selectItem(optionToSelect);\n    }\n  }\n\n  /**\n   * Selects an option given the index of the option, and updates MdSelect's\n   * value.\n   */\n  selectIndex(index: number) {\n    const optionToSelect = this.options[index];\n    if (optionToSelect) {\n      this.selectItem(optionToSelect);\n    }\n  }\n\n  /**\n   * Reset the select to its default value.\n   */\n  reset() {\n    for (const option of this.options) {\n      option.selected = option.hasAttribute('selected');\n    }\n\n    this.updateValueAndDisplayText();\n    this.nativeError = false;\n    this.nativeErrorText = '';\n  }\n\n  [onReportValidity](invalidEvent: Event | null) {\n    // Prevent default pop-up behavior.\n    invalidEvent?.preventDefault();\n\n    const prevMessage = this.getErrorText();\n    this.nativeError = !!invalidEvent;\n    this.nativeErrorText = this.validationMessage;\n\n    if (prevMessage === this.getErrorText()) {\n      this.field?.reannounceError();\n    }\n  }\n\n  protected override update(changed: PropertyValues<Select>) {\n    // In SSR the options will be ready to query, so try to figure out what\n    // the value and display text should be.\n    if (!this.hasUpdated) {\n      this.initUserSelection();\n    }\n\n    // We have just opened the menu.\n    // We are only able to check for the select's rect in `update()` instead of\n    // having to wait for `updated()` because the menu can never be open on\n    // first render since it is not settable and Lit SSR does not support click\n    // events which would open the menu.\n    if (this.prevOpen !== this.open && this.open) {\n      const selectRect = this.getBoundingClientRect();\n      this.selectWidth = selectRect.width;\n    }\n\n    this.prevOpen = this.open;\n    super.update(changed);\n  }\n\n  protected override render() {\n    return html`\n      <span\n        class=\"select ${classMap(this.getRenderClasses())}\"\n        @focusout=${this.handleFocusout}>\n        ${this.renderField()} ${this.renderMenu()}\n      </span>\n    `;\n  }\n\n  protected override async firstUpdated(changed: PropertyValues<Select>) {\n    await this.menu?.updateComplete;\n    // If this has been handled on update already due to SSR, try again.\n    if (!this.lastSelectedOptionRecords.length) {\n      this.initUserSelection();\n    }\n\n    // Case for when the DOM is streaming, there are no children, and a child\n    // has [selected] set on it, we need to wait for DOM to render something.\n    if (\n      !this.lastSelectedOptionRecords.length &&\n      !isServer &&\n      !this.options.length\n    ) {\n      setTimeout(() => {\n        this.updateValueAndDisplayText();\n      });\n    }\n\n    super.firstUpdated(changed);\n  }\n\n  private getRenderClasses(): ClassInfo {\n    return {\n      'disabled': this.disabled,\n      'error': this.error,\n      'open': this.open,\n    };\n  }\n\n  private renderField() {\n    return staticHtml`\n      <${this.fieldTag}\n          aria-haspopup=\"listbox\"\n          role=\"combobox\"\n          part=\"field\"\n          id=\"field\"\n          tabindex=${this.disabled ? '-1' : '0'}\n          aria-label=${(this as ARIAMixinStrict).ariaLabel || nothing}\n          aria-describedby=\"description\"\n          aria-expanded=${this.open ? 'true' : 'false'}\n          aria-controls=\"listbox\"\n          class=\"field\"\n          label=${this.label}\n          .focused=${this.focused || this.open}\n          .populated=${!!this.displayText}\n          .disabled=${this.disabled}\n          .required=${this.required}\n          .error=${this.hasError}\n          ?has-start=${this.hasLeadingIcon}\n          has-end\n          supporting-text=${this.supportingText}\n          error-text=${this.getErrorText()}\n          @keydown=${this.handleKeydown}\n          @click=${this.handleClick}>\n         ${this.renderFieldContent()}\n         <div id=\"description\" slot=\"aria-describedby\"></div>\n      </${this.fieldTag}>`;\n  }\n\n  private renderFieldContent() {\n    return [\n      this.renderLeadingIcon(),\n      this.renderLabel(),\n      this.renderTrailingIcon(),\n    ];\n  }\n\n  private renderLeadingIcon() {\n    return html`\n      <span class=\"icon leading\" slot=\"start\">\n        <slot name=\"leading-icon\" @slotchange=${this.handleIconChange}></slot>\n      </span>\n    `;\n  }\n\n  private renderTrailingIcon() {\n    return html`\n      <span class=\"icon trailing\" slot=\"end\">\n        <slot name=\"trailing-icon\" @slotchange=${this.handleIconChange}>\n          <svg height=\"5\" viewBox=\"7 10 10 5\" focusable=\"false\">\n            <polygon\n              class=\"down\"\n              stroke=\"none\"\n              fill-rule=\"evenodd\"\n              points=\"7 10 12 15 17 10\"></polygon>\n            <polygon\n              class=\"up\"\n              stroke=\"none\"\n              fill-rule=\"evenodd\"\n              points=\"7 15 12 10 17 15\"></polygon>\n          </svg>\n        </slot>\n      </span>\n    `;\n  }\n\n  private renderLabel() {\n    // need to render &nbsp; so that line-height can apply and give it a\n    // non-zero height\n    return html`<div id=\"label\">${this.displayText || html`&nbsp;`}</div>`;\n  }\n\n  private renderMenu() {\n    const ariaLabel = this.label || (this as ARIAMixinStrict).ariaLabel;\n    return html`<div class=\"menu-wrapper\">\n      <md-menu\n        id=\"listbox\"\n        .defaultFocus=${this.defaultFocus}\n        role=\"listbox\"\n        tabindex=\"-1\"\n        aria-label=${ariaLabel || nothing}\n        stay-open-on-focusout\n        part=\"menu\"\n        exportparts=\"focus-ring: menu-focus-ring\"\n        anchor=\"field\"\n        style=${styleMap({\n          '--__menu-min-width': `${this.selectWidth}px`,\n          '--__menu-max-width': this.clampMenuWidth\n            ? `${this.selectWidth}px`\n            : undefined,\n        })}\n        no-navigation-wrap\n        .open=${this.open}\n        .quick=${this.quick}\n        .positioning=${this.menuPositioning}\n        .typeaheadDelay=${this.typeaheadDelay}\n        .anchorCorner=${this.menuAlign === 'start' ? 'end-start' : 'end-end'}\n        .menuCorner=${this.menuAlign === 'start' ? 'start-start' : 'start-end'}\n        @opening=${this.handleOpening}\n        @opened=${this.redispatchEvent}\n        @closing=${this.redispatchEvent}\n        @closed=${this.handleClosed}\n        @close-menu=${this.handleCloseMenu}\n        @request-selection=${this.handleRequestSelection}\n        @request-deselection=${this.handleRequestDeselection}>\n        ${this.renderMenuContent()}\n      </md-menu>\n    </div>`;\n  }\n\n  private renderMenuContent() {\n    return html`<slot></slot>`;\n  }\n\n  /**\n   * Handles opening the select on keydown and typahead selection when the menu\n   * is closed.\n   */\n  private handleKeydown(event: KeyboardEvent) {\n    if (this.open || this.disabled || !this.menu) {\n      return;\n    }\n\n    const typeaheadController = this.menu.typeaheadController;\n    const isOpenKey =\n      event.code === 'Space' ||\n      event.code === 'ArrowDown' ||\n      event.code === 'ArrowUp' ||\n      event.code === 'End' ||\n      event.code === 'Home' ||\n      event.code === 'Enter';\n\n    // Do not open if currently typing ahead because the user may be typing the\n    // spacebar to match a word with a space\n    if (!typeaheadController.isTypingAhead && isOpenKey) {\n      event.preventDefault();\n      this.open = true;\n\n      // https://www.w3.org/WAI/ARIA/apg/patterns/combobox/examples/combobox-select-only/#kbd_label\n      switch (event.code) {\n        case 'Space':\n        case 'ArrowDown':\n        case 'Enter':\n          // We will handle focusing last selected item in this.handleOpening()\n          this.defaultFocus = FocusState.NONE;\n          break;\n        case 'End':\n          this.defaultFocus = FocusState.LAST_ITEM;\n          break;\n        case 'ArrowUp':\n        case 'Home':\n          this.defaultFocus = FocusState.FIRST_ITEM;\n          break;\n        default:\n          break;\n      }\n      return;\n    }\n\n    const isPrintableKey = event.key.length === 1;\n\n    // Handles typing ahead when the menu is closed by delegating the event to\n    // the underlying menu's typeaheadController\n    if (isPrintableKey) {\n      typeaheadController.onKeydown(event);\n      event.preventDefault();\n\n      const {lastActiveRecord} = typeaheadController;\n\n      if (!lastActiveRecord) {\n        return;\n      }\n\n      this.labelEl?.setAttribute?.('aria-live', 'polite');\n      const hasChanged = this.selectItem(\n        lastActiveRecord[TYPEAHEAD_RECORD.ITEM] as SelectOption,\n      );\n\n      if (hasChanged) {\n        this.dispatchInteractionEvents();\n      }\n    }\n  }\n\n  private handleClick() {\n    this.open = !this.open;\n  }\n\n  private handleFocus() {\n    this.focused = true;\n  }\n\n  private handleBlur() {\n    this.focused = false;\n  }\n\n  /**\n   * Handles closing the menu when the focus leaves the select's subtree.\n   */\n  private handleFocusout(event: FocusEvent) {\n    // Don't close the menu if we are switching focus between menu,\n    // select-option, and field\n    if (event.relatedTarget && isElementInSubtree(event.relatedTarget, this)) {\n      return;\n    }\n\n    this.open = false;\n  }\n\n  /**\n   * Gets a list of all selected select options as a list item record array.\n   *\n   * @return An array of selected list option records.\n   */\n  private getSelectedOptions() {\n    if (!this.menu) {\n      this.lastSelectedOptionRecords = [];\n      return null;\n    }\n\n    const items = this.menu.items as SelectOption[];\n    this.lastSelectedOptionRecords = getSelectedItems(items);\n    return this.lastSelectedOptionRecords;\n  }\n\n  override async getUpdateComplete() {\n    await this.menu?.updateComplete;\n    return super.getUpdateComplete();\n  }\n\n  /**\n   * Gets the selected options from the DOM, and updates the value and display\n   * text to the first selected option's value and headline respectively.\n   *\n   * @return Whether or not the selected option has changed since last update.\n   */\n  private updateValueAndDisplayText() {\n    const selectedOptions = this.getSelectedOptions() ?? [];\n    // Used to determine whether or not we need to fire an input / change event\n    // which fire whenever the option element changes (value or selectedIndex)\n    // on user interaction.\n    let hasSelectedOptionChanged = false;\n\n    if (selectedOptions.length) {\n      const [firstSelectedOption] = selectedOptions[0];\n      hasSelectedOptionChanged =\n        this.lastSelectedOption !== firstSelectedOption;\n      this.lastSelectedOption = firstSelectedOption;\n      this[VALUE] = firstSelectedOption.value;\n      this.displayText = firstSelectedOption.displayText;\n    } else {\n      hasSelectedOptionChanged = this.lastSelectedOption !== null;\n      this.lastSelectedOption = null;\n      this[VALUE] = '';\n      this.displayText = '';\n    }\n\n    return hasSelectedOptionChanged;\n  }\n\n  /**\n   * Focuses and activates the last selected item upon opening, and resets other\n   * active items.\n   */\n  private async handleOpening(e: Event) {\n    this.labelEl?.removeAttribute?.('aria-live');\n    this.redispatchEvent(e);\n\n    // FocusState.NONE means we want to handle focus ourselves and focus the\n    // last selected item.\n    if (this.defaultFocus !== FocusState.NONE) {\n      return;\n    }\n\n    const items = this.menu!.items as SelectOption[];\n    const activeItem = getActiveItem(items)?.item;\n    let [selectedItem] = this.lastSelectedOptionRecords[0] ?? [null];\n\n    // This is true if the user keys through the list but clicks out of the menu\n    // thus no close-menu event is fired by an item and we can't clean up in\n    // handleCloseMenu.\n    if (activeItem && activeItem !== selectedItem) {\n      activeItem.tabIndex = -1;\n    }\n\n    // in the case that nothing is selected, focus the first item\n    selectedItem = selectedItem ?? items[0];\n\n    if (selectedItem) {\n      selectedItem.tabIndex = 0;\n      selectedItem.focus();\n    }\n  }\n\n  private redispatchEvent(e: Event) {\n    redispatchEvent(this, e);\n  }\n\n  private handleClosed(e: Event) {\n    this.open = false;\n    this.redispatchEvent(e);\n  }\n\n  /**\n   * Determines the reason for closing, and updates the UI accordingly.\n   */\n  private handleCloseMenu(event: CloseMenuEvent) {\n    const reason = event.detail.reason;\n    const item = event.detail.itemPath[0] as SelectOption;\n    this.open = false;\n    let hasChanged = false;\n\n    if (reason.kind === 'click-selection') {\n      hasChanged = this.selectItem(item);\n    } else if (reason.kind === 'keydown' && isSelectableKey(reason.key)) {\n      hasChanged = this.selectItem(item);\n    } else {\n      // This can happen on ESC being pressed\n      item.tabIndex = -1;\n      item.blur();\n    }\n\n    // Dispatch interaction events since selection has been made via keyboard\n    // or mouse.\n    if (hasChanged) {\n      this.dispatchInteractionEvents();\n    }\n  }\n\n  /**\n   * Selects a given option, deselects other options, and updates the UI.\n   *\n   * @return Whether the last selected option has changed.\n   */\n  private selectItem(item: SelectOption) {\n    const selectedOptions = this.getSelectedOptions() ?? [];\n    selectedOptions.forEach(([option]) => {\n      if (item !== option) {\n        option.selected = false;\n      }\n    });\n    item.selected = true;\n\n    return this.updateValueAndDisplayText();\n  }\n\n  /**\n   * Handles updating selection when an option element requests selection via\n   * property / attribute change.\n   */\n  private handleRequestSelection(\n    event: ReturnType<typeof createRequestSelectionEvent>,\n  ) {\n    const requestingOptionEl = event.target as SelectOption & HTMLElement;\n\n    // No-op if this item is already selected.\n    if (\n      this.lastSelectedOptionRecords.some(\n        ([option]) => option === requestingOptionEl,\n      )\n    ) {\n      return;\n    }\n\n    this.selectItem(requestingOptionEl);\n  }\n\n  /**\n   * Handles updating selection when an option element requests deselection via\n   * property / attribute change.\n   */\n  private handleRequestDeselection(\n    event: ReturnType<typeof createRequestDeselectionEvent>,\n  ) {\n    const requestingOptionEl = event.target as SelectOption & HTMLElement;\n\n    // No-op if this item is not even in the list of tracked selected items.\n    if (\n      !this.lastSelectedOptionRecords.some(\n        ([option]) => option === requestingOptionEl,\n      )\n    ) {\n      return;\n    }\n\n    this.updateValueAndDisplayText();\n  }\n\n  /**\n   * Attempts to initialize the selected option from user-settable values like\n   * SSR, setting `value`, or `selectedIndex` at startup.\n   */\n  private initUserSelection() {\n    // User has set `.value` directly, but internals have not yet booted up.\n    if (this.lastUserSetValue && !this.lastSelectedOptionRecords.length) {\n      this.select(this.lastUserSetValue);\n\n      // User has set `.selectedIndex` directly, but internals have not yet\n      // booted up.\n    } else if (\n      this.lastUserSetSelectedIndex !== null &&\n      !this.lastSelectedOptionRecords.length\n    ) {\n      this.selectIndex(this.lastUserSetSelectedIndex);\n\n      // Regular boot up!\n    } else {\n      this.updateValueAndDisplayText();\n    }\n  }\n\n  private handleIconChange() {\n    this.hasLeadingIcon = this.leadingIcons.length > 0;\n  }\n\n  /**\n   * Dispatches the `input` and `change` events.\n   */\n  private dispatchInteractionEvents() {\n    this.dispatchEvent(new Event('input', {bubbles: true, composed: true}));\n    this.dispatchEvent(new Event('change', {bubbles: true}));\n  }\n\n  private getErrorText() {\n    return this.error ? this.errorText : this.nativeErrorText;\n  }\n\n  // Writable mixin properties for lit-html binding, needed for lit-analyzer\n  declare disabled: boolean;\n  declare name: string;\n\n  override [getFormValue]() {\n    return this.value;\n  }\n\n  override formResetCallback() {\n    this.reset();\n  }\n\n  override formStateRestoreCallback(state: string) {\n    this.value = state;\n  }\n\n  [createValidator]() {\n    return new SelectValidator(() => this);\n  }\n\n  [getValidityAnchor]() {\n    return this.field;\n  }\n}\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport '../../field/filled-field.js';\n\nimport {literal} from 'lit/static-html.js';\n\nimport {Select} from './select.js';\n\n// tslint:disable-next-line:enforce-comments-on-exported-symbols\nexport abstract class FilledSelect extends Select {\n  protected readonly fieldTag = literal`md-filled-field`;\n}\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./select/internal/filled-select-styles.css.\nimport {css} from 'lit';\nexport const styles = css`:host{--_text-field-active-indicator-color: var(--md-filled-select-text-field-active-indicator-color, var(--md-sys-color-on-surface-variant, #49454f));--_text-field-active-indicator-height: var(--md-filled-select-text-field-active-indicator-height, 1px);--_text-field-container-color: var(--md-filled-select-text-field-container-color, var(--md-sys-color-surface-container-highest, #e6e0e9));--_text-field-disabled-active-indicator-color: var(--md-filled-select-text-field-disabled-active-indicator-color, var(--md-sys-color-on-surface, #1d1b20));--_text-field-disabled-active-indicator-height: var(--md-filled-select-text-field-disabled-active-indicator-height, 1px);--_text-field-disabled-active-indicator-opacity: var(--md-filled-select-text-field-disabled-active-indicator-opacity, 0.38);--_text-field-disabled-container-color: var(--md-filled-select-text-field-disabled-container-color, var(--md-sys-color-on-surface, #1d1b20));--_text-field-disabled-container-opacity: var(--md-filled-select-text-field-disabled-container-opacity, 0.04);--_text-field-disabled-input-text-color: var(--md-filled-select-text-field-disabled-input-text-color, var(--md-sys-color-on-surface, #1d1b20));--_text-field-disabled-input-text-opacity: var(--md-filled-select-text-field-disabled-input-text-opacity, 0.38);--_text-field-disabled-label-text-color: var(--md-filled-select-text-field-disabled-label-text-color, var(--md-sys-color-on-surface, #1d1b20));--_text-field-disabled-label-text-opacity: var(--md-filled-select-text-field-disabled-label-text-opacity, 0.38);--_text-field-disabled-leading-icon-color: var(--md-filled-select-text-field-disabled-leading-icon-color, var(--md-sys-color-on-surface, #1d1b20));--_text-field-disabled-leading-icon-opacity: var(--md-filled-select-text-field-disabled-leading-icon-opacity, 0.38);--_text-field-disabled-supporting-text-color: var(--md-filled-select-text-field-disabled-supporting-text-color, var(--md-sys-color-on-surface, #1d1b20));--_text-field-disabled-supporting-text-opacity: var(--md-filled-select-text-field-disabled-supporting-text-opacity, 0.38);--_text-field-disabled-trailing-icon-color: var(--md-filled-select-text-field-disabled-trailing-icon-color, var(--md-sys-color-on-surface, #1d1b20));--_text-field-disabled-trailing-icon-opacity: var(--md-filled-select-text-field-disabled-trailing-icon-opacity, 0.38);--_text-field-error-active-indicator-color: var(--md-filled-select-text-field-error-active-indicator-color, var(--md-sys-color-error, #b3261e));--_text-field-error-focus-active-indicator-color: var(--md-filled-select-text-field-error-focus-active-indicator-color, var(--md-sys-color-error, #b3261e));--_text-field-error-focus-input-text-color: var(--md-filled-select-text-field-error-focus-input-text-color, var(--md-sys-color-on-surface, #1d1b20));--_text-field-error-focus-label-text-color: var(--md-filled-select-text-field-error-focus-label-text-color, var(--md-sys-color-error, #b3261e));--_text-field-error-focus-leading-icon-color: var(--md-filled-select-text-field-error-focus-leading-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_text-field-error-focus-supporting-text-color: var(--md-filled-select-text-field-error-focus-supporting-text-color, var(--md-sys-color-error, #b3261e));--_text-field-error-focus-trailing-icon-color: var(--md-filled-select-text-field-error-focus-trailing-icon-color, var(--md-sys-color-error, #b3261e));--_text-field-error-hover-active-indicator-color: var(--md-filled-select-text-field-error-hover-active-indicator-color, var(--md-sys-color-on-error-container, #410e0b));--_text-field-error-hover-input-text-color: var(--md-filled-select-text-field-error-hover-input-text-color, var(--md-sys-color-on-surface, #1d1b20));--_text-field-error-hover-label-text-color: var(--md-filled-select-text-field-error-hover-label-text-color, var(--md-sys-color-on-error-container, #410e0b));--_text-field-error-hover-leading-icon-color: var(--md-filled-select-text-field-error-hover-leading-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_text-field-error-hover-state-layer-color: var(--md-filled-select-text-field-error-hover-state-layer-color, var(--md-sys-color-on-surface, #1d1b20));--_text-field-error-hover-state-layer-opacity: var(--md-filled-select-text-field-error-hover-state-layer-opacity, 0.08);--_text-field-error-hover-supporting-text-color: var(--md-filled-select-text-field-error-hover-supporting-text-color, var(--md-sys-color-error, #b3261e));--_text-field-error-hover-trailing-icon-color: var(--md-filled-select-text-field-error-hover-trailing-icon-color, var(--md-sys-color-on-error-container, #410e0b));--_text-field-error-input-text-color: var(--md-filled-select-text-field-error-input-text-color, var(--md-sys-color-on-surface, #1d1b20));--_text-field-error-label-text-color: var(--md-filled-select-text-field-error-label-text-color, var(--md-sys-color-error, #b3261e));--_text-field-error-leading-icon-color: var(--md-filled-select-text-field-error-leading-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_text-field-error-supporting-text-color: var(--md-filled-select-text-field-error-supporting-text-color, var(--md-sys-color-error, #b3261e));--_text-field-error-trailing-icon-color: var(--md-filled-select-text-field-error-trailing-icon-color, var(--md-sys-color-error, #b3261e));--_text-field-focus-active-indicator-color: var(--md-filled-select-text-field-focus-active-indicator-color, var(--md-sys-color-primary, #6750a4));--_text-field-focus-active-indicator-height: var(--md-filled-select-text-field-focus-active-indicator-height, 3px);--_text-field-focus-input-text-color: var(--md-filled-select-text-field-focus-input-text-color, var(--md-sys-color-on-surface, #1d1b20));--_text-field-focus-label-text-color: var(--md-filled-select-text-field-focus-label-text-color, var(--md-sys-color-primary, #6750a4));--_text-field-focus-leading-icon-color: var(--md-filled-select-text-field-focus-leading-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_text-field-focus-supporting-text-color: var(--md-filled-select-text-field-focus-supporting-text-color, var(--md-sys-color-on-surface-variant, #49454f));--_text-field-focus-trailing-icon-color: var(--md-filled-select-text-field-focus-trailing-icon-color, var(--md-sys-color-primary, #6750a4));--_text-field-hover-active-indicator-color: var(--md-filled-select-text-field-hover-active-indicator-color, var(--md-sys-color-on-surface, #1d1b20));--_text-field-hover-active-indicator-height: var(--md-filled-select-text-field-hover-active-indicator-height, 1px);--_text-field-hover-input-text-color: var(--md-filled-select-text-field-hover-input-text-color, var(--md-sys-color-on-surface, #1d1b20));--_text-field-hover-label-text-color: var(--md-filled-select-text-field-hover-label-text-color, var(--md-sys-color-on-surface, #1d1b20));--_text-field-hover-leading-icon-color: var(--md-filled-select-text-field-hover-leading-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_text-field-hover-state-layer-color: var(--md-filled-select-text-field-hover-state-layer-color, var(--md-sys-color-on-surface, #1d1b20));--_text-field-hover-state-layer-opacity: var(--md-filled-select-text-field-hover-state-layer-opacity, 0.08);--_text-field-hover-supporting-text-color: var(--md-filled-select-text-field-hover-supporting-text-color, var(--md-sys-color-on-surface-variant, #49454f));--_text-field-hover-trailing-icon-color: var(--md-filled-select-text-field-hover-trailing-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_text-field-input-text-color: var(--md-filled-select-text-field-input-text-color, var(--md-sys-color-on-surface, #1d1b20));--_text-field-input-text-font: var(--md-filled-select-text-field-input-text-font, var(--md-sys-typescale-body-large-font, var(--md-ref-typeface-plain, Roboto)));--_text-field-input-text-line-height: var(--md-filled-select-text-field-input-text-line-height, var(--md-sys-typescale-body-large-line-height, 1.5rem));--_text-field-input-text-size: var(--md-filled-select-text-field-input-text-size, var(--md-sys-typescale-body-large-size, 1rem));--_text-field-input-text-weight: var(--md-filled-select-text-field-input-text-weight, var(--md-sys-typescale-body-large-weight, var(--md-ref-typeface-weight-regular, 400)));--_text-field-label-text-color: var(--md-filled-select-text-field-label-text-color, var(--md-sys-color-on-surface-variant, #49454f));--_text-field-label-text-font: var(--md-filled-select-text-field-label-text-font, var(--md-sys-typescale-body-large-font, var(--md-ref-typeface-plain, Roboto)));--_text-field-label-text-line-height: var(--md-filled-select-text-field-label-text-line-height, var(--md-sys-typescale-body-large-line-height, 1.5rem));--_text-field-label-text-populated-line-height: var(--md-filled-select-text-field-label-text-populated-line-height, var(--md-sys-typescale-body-small-line-height, 1rem));--_text-field-label-text-populated-size: var(--md-filled-select-text-field-label-text-populated-size, var(--md-sys-typescale-body-small-size, 0.75rem));--_text-field-label-text-size: var(--md-filled-select-text-field-label-text-size, var(--md-sys-typescale-body-large-size, 1rem));--_text-field-label-text-weight: var(--md-filled-select-text-field-label-text-weight, var(--md-sys-typescale-body-large-weight, var(--md-ref-typeface-weight-regular, 400)));--_text-field-leading-icon-color: var(--md-filled-select-text-field-leading-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_text-field-leading-icon-size: var(--md-filled-select-text-field-leading-icon-size, 24px);--_text-field-supporting-text-color: var(--md-filled-select-text-field-supporting-text-color, var(--md-sys-color-on-surface-variant, #49454f));--_text-field-supporting-text-font: var(--md-filled-select-text-field-supporting-text-font, var(--md-sys-typescale-body-small-font, var(--md-ref-typeface-plain, Roboto)));--_text-field-supporting-text-line-height: var(--md-filled-select-text-field-supporting-text-line-height, var(--md-sys-typescale-body-small-line-height, 1rem));--_text-field-supporting-text-size: var(--md-filled-select-text-field-supporting-text-size, var(--md-sys-typescale-body-small-size, 0.75rem));--_text-field-supporting-text-weight: var(--md-filled-select-text-field-supporting-text-weight, var(--md-sys-typescale-body-small-weight, var(--md-ref-typeface-weight-regular, 400)));--_text-field-trailing-icon-color: var(--md-filled-select-text-field-trailing-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_text-field-trailing-icon-size: var(--md-filled-select-text-field-trailing-icon-size, 24px);--_text-field-container-shape-start-start: var(--md-filled-select-text-field-container-shape-start-start, var(--md-filled-select-text-field-container-shape, var(--md-sys-shape-corner-extra-small, 4px)));--_text-field-container-shape-start-end: var(--md-filled-select-text-field-container-shape-start-end, var(--md-filled-select-text-field-container-shape, var(--md-sys-shape-corner-extra-small, 4px)));--_text-field-container-shape-end-end: var(--md-filled-select-text-field-container-shape-end-end, var(--md-filled-select-text-field-container-shape, var(--md-sys-shape-corner-none, 0px)));--_text-field-container-shape-end-start: var(--md-filled-select-text-field-container-shape-end-start, var(--md-filled-select-text-field-container-shape, var(--md-sys-shape-corner-none, 0px)));--md-filled-field-active-indicator-color: var(--_text-field-active-indicator-color);--md-filled-field-active-indicator-height: var(--_text-field-active-indicator-height);--md-filled-field-container-color: var(--_text-field-container-color);--md-filled-field-container-shape-end-end: var(--_text-field-container-shape-end-end);--md-filled-field-container-shape-end-start: var(--_text-field-container-shape-end-start);--md-filled-field-container-shape-start-end: var(--_text-field-container-shape-start-end);--md-filled-field-container-shape-start-start: var(--_text-field-container-shape-start-start);--md-filled-field-content-color: var(--_text-field-input-text-color);--md-filled-field-content-font: var(--_text-field-input-text-font);--md-filled-field-content-line-height: var(--_text-field-input-text-line-height);--md-filled-field-content-size: var(--_text-field-input-text-size);--md-filled-field-content-weight: var(--_text-field-input-text-weight);--md-filled-field-disabled-active-indicator-color: var(--_text-field-disabled-active-indicator-color);--md-filled-field-disabled-active-indicator-height: var(--_text-field-disabled-active-indicator-height);--md-filled-field-disabled-active-indicator-opacity: var(--_text-field-disabled-active-indicator-opacity);--md-filled-field-disabled-container-color: var(--_text-field-disabled-container-color);--md-filled-field-disabled-container-opacity: var(--_text-field-disabled-container-opacity);--md-filled-field-disabled-content-color: var(--_text-field-disabled-input-text-color);--md-filled-field-disabled-content-opacity: var(--_text-field-disabled-input-text-opacity);--md-filled-field-disabled-label-text-color: var(--_text-field-disabled-label-text-color);--md-filled-field-disabled-label-text-opacity: var(--_text-field-disabled-label-text-opacity);--md-filled-field-disabled-leading-content-color: var(--_text-field-disabled-leading-icon-color);--md-filled-field-disabled-leading-content-opacity: var(--_text-field-disabled-leading-icon-opacity);--md-filled-field-disabled-supporting-text-color: var(--_text-field-disabled-supporting-text-color);--md-filled-field-disabled-supporting-text-opacity: var(--_text-field-disabled-supporting-text-opacity);--md-filled-field-disabled-trailing-content-color: var(--_text-field-disabled-trailing-icon-color);--md-filled-field-disabled-trailing-content-opacity: var(--_text-field-disabled-trailing-icon-opacity);--md-filled-field-error-active-indicator-color: var(--_text-field-error-active-indicator-color);--md-filled-field-error-content-color: var(--_text-field-error-input-text-color);--md-filled-field-error-focus-active-indicator-color: var(--_text-field-error-focus-active-indicator-color);--md-filled-field-error-focus-content-color: var(--_text-field-error-focus-input-text-color);--md-filled-field-error-focus-label-text-color: var(--_text-field-error-focus-label-text-color);--md-filled-field-error-focus-leading-content-color: var(--_text-field-error-focus-leading-icon-color);--md-filled-field-error-focus-supporting-text-color: var(--_text-field-error-focus-supporting-text-color);--md-filled-field-error-focus-trailing-content-color: var(--_text-field-error-focus-trailing-icon-color);--md-filled-field-error-hover-active-indicator-color: var(--_text-field-error-hover-active-indicator-color);--md-filled-field-error-hover-content-color: var(--_text-field-error-hover-input-text-color);--md-filled-field-error-hover-label-text-color: var(--_text-field-error-hover-label-text-color);--md-filled-field-error-hover-leading-content-color: var(--_text-field-error-hover-leading-icon-color);--md-filled-field-error-hover-state-layer-color: var(--_text-field-error-hover-state-layer-color);--md-filled-field-error-hover-state-layer-opacity: var(--_text-field-error-hover-state-layer-opacity);--md-filled-field-error-hover-supporting-text-color: var(--_text-field-error-hover-supporting-text-color);--md-filled-field-error-hover-trailing-content-color: var(--_text-field-error-hover-trailing-icon-color);--md-filled-field-error-label-text-color: var(--_text-field-error-label-text-color);--md-filled-field-error-leading-content-color: var(--_text-field-error-leading-icon-color);--md-filled-field-error-supporting-text-color: var(--_text-field-error-supporting-text-color);--md-filled-field-error-trailing-content-color: var(--_text-field-error-trailing-icon-color);--md-filled-field-focus-active-indicator-color: var(--_text-field-focus-active-indicator-color);--md-filled-field-focus-active-indicator-height: var(--_text-field-focus-active-indicator-height);--md-filled-field-focus-content-color: var(--_text-field-focus-input-text-color);--md-filled-field-focus-label-text-color: var(--_text-field-focus-label-text-color);--md-filled-field-focus-leading-content-color: var(--_text-field-focus-leading-icon-color);--md-filled-field-focus-supporting-text-color: var(--_text-field-focus-supporting-text-color);--md-filled-field-focus-trailing-content-color: var(--_text-field-focus-trailing-icon-color);--md-filled-field-hover-active-indicator-color: var(--_text-field-hover-active-indicator-color);--md-filled-field-hover-active-indicator-height: var(--_text-field-hover-active-indicator-height);--md-filled-field-hover-content-color: var(--_text-field-hover-input-text-color);--md-filled-field-hover-label-text-color: var(--_text-field-hover-label-text-color);--md-filled-field-hover-leading-content-color: var(--_text-field-hover-leading-icon-color);--md-filled-field-hover-state-layer-color: var(--_text-field-hover-state-layer-color);--md-filled-field-hover-state-layer-opacity: var(--_text-field-hover-state-layer-opacity);--md-filled-field-hover-supporting-text-color: var(--_text-field-hover-supporting-text-color);--md-filled-field-hover-trailing-content-color: var(--_text-field-hover-trailing-icon-color);--md-filled-field-label-text-color: var(--_text-field-label-text-color);--md-filled-field-label-text-font: var(--_text-field-label-text-font);--md-filled-field-label-text-line-height: var(--_text-field-label-text-line-height);--md-filled-field-label-text-populated-line-height: var(--_text-field-label-text-populated-line-height);--md-filled-field-label-text-populated-size: var(--_text-field-label-text-populated-size);--md-filled-field-label-text-size: var(--_text-field-label-text-size);--md-filled-field-label-text-weight: var(--_text-field-label-text-weight);--md-filled-field-leading-content-color: var(--_text-field-leading-icon-color);--md-filled-field-supporting-text-color: var(--_text-field-supporting-text-color);--md-filled-field-supporting-text-font: var(--_text-field-supporting-text-font);--md-filled-field-supporting-text-line-height: var(--_text-field-supporting-text-line-height);--md-filled-field-supporting-text-size: var(--_text-field-supporting-text-size);--md-filled-field-supporting-text-weight: var(--_text-field-supporting-text-weight);--md-filled-field-trailing-content-color: var(--_text-field-trailing-icon-color)}[has-start] .icon.leading{font-size:var(--_text-field-leading-icon-size);height:var(--_text-field-leading-icon-size);width:var(--_text-field-leading-icon-size)}.icon.trailing{font-size:var(--_text-field-trailing-icon-size);height:var(--_text-field-trailing-icon-size);width:var(--_text-field-trailing-icon-size)}\n`;\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./select/internal/shared-styles.css.\nimport {css} from 'lit';\nexport const styles = css`:host{color:unset;min-width:210px;display:flex}.field{cursor:default;outline:none}.select{position:relative;flex-direction:column}.icon.trailing svg,.icon ::slotted(*){fill:currentColor}.icon ::slotted(*){width:inherit;height:inherit;font-size:inherit}.icon slot{display:flex;height:100%;width:100%;align-items:center;justify-content:center}.icon.trailing :is(.up,.down){opacity:0;transition:opacity 75ms linear 75ms}.select:not(.open) .down,.select.open .up{opacity:1}.field,.select,md-menu{min-width:inherit;width:inherit;max-width:inherit;display:flex}md-menu{min-width:var(--__menu-min-width);max-width:var(--__menu-max-width, inherit)}.menu-wrapper{width:0px;height:0px;max-width:inherit}md-menu ::slotted(:not[disabled]){cursor:pointer}.field,.select{width:100%}:host{display:inline-flex}:host([disabled]){pointer-events:none}\n`;\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {CSSResultOrNative} from 'lit';\nimport {customElement} from 'lit/decorators.js';\n\nimport {FilledSelect} from './internal/filled-select.js';\nimport {styles} from './internal/filled-select-styles.js';\nimport {styles as sharedStyles} from './internal/shared-styles.js';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'md-filled-select': MdFilledSelect;\n  }\n}\n\n/**\n * @summary\n * Select menus display a list of choices on temporary surfaces and display the\n * currently selected menu item above the menu.\n *\n * @description\n * The select component allows users to choose a value from a fixed list of\n * available options. Composed of an interactive anchor button and a menu, it is\n * analogous to the native HTML `<select>` element. This is the \"filled\"\n * variant.\n *\n * @example\n * ```html\n * <md-filled-select label=\"fruits\">\n *   <!-- An empty selected option will give select an \"un-filled\" state -->\n *   <md-select-option selected></md-select-option>\n *   <md-select-option value=\"apple\" headline=\"Apple\"></md-select-option>\n *   <md-select-option value=\"banana\" headline=\"Banana\"></md-select-option>\n *   <md-select-option value=\"kiwi\" headline=\"Kiwi\"></md-select-option>\n *   <md-select-option value=\"orange\" headline=\"Orange\"></md-select-option>\n *   <md-select-option value=\"tomato\" headline=\"Tomato\"></md-select-option>\n * </md-filled-select>\n * ```\n *\n * @final\n * @suppress {visibility}\n */\n@customElement('md-filled-select')\nexport class MdFilledSelect extends FilledSelect {\n  static override styles: CSSResultOrNative[] = [sharedStyles, styles];\n}\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport '../../field/outlined-field.js';\n\nimport {literal} from 'lit/static-html.js';\n\nimport {Select} from './select.js';\n\n// tslint:disable-next-line:enforce-comments-on-exported-symbols\nexport abstract class OutlinedSelect extends Select {\n  protected readonly fieldTag = literal`md-outlined-field`;\n}\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./select/internal/outlined-select-styles.css.\nimport {css} from 'lit';\nexport const styles = css`:host{--_text-field-disabled-input-text-color: var(--md-outlined-select-text-field-disabled-input-text-color, var(--md-sys-color-on-surface, #1d1b20));--_text-field-disabled-input-text-opacity: var(--md-outlined-select-text-field-disabled-input-text-opacity, 0.38);--_text-field-disabled-label-text-color: var(--md-outlined-select-text-field-disabled-label-text-color, var(--md-sys-color-on-surface, #1d1b20));--_text-field-disabled-label-text-opacity: var(--md-outlined-select-text-field-disabled-label-text-opacity, 0.38);--_text-field-disabled-leading-icon-color: var(--md-outlined-select-text-field-disabled-leading-icon-color, var(--md-sys-color-on-surface, #1d1b20));--_text-field-disabled-leading-icon-opacity: var(--md-outlined-select-text-field-disabled-leading-icon-opacity, 0.38);--_text-field-disabled-outline-color: var(--md-outlined-select-text-field-disabled-outline-color, var(--md-sys-color-on-surface, #1d1b20));--_text-field-disabled-outline-opacity: var(--md-outlined-select-text-field-disabled-outline-opacity, 0.12);--_text-field-disabled-outline-width: var(--md-outlined-select-text-field-disabled-outline-width, 1px);--_text-field-disabled-supporting-text-color: var(--md-outlined-select-text-field-disabled-supporting-text-color, var(--md-sys-color-on-surface, #1d1b20));--_text-field-disabled-supporting-text-opacity: var(--md-outlined-select-text-field-disabled-supporting-text-opacity, 0.38);--_text-field-disabled-trailing-icon-color: var(--md-outlined-select-text-field-disabled-trailing-icon-color, var(--md-sys-color-on-surface, #1d1b20));--_text-field-disabled-trailing-icon-opacity: var(--md-outlined-select-text-field-disabled-trailing-icon-opacity, 0.38);--_text-field-error-focus-input-text-color: var(--md-outlined-select-text-field-error-focus-input-text-color, var(--md-sys-color-on-surface, #1d1b20));--_text-field-error-focus-label-text-color: var(--md-outlined-select-text-field-error-focus-label-text-color, var(--md-sys-color-error, #b3261e));--_text-field-error-focus-leading-icon-color: var(--md-outlined-select-text-field-error-focus-leading-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_text-field-error-focus-outline-color: var(--md-outlined-select-text-field-error-focus-outline-color, var(--md-sys-color-error, #b3261e));--_text-field-error-focus-supporting-text-color: var(--md-outlined-select-text-field-error-focus-supporting-text-color, var(--md-sys-color-error, #b3261e));--_text-field-error-focus-trailing-icon-color: var(--md-outlined-select-text-field-error-focus-trailing-icon-color, var(--md-sys-color-error, #b3261e));--_text-field-error-hover-input-text-color: var(--md-outlined-select-text-field-error-hover-input-text-color, var(--md-sys-color-on-surface, #1d1b20));--_text-field-error-hover-label-text-color: var(--md-outlined-select-text-field-error-hover-label-text-color, var(--md-sys-color-on-error-container, #410e0b));--_text-field-error-hover-leading-icon-color: var(--md-outlined-select-text-field-error-hover-leading-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_text-field-error-hover-outline-color: var(--md-outlined-select-text-field-error-hover-outline-color, var(--md-sys-color-on-error-container, #410e0b));--_text-field-error-hover-supporting-text-color: var(--md-outlined-select-text-field-error-hover-supporting-text-color, var(--md-sys-color-error, #b3261e));--_text-field-error-hover-trailing-icon-color: var(--md-outlined-select-text-field-error-hover-trailing-icon-color, var(--md-sys-color-on-error-container, #410e0b));--_text-field-error-input-text-color: var(--md-outlined-select-text-field-error-input-text-color, var(--md-sys-color-on-surface, #1d1b20));--_text-field-error-label-text-color: var(--md-outlined-select-text-field-error-label-text-color, var(--md-sys-color-error, #b3261e));--_text-field-error-leading-icon-color: var(--md-outlined-select-text-field-error-leading-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_text-field-error-outline-color: var(--md-outlined-select-text-field-error-outline-color, var(--md-sys-color-error, #b3261e));--_text-field-error-supporting-text-color: var(--md-outlined-select-text-field-error-supporting-text-color, var(--md-sys-color-error, #b3261e));--_text-field-error-trailing-icon-color: var(--md-outlined-select-text-field-error-trailing-icon-color, var(--md-sys-color-error, #b3261e));--_text-field-focus-input-text-color: var(--md-outlined-select-text-field-focus-input-text-color, var(--md-sys-color-on-surface, #1d1b20));--_text-field-focus-label-text-color: var(--md-outlined-select-text-field-focus-label-text-color, var(--md-sys-color-primary, #6750a4));--_text-field-focus-leading-icon-color: var(--md-outlined-select-text-field-focus-leading-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_text-field-focus-outline-color: var(--md-outlined-select-text-field-focus-outline-color, var(--md-sys-color-primary, #6750a4));--_text-field-focus-outline-width: var(--md-outlined-select-text-field-focus-outline-width, 3px);--_text-field-focus-supporting-text-color: var(--md-outlined-select-text-field-focus-supporting-text-color, var(--md-sys-color-on-surface-variant, #49454f));--_text-field-focus-trailing-icon-color: var(--md-outlined-select-text-field-focus-trailing-icon-color, var(--md-sys-color-primary, #6750a4));--_text-field-hover-input-text-color: var(--md-outlined-select-text-field-hover-input-text-color, var(--md-sys-color-on-surface, #1d1b20));--_text-field-hover-label-text-color: var(--md-outlined-select-text-field-hover-label-text-color, var(--md-sys-color-on-surface, #1d1b20));--_text-field-hover-leading-icon-color: var(--md-outlined-select-text-field-hover-leading-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_text-field-hover-outline-color: var(--md-outlined-select-text-field-hover-outline-color, var(--md-sys-color-on-surface, #1d1b20));--_text-field-hover-outline-width: var(--md-outlined-select-text-field-hover-outline-width, 1px);--_text-field-hover-supporting-text-color: var(--md-outlined-select-text-field-hover-supporting-text-color, var(--md-sys-color-on-surface-variant, #49454f));--_text-field-hover-trailing-icon-color: var(--md-outlined-select-text-field-hover-trailing-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_text-field-input-text-color: var(--md-outlined-select-text-field-input-text-color, var(--md-sys-color-on-surface, #1d1b20));--_text-field-input-text-font: var(--md-outlined-select-text-field-input-text-font, var(--md-sys-typescale-body-large-font, var(--md-ref-typeface-plain, Roboto)));--_text-field-input-text-line-height: var(--md-outlined-select-text-field-input-text-line-height, var(--md-sys-typescale-body-large-line-height, 1.5rem));--_text-field-input-text-size: var(--md-outlined-select-text-field-input-text-size, var(--md-sys-typescale-body-large-size, 1rem));--_text-field-input-text-weight: var(--md-outlined-select-text-field-input-text-weight, var(--md-sys-typescale-body-large-weight, var(--md-ref-typeface-weight-regular, 400)));--_text-field-label-text-color: var(--md-outlined-select-text-field-label-text-color, var(--md-sys-color-on-surface-variant, #49454f));--_text-field-label-text-font: var(--md-outlined-select-text-field-label-text-font, var(--md-sys-typescale-body-large-font, var(--md-ref-typeface-plain, Roboto)));--_text-field-label-text-line-height: var(--md-outlined-select-text-field-label-text-line-height, var(--md-sys-typescale-body-large-line-height, 1.5rem));--_text-field-label-text-populated-line-height: var(--md-outlined-select-text-field-label-text-populated-line-height, var(--md-sys-typescale-body-small-line-height, 1rem));--_text-field-label-text-populated-size: var(--md-outlined-select-text-field-label-text-populated-size, var(--md-sys-typescale-body-small-size, 0.75rem));--_text-field-label-text-size: var(--md-outlined-select-text-field-label-text-size, var(--md-sys-typescale-body-large-size, 1rem));--_text-field-label-text-weight: var(--md-outlined-select-text-field-label-text-weight, var(--md-sys-typescale-body-large-weight, var(--md-ref-typeface-weight-regular, 400)));--_text-field-leading-icon-color: var(--md-outlined-select-text-field-leading-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_text-field-leading-icon-size: var(--md-outlined-select-text-field-leading-icon-size, 24px);--_text-field-outline-color: var(--md-outlined-select-text-field-outline-color, var(--md-sys-color-outline, #79747e));--_text-field-outline-width: var(--md-outlined-select-text-field-outline-width, 1px);--_text-field-supporting-text-color: var(--md-outlined-select-text-field-supporting-text-color, var(--md-sys-color-on-surface-variant, #49454f));--_text-field-supporting-text-font: var(--md-outlined-select-text-field-supporting-text-font, var(--md-sys-typescale-body-small-font, var(--md-ref-typeface-plain, Roboto)));--_text-field-supporting-text-line-height: var(--md-outlined-select-text-field-supporting-text-line-height, var(--md-sys-typescale-body-small-line-height, 1rem));--_text-field-supporting-text-size: var(--md-outlined-select-text-field-supporting-text-size, var(--md-sys-typescale-body-small-size, 0.75rem));--_text-field-supporting-text-weight: var(--md-outlined-select-text-field-supporting-text-weight, var(--md-sys-typescale-body-small-weight, var(--md-ref-typeface-weight-regular, 400)));--_text-field-trailing-icon-color: var(--md-outlined-select-text-field-trailing-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_text-field-trailing-icon-size: var(--md-outlined-select-text-field-trailing-icon-size, 24px);--_text-field-container-shape-start-start: var(--md-outlined-select-text-field-container-shape-start-start, var(--md-outlined-select-text-field-container-shape, var(--md-sys-shape-corner-extra-small, 4px)));--_text-field-container-shape-start-end: var(--md-outlined-select-text-field-container-shape-start-end, var(--md-outlined-select-text-field-container-shape, var(--md-sys-shape-corner-extra-small, 4px)));--_text-field-container-shape-end-end: var(--md-outlined-select-text-field-container-shape-end-end, var(--md-outlined-select-text-field-container-shape, var(--md-sys-shape-corner-extra-small, 4px)));--_text-field-container-shape-end-start: var(--md-outlined-select-text-field-container-shape-end-start, var(--md-outlined-select-text-field-container-shape, var(--md-sys-shape-corner-extra-small, 4px)));--md-outlined-field-container-shape-end-end: var(--_text-field-container-shape-end-end);--md-outlined-field-container-shape-end-start: var(--_text-field-container-shape-end-start);--md-outlined-field-container-shape-start-end: var(--_text-field-container-shape-start-end);--md-outlined-field-container-shape-start-start: var(--_text-field-container-shape-start-start);--md-outlined-field-content-color: var(--_text-field-input-text-color);--md-outlined-field-content-font: var(--_text-field-input-text-font);--md-outlined-field-content-line-height: var(--_text-field-input-text-line-height);--md-outlined-field-content-size: var(--_text-field-input-text-size);--md-outlined-field-content-weight: var(--_text-field-input-text-weight);--md-outlined-field-disabled-content-color: var(--_text-field-disabled-input-text-color);--md-outlined-field-disabled-content-opacity: var(--_text-field-disabled-input-text-opacity);--md-outlined-field-disabled-label-text-color: var(--_text-field-disabled-label-text-color);--md-outlined-field-disabled-label-text-opacity: var(--_text-field-disabled-label-text-opacity);--md-outlined-field-disabled-leading-content-color: var(--_text-field-disabled-leading-icon-color);--md-outlined-field-disabled-leading-content-opacity: var(--_text-field-disabled-leading-icon-opacity);--md-outlined-field-disabled-outline-color: var(--_text-field-disabled-outline-color);--md-outlined-field-disabled-outline-opacity: var(--_text-field-disabled-outline-opacity);--md-outlined-field-disabled-outline-width: var(--_text-field-disabled-outline-width);--md-outlined-field-disabled-supporting-text-color: var(--_text-field-disabled-supporting-text-color);--md-outlined-field-disabled-supporting-text-opacity: var(--_text-field-disabled-supporting-text-opacity);--md-outlined-field-disabled-trailing-content-color: var(--_text-field-disabled-trailing-icon-color);--md-outlined-field-disabled-trailing-content-opacity: var(--_text-field-disabled-trailing-icon-opacity);--md-outlined-field-error-content-color: var(--_text-field-error-input-text-color);--md-outlined-field-error-focus-content-color: var(--_text-field-error-focus-input-text-color);--md-outlined-field-error-focus-label-text-color: var(--_text-field-error-focus-label-text-color);--md-outlined-field-error-focus-leading-content-color: var(--_text-field-error-focus-leading-icon-color);--md-outlined-field-error-focus-outline-color: var(--_text-field-error-focus-outline-color);--md-outlined-field-error-focus-supporting-text-color: var(--_text-field-error-focus-supporting-text-color);--md-outlined-field-error-focus-trailing-content-color: var(--_text-field-error-focus-trailing-icon-color);--md-outlined-field-error-hover-content-color: var(--_text-field-error-hover-input-text-color);--md-outlined-field-error-hover-label-text-color: var(--_text-field-error-hover-label-text-color);--md-outlined-field-error-hover-leading-content-color: var(--_text-field-error-hover-leading-icon-color);--md-outlined-field-error-hover-outline-color: var(--_text-field-error-hover-outline-color);--md-outlined-field-error-hover-supporting-text-color: var(--_text-field-error-hover-supporting-text-color);--md-outlined-field-error-hover-trailing-content-color: var(--_text-field-error-hover-trailing-icon-color);--md-outlined-field-error-label-text-color: var(--_text-field-error-label-text-color);--md-outlined-field-error-leading-content-color: var(--_text-field-error-leading-icon-color);--md-outlined-field-error-outline-color: var(--_text-field-error-outline-color);--md-outlined-field-error-supporting-text-color: var(--_text-field-error-supporting-text-color);--md-outlined-field-error-trailing-content-color: var(--_text-field-error-trailing-icon-color);--md-outlined-field-focus-content-color: var(--_text-field-focus-input-text-color);--md-outlined-field-focus-label-text-color: var(--_text-field-focus-label-text-color);--md-outlined-field-focus-leading-content-color: var(--_text-field-focus-leading-icon-color);--md-outlined-field-focus-outline-color: var(--_text-field-focus-outline-color);--md-outlined-field-focus-outline-width: var(--_text-field-focus-outline-width);--md-outlined-field-focus-supporting-text-color: var(--_text-field-focus-supporting-text-color);--md-outlined-field-focus-trailing-content-color: var(--_text-field-focus-trailing-icon-color);--md-outlined-field-hover-content-color: var(--_text-field-hover-input-text-color);--md-outlined-field-hover-label-text-color: var(--_text-field-hover-label-text-color);--md-outlined-field-hover-leading-content-color: var(--_text-field-hover-leading-icon-color);--md-outlined-field-hover-outline-color: var(--_text-field-hover-outline-color);--md-outlined-field-hover-outline-width: var(--_text-field-hover-outline-width);--md-outlined-field-hover-supporting-text-color: var(--_text-field-hover-supporting-text-color);--md-outlined-field-hover-trailing-content-color: var(--_text-field-hover-trailing-icon-color);--md-outlined-field-label-text-color: var(--_text-field-label-text-color);--md-outlined-field-label-text-font: var(--_text-field-label-text-font);--md-outlined-field-label-text-line-height: var(--_text-field-label-text-line-height);--md-outlined-field-label-text-populated-line-height: var(--_text-field-label-text-populated-line-height);--md-outlined-field-label-text-populated-size: var(--_text-field-label-text-populated-size);--md-outlined-field-label-text-size: var(--_text-field-label-text-size);--md-outlined-field-label-text-weight: var(--_text-field-label-text-weight);--md-outlined-field-leading-content-color: var(--_text-field-leading-icon-color);--md-outlined-field-outline-color: var(--_text-field-outline-color);--md-outlined-field-outline-width: var(--_text-field-outline-width);--md-outlined-field-supporting-text-color: var(--_text-field-supporting-text-color);--md-outlined-field-supporting-text-font: var(--_text-field-supporting-text-font);--md-outlined-field-supporting-text-line-height: var(--_text-field-supporting-text-line-height);--md-outlined-field-supporting-text-size: var(--_text-field-supporting-text-size);--md-outlined-field-supporting-text-weight: var(--_text-field-supporting-text-weight);--md-outlined-field-trailing-content-color: var(--_text-field-trailing-icon-color)}[has-start] .icon.leading{font-size:var(--_text-field-leading-icon-size);height:var(--_text-field-leading-icon-size);width:var(--_text-field-leading-icon-size)}.icon.trailing{font-size:var(--_text-field-trailing-icon-size);height:var(--_text-field-trailing-icon-size);width:var(--_text-field-trailing-icon-size)}\n`;\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {CSSResultOrNative} from 'lit';\nimport {customElement} from 'lit/decorators.js';\n\nimport {OutlinedSelect} from './internal/outlined-select.js';\nimport {styles} from './internal/outlined-select-styles.js';\nimport {styles as sharedStyles} from './internal/shared-styles.js';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'md-outlined-select': MdOutlinedSelect;\n  }\n}\n\n/**\n * @summary\n * Select menus display a list of choices on temporary surfaces and display the\n * currently selected menu item above the menu.\n *\n * @description\n * The select component allows users to choose a value from a fixed list of\n * available options. Composed of an interactive anchor button and a menu, it is\n * analogous to the native HTML `<select>` element. This is the \"outlined\"\n * variant.\n *\n * @example\n * ```html\n * <md-outlined-select label=\"fruits\">\n *   <!-- An empty selected option will give select an \"un-filled\" state -->\n *   <md-select-option selected></md-select-option>\n *   <md-select-option value=\"apple\" headline=\"Apple\"></md-select-option>\n *   <md-select-option value=\"banana\" headline=\"Banana\"></md-select-option>\n *   <md-select-option value=\"kiwi\" headline=\"Kiwi\"></md-select-option>\n *   <md-select-option value=\"orange\" headline=\"Orange\"></md-select-option>\n *   <md-select-option value=\"tomato\" headline=\"Tomato\"></md-select-option>\n * </md-outlined-select>\n * ```\n *\n * @final\n * @suppress {visibility}\n */\n@customElement('md-outlined-select')\nexport class MdOutlinedSelect extends OutlinedSelect {\n  static override styles: CSSResultOrNative[] = [sharedStyles, styles];\n}\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {ReactiveController, ReactiveControllerHost} from 'lit';\n\nimport {\n  MenuItemController,\n  MenuItemControllerConfig,\n} from '../../../menu/internal/controllers/menuItemController.js';\nimport {SelectOption} from './select-option.js';\n\n/**\n * Creates an event fired by a SelectOption to request selection from md-select.\n * Typically fired after `selected` changes from `false` to `true`.\n */\nexport function createRequestSelectionEvent() {\n  return new Event('request-selection', {\n    bubbles: true,\n    composed: true,\n  });\n}\n\n/**\n * Creates an event fired by a SelectOption to request deselection from\n * md-select. Typically fired after `selected` changes from `true` to `false`.\n */\nexport function createRequestDeselectionEvent() {\n  return new Event('request-deselection', {\n    bubbles: true,\n    composed: true,\n  });\n}\n\n/**\n * The options used to inialize SelectOptionController.\n */\nexport type SelectOptionConfig = MenuItemControllerConfig;\n\n/**\n * A controller that provides most functionality and md-select compatibility for\n * an element that implements the SelectOption interface.\n */\nexport class SelectOptionController implements ReactiveController {\n  private readonly menuItemController: MenuItemController;\n  private internalDisplayText: string | null = null;\n  private lastSelected = this.host.selected;\n  private firstUpdate = true;\n\n  /**\n   * The recommended role of the select option.\n   */\n  get role() {\n    return this.menuItemController.role;\n  }\n\n  /**\n   * The text that is selectable via typeahead. If not set, defaults to the\n   * innerText of the item slotted into the `\"headline\"` slot, and if there are\n   * no slotted elements into headline, then it checks the _default_ slot, and\n   * then the `\"supporting-text\"` slot if nothing is in _default_.\n   */\n  get typeaheadText() {\n    return this.menuItemController.typeaheadText;\n  }\n\n  setTypeaheadText(text: string) {\n    this.menuItemController.setTypeaheadText(text);\n  }\n\n  /**\n   * The text that is displayed in the select field when selected. If not set,\n   * defaults to the textContent of the item slotted into the `\"headline\"` slot,\n   * and if there are no slotted elements into headline, then it checks the\n   * _default_ slot, and then the `\"supporting-text\"` slot if nothing is in\n   * _default_.\n   */\n  get displayText() {\n    if (this.internalDisplayText !== null) {\n      return this.internalDisplayText;\n    }\n\n    return this.menuItemController.typeaheadText;\n  }\n\n  setDisplayText(text: string) {\n    this.internalDisplayText = text;\n  }\n\n  /**\n   * @param host The SelectOption in which to attach this controller to.\n   * @param config The object that configures this controller's behavior.\n   */\n  constructor(\n    private readonly host: ReactiveControllerHost & SelectOption,\n    config: SelectOptionConfig,\n  ) {\n    this.menuItemController = new MenuItemController(host, config);\n    host.addController(this);\n  }\n\n  hostUpdate() {\n    if (this.lastSelected !== this.host.selected) {\n      this.host.ariaSelected = this.host.selected ? 'true' : 'false';\n    }\n  }\n\n  hostUpdated() {\n    // Do not dispatch event on first update / boot-up.\n    if (this.lastSelected !== this.host.selected && !this.firstUpdate) {\n      // This section is really useful for when the user sets selected on the\n      // option programmatically. Most other cases (click and keyboard) are\n      // handled by md-select because it needs to coordinate the\n      // single-selection behavior.\n      if (this.host.selected) {\n        this.host.dispatchEvent(createRequestSelectionEvent());\n      } else {\n        this.host.dispatchEvent(createRequestDeselectionEvent());\n      }\n    }\n\n    this.lastSelected = this.host.selected;\n    this.firstUpdate = false;\n  }\n\n  /**\n   * Bind this click listener to the interactive element. Handles closing the\n   * menu.\n   */\n  onClick = () => {\n    this.menuItemController.onClick();\n  };\n\n  /**\n   * Bind this click listener to the interactive element. Handles closing the\n   * menu.\n   */\n  onKeydown = (e: KeyboardEvent) => {\n    this.menuItemController.onKeydown(e);\n  };\n}\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport '../../../focus/md-focus-ring.js';\nimport '../../../labs/item/item.js';\nimport '../../../ripple/ripple.js';\n\nimport {html, LitElement, nothing} from 'lit';\nimport {\n  property,\n  query,\n  queryAssignedElements,\n  queryAssignedNodes,\n} from 'lit/decorators.js';\nimport {ClassInfo, classMap} from 'lit/directives/class-map.js';\n\nimport {ARIAMixinStrict} from '../../../internal/aria/aria.js';\nimport {requestUpdateOnAriaChange} from '../../../internal/aria/delegate.js';\nimport {MenuItem} from '../../../menu/internal/controllers/menuItemController.js';\n\nimport {SelectOptionController} from './selectOptionController.js';\n\n/**\n * The interface specific to a Select Option\n */\ninterface SelectOptionSelf {\n  /**\n   * The form value associated with the Select Option. (Note: the visual portion\n   * of the SelectOption is the headline defined in ListItem)\n   */\n  value: string;\n  /**\n   * Whether or not the SelectOption is selected.\n   */\n  selected: boolean;\n  /**\n   * The text to display in the select when selected. Defaults to the\n   * textContent of the Element slotted into the headline.\n   */\n  displayText: string;\n}\n\n/**\n * The interface to implement for a select option. Additionally, the element\n * must have `md-list-item` and `md-menu-item` attributes on the host.\n */\nexport type SelectOption = SelectOptionSelf & MenuItem;\n\n/**\n * @fires close-menu {CustomEvent<{initiator: SelectOption, reason: Reason, itemPath: SelectOption[]}>}\n * Closes the encapsulating menu on closable interaction. --bubbles --composed\n * @fires request-selection {Event} Requests the parent md-select to select this\n * element (and deselect others if single-selection) when `selected` changed to\n * `true`. --bubbles --composed\n * @fires request-deselection {Event} Requests the parent md-select to deselect\n * this element when `selected` changed to `false`. --bubbles --composed\n */\nexport class SelectOptionEl extends LitElement implements SelectOption {\n  static {\n    requestUpdateOnAriaChange(SelectOptionEl);\n  }\n\n  /** @nocollapse */\n  static override shadowRootOptions = {\n    ...LitElement.shadowRootOptions,\n    delegatesFocus: true,\n  };\n\n  /**\n   * Disables the item and makes it non-selectable and non-interactive.\n   */\n  @property({type: Boolean, reflect: true}) disabled = false;\n\n  /**\n   * READONLY: self-identifies as a menu item and sets its identifying attribute\n   */\n  @property({type: Boolean, attribute: 'md-menu-item', reflect: true})\n  isMenuItem = true;\n\n  /**\n   * Sets the item in the selected visual state when a submenu is opened.\n   */\n  @property({type: Boolean}) selected = false;\n  /**\n   * Form value of the option.\n   */\n  @property() value = '';\n\n  @query('.list-item') protected readonly listItemRoot!: HTMLElement | null;\n\n  @queryAssignedElements({slot: 'headline'})\n  protected readonly headlineElements!: HTMLElement[];\n  @queryAssignedElements({slot: 'supporting-text'})\n  protected readonly supportingTextElements!: HTMLElement[];\n  @queryAssignedNodes({slot: ''})\n  protected readonly defaultElements!: Element[];\n\n  type = 'option' as const;\n\n  /**\n   * The text that is selectable via typeahead. If not set, defaults to the\n   * innerText of the item slotted into the `\"headline\"` slot.\n   */\n  get typeaheadText() {\n    return this.selectOptionController.typeaheadText;\n  }\n\n  @property({attribute: 'typeahead-text'})\n  set typeaheadText(text: string) {\n    this.selectOptionController.setTypeaheadText(text);\n  }\n\n  /**\n   * The text that is displayed in the select field when selected. If not set,\n   * defaults to the textContent of the item slotted into the `\"headline\"` slot.\n   */\n  get displayText() {\n    return this.selectOptionController.displayText;\n  }\n\n  @property({attribute: 'display-text'})\n  set displayText(text: string) {\n    this.selectOptionController.setDisplayText(text);\n  }\n\n  private readonly selectOptionController = new SelectOptionController(this, {\n    getHeadlineElements: () => {\n      return this.headlineElements;\n    },\n    getSupportingTextElements: () => {\n      return this.supportingTextElements;\n    },\n    getDefaultElements: () => {\n      return this.defaultElements;\n    },\n    getInteractiveElement: () => this.listItemRoot,\n  });\n\n  protected override render() {\n    return this.renderListItem(html`\n      <md-item>\n        <div slot=\"container\">\n          ${this.renderRipple()} ${this.renderFocusRing()}\n        </div>\n        <slot name=\"start\" slot=\"start\"></slot>\n        <slot name=\"end\" slot=\"end\"></slot>\n        ${this.renderBody()}\n      </md-item>\n    `);\n  }\n\n  /**\n   * Renders the root list item.\n   *\n   * @param content the child content of the list item.\n   */\n  protected renderListItem(content: unknown) {\n    return html`\n      <li\n        id=\"item\"\n        tabindex=${this.disabled ? -1 : 0}\n        role=${this.selectOptionController.role}\n        aria-label=${(this as ARIAMixinStrict).ariaLabel || nothing}\n        aria-selected=${(this as ARIAMixinStrict).ariaSelected || nothing}\n        aria-checked=${(this as ARIAMixinStrict).ariaChecked || nothing}\n        aria-expanded=${(this as ARIAMixinStrict).ariaExpanded || nothing}\n        aria-haspopup=${(this as ARIAMixinStrict).ariaHasPopup || nothing}\n        class=\"list-item ${classMap(this.getRenderClasses())}\"\n        @click=${this.selectOptionController.onClick}\n        @keydown=${this.selectOptionController.onKeydown}\n        >${content}</li\n      >\n    `;\n  }\n\n  /**\n   * Handles rendering of the ripple element.\n   */\n  protected renderRipple() {\n    return html` <md-ripple\n      part=\"ripple\"\n      for=\"item\"\n      ?disabled=${this.disabled}></md-ripple>`;\n  }\n\n  /**\n   * Handles rendering of the focus ring.\n   */\n  protected renderFocusRing() {\n    return html` <md-focus-ring\n      part=\"focus-ring\"\n      for=\"item\"\n      inward></md-focus-ring>`;\n  }\n\n  /**\n   * Classes applied to the list item root.\n   */\n  protected getRenderClasses(): ClassInfo {\n    return {\n      'disabled': this.disabled,\n      'selected': this.selected,\n    };\n  }\n\n  /**\n   * Handles rendering the headline and supporting text.\n   */\n  protected renderBody() {\n    return html`\n      <slot></slot>\n      <slot name=\"overline\" slot=\"overline\"></slot>\n      <slot name=\"headline\" slot=\"headline\"></slot>\n      <slot name=\"supporting-text\" slot=\"supporting-text\"></slot>\n      <slot\n        name=\"trailing-supporting-text\"\n        slot=\"trailing-supporting-text\"></slot>\n    `;\n  }\n\n  override focus() {\n    // TODO(b/300334509): needed for some cases where delegatesFocus doesn't\n    // work programmatically like in FF and select-option\n    this.listItemRoot?.focus();\n  }\n}\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {CSSResultOrNative} from 'lit';\nimport {customElement} from 'lit/decorators.js';\n\nimport {styles} from '../menu/internal/menuitem/menu-item-styles.js';\n\nimport {SelectOptionEl} from './internal/selectoption/select-option.js';\n\nexport {type SelectOption} from './internal/selectoption/select-option.js';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'md-select-option': MdSelectOption;\n  }\n}\n\n/**\n * @summary\n * Select menus display a list of choices on temporary surfaces and display the\n * currently selected menu item above the menu.\n *\n * @description\n * The select component allows users to choose a value from a fixed list of\n * available options. Composed of an interactive anchor button and a menu, it is\n * analogous to the native HTML `<select>` element. This is the option that\n * can be placed inside of an md-select.\n *\n * This component is a subclass of `md-menu-item` and can accept the same slots,\n * properties, and events as `md-menu-item`.\n *\n * @example\n * ```html\n * <md-outlined-select label=\"fruits\">\n *   <!-- An empty selected option will give select an \"un-filled\" state -->\n *   <md-select-option selected></md-select-option>\n *   <md-select-option value=\"apple\" headline=\"Apple\"></md-select-option>\n *   <md-select-option value=\"banana\" headline=\"Banana\"></md-select-option>\n *   <md-select-option value=\"kiwi\" headline=\"Kiwi\"></md-select-option>\n *   <md-select-option value=\"orange\" headline=\"Orange\"></md-select-option>\n *   <md-select-option value=\"tomato\" headline=\"Tomato\"></md-select-option>\n * </md-outlined-select>\n * ```\n *\n * @final\n * @suppress {visibility}\n */\n@customElement('md-select-option')\nexport class MdSelectOption extends SelectOptionEl {\n  static override styles: CSSResultOrNative[] = [styles];\n}\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./slider/internal/forced-colors-styles.css.\nimport {css} from 'lit';\nexport const styles = css`@media(forced-colors: active){:host{--md-slider-active-track-color: CanvasText;--md-slider-disabled-active-track-color: GrayText;--md-slider-disabled-active-track-opacity: 1;--md-slider-disabled-handle-color: GrayText;--md-slider-disabled-inactive-track-color: GrayText;--md-slider-disabled-inactive-track-opacity: 1;--md-slider-focus-handle-color: CanvasText;--md-slider-handle-color: CanvasText;--md-slider-handle-shadow-color: Canvas;--md-slider-hover-handle-color: CanvasText;--md-slider-hover-state-layer-color: Canvas;--md-slider-hover-state-layer-opacity: 1;--md-slider-inactive-track-color: Canvas;--md-slider-label-container-color: Canvas;--md-slider-label-text-color: CanvasText;--md-slider-pressed-handle-color: CanvasText;--md-slider-pressed-state-layer-color: Canvas;--md-slider-pressed-state-layer-opacity: 1;--md-slider-with-overlap-handle-outline-color: CanvasText}.label,.label::before{border:var(--_with-overlap-handle-outline-color) solid var(--_with-overlap-handle-outline-width)}:host(:not([disabled])) .track::before{border:1px solid var(--_active-track-color)}.tickmarks::before{background-image:url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='CanvasText'%3E%3Ccircle cx='2' cy='2'  r='1'/%3E%3C/svg%3E\")}.tickmarks::after{background-image:url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='Canvas'%3E%3Ccircle cx='2' cy='2' r='1'/%3E%3C/svg%3E\")}:host([disabled]) .tickmarks::before{background-image:url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='Canvas'%3E%3Ccircle cx='2' cy='2'  r='1'/%3E%3C/svg%3E\")}}\n`;\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/**\n * When `condition` is true, returns the result of calling `trueCase()`, else\n * returns the result of calling `falseCase()` if `falseCase` is defined.\n *\n * This is a convenience wrapper around a ternary expression that makes it a\n * little nicer to write an inline conditional without an else.\n *\n * @example\n *\n * ```ts\n * render() {\n *   return html`\n *     ${when(this.user, () => html`User: ${this.user.username}`, () => html`Sign In...`)}\n *   `;\n * }\n * ```\n */\nexport function when<T, F>(\n  condition: true,\n  trueCase: () => T,\n  falseCase?: () => F\n): T;\nexport function when<T, F = undefined>(\n  condition: false,\n  trueCase: () => T,\n  falseCase?: () => F\n): F;\nexport function when<T, F = undefined>(\n  condition: unknown,\n  trueCase: () => T,\n  falseCase?: () => F\n): T | F;\nexport function when(\n  condition: unknown,\n  trueCase: () => unknown,\n  falseCase?: () => unknown\n): unknown {\n  return condition ? trueCase() : falseCase?.();\n}\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport '../../elevation/elevation.js';\nimport '../../focus/md-focus-ring.js';\nimport '../../ripple/ripple.js';\n\nimport {html, isServer, LitElement, nothing, PropertyValues} from 'lit';\nimport {property, query, queryAsync, state} from 'lit/decorators.js';\nimport {classMap} from 'lit/directives/class-map.js';\nimport {styleMap} from 'lit/directives/style-map.js';\nimport {when} from 'lit/directives/when.js';\n\nimport {ARIAMixinStrict} from '../../internal/aria/aria.js';\nimport {requestUpdateOnAriaChange} from '../../internal/aria/delegate.js';\nimport {\n  dispatchActivationClick,\n  isActivationClick,\n} from '../../internal/events/form-label-activation.js';\nimport {redispatchEvent} from '../../internal/events/redispatch-event.js';\nimport {mixinElementInternals} from '../../labs/behaviors/element-internals.js';\nimport {\n  getFormValue,\n  mixinFormAssociated,\n} from '../../labs/behaviors/form-associated.js';\nimport {MdRipple} from '../../ripple/ripple.js';\n\n// Disable warning for classMap with destructuring\n// tslint:disable:no-implicit-dictionary-conversion\n\n// Separate variable needed for closure.\nconst sliderBaseClass = mixinFormAssociated(mixinElementInternals(LitElement));\n\n/**\n * Slider component.\n *\n *\n * @fires change {Event} The native `change` event on\n * [`<input>`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/change_event)\n * --bubbles\n * @fires input {InputEvent} The native `input` event on\n * [`<input>`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/input_event)\n * --bubbles --composed\n */\nexport class Slider extends sliderBaseClass {\n  static {\n    requestUpdateOnAriaChange(Slider);\n  }\n\n  /** @nocollapse */\n  static override shadowRootOptions: ShadowRootInit = {\n    ...LitElement.shadowRootOptions,\n    delegatesFocus: true,\n  };\n\n  /**\n   * The slider minimum value\n   */\n  @property({type: Number}) min = 0;\n\n  /**\n   * The slider maximum value\n   */\n  @property({type: Number}) max = 100;\n\n  /**\n   * The slider value displayed when range is false.\n   */\n  @property({type: Number}) value?: number;\n\n  /**\n   * The slider start value displayed when range is true.\n   */\n  @property({type: Number, attribute: 'value-start'}) valueStart?: number;\n\n  /**\n   * The slider end value displayed when range is true.\n   */\n  @property({type: Number, attribute: 'value-end'}) valueEnd?: number;\n\n  /**\n   * An optional label for the slider's value displayed when range is\n   * false; if not set, the label is the value itself.\n   */\n  @property({attribute: 'value-label'}) valueLabel = '';\n\n  /**\n   * An optional label for the slider's start value displayed when\n   * range is true; if not set, the label is the valueStart itself.\n   */\n  @property({attribute: 'value-label-start'}) valueLabelStart = '';\n\n  /**\n   * An optional label for the slider's end value displayed when\n   * range is true; if not set, the label is the valueEnd itself.\n   */\n  @property({attribute: 'value-label-end'}) valueLabelEnd = '';\n\n  /**\n   * Aria label for the slider's start handle displayed when\n   * range is true.\n   */\n  @property({attribute: 'aria-label-start'}) ariaLabelStart = '';\n\n  /**\n   * Aria value text for the slider's start value displayed when\n   * range is true.\n   */\n  @property({attribute: 'aria-valuetext-start'}) ariaValueTextStart = '';\n\n  /**\n   * Aria label for the slider's end handle displayed when\n   * range is true.\n   */\n  @property({attribute: 'aria-label-end'}) ariaLabelEnd = '';\n\n  /**\n   * Aria value text for the slider's end value displayed when\n   * range is true.\n   */\n  @property({attribute: 'aria-valuetext-end'}) ariaValueTextEnd = '';\n\n  /**\n   * The step between values.\n   */\n  @property({type: Number}) step = 1;\n\n  /**\n   * Whether or not to show tick marks.\n   */\n  @property({type: Boolean}) ticks = false;\n\n  /**\n   * Whether or not to show a value label when activated.\n   */\n  @property({type: Boolean}) labeled = false;\n\n  /**\n   * Whether or not to show a value range. When false, the slider displays\n   * a slideable handle for the value property; when true, it displays\n   * slideable handles for the valueStart and valueEnd properties.\n   */\n  @property({type: Boolean}) range = false;\n\n  /**\n   * The HTML name to use in form submission for a range slider's starting\n   * value. Use `name` instead if both the start and end values should use the\n   * same name.\n   */\n  get nameStart() {\n    return this.getAttribute('name-start') ?? this.name;\n  }\n  set nameStart(name: string) {\n    this.setAttribute('name-start', name);\n  }\n\n  /**\n   * The HTML name to use in form submission for a range slider's ending value.\n   * Use `name` instead if both the start and end values should use the same\n   * name.\n   */\n  get nameEnd() {\n    return this.getAttribute('name-end') ?? this.nameStart;\n  }\n  set nameEnd(name: string) {\n    this.setAttribute('name-end', name);\n  }\n\n  @query('input.start') private readonly inputStart!: HTMLInputElement | null;\n  @query('.handle.start') private readonly handleStart!: HTMLDivElement | null;\n  @queryAsync('md-ripple.start')\n  private readonly rippleStart!: Promise<MdRipple | null>;\n\n  @query('input.end') private readonly inputEnd!: HTMLInputElement | null;\n  @query('.handle.end') private readonly handleEnd!: HTMLDivElement | null;\n  @queryAsync('md-ripple.end')\n  private readonly rippleEnd!: Promise<MdRipple | null>;\n\n  // handle hover/pressed states are set manually since the handle\n  // does not receive pointer events so that the native inputs are\n  // interaction targets.\n  @state() private handleStartHover = false;\n  @state() private handleEndHover = false;\n\n  @state() private startOnTop = false;\n  @state() private handlesOverlapping = false;\n\n  @state() private renderValueStart?: number;\n  @state() private renderValueEnd?: number;\n\n  // Note: start aria-* properties are only applied when range=true, which is\n  // why they do not need to handle both cases.\n  private get renderAriaLabelStart() {\n    // Needed for closure conformance\n    const {ariaLabel} = this as ARIAMixinStrict;\n    return (\n      this.ariaLabelStart ||\n      (ariaLabel && `${ariaLabel} start`) ||\n      this.valueLabelStart ||\n      String(this.valueStart)\n    );\n  }\n\n  private get renderAriaValueTextStart() {\n    return (\n      this.ariaValueTextStart || this.valueLabelStart || String(this.valueStart)\n    );\n  }\n\n  // Note: end aria-* properties are applied for single and range sliders, which\n  // is why it needs to handle `this.range` (while start aria-* properties do\n  // not).\n  private get renderAriaLabelEnd() {\n    // Needed for closure conformance\n    const {ariaLabel} = this as ARIAMixinStrict;\n    if (this.range) {\n      return (\n        this.ariaLabelEnd ||\n        (ariaLabel && `${ariaLabel} end`) ||\n        this.valueLabelEnd ||\n        String(this.valueEnd)\n      );\n    }\n\n    return ariaLabel || this.valueLabel || String(this.value);\n  }\n\n  private get renderAriaValueTextEnd() {\n    if (this.range) {\n      return (\n        this.ariaValueTextEnd || this.valueLabelEnd || String(this.valueEnd)\n      );\n    }\n\n    // Needed for conformance\n    const {ariaValueText} = this as ARIAMixinStrict;\n    return ariaValueText || this.valueLabel || String(this.value);\n  }\n\n  // used in synthetic events generated to control ripple hover state.\n  private ripplePointerId = 1;\n\n  // flag to prevent processing of re-dispatched input event.\n  private isRedispatchingEvent = false;\n\n  private action?: Action;\n\n  constructor() {\n    super();\n    if (!isServer) {\n      this.addEventListener('click', (event: MouseEvent) => {\n        if (!isActivationClick(event) || !this.inputEnd) {\n          return;\n        }\n        this.focus();\n        dispatchActivationClick(this.inputEnd);\n      });\n    }\n  }\n\n  override focus() {\n    this.inputEnd?.focus();\n  }\n\n  protected override willUpdate(changed: PropertyValues) {\n    this.renderValueStart = changed.has('valueStart')\n      ? this.valueStart\n      : this.inputStart?.valueAsNumber;\n    const endValueChanged =\n      (changed.has('valueEnd') && this.range) || changed.has('value');\n    this.renderValueEnd = endValueChanged\n      ? this.range\n        ? this.valueEnd\n        : this.value\n      : this.inputEnd?.valueAsNumber;\n    // manually handle ripple hover state since the handle is pointer events\n    // none.\n    if (changed.get('handleStartHover') !== undefined) {\n      this.toggleRippleHover(this.rippleStart, this.handleStartHover);\n    } else if (changed.get('handleEndHover') !== undefined) {\n      this.toggleRippleHover(this.rippleEnd, this.handleEndHover);\n    }\n  }\n\n  protected override updated(changed: PropertyValues) {\n    // Validate input rendered value and re-render if necessary. This ensures\n    // the rendred handle stays in sync with the input thumb which is used for\n    // interaction. These can get out of sync if a supplied value does not\n    // map to an exactly stepped value between min and max.\n    if (this.range) {\n      this.renderValueStart = this.inputStart!.valueAsNumber;\n    }\n    this.renderValueEnd = this.inputEnd!.valueAsNumber;\n    // update values if they are unset\n    // when using a range, default to equi-distant between\n    // min - valueStart - valueEnd - max\n    if (this.range) {\n      const segment = (this.max - this.min) / 3;\n      if (this.valueStart === undefined) {\n        this.inputStart!.valueAsNumber = this.min + segment;\n        // read actual value from input\n        const v = this.inputStart!.valueAsNumber;\n        this.valueStart = this.renderValueStart = v;\n      }\n      if (this.valueEnd === undefined) {\n        this.inputEnd!.valueAsNumber = this.min + 2 * segment;\n        // read actual value from input\n        const v = this.inputEnd!.valueAsNumber;\n        this.valueEnd = this.renderValueEnd = v;\n      }\n    } else {\n      this.value ??= this.renderValueEnd;\n    }\n    if (\n      changed.has('range') ||\n      changed.has('renderValueStart') ||\n      changed.has('renderValueEnd') ||\n      this.isUpdatePending\n    ) {\n      // Only check if the handle nubs are overlapping, as the ripple touch\n      // target extends subtantially beyond the boundary of the handle nub.\n      const startNub = this.handleStart?.querySelector('.handleNub');\n      const endNub = this.handleEnd?.querySelector('.handleNub');\n      this.handlesOverlapping = isOverlapping(startNub, endNub);\n    }\n    // called to finish the update imediately;\n    // note, this is a no-op unless an update is scheduled\n    this.performUpdate();\n  }\n\n  protected override render() {\n    const step = this.step === 0 ? 1 : this.step;\n    const range = Math.max(this.max - this.min, step);\n    const startFraction = this.range\n      ? ((this.renderValueStart ?? this.min) - this.min) / range\n      : 0;\n    const endFraction = ((this.renderValueEnd ?? this.min) - this.min) / range;\n    const containerStyles = {\n      // for clipping inputs and active track.\n      '--_start-fraction': String(startFraction),\n      '--_end-fraction': String(endFraction),\n      // for generating tick marks\n      '--_tick-count': String(range / step),\n    };\n    const containerClasses = {ranged: this.range};\n\n    // optional label values to show in place of the value.\n    const labelStart = this.valueLabelStart || String(this.renderValueStart);\n    const labelEnd =\n      (this.range ? this.valueLabelEnd : this.valueLabel) ||\n      String(this.renderValueEnd);\n\n    const inputStartProps = {\n      start: true,\n      value: this.renderValueStart,\n      ariaLabel: this.renderAriaLabelStart,\n      ariaValueText: this.renderAriaValueTextStart,\n      ariaMin: this.min,\n      ariaMax: this.valueEnd ?? this.max,\n    };\n\n    const inputEndProps = {\n      start: false,\n      value: this.renderValueEnd,\n      ariaLabel: this.renderAriaLabelEnd,\n      ariaValueText: this.renderAriaValueTextEnd,\n      ariaMin: this.range ? this.valueStart ?? this.min : this.min,\n      ariaMax: this.max,\n    };\n\n    const handleStartProps = {\n      start: true,\n      hover: this.handleStartHover,\n      label: labelStart,\n    };\n\n    const handleEndProps = {\n      start: false,\n      hover: this.handleEndHover,\n      label: labelEnd,\n    };\n\n    const handleContainerClasses = {\n      hover: this.handleStartHover || this.handleEndHover,\n    };\n\n    return html` <div\n      class=\"container ${classMap(containerClasses)}\"\n      style=${styleMap(containerStyles)}>\n      ${when(this.range, () => this.renderInput(inputStartProps))}\n      ${this.renderInput(inputEndProps)} ${this.renderTrack()}\n      <div class=\"handleContainerPadded\">\n        <div class=\"handleContainerBlock\">\n          <div class=\"handleContainer ${classMap(handleContainerClasses)}\">\n            ${when(this.range, () => this.renderHandle(handleStartProps))}\n            ${this.renderHandle(handleEndProps)}\n          </div>\n        </div>\n      </div>\n    </div>`;\n  }\n\n  private renderTrack() {\n    return html`\n      <div class=\"track\"></div>\n      ${this.ticks ? html`<div class=\"tickmarks\"></div>` : nothing}\n    `;\n  }\n\n  private renderLabel(value: string) {\n    return html`<div class=\"label\" aria-hidden=\"true\">\n      <span class=\"labelContent\" part=\"label\">${value}</span>\n    </div>`;\n  }\n\n  private renderHandle({\n    start,\n    hover,\n    label,\n  }: {\n    start: boolean;\n    hover: boolean;\n    label: string;\n  }) {\n    const onTop = !this.disabled && start === this.startOnTop;\n    const isOverlapping = !this.disabled && this.handlesOverlapping;\n    const name = start ? 'start' : 'end';\n    return html`<div\n      class=\"handle ${classMap({\n        [name]: true,\n        hover,\n        onTop,\n        isOverlapping,\n      })}\">\n      <md-focus-ring part=\"focus-ring\" for=${name}></md-focus-ring>\n      <md-ripple\n        for=${name}\n        class=${name}\n        ?disabled=${this.disabled}></md-ripple>\n      <div class=\"handleNub\">\n        <md-elevation part=\"elevation\"></md-elevation>\n      </div>\n      ${when(this.labeled, () => this.renderLabel(label))}\n    </div>`;\n  }\n\n  private renderInput({\n    start,\n    value,\n    ariaLabel,\n    ariaValueText,\n    ariaMin,\n    ariaMax,\n  }: {\n    start: boolean;\n    value?: number;\n    ariaLabel: string;\n    ariaValueText: string;\n    ariaMin: number;\n    ariaMax: number;\n  }) {\n    // Slider requires min/max set to the overall min/max for both inputs.\n    // This is reported to screen readers, which is why we need aria-valuemin\n    // and aria-valuemax.\n    const name = start ? `start` : `end`;\n    return html`<input\n      type=\"range\"\n      class=\"${classMap({\n        start,\n        end: !start,\n      })}\"\n      @focus=${this.handleFocus}\n      @pointerdown=${this.handleDown}\n      @pointerup=${this.handleUp}\n      @pointerenter=${this.handleEnter}\n      @pointermove=${this.handleMove}\n      @pointerleave=${this.handleLeave}\n      @keydown=${this.handleKeydown}\n      @keyup=${this.handleKeyup}\n      @input=${this.handleInput}\n      @change=${this.handleChange}\n      id=${name}\n      .disabled=${this.disabled}\n      .min=${String(this.min)}\n      aria-valuemin=${ariaMin}\n      .max=${String(this.max)}\n      aria-valuemax=${ariaMax}\n      .step=${String(this.step)}\n      .value=${String(value)}\n      .tabIndex=${start ? 1 : 0}\n      aria-label=${ariaLabel || nothing}\n      aria-valuetext=${ariaValueText} />`;\n  }\n\n  private async toggleRippleHover(\n    ripple: Promise<MdRipple | null>,\n    hovering: boolean,\n  ) {\n    const rippleEl = await ripple;\n    if (!rippleEl) {\n      return;\n    }\n    // TODO(b/269799771): improve slider ripple connection\n    if (hovering) {\n      rippleEl.handlePointerenter(\n        new PointerEvent('pointerenter', {\n          isPrimary: true,\n          pointerId: this.ripplePointerId,\n        }),\n      );\n    } else {\n      rippleEl.handlePointerleave(\n        new PointerEvent('pointerleave', {\n          isPrimary: true,\n          pointerId: this.ripplePointerId,\n        }),\n      );\n    }\n  }\n\n  private handleFocus(event: Event) {\n    this.updateOnTop(event.target as HTMLInputElement);\n  }\n\n  private startAction(event: Event) {\n    const target = event.target as HTMLInputElement;\n    const fixed =\n      target === this.inputStart ? this.inputEnd! : this.inputStart!;\n    this.action = {\n      canFlip: event.type === 'pointerdown',\n      flipped: false,\n      target,\n      fixed,\n      values: new Map([\n        [target, target.valueAsNumber],\n        [fixed, fixed?.valueAsNumber],\n      ]),\n    };\n  }\n\n  private finishAction(event: Event) {\n    this.action = undefined;\n  }\n\n  private handleKeydown(event: KeyboardEvent) {\n    this.startAction(event);\n  }\n\n  private handleKeyup(event: KeyboardEvent) {\n    this.finishAction(event);\n  }\n\n  private handleDown(event: PointerEvent) {\n    this.startAction(event);\n    this.ripplePointerId = event.pointerId;\n    const isStart = (event.target as HTMLInputElement) === this.inputStart;\n    // Since handle moves to pointer on down and there may not be a move,\n    // it needs to be considered hovered..\n    this.handleStartHover =\n      !this.disabled && isStart && Boolean(this.handleStart);\n    this.handleEndHover = !this.disabled && !isStart && Boolean(this.handleEnd);\n  }\n\n  private async handleUp(event: PointerEvent) {\n    if (!this.action) {\n      return;\n    }\n\n    const {target, values, flipped} = this.action;\n    //  Async here for Firefox because input can be after pointerup\n    //  when value is calmped.\n    await new Promise(requestAnimationFrame);\n    if (target !== undefined) {\n      // Ensure Safari focuses input so label renders.\n      // Ensure any flipped input is focused so the tab order is right.\n      target.focus();\n      // When action is flipped, change must be fired manually since the\n      // real event target did not change.\n      if (flipped && target.valueAsNumber !== values.get(target)!) {\n        target.dispatchEvent(new Event('change', {bubbles: true}));\n      }\n    }\n    this.finishAction(event);\n  }\n\n  /**\n   * The move handler tracks handle hovering to facilitate proper ripple\n   * behavior on the slider handle. This is needed because user interaction with\n   * the native input is leveraged to position the handle. Because the separate\n   * displayed handle element has pointer events disabled (to allow interaction\n   * with the input) and the input's handle is a pseudo-element, neither can be\n   * the ripple's interactive element. Therefore the input is the ripple's\n   * interactive element and has a `ripple` directive; however the ripple\n   * is gated on the handle being hovered. In addition, because the ripple\n   * hover state is being specially handled, it must be triggered independent\n   * of the directive. This is done based on the hover state when the\n   * slider is updated.\n   */\n  private handleMove(event: PointerEvent) {\n    this.handleStartHover = !this.disabled && inBounds(event, this.handleStart);\n    this.handleEndHover = !this.disabled && inBounds(event, this.handleEnd);\n  }\n\n  private handleEnter(event: PointerEvent) {\n    this.handleMove(event);\n  }\n\n  private handleLeave() {\n    this.handleStartHover = false;\n    this.handleEndHover = false;\n  }\n\n  private updateOnTop(input: HTMLInputElement) {\n    this.startOnTop = input.classList.contains('start');\n  }\n\n  private needsClamping() {\n    if (!this.action) {\n      return false;\n    }\n\n    const {target, fixed} = this.action;\n    const isStart = target === this.inputStart;\n    return isStart\n      ? target.valueAsNumber > fixed.valueAsNumber\n      : target.valueAsNumber < fixed.valueAsNumber;\n  }\n\n  // if start/end start coincident and the first drag input would e.g. move\n  // start > end, avoid clamping and \"flip\" to use the other input\n  // as the action target.\n  private isActionFlipped() {\n    const {action} = this;\n    if (!action) {\n      return false;\n    }\n\n    const {target, fixed, values} = action;\n    if (action.canFlip) {\n      const coincident = values.get(target) === values.get(fixed);\n      if (coincident && this.needsClamping()) {\n        action.canFlip = false;\n        action.flipped = true;\n        action.target = fixed;\n        action.fixed = target;\n      }\n    }\n    return action.flipped;\n  }\n\n  // when flipped, apply the drag input to the flipped target and reset\n  // the actual target.\n  private flipAction() {\n    if (!this.action) {\n      return false;\n    }\n\n    const {target, fixed, values} = this.action;\n    const changed = target.valueAsNumber !== fixed.valueAsNumber;\n    target.valueAsNumber = fixed.valueAsNumber;\n    fixed.valueAsNumber = values.get(fixed)!;\n    return changed;\n  }\n\n  // clamp such that start does not move beyond end and visa versa.\n  private clampAction() {\n    if (!this.needsClamping() || !this.action) {\n      return false;\n    }\n    const {target, fixed} = this.action;\n    target.valueAsNumber = fixed.valueAsNumber;\n    return true;\n  }\n\n  private handleInput(event: InputEvent) {\n    // avoid processing a re-dispatched event\n    if (this.isRedispatchingEvent) {\n      return;\n    }\n    let stopPropagation = false;\n    let redispatch = false;\n    if (this.range) {\n      if (this.isActionFlipped()) {\n        stopPropagation = true;\n        redispatch = this.flipAction();\n      }\n      if (this.clampAction()) {\n        stopPropagation = true;\n        redispatch = false;\n      }\n    }\n    const target = event.target as HTMLInputElement;\n    this.updateOnTop(target);\n    // update value only on interaction\n    if (this.range) {\n      this.valueStart = this.inputStart!.valueAsNumber;\n      this.valueEnd = this.inputEnd!.valueAsNumber;\n    } else {\n      this.value = this.inputEnd!.valueAsNumber;\n    }\n    // control external visibility of input event\n    if (stopPropagation) {\n      event.stopPropagation();\n    }\n    // ensure event path is correct when flipped.\n    if (redispatch) {\n      this.isRedispatchingEvent = true;\n      redispatchEvent(target, event);\n      this.isRedispatchingEvent = false;\n    }\n  }\n\n  private handleChange(event: Event) {\n    // prevent keyboard triggered changes from dispatching for\n    // clamped values; note, this only occurs for keyboard\n    const changeTarget = event.target as HTMLInputElement;\n    const {target, values} = this.action ?? {};\n    const squelch =\n      target && target.valueAsNumber === values!.get(changeTarget)!;\n    if (!squelch) {\n      redispatchEvent(this, event);\n    }\n    // ensure keyboard triggered change clears action.\n    this.finishAction(event);\n  }\n\n  // Writable mixin properties for lit-html binding, needed for lit-analyzer\n  declare disabled: boolean;\n  declare name: string;\n\n  override [getFormValue]() {\n    if (this.range) {\n      const data = new FormData();\n      data.append(this.nameStart, String(this.valueStart));\n      data.append(this.nameEnd, String(this.valueEnd));\n      return data;\n    }\n\n    return String(this.value);\n  }\n\n  override formResetCallback() {\n    if (this.range) {\n      const valueStart = this.getAttribute('value-start');\n      this.valueStart = valueStart !== null ? Number(valueStart) : undefined;\n      const valueEnd = this.getAttribute('value-end');\n      this.valueEnd = valueEnd !== null ? Number(valueEnd) : undefined;\n      return;\n    }\n    const value = this.getAttribute('value');\n    this.value = value !== null ? Number(value) : undefined;\n  }\n\n  override formStateRestoreCallback(\n    state: string | Array<[string, string]> | null,\n  ) {\n    if (Array.isArray(state)) {\n      const [[, valueStart], [, valueEnd]] = state;\n      this.valueStart = Number(valueStart);\n      this.valueEnd = Number(valueEnd);\n      this.range = true;\n      return;\n    }\n\n    this.value = Number(state);\n    this.range = false;\n  }\n}\n\nfunction inBounds({x, y}: PointerEvent, element?: HTMLElement | null) {\n  if (!element) {\n    return false;\n  }\n  const {top, left, bottom, right} = element.getBoundingClientRect();\n  return x >= left && x <= right && y >= top && y <= bottom;\n}\n\nfunction isOverlapping(\n  elA: Element | null | undefined,\n  elB: Element | null | undefined,\n) {\n  if (!(elA && elB)) {\n    return false;\n  }\n  const a = elA.getBoundingClientRect();\n  const b = elB.getBoundingClientRect();\n  return !(\n    a.top > b.bottom ||\n    a.right < b.left ||\n    a.bottom < b.top ||\n    a.left > b.right\n  );\n}\n\ninterface Action {\n  canFlip: boolean;\n  flipped: boolean;\n  target: HTMLInputElement;\n  fixed: HTMLInputElement;\n  values: Map<HTMLInputElement | undefined, number | undefined>;\n}\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./slider/internal/slider-styles.css.\nimport {css} from 'lit';\nexport const styles = css`:host{--_active-track-color: var(--md-slider-active-track-color, var(--md-sys-color-primary, #6750a4));--_active-track-height: var(--md-slider-active-track-height, 4px);--_active-track-shape: var(--md-slider-active-track-shape, var(--md-sys-shape-corner-full, 9999px));--_disabled-active-track-color: var(--md-slider-disabled-active-track-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-active-track-opacity: var(--md-slider-disabled-active-track-opacity, 0.38);--_disabled-handle-color: var(--md-slider-disabled-handle-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-handle-elevation: var(--md-slider-disabled-handle-elevation, 0);--_disabled-inactive-track-color: var(--md-slider-disabled-inactive-track-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-inactive-track-opacity: var(--md-slider-disabled-inactive-track-opacity, 0.12);--_focus-handle-color: var(--md-slider-focus-handle-color, var(--md-sys-color-primary, #6750a4));--_handle-color: var(--md-slider-handle-color, var(--md-sys-color-primary, #6750a4));--_handle-elevation: var(--md-slider-handle-elevation, 1);--_handle-height: var(--md-slider-handle-height, 20px);--_handle-shadow-color: var(--md-slider-handle-shadow-color, var(--md-sys-color-shadow, #000));--_handle-shape: var(--md-slider-handle-shape, var(--md-sys-shape-corner-full, 9999px));--_handle-width: var(--md-slider-handle-width, 20px);--_hover-handle-color: var(--md-slider-hover-handle-color, var(--md-sys-color-primary, #6750a4));--_hover-state-layer-color: var(--md-slider-hover-state-layer-color, var(--md-sys-color-primary, #6750a4));--_hover-state-layer-opacity: var(--md-slider-hover-state-layer-opacity, 0.08);--_inactive-track-color: var(--md-slider-inactive-track-color, var(--md-sys-color-surface-container-highest, #e6e0e9));--_inactive-track-height: var(--md-slider-inactive-track-height, 4px);--_inactive-track-shape: var(--md-slider-inactive-track-shape, var(--md-sys-shape-corner-full, 9999px));--_label-container-color: var(--md-slider-label-container-color, var(--md-sys-color-primary, #6750a4));--_label-container-height: var(--md-slider-label-container-height, 28px);--_pressed-handle-color: var(--md-slider-pressed-handle-color, var(--md-sys-color-primary, #6750a4));--_pressed-state-layer-color: var(--md-slider-pressed-state-layer-color, var(--md-sys-color-primary, #6750a4));--_pressed-state-layer-opacity: var(--md-slider-pressed-state-layer-opacity, 0.12);--_state-layer-size: var(--md-slider-state-layer-size, 40px);--_with-overlap-handle-outline-color: var(--md-slider-with-overlap-handle-outline-color, var(--md-sys-color-on-primary, #fff));--_with-overlap-handle-outline-width: var(--md-slider-with-overlap-handle-outline-width, 1px);--_with-tick-marks-active-container-color: var(--md-slider-with-tick-marks-active-container-color, var(--md-sys-color-on-primary, #fff));--_with-tick-marks-container-size: var(--md-slider-with-tick-marks-container-size, 2px);--_with-tick-marks-disabled-container-color: var(--md-slider-with-tick-marks-disabled-container-color, var(--md-sys-color-on-surface, #1d1b20));--_with-tick-marks-inactive-container-color: var(--md-slider-with-tick-marks-inactive-container-color, var(--md-sys-color-on-surface-variant, #49454f));--_label-text-color: var(--md-slider-label-text-color, var(--md-sys-color-on-primary, #fff));--_label-text-font: var(--md-slider-label-text-font, var(--md-sys-typescale-label-medium-font, var(--md-ref-typeface-plain, Roboto)));--_label-text-line-height: var(--md-slider-label-text-line-height, var(--md-sys-typescale-label-medium-line-height, 1rem));--_label-text-size: var(--md-slider-label-text-size, var(--md-sys-typescale-label-medium-size, 0.75rem));--_label-text-weight: var(--md-slider-label-text-weight, var(--md-sys-typescale-label-medium-weight, var(--md-ref-typeface-weight-medium, 500)));--_start-fraction: 0;--_end-fraction: 0;--_tick-count: 0;display:inline-flex;vertical-align:middle;min-inline-size:200px;--md-elevation-level: var(--_handle-elevation);--md-elevation-shadow-color: var(--_handle-shadow-color)}md-focus-ring{height:48px;inset:unset;width:48px}md-elevation{transition-duration:250ms}@media(prefers-reduced-motion){.label{transition-duration:0}}:host([disabled]){opacity:var(--_disabled-active-track-opacity);--md-elevation-level: var(--_disabled-handle-elevation)}.container{flex:1;display:flex;align-items:center;position:relative;block-size:var(--_state-layer-size);pointer-events:none;touch-action:none}.track,.tickmarks{position:absolute;inset:0;display:flex;align-items:center}.track::before,.tickmarks::before,.track::after,.tickmarks::after{position:absolute;content:\"\";inset-inline-start:calc(var(--_state-layer-size)/2 - var(--_with-tick-marks-container-size));inset-inline-end:calc(var(--_state-layer-size)/2 - var(--_with-tick-marks-container-size));background-size:calc((100% - var(--_with-tick-marks-container-size)*2)/var(--_tick-count)) 100%}.track::before,.tickmarks::before{block-size:var(--_inactive-track-height);border-radius:var(--_inactive-track-shape)}.track::before{background:var(--_inactive-track-color)}.tickmarks::before{background-image:radial-gradient(circle at var(--_with-tick-marks-container-size) center, var(--_with-tick-marks-inactive-container-color) 0, var(--_with-tick-marks-inactive-container-color) calc(var(--_with-tick-marks-container-size) / 2), transparent calc(var(--_with-tick-marks-container-size) / 2))}:host([disabled]) .track::before{opacity:calc(1/var(--_disabled-active-track-opacity)*var(--_disabled-inactive-track-opacity));background:var(--_disabled-inactive-track-color)}.track::after,.tickmarks::after{block-size:var(--_active-track-height);border-radius:var(--_active-track-shape);clip-path:inset(0 calc(var(--_with-tick-marks-container-size) * min((1 - var(--_end-fraction)) * 1000000000, 1) + (100% - var(--_with-tick-marks-container-size) * 2) * (1 - var(--_end-fraction))) 0 calc(var(--_with-tick-marks-container-size) * min(var(--_start-fraction) * 1000000000, 1) + (100% - var(--_with-tick-marks-container-size) * 2) * var(--_start-fraction)))}.track::after{background:var(--_active-track-color)}.tickmarks::after{background-image:radial-gradient(circle at var(--_with-tick-marks-container-size) center, var(--_with-tick-marks-active-container-color) 0, var(--_with-tick-marks-active-container-color) calc(var(--_with-tick-marks-container-size) / 2), transparent calc(var(--_with-tick-marks-container-size) / 2))}.track:dir(rtl)::after{clip-path:inset(0 calc(var(--_with-tick-marks-container-size) * min(var(--_start-fraction) * 1000000000, 1) + (100% - var(--_with-tick-marks-container-size) * 2) * var(--_start-fraction)) 0 calc(var(--_with-tick-marks-container-size) * min((1 - var(--_end-fraction)) * 1000000000, 1) + (100% - var(--_with-tick-marks-container-size) * 2) * (1 - var(--_end-fraction))))}.tickmarks:dir(rtl)::after{clip-path:inset(0 calc(var(--_with-tick-marks-container-size) * min(var(--_start-fraction) * 1000000000, 1) + (100% - var(--_with-tick-marks-container-size) * 2) * var(--_start-fraction)) 0 calc(var(--_with-tick-marks-container-size) * min((1 - var(--_end-fraction)) * 1000000000, 1) + (100% - var(--_with-tick-marks-container-size) * 2) * (1 - var(--_end-fraction))))}:host([disabled]) .track::after{background:var(--_disabled-active-track-color)}:host([disabled]) .tickmarks::before{background-image:radial-gradient(circle at var(--_with-tick-marks-container-size) center, var(--_with-tick-marks-disabled-container-color) 0, var(--_with-tick-marks-disabled-container-color) calc(var(--_with-tick-marks-container-size) / 2), transparent calc(var(--_with-tick-marks-container-size) / 2))}.handleContainerPadded{position:relative;block-size:100%;inline-size:100%;padding-inline:calc(var(--_state-layer-size)/2)}.handleContainerBlock{position:relative;block-size:100%;inline-size:100%}.handleContainer{position:absolute;inset-block-start:0;inset-block-end:0;inset-inline-start:calc(100%*var(--_start-fraction));inline-size:calc(100%*(var(--_end-fraction) - var(--_start-fraction)))}.handle{position:absolute;block-size:var(--_state-layer-size);inline-size:var(--_state-layer-size);border-radius:var(--_handle-shape);display:flex;place-content:center;place-items:center}.handleNub{position:absolute;height:var(--_handle-height);width:var(--_handle-width);border-radius:var(--_handle-shape);background:var(--_handle-color)}:host([disabled]) .handleNub{background:var(--_disabled-handle-color)}input.end:focus~.handleContainerPadded .handle.end>.handleNub,input.start:focus~.handleContainerPadded .handle.start>.handleNub{background:var(--_focus-handle-color)}.container>.handleContainerPadded .handle.hover>.handleNub{background:var(--_hover-handle-color)}:host(:not([disabled])) input.end:active~.handleContainerPadded .handle.end>.handleNub,:host(:not([disabled])) input.start:active~.handleContainerPadded .handle.start>.handleNub{background:var(--_pressed-handle-color)}.onTop.isOverlapping .label,.onTop.isOverlapping .label::before{outline:var(--_with-overlap-handle-outline-color) solid var(--_with-overlap-handle-outline-width)}.onTop.isOverlapping .handleNub{border:var(--_with-overlap-handle-outline-color) solid var(--_with-overlap-handle-outline-width)}.handle.start{inset-inline-start:calc(0px - var(--_state-layer-size)/2)}.handle.end{inset-inline-end:calc(0px - var(--_state-layer-size)/2)}.label{position:absolute;box-sizing:border-box;display:flex;padding:4px;place-content:center;place-items:center;border-radius:var(--md-sys-shape-corner-full, 9999px);color:var(--_label-text-color);font-family:var(--_label-text-font);font-size:var(--_label-text-size);line-height:var(--_label-text-line-height);font-weight:var(--_label-text-weight);inset-block-end:100%;min-inline-size:var(--_label-container-height);min-block-size:var(--_label-container-height);background:var(--_label-container-color);transition:transform 100ms cubic-bezier(0.2, 0, 0, 1);transform-origin:center bottom;transform:scale(0)}:host(:focus-within) .label,.handleContainer.hover .label,:where(:has(input:active)) .label{transform:scale(1)}.label::before,.label::after{position:absolute;display:block;content:\"\";background:inherit}.label::before{inline-size:calc(var(--_label-container-height)/2);block-size:calc(var(--_label-container-height)/2);bottom:calc(var(--_label-container-height)/-10);transform:rotate(45deg)}.label::after{inset:0px;border-radius:inherit}.labelContent{z-index:1}input[type=range]{opacity:0;-webkit-tap-highlight-color:rgba(0,0,0,0);position:absolute;box-sizing:border-box;height:100%;width:100%;margin:0;background:rgba(0,0,0,0);cursor:pointer;pointer-events:auto;appearance:none}input[type=range]:focus{outline:none}::-webkit-slider-runnable-track{-webkit-appearance:none}::-moz-range-track{appearance:none}::-webkit-slider-thumb{-webkit-appearance:none;appearance:none;block-size:var(--_handle-height);inline-size:var(--_handle-width);opacity:0;z-index:2}input.end::-webkit-slider-thumb{--_track-and-knob-padding: calc( (var(--_state-layer-size) - var(--_handle-width)) / 2 );--_x-translate: calc( var(--_track-and-knob-padding) - 2 * var(--_end-fraction) * var(--_track-and-knob-padding) );transform:translateX(var(--_x-translate))}input.end:dir(rtl)::-webkit-slider-thumb{transform:translateX(calc(-1 * var(--_x-translate)))}input.start::-webkit-slider-thumb{--_track-and-knob-padding: calc( (var(--_state-layer-size) - var(--_handle-width)) / 2 );--_x-translate: calc( var(--_track-and-knob-padding) - 2 * var(--_start-fraction) * var(--_track-and-knob-padding) );transform:translateX(var(--_x-translate))}input.start:dir(rtl)::-webkit-slider-thumb{transform:translateX(calc(-1 * var(--_x-translate)))}::-moz-range-thumb{appearance:none;block-size:var(--_state-layer-size);inline-size:var(--_state-layer-size);transform:scaleX(0);opacity:0;z-index:2}.ranged input.start{clip-path:inset(0 calc(100% - (var(--_state-layer-size) / 2 + (100% - var(--_state-layer-size)) * (var(--_start-fraction) + (var(--_end-fraction) - var(--_start-fraction)) / 2))) 0 0)}.ranged input.start:dir(rtl){clip-path:inset(0 0 0 calc(100% - (var(--_state-layer-size) / 2 + (100% - var(--_state-layer-size)) * (var(--_start-fraction) + (var(--_end-fraction) - var(--_start-fraction)) / 2))))}.ranged input.end{clip-path:inset(0 0 0 calc(var(--_state-layer-size) / 2 + (100% - var(--_state-layer-size)) * (var(--_start-fraction) + (var(--_end-fraction) - var(--_start-fraction)) / 2)))}.ranged input.end:dir(rtl){clip-path:inset(0 calc(var(--_state-layer-size) / 2 + (100% - var(--_state-layer-size)) * (var(--_start-fraction) + (var(--_end-fraction) - var(--_start-fraction)) / 2)) 0 0)}.onTop{z-index:1}.handle{--md-ripple-hover-color: var(--_hover-state-layer-color);--md-ripple-hover-opacity: var(--_hover-state-layer-opacity);--md-ripple-pressed-color: var(--_pressed-state-layer-color);--md-ripple-pressed-opacity: var(--_pressed-state-layer-opacity)}md-ripple{border-radius:50%;height:var(--_state-layer-size);width:var(--_state-layer-size)}\n`;\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {CSSResultOrNative} from 'lit';\nimport {customElement} from 'lit/decorators.js';\n\nimport {styles as forcedColorsStyles} from './internal/forced-colors-styles.js';\nimport {Slider} from './internal/slider.js';\nimport {styles} from './internal/slider-styles.js';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'md-slider': MdSlider;\n  }\n}\n\n/**\n * @summary Sliders allow users to view and select a value (or range) along\n * a track.\n *\n * @description\n * Changes made with sliders are immediate, allowing the user to make slider\n * adjustments while determining a selection. Sliders shouldn’t be used to\n * adjust settings with any delay in providing user feedback. Sliders reflect\n * the current state of the settings they control.\n *\n * __Example usages:__\n * - Sliders are ideal for adjusting settings such as volume and brightness, or\n * for applying image filters.\n *\n * @final\n * @suppress {visibility}\n */\n@customElement('md-slider')\nexport class MdSlider extends Slider {\n  static override styles: CSSResultOrNative[] = [styles, forcedColorsStyles];\n}\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport '../../focus/md-focus-ring.js';\nimport '../../ripple/ripple.js';\n\nimport {html, isServer, LitElement, nothing, TemplateResult} from 'lit';\nimport {property, query} from 'lit/decorators.js';\nimport {ClassInfo, classMap} from 'lit/directives/class-map.js';\n\nimport {requestUpdateOnAriaChange} from '../../internal/aria/delegate.js';\nimport {\n  dispatchActivationClick,\n  isActivationClick,\n} from '../../internal/events/form-label-activation.js';\nimport {redispatchEvent} from '../../internal/events/redispatch-event.js';\nimport {\n  createValidator,\n  getValidityAnchor,\n  mixinConstraintValidation,\n} from '../../labs/behaviors/constraint-validation.js';\nimport {mixinElementInternals} from '../../labs/behaviors/element-internals.js';\nimport {\n  getFormState,\n  getFormValue,\n  mixinFormAssociated,\n} from '../../labs/behaviors/form-associated.js';\nimport {CheckboxValidator} from '../../labs/behaviors/validators/checkbox-validator.js';\n\n// Separate variable needed for closure.\nconst switchBaseClass = mixinConstraintValidation(\n  mixinFormAssociated(mixinElementInternals(LitElement)),\n);\n\n/**\n * @fires input {InputEvent} Fired whenever `selected` changes due to user\n * interaction (bubbles and composed).\n * @fires change {Event} Fired whenever `selected` changes due to user\n * interaction (bubbles).\n */\nexport class Switch extends switchBaseClass {\n  static {\n    requestUpdateOnAriaChange(Switch);\n  }\n\n  /** @nocollapse */\n  static override shadowRootOptions: ShadowRootInit = {\n    mode: 'open',\n    delegatesFocus: true,\n  };\n\n  /**\n   * Puts the switch in the selected state and sets the form submission value to\n   * the `value` property.\n   */\n  @property({type: Boolean}) selected = false;\n\n  /**\n   * Shows both the selected and deselected icons.\n   */\n  @property({type: Boolean}) icons = false;\n\n  /**\n   * Shows only the selected icon, and not the deselected icon. If `true`,\n   * overrides the behavior of the `icons` property.\n   */\n  @property({type: Boolean, attribute: 'show-only-selected-icon'})\n  showOnlySelectedIcon = false;\n\n  /**\n   * When true, require the switch to be selected when participating in\n   * form submission.\n   *\n   * https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/checkbox#validation\n   */\n  @property({type: Boolean}) required = false;\n\n  /**\n   * The value associated with this switch on form submission. `null` is\n   * submitted when `selected` is `false`.\n   */\n  @property() value = 'on';\n\n  @query('input') private readonly input!: HTMLInputElement | null;\n\n  constructor() {\n    super();\n    if (!isServer) {\n      this.addEventListener('click', (event: MouseEvent) => {\n        if (!isActivationClick(event) || !this.input) {\n          return;\n        }\n        this.focus();\n        dispatchActivationClick(this.input);\n      });\n    }\n  }\n\n  protected override render(): TemplateResult {\n    // NOTE: buttons must use only [phrasing\n    // content](https://html.spec.whatwg.org/multipage/dom.html#phrasing-content)\n    // children, which includes custom elements, but not `div`s\n    return html`\n      <div class=\"switch ${classMap(this.getRenderClasses())}\">\n        <input\n          id=\"switch\"\n          class=\"touch\"\n          type=\"checkbox\"\n          role=\"switch\"\n          aria-label=${(this as ARIAMixin).ariaLabel || nothing}\n          ?checked=${this.selected}\n          ?disabled=${this.disabled}\n          ?required=${this.required}\n          @input=${this.handleInput}\n          @change=${this.handleChange} />\n\n        <md-focus-ring part=\"focus-ring\" for=\"switch\"></md-focus-ring>\n        <span class=\"track\"> ${this.renderHandle()} </span>\n      </div>\n    `;\n  }\n\n  private getRenderClasses(): ClassInfo {\n    return {\n      'selected': this.selected,\n      'unselected': !this.selected,\n      'disabled': this.disabled,\n    };\n  }\n\n  private renderHandle() {\n    const classes = {\n      'with-icon': this.showOnlySelectedIcon ? this.selected : this.icons,\n    };\n    return html`\n      ${this.renderTouchTarget()}\n      <span class=\"handle-container\">\n        <md-ripple for=\"switch\" ?disabled=\"${this.disabled}\"></md-ripple>\n        <span class=\"handle ${classMap(classes)}\">\n          ${this.shouldShowIcons() ? this.renderIcons() : html``}\n        </span>\n      </span>\n    `;\n  }\n\n  private renderIcons() {\n    return html`\n      <div class=\"icons\">\n        ${this.renderOnIcon()}\n        ${this.showOnlySelectedIcon ? html`` : this.renderOffIcon()}\n      </div>\n    `;\n  }\n\n  /**\n   * https://fonts.google.com/icons?selected=Material%20Symbols%20Outlined%3Acheck%3AFILL%400%3Bwght%40500%3BGRAD%400%3Bopsz%4024\n   */\n  private renderOnIcon() {\n    return html`\n      <slot class=\"icon icon--on\" name=\"on-icon\">\n        <svg viewBox=\"0 0 24 24\">\n          <path\n            d=\"M9.55 18.2 3.65 12.3 5.275 10.675 9.55 14.95 18.725 5.775 20.35 7.4Z\" />\n        </svg>\n      </slot>\n    `;\n  }\n\n  /**\n   * https://fonts.google.com/icons?selected=Material%20Symbols%20Outlined%3Aclose%3AFILL%400%3Bwght%40500%3BGRAD%400%3Bopsz%4024\n   */\n  private renderOffIcon() {\n    return html`\n      <slot class=\"icon icon--off\" name=\"off-icon\">\n        <svg viewBox=\"0 0 24 24\">\n          <path\n            d=\"M6.4 19.2 4.8 17.6 10.4 12 4.8 6.4 6.4 4.8 12 10.4 17.6 4.8 19.2 6.4 13.6 12 19.2 17.6 17.6 19.2 12 13.6Z\" />\n        </svg>\n      </slot>\n    `;\n  }\n\n  private renderTouchTarget() {\n    return html`<span class=\"touch\"></span>`;\n  }\n\n  private shouldShowIcons(): boolean {\n    return this.icons || this.showOnlySelectedIcon;\n  }\n\n  private handleInput(event: Event) {\n    const target = event.target as HTMLInputElement;\n    this.selected = target.checked;\n    // <input> 'input' event bubbles and is composed, don't re-dispatch it.\n  }\n\n  private handleChange(event: Event) {\n    // <input> 'change' event is not composed, re-dispatch it.\n    redispatchEvent(this, event);\n  }\n\n  // Writable mixin properties for lit-html binding, needed for lit-analyzer\n  declare disabled: boolean;\n  declare name: string;\n\n  override [getFormValue]() {\n    return this.selected ? this.value : null;\n  }\n\n  override [getFormState]() {\n    return String(this.selected);\n  }\n\n  override formResetCallback() {\n    // The selected property does not reflect, so the original attribute set by\n    // the user is used to determine the default value.\n    this.selected = this.hasAttribute('selected');\n  }\n\n  override formStateRestoreCallback(state: string) {\n    this.selected = state === 'true';\n  }\n\n  [createValidator]() {\n    return new CheckboxValidator(() => ({\n      checked: this.selected,\n      required: this.required,\n    }));\n  }\n\n  [getValidityAnchor]() {\n    return this.input;\n  }\n}\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./switch/internal/switch-styles.css.\nimport {css} from 'lit';\nexport const styles = css`@layer styles, hcm;@layer styles{:host{display:inline-flex;outline:none;vertical-align:top;-webkit-tap-highlight-color:rgba(0,0,0,0);cursor:pointer}:host([disabled]){cursor:default}:host([touch-target=wrapper]){margin:max(0px,(48px - var(--md-switch-track-height, 32px))/2) 0px}md-focus-ring{--md-focus-ring-shape-start-start: var(--md-switch-track-shape-start-start, var(--md-switch-track-shape, var(--md-sys-shape-corner-full, 9999px)));--md-focus-ring-shape-start-end: var(--md-switch-track-shape-start-end, var(--md-switch-track-shape, var(--md-sys-shape-corner-full, 9999px)));--md-focus-ring-shape-end-end: var(--md-switch-track-shape-end-end, var(--md-switch-track-shape, var(--md-sys-shape-corner-full, 9999px)));--md-focus-ring-shape-end-start: var(--md-switch-track-shape-end-start, var(--md-switch-track-shape, var(--md-sys-shape-corner-full, 9999px)))}.switch{align-items:center;display:inline-flex;flex-shrink:0;position:relative;width:var(--md-switch-track-width, 52px);height:var(--md-switch-track-height, 32px);border-start-start-radius:var(--md-switch-track-shape-start-start, var(--md-switch-track-shape, var(--md-sys-shape-corner-full, 9999px)));border-start-end-radius:var(--md-switch-track-shape-start-end, var(--md-switch-track-shape, var(--md-sys-shape-corner-full, 9999px)));border-end-end-radius:var(--md-switch-track-shape-end-end, var(--md-switch-track-shape, var(--md-sys-shape-corner-full, 9999px)));border-end-start-radius:var(--md-switch-track-shape-end-start, var(--md-switch-track-shape, var(--md-sys-shape-corner-full, 9999px)))}input{appearance:none;height:48px;outline:none;margin:0;position:absolute;width:100%;z-index:1;cursor:inherit}:host([touch-target=none]) input{display:none}}@layer styles{.track{position:absolute;width:100%;height:100%;box-sizing:border-box;border-radius:inherit;display:flex;justify-content:center;align-items:center}.track::before{content:\"\";display:flex;position:absolute;height:100%;width:100%;border-radius:inherit;box-sizing:border-box;transition-property:opacity,background-color;transition-timing-function:linear;transition-duration:67ms}.disabled .track{background-color:rgba(0,0,0,0);border-color:rgba(0,0,0,0)}.disabled .track::before,.disabled .track::after{transition:none;opacity:var(--md-switch-disabled-track-opacity, 0.12)}.disabled .track::before{background-clip:content-box}.selected .track::before{background-color:var(--md-switch-selected-track-color, var(--md-sys-color-primary, #6750a4))}.selected:hover .track::before{background-color:var(--md-switch-selected-hover-track-color, var(--md-sys-color-primary, #6750a4))}.selected:focus-within .track::before{background-color:var(--md-switch-selected-focus-track-color, var(--md-sys-color-primary, #6750a4))}.selected:active .track::before{background-color:var(--md-switch-selected-pressed-track-color, var(--md-sys-color-primary, #6750a4))}.selected.disabled .track{background-clip:border-box}.selected.disabled .track::before{background-color:var(--md-switch-disabled-selected-track-color, var(--md-sys-color-on-surface, #1d1b20))}.unselected .track::before{background-color:var(--md-switch-track-color, var(--md-sys-color-surface-container-highest, #e6e0e9));border-color:var(--md-switch-track-outline-color, var(--md-sys-color-outline, #79747e));border-style:solid;border-width:var(--md-switch-track-outline-width, 2px)}.unselected:hover .track::before{background-color:var(--md-switch-hover-track-color, var(--md-sys-color-surface-container-highest, #e6e0e9));border-color:var(--md-switch-hover-track-outline-color, var(--md-sys-color-outline, #79747e))}.unselected:focus-visible .track::before{background-color:var(--md-switch-focus-track-color, var(--md-sys-color-surface-container-highest, #e6e0e9));border-color:var(--md-switch-focus-track-outline-color, var(--md-sys-color-outline, #79747e))}.unselected:active .track::before{background-color:var(--md-switch-pressed-track-color, var(--md-sys-color-surface-container-highest, #e6e0e9));border-color:var(--md-switch-pressed-track-outline-color, var(--md-sys-color-outline, #79747e))}.unselected.disabled .track::before{background-color:var(--md-switch-disabled-track-color, var(--md-sys-color-surface-container-highest, #e6e0e9));border-color:var(--md-switch-disabled-track-outline-color, var(--md-sys-color-on-surface, #1d1b20))}}@layer hcm{@media(forced-colors: active){.selected .track::before{background:ButtonText;border-color:ButtonText}.disabled .track::before{border-color:GrayText;opacity:1}.disabled.selected .track::before{background:GrayText}}}@layer styles{.handle-container{display:flex;place-content:center;place-items:center;position:relative;transition:margin 300ms cubic-bezier(0.175, 0.885, 0.32, 1.275)}.selected .handle-container{margin-inline-start:calc(var(--md-switch-track-width, 52px) - var(--md-switch-track-height, 32px))}.unselected .handle-container{margin-inline-end:calc(var(--md-switch-track-width, 52px) - var(--md-switch-track-height, 32px))}.disabled .handle-container{transition:none}.handle{border-start-start-radius:var(--md-switch-handle-shape-start-start, var(--md-switch-handle-shape, var(--md-sys-shape-corner-full, 9999px)));border-start-end-radius:var(--md-switch-handle-shape-start-end, var(--md-switch-handle-shape, var(--md-sys-shape-corner-full, 9999px)));border-end-end-radius:var(--md-switch-handle-shape-end-end, var(--md-switch-handle-shape, var(--md-sys-shape-corner-full, 9999px)));border-end-start-radius:var(--md-switch-handle-shape-end-start, var(--md-switch-handle-shape, var(--md-sys-shape-corner-full, 9999px)));height:var(--md-switch-handle-height, 16px);width:var(--md-switch-handle-width, 16px);transform-origin:center;transition-property:height,width;transition-duration:250ms,250ms;transition-timing-function:cubic-bezier(0.2, 0, 0, 1),cubic-bezier(0.2, 0, 0, 1);z-index:0}.handle::before{content:\"\";display:flex;inset:0;position:absolute;border-radius:inherit;box-sizing:border-box;transition:background-color 67ms linear}.disabled .handle,.disabled .handle::before{transition:none}.selected .handle{height:var(--md-switch-selected-handle-height, 24px);width:var(--md-switch-selected-handle-width, 24px)}.handle.with-icon{height:var(--md-switch-with-icon-handle-height, 24px);width:var(--md-switch-with-icon-handle-width, 24px)}.selected:not(.disabled):active .handle,.unselected:not(.disabled):active .handle{height:var(--md-switch-pressed-handle-height, 28px);width:var(--md-switch-pressed-handle-width, 28px);transition-timing-function:linear;transition-duration:100ms}.selected .handle::before{background-color:var(--md-switch-selected-handle-color, var(--md-sys-color-on-primary, #fff))}.selected:hover .handle::before{background-color:var(--md-switch-selected-hover-handle-color, var(--md-sys-color-primary-container, #eaddff))}.selected:focus-within .handle::before{background-color:var(--md-switch-selected-focus-handle-color, var(--md-sys-color-primary-container, #eaddff))}.selected:active .handle::before{background-color:var(--md-switch-selected-pressed-handle-color, var(--md-sys-color-primary-container, #eaddff))}.selected.disabled .handle::before{background-color:var(--md-switch-disabled-selected-handle-color, var(--md-sys-color-surface, #fef7ff));opacity:var(--md-switch-disabled-selected-handle-opacity, 1)}.unselected .handle::before{background-color:var(--md-switch-handle-color, var(--md-sys-color-outline, #79747e))}.unselected:hover .handle::before{background-color:var(--md-switch-hover-handle-color, var(--md-sys-color-on-surface-variant, #49454f))}.unselected:focus-within .handle::before{background-color:var(--md-switch-focus-handle-color, var(--md-sys-color-on-surface-variant, #49454f))}.unselected:active .handle::before{background-color:var(--md-switch-pressed-handle-color, var(--md-sys-color-on-surface-variant, #49454f))}.unselected.disabled .handle::before{background-color:var(--md-switch-disabled-handle-color, var(--md-sys-color-on-surface, #1d1b20));opacity:var(--md-switch-disabled-handle-opacity, 0.38)}md-ripple{border-radius:var(--md-switch-state-layer-shape, var(--md-sys-shape-corner-full, 9999px));height:var(--md-switch-state-layer-size, 40px);inset:unset;width:var(--md-switch-state-layer-size, 40px)}.selected md-ripple{--md-ripple-hover-color: var(--md-switch-selected-hover-state-layer-color, var(--md-sys-color-primary, #6750a4));--md-ripple-pressed-color: var(--md-switch-selected-pressed-state-layer-color, var(--md-sys-color-primary, #6750a4));--md-ripple-hover-opacity: var(--md-switch-selected-hover-state-layer-opacity, 0.08);--md-ripple-pressed-opacity: var(--md-switch-selected-pressed-state-layer-opacity, 0.12)}.unselected md-ripple{--md-ripple-hover-color: var(--md-switch-hover-state-layer-color, var(--md-sys-color-on-surface, #1d1b20));--md-ripple-pressed-color: var(--md-switch-pressed-state-layer-color, var(--md-sys-color-on-surface, #1d1b20));--md-ripple-hover-opacity: var(--md-switch-hover-state-layer-opacity, 0.08);--md-ripple-pressed-opacity: var(--md-switch-pressed-state-layer-opacity, 0.12)}}@layer hcm{@media(forced-colors: active){.unselected .handle::before{background:ButtonText}.disabled .handle::before{opacity:1}.disabled.unselected .handle::before{background:GrayText}}}@layer styles{.icons{position:relative;height:100%;width:100%}.icon{position:absolute;inset:0;margin:auto;display:flex;align-items:center;justify-content:center;fill:currentColor;transition:fill 67ms linear,opacity 33ms linear,transform 167ms cubic-bezier(0.2, 0, 0, 1);opacity:0}.disabled .icon{transition:none}.selected .icon--on,.unselected .icon--off{opacity:1}.unselected .handle:not(.with-icon) .icon--on{transform:rotate(-45deg)}.icon--off{width:var(--md-switch-icon-size, 16px);height:var(--md-switch-icon-size, 16px);color:var(--md-switch-icon-color, var(--md-sys-color-surface-container-highest, #e6e0e9))}.unselected:hover .icon--off{color:var(--md-switch-hover-icon-color, var(--md-sys-color-surface-container-highest, #e6e0e9))}.unselected:focus-within .icon--off{color:var(--md-switch-focus-icon-color, var(--md-sys-color-surface-container-highest, #e6e0e9))}.unselected:active .icon--off{color:var(--md-switch-pressed-icon-color, var(--md-sys-color-surface-container-highest, #e6e0e9))}.unselected.disabled .icon--off{color:var(--md-switch-disabled-icon-color, var(--md-sys-color-surface-container-highest, #e6e0e9));opacity:var(--md-switch-disabled-icon-opacity, 0.38)}.icon--on{width:var(--md-switch-selected-icon-size, 16px);height:var(--md-switch-selected-icon-size, 16px);color:var(--md-switch-selected-icon-color, var(--md-sys-color-on-primary-container, #21005d))}.selected:hover .icon--on{color:var(--md-switch-selected-hover-icon-color, var(--md-sys-color-on-primary-container, #21005d))}.selected:focus-within .icon--on{color:var(--md-switch-selected-focus-icon-color, var(--md-sys-color-on-primary-container, #21005d))}.selected:active .icon--on{color:var(--md-switch-selected-pressed-icon-color, var(--md-sys-color-on-primary-container, #21005d))}.selected.disabled .icon--on{color:var(--md-switch-disabled-selected-icon-color, var(--md-sys-color-on-surface, #1d1b20));opacity:var(--md-switch-disabled-selected-icon-opacity, 0.38)}}@layer hcm{@media(forced-colors: active){.icon--off{fill:Canvas}.icon--on{fill:ButtonText}.disabled.unselected .icon--off,.disabled.selected .icon--on{opacity:1}.disabled .icon--on{fill:GrayText}}}\n`;\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {CSSResultOrNative} from 'lit';\nimport {customElement} from 'lit/decorators.js';\n\nimport {Switch} from './internal/switch.js';\nimport {styles} from './internal/switch-styles.js';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'md-switch': MdSwitch;\n  }\n}\n\n/**\n * @summary Switches toggle the state of a single item on or off.\n *\n * @description\n * There's one type of switch in Material. Use this selection control when the\n * user needs to toggle a single item on or off.\n *\n * @final\n * @suppress {visibility}\n */\n@customElement('md-switch')\nexport class MdSwitch extends Switch {\n  static override styles: CSSResultOrNative[] = [styles];\n}\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport '../../elevation/elevation.js';\nimport '../../focus/md-focus-ring.js';\nimport '../../ripple/ripple.js';\n\nimport {html, isServer, LitElement, nothing} from 'lit';\nimport {\n  property,\n  query,\n  queryAssignedElements,\n  queryAssignedNodes,\n  state,\n} from 'lit/decorators.js';\nimport {ClassInfo, classMap} from 'lit/directives/class-map.js';\n\nimport {EASING} from '../../internal/motion/animation.js';\nimport {mixinFocusable} from '../../labs/behaviors/focusable.js';\n\n/**\n * Symbol for tabs to use to animate their indicators based off another tab's\n * indicator.\n */\nconst INDICATOR = Symbol('indicator');\n\n/**\n * Symbol used by the tab bar to request a tab to animate its indicator from a\n * previously selected tab.\n */\nexport const ANIMATE_INDICATOR = Symbol('animateIndicator');\n\n// Separate variable needed for closure.\nconst tabBaseClass = mixinFocusable(LitElement);\n\n/**\n * Tab component.\n */\nexport class Tab extends tabBaseClass {\n  /**\n   * The attribute `md-tab` indicates that the element is a tab for the parent\n   * element, `<md-tabs>`. Make sure if you're implementing your own `md-tab`\n   * component that you have an `md-tab` attribute set.\n   */\n  @property({type: Boolean, reflect: true, attribute: 'md-tab'})\n  readonly isTab = true;\n\n  /**\n   * Whether or not the tab is selected.\n   **/\n  @property({type: Boolean, reflect: true}) active = false;\n\n  /**\n   * @deprecated use `active`\n   */\n  @property({type: Boolean})\n  get selected() {\n    return this.active;\n  }\n  set selected(active: boolean) {\n    this.active = active;\n  }\n\n  /**\n   * In SSR, set this to true when an icon is present.\n   */\n  @property({type: Boolean, attribute: 'has-icon'}) hasIcon = false;\n\n  /**\n   * In SSR, set this to true when there is no label and only an icon.\n   */\n  @property({type: Boolean, attribute: 'icon-only'}) iconOnly = false;\n\n  @query('.indicator') readonly [INDICATOR]!: HTMLElement | null;\n  @state() protected fullWidthIndicator = false;\n  @queryAssignedNodes({flatten: true})\n  private readonly assignedDefaultNodes!: Node[];\n  @queryAssignedElements({slot: 'icon', flatten: true})\n  private readonly assignedIcons!: HTMLElement[];\n  private readonly internals =\n    // Cast needed for closure\n    (this as HTMLElement).attachInternals();\n\n  constructor() {\n    super();\n    if (!isServer) {\n      this.internals.role = 'tab';\n      this.addEventListener('keydown', this.handleKeydown.bind(this));\n    }\n  }\n\n  protected override render() {\n    const indicator = html`<div class=\"indicator\"></div>`;\n    return html`<div\n      class=\"button\"\n      role=\"presentation\"\n      @click=${this.handleContentClick}>\n      <md-focus-ring part=\"focus-ring\" inward .control=${this}></md-focus-ring>\n      <md-elevation part=\"elevation\"></md-elevation>\n      <md-ripple .control=${this}></md-ripple>\n      <div\n        class=\"content ${classMap(this.getContentClasses())}\"\n        role=\"presentation\">\n        <slot name=\"icon\" @slotchange=${this.handleIconSlotChange}></slot>\n        <slot @slotchange=${this.handleSlotChange}></slot>\n        ${this.fullWidthIndicator ? nothing : indicator}\n      </div>\n      ${this.fullWidthIndicator ? indicator : nothing}\n    </div>`;\n  }\n\n  protected getContentClasses(): ClassInfo {\n    return {\n      'has-icon': this.hasIcon,\n      'has-label': !this.iconOnly,\n    };\n  }\n\n  protected override updated() {\n    this.internals.ariaSelected = String(this.active);\n  }\n\n  private async handleKeydown(event: KeyboardEvent) {\n    // Allow event to bubble.\n    await 0;\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    if (event.key === 'Enter' || event.key === ' ') {\n      // Prevent default behavior such as scrolling when pressing spacebar.\n      event.preventDefault();\n      this.click();\n    }\n  }\n\n  private handleContentClick(event: Event) {\n    // Ensure the \"click\" target is always the tab, and not content, by stopping\n    // propagation of content clicks and re-clicking the host.\n    event.stopPropagation();\n    this.click();\n  }\n\n  [ANIMATE_INDICATOR](previousTab: Tab) {\n    if (!this[INDICATOR]) {\n      return;\n    }\n\n    this[INDICATOR].getAnimations().forEach((a) => {\n      a.cancel();\n    });\n    const frames = this.getKeyframes(previousTab);\n    if (frames !== null) {\n      this[INDICATOR].animate(frames, {\n        duration: 250,\n        easing: EASING.EMPHASIZED,\n      });\n    }\n  }\n\n  private getKeyframes(previousTab: Tab) {\n    const reduceMotion = shouldReduceMotion();\n    if (!this.active) {\n      return reduceMotion ? [{'opacity': 1}, {'transform': 'none'}] : null;\n    }\n\n    const from: Keyframe = {};\n    const fromRect =\n      previousTab[INDICATOR]?.getBoundingClientRect() ?? ({} as DOMRect);\n    const fromPos = fromRect.left;\n    const fromExtent = fromRect.width;\n    const toRect = this[INDICATOR]!.getBoundingClientRect();\n    const toPos = toRect.left;\n    const toExtent = toRect.width;\n    const scale = fromExtent / toExtent;\n    if (\n      !reduceMotion &&\n      fromPos !== undefined &&\n      toPos !== undefined &&\n      !isNaN(scale)\n    ) {\n      from['transform'] = `translateX(${(fromPos - toPos).toFixed(\n        4,\n      )}px) scaleX(${scale.toFixed(4)})`;\n    } else {\n      from['opacity'] = 0;\n    }\n    // note, including `transform: none` avoids quirky Safari behavior\n    // that can hide the animation.\n    return [from, {'transform': 'none'}];\n  }\n\n  private handleSlotChange() {\n    this.iconOnly = false;\n    // Check if there's any label text or elements. If not, then there is only\n    // an icon.\n    for (const node of this.assignedDefaultNodes) {\n      const hasTextContent =\n        node.nodeType === Node.TEXT_NODE &&\n        !!(node as Text).wholeText.match(/\\S/);\n      if (node.nodeType === Node.ELEMENT_NODE || hasTextContent) {\n        return;\n      }\n    }\n\n    this.iconOnly = true;\n  }\n\n  private handleIconSlotChange() {\n    this.hasIcon = this.assignedIcons.length > 0;\n  }\n}\n\nfunction shouldReduceMotion() {\n  return window.matchMedia('(prefers-reduced-motion: reduce)').matches;\n}\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {property} from 'lit/decorators.js';\n\nimport {Tab} from './tab.js';\n\n/**\n * A primary tab component.\n */\nexport class PrimaryTab extends Tab {\n  /**\n   * Whether or not the icon renders inline with label or stacked vertically.\n   */\n  @property({type: Boolean, attribute: 'inline-icon'}) inlineIcon = false;\n\n  protected override getContentClasses() {\n    return {\n      ...super.getContentClasses(),\n      'stacked': !this.inlineIcon,\n    };\n  }\n}\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./tabs/internal/primary-tab-styles.css.\nimport {css} from 'lit';\nexport const styles = css`:host{--_active-indicator-color: var(--md-primary-tab-active-indicator-color, var(--md-sys-color-primary, #6750a4));--_active-indicator-height: var(--md-primary-tab-active-indicator-height, 3px);--_active-indicator-shape: var(--md-primary-tab-active-indicator-shape, 3px 3px 0px 0px);--_active-hover-state-layer-color: var(--md-primary-tab-active-hover-state-layer-color, var(--md-sys-color-primary, #6750a4));--_active-hover-state-layer-opacity: var(--md-primary-tab-active-hover-state-layer-opacity, 0.08);--_active-pressed-state-layer-color: var(--md-primary-tab-active-pressed-state-layer-color, var(--md-sys-color-primary, #6750a4));--_active-pressed-state-layer-opacity: var(--md-primary-tab-active-pressed-state-layer-opacity, 0.12);--_container-color: var(--md-primary-tab-container-color, var(--md-sys-color-surface, #fef7ff));--_container-elevation: var(--md-primary-tab-container-elevation, 0);--_container-height: var(--md-primary-tab-container-height, 48px);--_with-icon-and-label-text-container-height: var(--md-primary-tab-with-icon-and-label-text-container-height, 64px);--_hover-state-layer-color: var(--md-primary-tab-hover-state-layer-color, var(--md-sys-color-on-surface, #1d1b20));--_hover-state-layer-opacity: var(--md-primary-tab-hover-state-layer-opacity, 0.08);--_pressed-state-layer-color: var(--md-primary-tab-pressed-state-layer-color, var(--md-sys-color-primary, #6750a4));--_pressed-state-layer-opacity: var(--md-primary-tab-pressed-state-layer-opacity, 0.12);--_active-focus-icon-color: var(--md-primary-tab-active-focus-icon-color, var(--md-sys-color-primary, #6750a4));--_active-hover-icon-color: var(--md-primary-tab-active-hover-icon-color, var(--md-sys-color-primary, #6750a4));--_active-icon-color: var(--md-primary-tab-active-icon-color, var(--md-sys-color-primary, #6750a4));--_active-pressed-icon-color: var(--md-primary-tab-active-pressed-icon-color, var(--md-sys-color-primary, #6750a4));--_icon-size: var(--md-primary-tab-icon-size, 24px);--_focus-icon-color: var(--md-primary-tab-focus-icon-color, var(--md-sys-color-on-surface, #1d1b20));--_hover-icon-color: var(--md-primary-tab-hover-icon-color, var(--md-sys-color-on-surface, #1d1b20));--_icon-color: var(--md-primary-tab-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_pressed-icon-color: var(--md-primary-tab-pressed-icon-color, var(--md-sys-color-on-surface, #1d1b20));--_label-text-font: var(--md-primary-tab-label-text-font, var(--md-sys-typescale-title-small-font, var(--md-ref-typeface-plain, Roboto)));--_label-text-line-height: var(--md-primary-tab-label-text-line-height, var(--md-sys-typescale-title-small-line-height, 1.25rem));--_label-text-size: var(--md-primary-tab-label-text-size, var(--md-sys-typescale-title-small-size, 0.875rem));--_label-text-weight: var(--md-primary-tab-label-text-weight, var(--md-sys-typescale-title-small-weight, var(--md-ref-typeface-weight-medium, 500)));--_active-focus-label-text-color: var(--md-primary-tab-active-focus-label-text-color, var(--md-sys-color-primary, #6750a4));--_active-hover-label-text-color: var(--md-primary-tab-active-hover-label-text-color, var(--md-sys-color-primary, #6750a4));--_active-label-text-color: var(--md-primary-tab-active-label-text-color, var(--md-sys-color-primary, #6750a4));--_active-pressed-label-text-color: var(--md-primary-tab-active-pressed-label-text-color, var(--md-sys-color-primary, #6750a4));--_focus-label-text-color: var(--md-primary-tab-focus-label-text-color, var(--md-sys-color-on-surface, #1d1b20));--_hover-label-text-color: var(--md-primary-tab-hover-label-text-color, var(--md-sys-color-on-surface, #1d1b20));--_label-text-color: var(--md-primary-tab-label-text-color, var(--md-sys-color-on-surface-variant, #49454f));--_pressed-label-text-color: var(--md-primary-tab-pressed-label-text-color, var(--md-sys-color-on-surface, #1d1b20));--_container-shape-start-start: var(--md-primary-tab-container-shape-start-start, var(--md-primary-tab-container-shape, var(--md-sys-shape-corner-none, 0px)));--_container-shape-start-end: var(--md-primary-tab-container-shape-start-end, var(--md-primary-tab-container-shape, var(--md-sys-shape-corner-none, 0px)));--_container-shape-end-end: var(--md-primary-tab-container-shape-end-end, var(--md-primary-tab-container-shape, var(--md-sys-shape-corner-none, 0px)));--_container-shape-end-start: var(--md-primary-tab-container-shape-end-start, var(--md-primary-tab-container-shape, var(--md-sys-shape-corner-none, 0px)))}.content.stacked{flex-direction:column;gap:2px}.content.stacked.has-icon.has-label{height:var(--_with-icon-and-label-text-container-height)}\n`;\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./tabs/internal/tab-styles.css.\nimport {css} from 'lit';\nexport const styles = css`:host{display:inline-flex;align-items:center;justify-content:center;outline:none;padding:0 16px;position:relative;-webkit-tap-highlight-color:rgba(0,0,0,0);vertical-align:middle;user-select:none;font-family:var(--_label-text-font);font-size:var(--_label-text-size);line-height:var(--_label-text-line-height);font-weight:var(--_label-text-weight);color:var(--_label-text-color);z-index:0;--md-ripple-hover-color: var(--_hover-state-layer-color);--md-ripple-hover-opacity: var(--_hover-state-layer-opacity);--md-ripple-pressed-color: var(--_pressed-state-layer-color);--md-ripple-pressed-opacity: var(--_pressed-state-layer-opacity);--md-elevation-level: var(--_container-elevation)}md-focus-ring{--md-focus-ring-shape: 8px}:host([active]) md-focus-ring{margin-bottom:calc(var(--_active-indicator-height) + 1px)}.button::before{background:var(--_container-color);content:\"\";inset:0;position:absolute;z-index:-1}.button::before,md-ripple,md-elevation{border-start-start-radius:var(--_container-shape-start-start);border-start-end-radius:var(--_container-shape-start-end);border-end-end-radius:var(--_container-shape-end-end);border-end-start-radius:var(--_container-shape-end-start)}.content{position:relative;box-sizing:border-box;display:inline-flex;flex-direction:row;align-items:center;justify-content:center;height:var(--_container-height);gap:8px}.indicator{position:absolute;box-sizing:border-box;z-index:-1;transform-origin:bottom left;background:var(--_active-indicator-color);border-radius:var(--_active-indicator-shape);height:var(--_active-indicator-height);inset:auto 0 0 0;opacity:0}::slotted([slot=icon]){display:inline-flex;position:relative;writing-mode:horizontal-tb;fill:currentColor;color:var(--_icon-color);font-size:var(--_icon-size);width:var(--_icon-size);height:var(--_icon-size)}:host(:hover){color:var(--_hover-label-text-color);cursor:pointer}:host(:hover) ::slotted([slot=icon]){color:var(--_hover-icon-color)}:host(:focus){color:var(--_focus-label-text-color)}:host(:focus) ::slotted([slot=icon]){color:var(--_focus-icon-color)}:host(:active){color:var(--_pressed-label-text-color)}:host(:active) ::slotted([slot=icon]){color:var(--_pressed-icon-color)}:host([active]) .indicator{opacity:1}:host([active]){color:var(--_active-label-text-color);--md-ripple-hover-color: var(--_active-hover-state-layer-color);--md-ripple-hover-opacity: var(--_active-hover-state-layer-opacity);--md-ripple-pressed-color: var(--_active-pressed-state-layer-color);--md-ripple-pressed-opacity: var(--_active-pressed-state-layer-opacity)}:host([active]) ::slotted([slot=icon]){color:var(--_active-icon-color)}:host([active]:hover){color:var(--_active-hover-label-text-color)}:host([active]:hover) ::slotted([slot=icon]){color:var(--_active-hover-icon-color)}:host([active]:focus){color:var(--_active-focus-label-text-color)}:host([active]:focus) ::slotted([slot=icon]){color:var(--_active-focus-icon-color)}:host([active]:active){color:var(--_active-pressed-label-text-color)}:host([active]:active) ::slotted([slot=icon]){color:var(--_active-pressed-icon-color)}:host,::slotted(*){white-space:nowrap}@media(forced-colors: active){.indicator{background:CanvasText}}\n`;\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {CSSResultOrNative} from 'lit';\nimport {customElement} from 'lit/decorators.js';\n\nimport {PrimaryTab} from './internal/primary-tab.js';\nimport {styles as primaryStyles} from './internal/primary-tab-styles.js';\nimport {styles as sharedStyles} from './internal/tab-styles.js';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'md-primary-tab': MdPrimaryTab;\n  }\n}\n\n// TODO(b/267336507): add docs\n/**\n * @summary Tab allow users to display a tab within a Tabs.\n *\n * @final\n * @suppress {visibility}\n */\n@customElement('md-primary-tab')\nexport class MdPrimaryTab extends PrimaryTab {\n  static override styles: CSSResultOrNative[] = [sharedStyles, primaryStyles];\n}\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {Tab} from './tab.js';\n\n/**\n * A secondary tab component.\n */\nexport class SecondaryTab extends Tab {\n  protected override fullWidthIndicator = true;\n}\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./tabs/internal/secondary-tab-styles.css.\nimport {css} from 'lit';\nexport const styles = css`:host{--_active-indicator-color: var(--md-secondary-tab-active-indicator-color, var(--md-sys-color-primary, #6750a4));--_active-indicator-height: var(--md-secondary-tab-active-indicator-height, 2px);--_active-label-text-color: var(--md-secondary-tab-active-label-text-color, var(--md-sys-color-on-surface, #1d1b20));--_container-color: var(--md-secondary-tab-container-color, var(--md-sys-color-surface, #fef7ff));--_container-elevation: var(--md-secondary-tab-container-elevation, 0);--_container-height: var(--md-secondary-tab-container-height, 48px);--_focus-label-text-color: var(--md-secondary-tab-focus-label-text-color, var(--md-sys-color-on-surface, #1d1b20));--_hover-label-text-color: var(--md-secondary-tab-hover-label-text-color, var(--md-sys-color-on-surface, #1d1b20));--_hover-state-layer-color: var(--md-secondary-tab-hover-state-layer-color, var(--md-sys-color-on-surface, #1d1b20));--_hover-state-layer-opacity: var(--md-secondary-tab-hover-state-layer-opacity, 0.08);--_label-text-font: var(--md-secondary-tab-label-text-font, var(--md-sys-typescale-title-small-font, var(--md-ref-typeface-plain, Roboto)));--_label-text-line-height: var(--md-secondary-tab-label-text-line-height, var(--md-sys-typescale-title-small-line-height, 1.25rem));--_label-text-size: var(--md-secondary-tab-label-text-size, var(--md-sys-typescale-title-small-size, 0.875rem));--_label-text-weight: var(--md-secondary-tab-label-text-weight, var(--md-sys-typescale-title-small-weight, var(--md-ref-typeface-weight-medium, 500)));--_pressed-label-text-color: var(--md-secondary-tab-pressed-label-text-color, var(--md-sys-color-on-surface, #1d1b20));--_pressed-state-layer-color: var(--md-secondary-tab-pressed-state-layer-color, var(--md-sys-color-on-surface, #1d1b20));--_pressed-state-layer-opacity: var(--md-secondary-tab-pressed-state-layer-opacity, 0.12);--_active-focus-icon-color: var(--md-secondary-tab-active-focus-icon-color, );--_active-focus-label-text-color: var(--md-secondary-tab-active-focus-label-text-color, var(--md-sys-color-on-surface, #1d1b20));--_active-hover-icon-color: var(--md-secondary-tab-active-hover-icon-color, );--_active-hover-label-text-color: var(--md-secondary-tab-active-hover-label-text-color, var(--md-sys-color-on-surface, #1d1b20));--_active-hover-state-layer-color: var(--md-secondary-tab-active-hover-state-layer-color, var(--md-sys-color-on-surface, #1d1b20));--_active-hover-state-layer-opacity: var(--md-secondary-tab-active-hover-state-layer-opacity, 0.08);--_active-icon-color: var(--md-secondary-tab-active-icon-color, var(--md-sys-color-on-surface, #1d1b20));--_active-indicator-shape: var(--md-secondary-tab-active-indicator-shape, 0);--_active-pressed-icon-color: var(--md-secondary-tab-active-pressed-icon-color, );--_active-pressed-label-text-color: var(--md-secondary-tab-active-pressed-label-text-color, var(--md-sys-color-on-surface, #1d1b20));--_active-pressed-state-layer-color: var(--md-secondary-tab-active-pressed-state-layer-color, var(--md-sys-color-on-surface, #1d1b20));--_active-pressed-state-layer-opacity: var(--md-secondary-tab-active-pressed-state-layer-opacity, 0.12);--_label-text-color: var(--md-secondary-tab-label-text-color, var(--md-sys-color-on-surface-variant, #49454f));--_focus-icon-color: var(--md-secondary-tab-focus-icon-color, var(--md-sys-color-on-surface, #1d1b20));--_hover-icon-color: var(--md-secondary-tab-hover-icon-color, var(--md-sys-color-on-surface, #1d1b20));--_icon-size: var(--md-secondary-tab-icon-size, 24px);--_icon-color: var(--md-secondary-tab-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_pressed-icon-color: var(--md-secondary-tab-pressed-icon-color, var(--md-sys-color-on-surface, #1d1b20));--_container-shape-start-start: var(--md-secondary-tab-container-shape-start-start, var(--md-secondary-tab-container-shape, var(--md-sys-shape-corner-none, 0px)));--_container-shape-start-end: var(--md-secondary-tab-container-shape-start-end, var(--md-secondary-tab-container-shape, var(--md-sys-shape-corner-none, 0px)));--_container-shape-end-end: var(--md-secondary-tab-container-shape-end-end, var(--md-secondary-tab-container-shape, var(--md-sys-shape-corner-none, 0px)));--_container-shape-end-start: var(--md-secondary-tab-container-shape-end-start, var(--md-secondary-tab-container-shape, var(--md-sys-shape-corner-none, 0px)))}\n`;\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {CSSResultOrNative} from 'lit';\nimport {customElement} from 'lit/decorators.js';\n\nimport {SecondaryTab} from './internal/secondary-tab.js';\nimport {styles as secondaryStyles} from './internal/secondary-tab-styles.js';\nimport {styles as sharedStyles} from './internal/tab-styles.js';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'md-secondary-tab': MdSecondaryTab;\n  }\n}\n\n// TODO(b/267336507): add docs\n/**\n * @summary Tab allow users to display a tab within a Tabs.\n *\n * @final\n * @suppress {visibility}\n */\n@customElement('md-secondary-tab')\nexport class MdSecondaryTab extends SecondaryTab {\n  static override styles: CSSResultOrNative[] = [sharedStyles, secondaryStyles];\n}\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport '../../divider/divider.js';\n\nimport {html, isServer, LitElement} from 'lit';\nimport {property, query, queryAssignedElements} from 'lit/decorators.js';\n\nimport {ANIMATE_INDICATOR, Tab} from './tab.js';\n\n/**\n * @fires change {Event} Fired when the selected tab changes. The target's selected or\n * selectedItem and previousSelected or previousSelectedItem provide information\n * about the selection change. The change event is fired when a user interaction\n * like a space/enter key or click cause a selection change. The tab selection\n * based on these actions can be cancelled by calling preventDefault on the\n * triggering `keydown` or `click` event. --bubbles\n *\n * @example\n * // perform an action if a tab is clicked\n * tabs.addEventListener('change', (event: Event) => {\n *   if (event.target.selected === 2)\n *      takeAction();\n *   }\n * });\n *\n * // prevent a click from triggering tab selection under some condition\n * tabs.addEventListener('click', (event: Event) => {\n *   if (notReady)\n *      event.preventDefault();\n *   }\n * });\n *\n */\nexport class Tabs extends LitElement {\n  /**\n   * The tabs of this tab bar.\n   */\n  @queryAssignedElements({flatten: true, selector: '[md-tab]'})\n  readonly tabs!: Tab[];\n\n  /**\n   * The currently selected tab, `null` only when there are no tab children.\n   *\n   * @export\n   */\n  get activeTab() {\n    return this.tabs.find((tab) => tab.active) ?? null;\n  }\n  set activeTab(tab: Tab | null) {\n    // Ignore setting activeTab to null. As long as there are children, one tab\n    // must be selected.\n    if (tab) {\n      this.activateTab(tab);\n    }\n  }\n\n  /**\n   * The index of the currently selected tab.\n   *\n   * @export\n   */\n  @property({type: Number, attribute: 'active-tab-index'})\n  get activeTabIndex() {\n    return this.tabs.findIndex((tab) => tab.active);\n  }\n  set activeTabIndex(index: number) {\n    const activateTabAtIndex = () => {\n      const tab = this.tabs[index];\n      // Ignore out-of-bound indices.\n      if (tab) {\n        this.activateTab(tab);\n      }\n    };\n\n    if (!this.slotElement) {\n      // This is needed to support setting the activeTabIndex via a lit property\n      // binding.\n      //\n      // ```ts\n      // html`\n      //   <md-tabs .activeTabIndex=${1}>\n      //     <md-tab>First</md-tab>\n      //     <md-tab>Second</md-tab>\n      //   </md-tabs>\n      // `;\n      // ```\n      //\n      // It's needed since lit's rendering lifecycle is asynchronous, and the\n      // `<slot>` element hasn't rendered, so `tabs` is empty.\n      this.updateComplete.then(activateTabAtIndex);\n      return;\n    }\n\n    activateTabAtIndex();\n  }\n\n  /**\n   * Whether or not to automatically select a tab when it is focused.\n   */\n  @property({type: Boolean, attribute: 'auto-activate'}) autoActivate = false;\n\n  @query('.tabs') private readonly tabsScrollerElement!: HTMLElement | null;\n  @query('slot') private readonly slotElement!: HTMLSlotElement | null;\n\n  private get focusedTab() {\n    return this.tabs.find((tab) => tab.matches(':focus-within'));\n  }\n\n  private readonly internals =\n    // Cast needed for closure\n    (this as HTMLElement).attachInternals();\n\n  constructor() {\n    super();\n    if (!isServer) {\n      this.internals.role = 'tablist';\n      this.addEventListener('keydown', this.handleKeydown.bind(this));\n      this.addEventListener('keyup', this.handleKeyup.bind(this));\n      this.addEventListener('focusout', this.handleFocusout.bind(this));\n    }\n  }\n\n  /**\n   * Scrolls the toolbar, if overflowing, to the active tab, or the provided\n   * tab.\n   *\n   * @param tabToScrollTo The tab that should be scrolled to. Defaults to the\n   *     active tab.\n   * @return A Promise that resolves after the tab has been scrolled to.\n   */\n  async scrollToTab(tabToScrollTo?: Tab | null) {\n    await this.updateComplete;\n    const {tabs} = this;\n    tabToScrollTo ??= this.activeTab;\n    if (\n      !tabToScrollTo ||\n      !tabs.includes(tabToScrollTo) ||\n      !this.tabsScrollerElement\n    ) {\n      return;\n    }\n\n    // wait for tabs to render.\n    for (const tab of this.tabs) {\n      await tab.updateComplete;\n    }\n\n    const offset = tabToScrollTo.offsetLeft;\n    const extent = tabToScrollTo.offsetWidth;\n    const scroll = this.scrollLeft;\n    const hostExtent = this.offsetWidth;\n    const scrollMargin = 48;\n    const min = offset - scrollMargin;\n    const max = offset + extent - hostExtent + scrollMargin;\n    const to = Math.min(min, Math.max(max, scroll));\n    // When a tab is focused, use 'auto' to use the CSS `scroll-behavior`. The\n    // default behavior is smooth scrolling. However, when there is not a tab\n    // focused on initialization, use 'instant' to immediately bring the focused\n    // tab into view.\n    const behavior: ScrollBehavior = !this.focusedTab ? 'instant' : 'auto';\n    this.tabsScrollerElement.scrollTo({behavior, top: 0, left: to});\n  }\n\n  protected override render() {\n    return html`\n      <div class=\"tabs\">\n        <slot\n          @slotchange=${this.handleSlotChange}\n          @click=${this.handleTabClick}></slot>\n      </div>\n      <md-divider part=\"divider\"></md-divider>\n    `;\n  }\n\n  private async handleTabClick(event: Event) {\n    const tab = event.target;\n    // Allow event to bubble\n    await 0;\n    if (event.defaultPrevented || !isTab(tab) || tab.active) {\n      return;\n    }\n\n    this.activateTab(tab);\n  }\n\n  private activateTab(activeTab: Tab) {\n    const {tabs} = this;\n    const previousTab = this.activeTab;\n    if (!tabs.includes(activeTab) || previousTab === activeTab) {\n      // Ignore setting activeTab to a tab element that is not a child.\n      return;\n    }\n\n    for (const tab of tabs) {\n      tab.active = tab === activeTab;\n    }\n\n    if (previousTab) {\n      // Don't dispatch a change event if activating a tab when no previous tabs\n      // were selected, such as when md-tabs auto-selects the first tab.\n      const defaultPrevented = !this.dispatchEvent(\n        new Event('change', {bubbles: true, cancelable: true}),\n      );\n      if (defaultPrevented) {\n        for (const tab of tabs) {\n          tab.active = tab === previousTab;\n        }\n        return;\n      }\n\n      activeTab[ANIMATE_INDICATOR](previousTab);\n    }\n\n    this.updateFocusableTab(activeTab);\n    this.scrollToTab(activeTab);\n  }\n\n  private updateFocusableTab(focusableTab: Tab) {\n    for (const tab of this.tabs) {\n      tab.tabIndex = tab === focusableTab ? 0 : -1;\n    }\n  }\n\n  // focus item on keydown and optionally select it\n  private async handleKeydown(event: KeyboardEvent) {\n    // Allow event to bubble.\n    await 0;\n    const isLeft = event.key === 'ArrowLeft';\n    const isRight = event.key === 'ArrowRight';\n    const isHome = event.key === 'Home';\n    const isEnd = event.key === 'End';\n    // Ignore non-navigation keys\n    if (event.defaultPrevented || (!isLeft && !isRight && !isHome && !isEnd)) {\n      return;\n    }\n\n    const {tabs} = this;\n    // Don't try to select another tab if there aren't any.\n    if (tabs.length < 2) {\n      return;\n    }\n\n    // Prevent default interactions, such as scrolling.\n    event.preventDefault();\n\n    let indexToFocus: number;\n    if (isHome || isEnd) {\n      indexToFocus = isHome ? 0 : tabs.length - 1;\n    } else {\n      // Check if moving forwards or backwards\n      const isRtl = getComputedStyle(this).direction === 'rtl';\n      const forwards = isRtl ? isLeft : isRight;\n      const {focusedTab} = this;\n      if (!focusedTab) {\n        // If there is not already a tab focused, select the first or last tab\n        // based on the direction we're traveling.\n        indexToFocus = forwards ? 0 : tabs.length - 1;\n      } else {\n        const focusedIndex = this.tabs.indexOf(focusedTab);\n        indexToFocus = forwards ? focusedIndex + 1 : focusedIndex - 1;\n        if (indexToFocus >= tabs.length) {\n          // Return to start if moving past the last item.\n          indexToFocus = 0;\n        } else if (indexToFocus < 0) {\n          // Go to end if moving before the first item.\n          indexToFocus = tabs.length - 1;\n        }\n      }\n    }\n\n    const tabToFocus = tabs[indexToFocus];\n    tabToFocus.focus();\n    if (this.autoActivate) {\n      this.activateTab(tabToFocus);\n    } else {\n      this.updateFocusableTab(tabToFocus);\n    }\n  }\n\n  // scroll to item on keyup.\n  private handleKeyup() {\n    this.scrollToTab(this.focusedTab ?? this.activeTab);\n  }\n\n  private handleFocusout() {\n    // restore focus to selected item when blurring the tab bar.\n    if (this.matches(':focus-within')) {\n      return;\n    }\n\n    const {activeTab} = this;\n    if (activeTab) {\n      this.updateFocusableTab(activeTab);\n    }\n  }\n\n  private handleSlotChange() {\n    const firstTab = this.tabs[0];\n    if (!this.activeTab && firstTab) {\n      // If the active tab was removed, auto-select the first one. There should\n      // always be a selected tab while the bar has children.\n      this.activateTab(firstTab);\n    }\n\n    // When children shift, ensure the active tab is visible. For example, if\n    // many children are added before the active tab, it'd be pushed off screen.\n    // This ensures it stays visible.\n    this.scrollToTab(this.activeTab);\n  }\n}\n\nfunction isTab(element: unknown): element is Tab {\n  return element instanceof HTMLElement && element.hasAttribute('md-tab');\n}\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./tabs/internal/tabs-styles.css.\nimport {css} from 'lit';\nexport const styles = css`:host{box-sizing:border-box;display:flex;flex-direction:column;overflow:auto;scroll-behavior:smooth;scrollbar-width:none;position:relative}:host([hidden]){display:none}:host::-webkit-scrollbar{display:none}.tabs{align-items:end;display:flex;height:100%;overflow:inherit;scroll-behavior:inherit;scrollbar-width:inherit;justify-content:space-between;width:100%}::slotted(*){flex:1}::slotted([active]){z-index:1}\n`;\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {CSSResultOrNative} from 'lit';\nimport {customElement} from 'lit/decorators.js';\n\nimport {Tabs} from './internal/tabs.js';\nimport {styles} from './internal/tabs-styles.js';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'md-tabs': MdTabs;\n  }\n}\n\n// TODO(b/267336507): add docs\n/**\n * @summary Tabs displays a list of selectable tabs.\n *\n * @final\n * @suppress {visibility}\n */\n@customElement('md-tabs')\nexport class MdTabs extends Tabs {\n  static override styles: CSSResultOrNative[] = [styles];\n}\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./textfield/internal/filled-styles.css.\nimport {css} from 'lit';\nexport const styles = css`:host{--_active-indicator-color: var(--md-filled-text-field-active-indicator-color, var(--md-sys-color-on-surface-variant, #49454f));--_active-indicator-height: var(--md-filled-text-field-active-indicator-height, 1px);--_caret-color: var(--md-filled-text-field-caret-color, var(--md-sys-color-primary, #6750a4));--_container-color: var(--md-filled-text-field-container-color, var(--md-sys-color-surface-container-highest, #e6e0e9));--_disabled-active-indicator-color: var(--md-filled-text-field-disabled-active-indicator-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-active-indicator-height: var(--md-filled-text-field-disabled-active-indicator-height, 1px);--_disabled-active-indicator-opacity: var(--md-filled-text-field-disabled-active-indicator-opacity, 0.38);--_disabled-container-color: var(--md-filled-text-field-disabled-container-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-container-opacity: var(--md-filled-text-field-disabled-container-opacity, 0.04);--_disabled-input-text-color: var(--md-filled-text-field-disabled-input-text-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-input-text-opacity: var(--md-filled-text-field-disabled-input-text-opacity, 0.38);--_disabled-label-text-color: var(--md-filled-text-field-disabled-label-text-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-label-text-opacity: var(--md-filled-text-field-disabled-label-text-opacity, 0.38);--_disabled-leading-icon-color: var(--md-filled-text-field-disabled-leading-icon-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-leading-icon-opacity: var(--md-filled-text-field-disabled-leading-icon-opacity, 0.38);--_disabled-supporting-text-color: var(--md-filled-text-field-disabled-supporting-text-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-supporting-text-opacity: var(--md-filled-text-field-disabled-supporting-text-opacity, 0.38);--_disabled-trailing-icon-color: var(--md-filled-text-field-disabled-trailing-icon-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-trailing-icon-opacity: var(--md-filled-text-field-disabled-trailing-icon-opacity, 0.38);--_error-active-indicator-color: var(--md-filled-text-field-error-active-indicator-color, var(--md-sys-color-error, #b3261e));--_error-focus-active-indicator-color: var(--md-filled-text-field-error-focus-active-indicator-color, var(--md-sys-color-error, #b3261e));--_error-focus-caret-color: var(--md-filled-text-field-error-focus-caret-color, var(--md-sys-color-error, #b3261e));--_error-focus-input-text-color: var(--md-filled-text-field-error-focus-input-text-color, var(--md-sys-color-on-surface, #1d1b20));--_error-focus-label-text-color: var(--md-filled-text-field-error-focus-label-text-color, var(--md-sys-color-error, #b3261e));--_error-focus-leading-icon-color: var(--md-filled-text-field-error-focus-leading-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_error-focus-supporting-text-color: var(--md-filled-text-field-error-focus-supporting-text-color, var(--md-sys-color-error, #b3261e));--_error-focus-trailing-icon-color: var(--md-filled-text-field-error-focus-trailing-icon-color, var(--md-sys-color-error, #b3261e));--_error-hover-active-indicator-color: var(--md-filled-text-field-error-hover-active-indicator-color, var(--md-sys-color-on-error-container, #410e0b));--_error-hover-input-text-color: var(--md-filled-text-field-error-hover-input-text-color, var(--md-sys-color-on-surface, #1d1b20));--_error-hover-label-text-color: var(--md-filled-text-field-error-hover-label-text-color, var(--md-sys-color-on-error-container, #410e0b));--_error-hover-leading-icon-color: var(--md-filled-text-field-error-hover-leading-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_error-hover-state-layer-color: var(--md-filled-text-field-error-hover-state-layer-color, var(--md-sys-color-on-surface, #1d1b20));--_error-hover-state-layer-opacity: var(--md-filled-text-field-error-hover-state-layer-opacity, 0.08);--_error-hover-supporting-text-color: var(--md-filled-text-field-error-hover-supporting-text-color, var(--md-sys-color-error, #b3261e));--_error-hover-trailing-icon-color: var(--md-filled-text-field-error-hover-trailing-icon-color, var(--md-sys-color-on-error-container, #410e0b));--_error-input-text-color: var(--md-filled-text-field-error-input-text-color, var(--md-sys-color-on-surface, #1d1b20));--_error-label-text-color: var(--md-filled-text-field-error-label-text-color, var(--md-sys-color-error, #b3261e));--_error-leading-icon-color: var(--md-filled-text-field-error-leading-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_error-supporting-text-color: var(--md-filled-text-field-error-supporting-text-color, var(--md-sys-color-error, #b3261e));--_error-trailing-icon-color: var(--md-filled-text-field-error-trailing-icon-color, var(--md-sys-color-error, #b3261e));--_focus-active-indicator-color: var(--md-filled-text-field-focus-active-indicator-color, var(--md-sys-color-primary, #6750a4));--_focus-active-indicator-height: var(--md-filled-text-field-focus-active-indicator-height, 3px);--_focus-input-text-color: var(--md-filled-text-field-focus-input-text-color, var(--md-sys-color-on-surface, #1d1b20));--_focus-label-text-color: var(--md-filled-text-field-focus-label-text-color, var(--md-sys-color-primary, #6750a4));--_focus-leading-icon-color: var(--md-filled-text-field-focus-leading-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_focus-supporting-text-color: var(--md-filled-text-field-focus-supporting-text-color, var(--md-sys-color-on-surface-variant, #49454f));--_focus-trailing-icon-color: var(--md-filled-text-field-focus-trailing-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_hover-active-indicator-color: var(--md-filled-text-field-hover-active-indicator-color, var(--md-sys-color-on-surface, #1d1b20));--_hover-active-indicator-height: var(--md-filled-text-field-hover-active-indicator-height, 1px);--_hover-input-text-color: var(--md-filled-text-field-hover-input-text-color, var(--md-sys-color-on-surface, #1d1b20));--_hover-label-text-color: var(--md-filled-text-field-hover-label-text-color, var(--md-sys-color-on-surface-variant, #49454f));--_hover-leading-icon-color: var(--md-filled-text-field-hover-leading-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_hover-state-layer-color: var(--md-filled-text-field-hover-state-layer-color, var(--md-sys-color-on-surface, #1d1b20));--_hover-state-layer-opacity: var(--md-filled-text-field-hover-state-layer-opacity, 0.08);--_hover-supporting-text-color: var(--md-filled-text-field-hover-supporting-text-color, var(--md-sys-color-on-surface-variant, #49454f));--_hover-trailing-icon-color: var(--md-filled-text-field-hover-trailing-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_input-text-color: var(--md-filled-text-field-input-text-color, var(--md-sys-color-on-surface, #1d1b20));--_input-text-font: var(--md-filled-text-field-input-text-font, var(--md-sys-typescale-body-large-font, var(--md-ref-typeface-plain, Roboto)));--_input-text-line-height: var(--md-filled-text-field-input-text-line-height, var(--md-sys-typescale-body-large-line-height, 1.5rem));--_input-text-placeholder-color: var(--md-filled-text-field-input-text-placeholder-color, var(--md-sys-color-on-surface-variant, #49454f));--_input-text-prefix-color: var(--md-filled-text-field-input-text-prefix-color, var(--md-sys-color-on-surface-variant, #49454f));--_input-text-size: var(--md-filled-text-field-input-text-size, var(--md-sys-typescale-body-large-size, 1rem));--_input-text-suffix-color: var(--md-filled-text-field-input-text-suffix-color, var(--md-sys-color-on-surface-variant, #49454f));--_input-text-weight: var(--md-filled-text-field-input-text-weight, var(--md-sys-typescale-body-large-weight, var(--md-ref-typeface-weight-regular, 400)));--_label-text-color: var(--md-filled-text-field-label-text-color, var(--md-sys-color-on-surface-variant, #49454f));--_label-text-font: var(--md-filled-text-field-label-text-font, var(--md-sys-typescale-body-large-font, var(--md-ref-typeface-plain, Roboto)));--_label-text-line-height: var(--md-filled-text-field-label-text-line-height, var(--md-sys-typescale-body-large-line-height, 1.5rem));--_label-text-populated-line-height: var(--md-filled-text-field-label-text-populated-line-height, var(--md-sys-typescale-body-small-line-height, 1rem));--_label-text-populated-size: var(--md-filled-text-field-label-text-populated-size, var(--md-sys-typescale-body-small-size, 0.75rem));--_label-text-size: var(--md-filled-text-field-label-text-size, var(--md-sys-typescale-body-large-size, 1rem));--_label-text-weight: var(--md-filled-text-field-label-text-weight, var(--md-sys-typescale-body-large-weight, var(--md-ref-typeface-weight-regular, 400)));--_leading-icon-color: var(--md-filled-text-field-leading-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_leading-icon-size: var(--md-filled-text-field-leading-icon-size, 24px);--_supporting-text-color: var(--md-filled-text-field-supporting-text-color, var(--md-sys-color-on-surface-variant, #49454f));--_supporting-text-font: var(--md-filled-text-field-supporting-text-font, var(--md-sys-typescale-body-small-font, var(--md-ref-typeface-plain, Roboto)));--_supporting-text-line-height: var(--md-filled-text-field-supporting-text-line-height, var(--md-sys-typescale-body-small-line-height, 1rem));--_supporting-text-size: var(--md-filled-text-field-supporting-text-size, var(--md-sys-typescale-body-small-size, 0.75rem));--_supporting-text-weight: var(--md-filled-text-field-supporting-text-weight, var(--md-sys-typescale-body-small-weight, var(--md-ref-typeface-weight-regular, 400)));--_trailing-icon-color: var(--md-filled-text-field-trailing-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_trailing-icon-size: var(--md-filled-text-field-trailing-icon-size, 24px);--_container-shape-start-start: var(--md-filled-text-field-container-shape-start-start, var(--md-filled-text-field-container-shape, var(--md-sys-shape-corner-extra-small, 4px)));--_container-shape-start-end: var(--md-filled-text-field-container-shape-start-end, var(--md-filled-text-field-container-shape, var(--md-sys-shape-corner-extra-small, 4px)));--_container-shape-end-end: var(--md-filled-text-field-container-shape-end-end, var(--md-filled-text-field-container-shape, var(--md-sys-shape-corner-none, 0px)));--_container-shape-end-start: var(--md-filled-text-field-container-shape-end-start, var(--md-filled-text-field-container-shape, var(--md-sys-shape-corner-none, 0px)));--_leading-space: var(--md-filled-text-field-leading-space, 16px);--_trailing-space: var(--md-filled-text-field-trailing-space, 16px);--_top-space: var(--md-filled-text-field-top-space, 16px);--_bottom-space: var(--md-filled-text-field-bottom-space, 16px);--_input-text-prefix-trailing-space: var(--md-filled-text-field-input-text-prefix-trailing-space, 2px);--_input-text-suffix-leading-space: var(--md-filled-text-field-input-text-suffix-leading-space, 2px);--_with-label-top-space: var(--md-filled-text-field-with-label-top-space, 8px);--_with-label-bottom-space: var(--md-filled-text-field-with-label-bottom-space, 8px);--_focus-caret-color: var(--md-filled-text-field-focus-caret-color, var(--md-sys-color-primary, #6750a4));--md-filled-field-active-indicator-color: var(--_active-indicator-color);--md-filled-field-active-indicator-height: var(--_active-indicator-height);--md-filled-field-bottom-space: var(--_bottom-space);--md-filled-field-container-color: var(--_container-color);--md-filled-field-container-shape-end-end: var(--_container-shape-end-end);--md-filled-field-container-shape-end-start: var(--_container-shape-end-start);--md-filled-field-container-shape-start-end: var(--_container-shape-start-end);--md-filled-field-container-shape-start-start: var(--_container-shape-start-start);--md-filled-field-content-color: var(--_input-text-color);--md-filled-field-content-font: var(--_input-text-font);--md-filled-field-content-line-height: var(--_input-text-line-height);--md-filled-field-content-size: var(--_input-text-size);--md-filled-field-content-weight: var(--_input-text-weight);--md-filled-field-disabled-active-indicator-color: var(--_disabled-active-indicator-color);--md-filled-field-disabled-active-indicator-height: var(--_disabled-active-indicator-height);--md-filled-field-disabled-active-indicator-opacity: var(--_disabled-active-indicator-opacity);--md-filled-field-disabled-container-color: var(--_disabled-container-color);--md-filled-field-disabled-container-opacity: var(--_disabled-container-opacity);--md-filled-field-disabled-content-color: var(--_disabled-input-text-color);--md-filled-field-disabled-content-opacity: var(--_disabled-input-text-opacity);--md-filled-field-disabled-label-text-color: var(--_disabled-label-text-color);--md-filled-field-disabled-label-text-opacity: var(--_disabled-label-text-opacity);--md-filled-field-disabled-leading-content-color: var(--_disabled-leading-icon-color);--md-filled-field-disabled-leading-content-opacity: var(--_disabled-leading-icon-opacity);--md-filled-field-disabled-supporting-text-color: var(--_disabled-supporting-text-color);--md-filled-field-disabled-supporting-text-opacity: var(--_disabled-supporting-text-opacity);--md-filled-field-disabled-trailing-content-color: var(--_disabled-trailing-icon-color);--md-filled-field-disabled-trailing-content-opacity: var(--_disabled-trailing-icon-opacity);--md-filled-field-error-active-indicator-color: var(--_error-active-indicator-color);--md-filled-field-error-content-color: var(--_error-input-text-color);--md-filled-field-error-focus-active-indicator-color: var(--_error-focus-active-indicator-color);--md-filled-field-error-focus-content-color: var(--_error-focus-input-text-color);--md-filled-field-error-focus-label-text-color: var(--_error-focus-label-text-color);--md-filled-field-error-focus-leading-content-color: var(--_error-focus-leading-icon-color);--md-filled-field-error-focus-supporting-text-color: var(--_error-focus-supporting-text-color);--md-filled-field-error-focus-trailing-content-color: var(--_error-focus-trailing-icon-color);--md-filled-field-error-hover-active-indicator-color: var(--_error-hover-active-indicator-color);--md-filled-field-error-hover-content-color: var(--_error-hover-input-text-color);--md-filled-field-error-hover-label-text-color: var(--_error-hover-label-text-color);--md-filled-field-error-hover-leading-content-color: var(--_error-hover-leading-icon-color);--md-filled-field-error-hover-state-layer-color: var(--_error-hover-state-layer-color);--md-filled-field-error-hover-state-layer-opacity: var(--_error-hover-state-layer-opacity);--md-filled-field-error-hover-supporting-text-color: var(--_error-hover-supporting-text-color);--md-filled-field-error-hover-trailing-content-color: var(--_error-hover-trailing-icon-color);--md-filled-field-error-label-text-color: var(--_error-label-text-color);--md-filled-field-error-leading-content-color: var(--_error-leading-icon-color);--md-filled-field-error-supporting-text-color: var(--_error-supporting-text-color);--md-filled-field-error-trailing-content-color: var(--_error-trailing-icon-color);--md-filled-field-focus-active-indicator-color: var(--_focus-active-indicator-color);--md-filled-field-focus-active-indicator-height: var(--_focus-active-indicator-height);--md-filled-field-focus-content-color: var(--_focus-input-text-color);--md-filled-field-focus-label-text-color: var(--_focus-label-text-color);--md-filled-field-focus-leading-content-color: var(--_focus-leading-icon-color);--md-filled-field-focus-supporting-text-color: var(--_focus-supporting-text-color);--md-filled-field-focus-trailing-content-color: var(--_focus-trailing-icon-color);--md-filled-field-hover-active-indicator-color: var(--_hover-active-indicator-color);--md-filled-field-hover-active-indicator-height: var(--_hover-active-indicator-height);--md-filled-field-hover-content-color: var(--_hover-input-text-color);--md-filled-field-hover-label-text-color: var(--_hover-label-text-color);--md-filled-field-hover-leading-content-color: var(--_hover-leading-icon-color);--md-filled-field-hover-state-layer-color: var(--_hover-state-layer-color);--md-filled-field-hover-state-layer-opacity: var(--_hover-state-layer-opacity);--md-filled-field-hover-supporting-text-color: var(--_hover-supporting-text-color);--md-filled-field-hover-trailing-content-color: var(--_hover-trailing-icon-color);--md-filled-field-label-text-color: var(--_label-text-color);--md-filled-field-label-text-font: var(--_label-text-font);--md-filled-field-label-text-line-height: var(--_label-text-line-height);--md-filled-field-label-text-populated-line-height: var(--_label-text-populated-line-height);--md-filled-field-label-text-populated-size: var(--_label-text-populated-size);--md-filled-field-label-text-size: var(--_label-text-size);--md-filled-field-label-text-weight: var(--_label-text-weight);--md-filled-field-leading-content-color: var(--_leading-icon-color);--md-filled-field-leading-space: var(--_leading-space);--md-filled-field-supporting-text-color: var(--_supporting-text-color);--md-filled-field-supporting-text-font: var(--_supporting-text-font);--md-filled-field-supporting-text-line-height: var(--_supporting-text-line-height);--md-filled-field-supporting-text-size: var(--_supporting-text-size);--md-filled-field-supporting-text-weight: var(--_supporting-text-weight);--md-filled-field-top-space: var(--_top-space);--md-filled-field-trailing-content-color: var(--_trailing-icon-color);--md-filled-field-trailing-space: var(--_trailing-space);--md-filled-field-with-label-bottom-space: var(--_with-label-bottom-space);--md-filled-field-with-label-top-space: var(--_with-label-top-space)}\n`;\n", "/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {_$LH, Part, DirectiveParent, TemplateResult} from './lit-html.js';\nimport {\n  DirectiveResult,\n  DirectiveClass,\n  PartInfo,\n  AttributePartInfo,\n} from './directive.js';\ntype Primitive = null | undefined | boolean | number | string | symbol | bigint;\n\nconst {_ChildPart: ChildPart} = _$LH;\n\ntype ChildPart = InstanceType<typeof ChildPart>;\n\nconst ENABLE_SHADYDOM_NOPATCH = true;\n\nconst wrap =\n  ENABLE_SHADYDOM_NOPATCH &&\n  window.ShadyDOM?.inUse &&\n  window.ShadyDOM?.noPatch === true\n    ? window.ShadyDOM!.wrap\n    : (node: Node) => node;\n\n/**\n * Tests if a value is a primitive value.\n *\n * See https://tc39.github.io/ecma262/#sec-typeof-operator\n */\nexport const isPrimitive = (value: unknown): value is Primitive =>\n  value === null || (typeof value != 'object' && typeof value != 'function');\n\nexport const TemplateResultType = {\n  HTML: 1,\n  SVG: 2,\n} as const;\n\nexport type TemplateResultType =\n  (typeof TemplateResultType)[keyof typeof TemplateResultType];\n\n/**\n * Tests if a value is a TemplateResult.\n */\nexport const isTemplateResult = (\n  value: unknown,\n  type?: TemplateResultType\n): value is TemplateResult =>\n  type === undefined\n    ? // This property needs to remain unminified.\n      (value as TemplateResult)?.['_$litType$'] !== undefined\n    : (value as TemplateResult)?.['_$litType$'] === type;\n\n/**\n * Tests if a value is a DirectiveResult.\n */\nexport const isDirectiveResult = (value: unknown): value is DirectiveResult =>\n  // This property needs to remain unminified.\n  (value as DirectiveResult)?.['_$litDirective$'] !== undefined;\n\n/**\n * Retrieves the Directive class for a DirectiveResult\n */\nexport const getDirectiveClass = (value: unknown): DirectiveClass | undefined =>\n  // This property needs to remain unminified.\n  (value as DirectiveResult)?.['_$litDirective$'];\n\n/**\n * Tests whether a part has only a single-expression with no strings to\n * interpolate between.\n *\n * Only AttributePart and PropertyPart can have multiple expressions.\n * Multi-expression parts have a `strings` property and single-expression\n * parts do not.\n */\nexport const isSingleExpression = (part: PartInfo) =>\n  (part as AttributePartInfo).strings === undefined;\n\nconst createMarker = () => document.createComment('');\n\n/**\n * Inserts a ChildPart into the given container ChildPart's DOM, either at the\n * end of the container ChildPart, or before the optional `refPart`.\n *\n * This does not add the part to the containerPart's committed value. That must\n * be done by callers.\n *\n * @param containerPart Part within which to add the new ChildPart\n * @param refPart Part before which to add the new ChildPart; when omitted the\n *     part added to the end of the `containerPart`\n * @param part Part to insert, or undefined to create a new part\n */\nexport const insertPart = (\n  containerPart: ChildPart,\n  refPart?: ChildPart,\n  part?: ChildPart\n): ChildPart => {\n  const container = wrap(containerPart._$startNode).parentNode!;\n\n  const refNode =\n    refPart === undefined ? containerPart._$endNode : refPart._$startNode;\n\n  if (part === undefined) {\n    const startNode = wrap(container).insertBefore(createMarker(), refNode);\n    const endNode = wrap(container).insertBefore(createMarker(), refNode);\n    part = new ChildPart(\n      startNode,\n      endNode,\n      containerPart,\n      containerPart.options\n    );\n  } else {\n    const endNode = wrap(part._$endNode!).nextSibling;\n    const oldParent = part._$parent;\n    const parentChanged = oldParent !== containerPart;\n    if (parentChanged) {\n      part._$reparentDisconnectables?.(containerPart);\n      // Note that although `_$reparentDisconnectables` updates the part's\n      // `_$parent` reference after unlinking from its current parent, that\n      // method only exists if Disconnectables are present, so we need to\n      // unconditionally set it here\n      part._$parent = containerPart;\n      // Since the _$isConnected getter is somewhat costly, only\n      // read it once we know the subtree has directives that need\n      // to be notified\n      let newConnectionState;\n      if (\n        part._$notifyConnectionChanged !== undefined &&\n        (newConnectionState = containerPart._$isConnected) !==\n          oldParent!._$isConnected\n      ) {\n        part._$notifyConnectionChanged(newConnectionState);\n      }\n    }\n    if (endNode !== refNode || parentChanged) {\n      let start: Node | null = part._$startNode;\n      while (start !== endNode) {\n        const n: Node | null = wrap(start!).nextSibling;\n        wrap(container).insertBefore(start!, refNode);\n        start = n;\n      }\n    }\n  }\n\n  return part;\n};\n\n/**\n * Sets the value of a Part.\n *\n * Note that this should only be used to set/update the value of user-created\n * parts (i.e. those created using `insertPart`); it should not be used\n * by directives to set the value of the directive's container part. Directives\n * should return a value from `update`/`render` to update their part state.\n *\n * For directives that require setting their part value asynchronously, they\n * should extend `AsyncDirective` and call `this.setValue()`.\n *\n * @param part Part to set\n * @param value Value to set\n * @param index For `AttributePart`s, the index to set\n * @param directiveParent Used internally; should not be set by user\n */\nexport const setChildPartValue = <T extends ChildPart>(\n  part: T,\n  value: unknown,\n  directiveParent: DirectiveParent = part\n): T => {\n  part._$setValue(value, directiveParent);\n  return part;\n};\n\n// A sentinel value that can never appear as a part value except when set by\n// live(). Used to force a dirty-check to fail and cause a re-render.\nconst RESET_VALUE = {};\n\n/**\n * Sets the committed value of a ChildPart directly without triggering the\n * commit stage of the part.\n *\n * This is useful in cases where a directive needs to update the part such\n * that the next update detects a value change or not. When value is omitted,\n * the next update will be guaranteed to be detected as a change.\n *\n * @param part\n * @param value\n */\nexport const setCommittedValue = (part: Part, value: unknown = RESET_VALUE) =>\n  (part._$committedValue = value);\n\n/**\n * Returns the committed value of a ChildPart.\n *\n * The committed value is used for change detection and efficient updates of\n * the part. It can differ from the value set by the template or directive in\n * cases where the template value is transformed before being committed.\n *\n * - `TemplateResult`s are committed as a `TemplateInstance`\n * - Iterables are committed as `Array<ChildPart>`\n * - All other types are committed as the template value or value returned or\n *   set by a directive.\n *\n * @param part\n */\nexport const getCommittedValue = (part: ChildPart) => part._$committedValue;\n\n/**\n * Removes a ChildPart from the DOM, including any of its content.\n *\n * @param part The Part to remove\n */\nexport const removePart = (part: ChildPart) => {\n  part._$notifyConnectionChanged?.(false, true);\n  let start: ChildNode | null = part._$startNode;\n  const end: ChildNode | null = wrap(part._$endNode!).nextSibling;\n  while (start !== end) {\n    const n: ChildNode | null = wrap(start!).nextSibling;\n    (wrap(start!) as ChildNode).remove();\n    start = n;\n  }\n};\n\nexport const clearPart = (part: ChildPart) => {\n  part._$clear();\n};\n", "/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {AttributePart, noChange, nothing} from '../lit-html.js';\nimport {\n  directive,\n  Directive,\n  DirectiveParameters,\n  PartInfo,\n  PartType,\n} from '../directive.js';\nimport {isSingleExpression, setCommittedValue} from '../directive-helpers.js';\n\nclass LiveDirective extends Directive {\n  constructor(partInfo: PartInfo) {\n    super(partInfo);\n    if (\n      !(\n        partInfo.type === PartType.PROPERTY ||\n        partInfo.type === PartType.ATTRIBUTE ||\n        partInfo.type === PartType.BOOLEAN_ATTRIBUTE\n      )\n    ) {\n      throw new Error(\n        'The `live` directive is not allowed on child or event bindings'\n      );\n    }\n    if (!isSingleExpression(partInfo)) {\n      throw new Error('`live` bindings can only contain a single expression');\n    }\n  }\n\n  render(value: unknown) {\n    return value;\n  }\n\n  override update(part: AttributePart, [value]: DirectiveParameters<this>) {\n    if (value === noChange || value === nothing) {\n      return value;\n    }\n    const element = part.element;\n    const name = part.name;\n\n    if (part.type === PartType.PROPERTY) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      if (value === (element as any)[name]) {\n        return noChange;\n      }\n    } else if (part.type === PartType.BOOLEAN_ATTRIBUTE) {\n      if (!!value === element.hasAttribute(name)) {\n        return noChange;\n      }\n    } else if (part.type === PartType.ATTRIBUTE) {\n      if (element.getAttribute(name) === String(value)) {\n        return noChange;\n      }\n    }\n    // Resets the part's value, causing its dirty-check to fail so that it\n    // always sets the value.\n    setCommittedValue(part);\n    return value;\n  }\n}\n\n/**\n * Checks binding values against live DOM values, instead of previously bound\n * values, when determining whether to update the value.\n *\n * This is useful for cases where the DOM value may change from outside of\n * lit-html, such as with a binding to an `<input>` element's `value` property,\n * a content editable elements text, or to a custom element that changes it's\n * own properties or attributes.\n *\n * In these cases if the DOM value changes, but the value set through lit-html\n * bindings hasn't, lit-html won't know to update the DOM value and will leave\n * it alone. If this is not what you want--if you want to overwrite the DOM\n * value with the bound value no matter what--use the `live()` directive:\n *\n * ```js\n * html`<input .value=${live(x)}>`\n * ```\n *\n * `live()` performs a strict equality check against the live DOM value, and if\n * the new value is equal to the live value, does nothing. This means that\n * `live()` should not be used when the binding will cause a type conversion. If\n * you use `live()` with an attribute binding, make sure that only strings are\n * passed in, or the binding will update every render.\n */\nexport const live = directive(LiveDirective);\n\n/**\n * The type of the class that powers this directive. Necessary for naming the\n * directive's return type.\n */\nexport type {LiveDirective};\n", "/**\n * @license\n * Copyright 2022 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport const stringConverter = {\n  fromAttribute(value: string | null): string {\n    return value ?? '';\n  },\n  toAttribute(value: string): string | null {\n    return value || null;\n  },\n};\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {Validator} from './validator.js';\n\n/**\n * Constraint validation for a text field.\n */\nexport interface TextFieldState {\n  /**\n   * The input or textarea state to validate.\n   */\n  state: InputState | TextAreaState;\n\n  /**\n   * The `<input>` or `<textarea>` that is rendered on the page.\n   *\n   * `minlength` and `maxlength` validation do not apply until a user has\n   * interacted with the control and the element is internally marked as dirty.\n   * This is a spec quirk, the two properties behave differently from other\n   * constraint validation.\n   *\n   * This means we need an actual rendered element instead of a virtual one,\n   * since the virtual element will never be marked as dirty.\n   *\n   * This can be `null` if the element has not yet rendered, and the validator\n   * will fall back to virtual elements for other constraint validation\n   * properties, which do apply even if the control is not dirty.\n   */\n  renderedControl: HTMLInputElement | HTMLTextAreaElement | null;\n}\n\n/**\n * Constraint validation properties for an `<input>`.\n */\nexport interface InputState extends SharedInputAndTextAreaState {\n  /**\n   * The `<input>` type.\n   *\n   * Not all constraint validation properties apply to every type. See\n   * https://developer.mozilla.org/en-US/docs/Web/HTML/Constraint_validation#validation-related_attributes\n   * for which properties will apply to which types.\n   */\n  readonly type: string;\n\n  /**\n   * The regex pattern a value must match.\n   */\n  readonly pattern: string;\n\n  /**\n   * The minimum value.\n   */\n  readonly min: string;\n\n  /**\n   * The maximum value.\n   */\n  readonly max: string;\n\n  /**\n   * The step interval of the value.\n   */\n  readonly step: string;\n}\n\n/**\n * Constraint validation properties for a `<textarea>`.\n */\nexport interface TextAreaState extends SharedInputAndTextAreaState {\n  /**\n   * The type, must be \"textarea\" to inform the validator to use `<textarea>`\n   * instead of `<input>`.\n   */\n  readonly type: 'textarea';\n}\n\n/**\n * Constraint validation properties shared between an `<input>` and\n * `<textarea>`.\n */\ninterface SharedInputAndTextAreaState {\n  /**\n   * The current value.\n   */\n  readonly value: string;\n\n  /**\n   * Whether the textarea is required.\n   */\n  readonly required: boolean;\n\n  /**\n   * The minimum length of the value.\n   */\n  readonly minLength: number;\n\n  /**\n   * The maximum length of the value.\n   */\n  readonly maxLength: number;\n}\n\n/**\n * A validator that provides constraint validation that emulates `<input>` and\n * `<textarea>` validation.\n */\nexport class TextFieldValidator extends Validator<TextFieldState> {\n  private inputControl?: HTMLInputElement;\n  private textAreaControl?: HTMLTextAreaElement;\n\n  protected override computeValidity({state, renderedControl}: TextFieldState) {\n    let inputOrTextArea = renderedControl;\n    if (isInputState(state) && !inputOrTextArea) {\n      // Get cached <input> or create it.\n      inputOrTextArea = this.inputControl || document.createElement('input');\n      // Cache the <input> to re-use it next time.\n      this.inputControl = inputOrTextArea;\n    } else if (!inputOrTextArea) {\n      // Get cached <textarea> or create it.\n      inputOrTextArea =\n        this.textAreaControl || document.createElement('textarea');\n      // Cache the <textarea> to re-use it next time.\n      this.textAreaControl = inputOrTextArea;\n    }\n\n    // Set this variable so we can check it for input-specific properties.\n    const input = isInputState(state)\n      ? (inputOrTextArea as HTMLInputElement)\n      : null;\n\n    // Set input's \"type\" first, since this can change the other properties\n    if (input) {\n      input.type = state.type;\n    }\n\n    if (inputOrTextArea.value !== state.value) {\n      // Only programmatically set the value if there's a difference. When using\n      // the rendered control, the value will always be up to date. Setting the\n      // property (even if it's the same string) will reset the internal <input>\n      // dirty flag, making minlength and maxlength validation reset.\n      inputOrTextArea.value = state.value;\n    }\n\n    inputOrTextArea.required = state.required;\n\n    // The following IDLAttribute properties will always hydrate an attribute,\n    // even if set to a the default value ('' or -1). The presence of the\n    // attribute triggers constraint validation, so we must remove the attribute\n    // when empty.\n    if (input) {\n      const inputState = state as InputState;\n      if (inputState.pattern) {\n        input.pattern = inputState.pattern;\n      } else {\n        input.removeAttribute('pattern');\n      }\n\n      if (inputState.min) {\n        input.min = inputState.min;\n      } else {\n        input.removeAttribute('min');\n      }\n\n      if (inputState.max) {\n        input.max = inputState.max;\n      } else {\n        input.removeAttribute('max');\n      }\n\n      if (inputState.step) {\n        input.step = inputState.step;\n      } else {\n        input.removeAttribute('step');\n      }\n    }\n\n    // Use -1 to represent no minlength and maxlength, which is what the\n    // platform input returns. However, it will throw an error if you try to\n    // manually set it to -1.\n    //\n    // While the type is `number`, it may actually be `null` at runtime.\n    // `null > -1` is true since `null` coerces to `0`, so we default null and\n    // undefined to -1.\n    //\n    // We set attributes instead of properties since setting a property may\n    // throw an out of bounds error in relation to the other property.\n    // Attributes will not throw errors while the state is updating.\n    if ((state.minLength ?? -1) > -1) {\n      inputOrTextArea.setAttribute('minlength', String(state.minLength));\n    } else {\n      inputOrTextArea.removeAttribute('minlength');\n    }\n\n    if ((state.maxLength ?? -1) > -1) {\n      inputOrTextArea.setAttribute('maxlength', String(state.maxLength));\n    } else {\n      inputOrTextArea.removeAttribute('maxlength');\n    }\n\n    return {\n      validity: inputOrTextArea.validity,\n      validationMessage: inputOrTextArea.validationMessage,\n    };\n  }\n\n  protected override equals(\n    {state: prev}: TextFieldState,\n    {state: next}: TextFieldState,\n  ) {\n    // Check shared input and textarea properties\n    const inputOrTextAreaEqual =\n      prev.type === next.type &&\n      prev.value === next.value &&\n      prev.required === next.required &&\n      prev.minLength === next.minLength &&\n      prev.maxLength === next.maxLength;\n\n    if (!isInputState(prev) || !isInputState(next)) {\n      // Both are textareas, all relevant properties are equal.\n      return inputOrTextAreaEqual;\n    }\n\n    // Check additional input-specific properties.\n    return (\n      inputOrTextAreaEqual &&\n      prev.pattern === next.pattern &&\n      prev.min === next.min &&\n      prev.max === next.max &&\n      prev.step === next.step\n    );\n  }\n\n  protected override copy({state}: TextFieldState): TextFieldState {\n    // Don't hold a reference to the rendered control when copying since we\n    // don't use it when checking if the state changed.\n    return {\n      state: isInputState(state)\n        ? this.copyInput(state)\n        : this.copyTextArea(state),\n      renderedControl: null,\n    };\n  }\n\n  private copyInput(state: InputState): InputState {\n    const {type, pattern, min, max, step} = state;\n    return {\n      ...this.copySharedState(state),\n      type,\n      pattern,\n      min,\n      max,\n      step,\n    };\n  }\n\n  private copyTextArea(state: TextAreaState): TextAreaState {\n    return {\n      ...this.copySharedState(state),\n      type: state.type,\n    };\n  }\n\n  private copySharedState({\n    value,\n    required,\n    minLength,\n    maxLength,\n  }: SharedInputAndTextAreaState): SharedInputAndTextAreaState {\n    return {value, required, minLength, maxLength};\n  }\n}\n\nfunction isInputState(state: InputState | TextAreaState): state is InputState {\n  return state.type !== 'textarea';\n}\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {LitElement, PropertyValues, html, nothing} from 'lit';\nimport {property, query, queryAssignedElements, state} from 'lit/decorators.js';\nimport {classMap} from 'lit/directives/class-map.js';\nimport {live} from 'lit/directives/live.js';\nimport {StyleInfo, styleMap} from 'lit/directives/style-map.js';\nimport {StaticValue, html as staticHtml} from 'lit/static-html.js';\n\nimport {Field} from '../../field/internal/field.js';\nimport {ARIAMixinStrict} from '../../internal/aria/aria.js';\nimport {requestUpdateOnAriaChange} from '../../internal/aria/delegate.js';\nimport {stringConverter} from '../../internal/controller/string-converter.js';\nimport {redispatchEvent} from '../../internal/events/redispatch-event.js';\nimport {\n  createValidator,\n  getValidityAnchor,\n  mixinConstraintValidation,\n} from '../../labs/behaviors/constraint-validation.js';\nimport {mixinElementInternals} from '../../labs/behaviors/element-internals.js';\nimport {\n  getFormValue,\n  mixinFormAssociated,\n} from '../../labs/behaviors/form-associated.js';\nimport {\n  mixinOnReportValidity,\n  onReportValidity,\n} from '../../labs/behaviors/on-report-validity.js';\nimport {TextFieldValidator} from '../../labs/behaviors/validators/text-field-validator.js';\nimport {Validator} from '../../labs/behaviors/validators/validator.js';\n\n/**\n * Input types that are compatible with the text field.\n */\nexport type TextFieldType =\n  | 'email'\n  | 'number'\n  | 'password'\n  | 'search'\n  | 'tel'\n  | 'text'\n  | 'url'\n  | 'textarea';\n\n/**\n * Input types that are not fully supported for the text field.\n */\nexport type UnsupportedTextFieldType =\n  | 'color'\n  | 'date'\n  | 'datetime-local'\n  | 'file'\n  | 'month'\n  | 'time'\n  | 'week';\n\n/**\n * Input types that are incompatible with the text field.\n */\nexport type InvalidTextFieldType =\n  | 'button'\n  | 'checkbox'\n  | 'hidden'\n  | 'image'\n  | 'radio'\n  | 'range'\n  | 'reset'\n  | 'submit';\n\n// Separate variable needed for closure.\nconst textFieldBaseClass = mixinOnReportValidity(\n  mixinConstraintValidation(\n    mixinFormAssociated(mixinElementInternals(LitElement)),\n  ),\n);\n\n/**\n * A text field component.\n *\n * @fires select {Event} The native `select` event on\n * [`<input>`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/select_event)\n * --bubbles\n * @fires change {Event} The native `change` event on\n * [`<input>`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/change_event)\n * --bubbles\n * @fires input {InputEvent} The native `input` event on\n * [`<input>`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/input_event)\n * --bubbles --composed\n */\nexport abstract class TextField extends textFieldBaseClass {\n  static {\n    requestUpdateOnAriaChange(TextField);\n  }\n\n  /** @nocollapse */\n  static override shadowRootOptions: ShadowRootInit = {\n    ...LitElement.shadowRootOptions,\n    delegatesFocus: true,\n  };\n\n  /**\n   * Gets or sets whether or not the text field is in a visually invalid state.\n   *\n   * This error state overrides the error state controlled by\n   * `reportValidity()`.\n   */\n  @property({type: Boolean, reflect: true}) error = false;\n\n  /**\n   * The error message that replaces supporting text when `error` is true. If\n   * `errorText` is an empty string, then the supporting text will continue to\n   * show.\n   *\n   * This error message overrides the error message displayed by\n   * `reportValidity()`.\n   */\n  @property({attribute: 'error-text'}) errorText = '';\n\n  /**\n   * The floating Material label of the textfield component. It informs the user\n   * about what information is requested for a text field. It is aligned with\n   * the input text, is always visible, and it floats when focused or when text\n   * is entered into the textfield. This label also sets accessibilty labels,\n   * but the accessible label is overriden by `aria-label`.\n   *\n   * Learn more about floating labels from the Material Design guidelines:\n   * https://m3.material.io/components/text-fields/guidelines\n   */\n  @property() label = '';\n\n  /**\n   * Indicates that the user must specify a value for the input before the\n   * owning form can be submitted and will render an error state when\n   * `reportValidity()` is invoked when value is empty. Additionally the\n   * floating label will render an asterisk `\"*\"` when true.\n   *\n   * https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/required\n   */\n  @property({type: Boolean, reflect: true}) required = false;\n\n  /**\n   * The current value of the text field. It is always a string.\n   */\n  @property() value = '';\n\n  /**\n   * An optional prefix to display before the input value.\n   */\n  @property({attribute: 'prefix-text'}) prefixText = '';\n\n  /**\n   * An optional suffix to display after the input value.\n   */\n  @property({attribute: 'suffix-text'}) suffixText = '';\n\n  /**\n   * Whether or not the text field has a leading icon. Used for SSR.\n   */\n  @property({type: Boolean, attribute: 'has-leading-icon'})\n  hasLeadingIcon = false;\n\n  /**\n   * Whether or not the text field has a trailing icon. Used for SSR.\n   */\n  @property({type: Boolean, attribute: 'has-trailing-icon'})\n  hasTrailingIcon = false;\n\n  /**\n   * Conveys additional information below the text field, such as how it should\n   * be used.\n   */\n  @property({attribute: 'supporting-text'}) supportingText = '';\n\n  /**\n   * Override the input text CSS `direction`. Useful for RTL languages that use\n   * LTR notation for fractions.\n   */\n  @property({attribute: 'text-direction'}) textDirection = '';\n\n  /**\n   * The number of rows to display for a `type=\"textarea\"` text field.\n   * Defaults to 2.\n   */\n  @property({type: Number}) rows = 2;\n\n  /**\n   * The number of cols to display for a `type=\"textarea\"` text field.\n   * Defaults to 20.\n   */\n  @property({type: Number}) cols = 20;\n\n  // <input> properties\n  @property({reflect: true}) override inputMode = '';\n\n  /**\n   * Defines the greatest value in the range of permitted values.\n   *\n   * https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#max\n   */\n  @property() max = '';\n\n  /**\n   * The maximum number of characters a user can enter into the text field. Set\n   * to -1 for none.\n   *\n   * https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#maxlength\n   */\n  @property({type: Number}) maxLength = -1;\n\n  /**\n   * Defines the most negative value in the range of permitted values.\n   *\n   * https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#min\n   */\n  @property() min = '';\n\n  /**\n   * The minimum number of characters a user can enter into the text field. Set\n   * to -1 for none.\n   *\n   * https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#minlength\n   */\n  @property({type: Number}) minLength = -1;\n\n  /**\n   * When true, hide the spinner for `type=\"number\"` text fields.\n   */\n  @property({type: Boolean, attribute: 'no-spinner'}) noSpinner = false;\n\n  /**\n   * A regular expression that the text field's value must match to pass\n   * constraint validation.\n   *\n   * https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#pattern\n   */\n  @property() pattern = '';\n\n  /**\n   * Defines the text displayed in the textfield when it has no value. Provides\n   * a brief hint to the user as to the expected type of data that should be\n   * entered into the control. Unlike `label`, the placeholder is not visible\n   * and does not float when the textfield has a value.\n   *\n   * https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/placeholder\n   */\n  @property({reflect: true, converter: stringConverter}) placeholder = '';\n\n  /**\n   * Indicates whether or not a user should be able to edit the text field's\n   * value.\n   *\n   * https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#readonly\n   */\n  @property({type: Boolean, reflect: true}) readOnly = false;\n\n  /**\n   * Indicates that input accepts multiple email addresses.\n   *\n   * https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/email#multiple\n   */\n  @property({type: Boolean, reflect: true}) multiple = false;\n\n  /**\n   * Gets or sets the direction in which selection occurred.\n   */\n  get selectionDirection() {\n    return this.getInputOrTextarea().selectionDirection;\n  }\n  set selectionDirection(value: 'forward' | 'backward' | 'none' | null) {\n    this.getInputOrTextarea().selectionDirection = value;\n  }\n\n  /**\n   * Gets or sets the end position or offset of a text selection.\n   */\n  get selectionEnd() {\n    return this.getInputOrTextarea().selectionEnd;\n  }\n  set selectionEnd(value: number | null) {\n    this.getInputOrTextarea().selectionEnd = value;\n  }\n\n  /**\n   * Gets or sets the starting position or offset of a text selection.\n   */\n  get selectionStart() {\n    return this.getInputOrTextarea().selectionStart;\n  }\n  set selectionStart(value: number | null) {\n    this.getInputOrTextarea().selectionStart = value;\n  }\n\n  /**\n   * Returns or sets the element's step attribute, which works with min and max\n   * to limit the increments at which a numeric or date-time value can be set.\n   *\n   * https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#step\n   */\n  @property() step = '';\n\n  /**\n   * The `<input>` type to use, defaults to \"text\". The type greatly changes how\n   * the text field behaves.\n   *\n   * Text fields support a limited number of `<input>` types:\n   *\n   * - text\n   * - textarea\n   * - email\n   * - number\n   * - password\n   * - search\n   * - tel\n   * - url\n   *\n   * See\n   * https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#input_types\n   * for more details on each input type.\n   */\n  @property({reflect: true})\n  type: TextFieldType | UnsupportedTextFieldType = 'text';\n\n  /**\n   * Describes what, if any, type of autocomplete functionality the input\n   * should provide.\n   *\n   * https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete\n   */\n  @property({reflect: true}) autocomplete = '';\n\n  /**\n   * The text field's value as a number.\n   */\n  get valueAsNumber() {\n    const input = this.getInput();\n    if (!input) {\n      return NaN;\n    }\n\n    return input.valueAsNumber;\n  }\n  set valueAsNumber(value: number) {\n    const input = this.getInput();\n    if (!input) {\n      return;\n    }\n\n    input.valueAsNumber = value;\n    this.value = input.value;\n  }\n\n  /**\n   * The text field's value as a Date.\n   */\n  get valueAsDate() {\n    const input = this.getInput();\n    if (!input) {\n      return null;\n    }\n\n    return input.valueAsDate;\n  }\n  set valueAsDate(value: Date | null) {\n    const input = this.getInput();\n    if (!input) {\n      return;\n    }\n\n    input.valueAsDate = value;\n    this.value = input.value;\n  }\n\n  protected abstract readonly fieldTag: StaticValue;\n\n  /**\n   * Returns true when the text field has been interacted with. Native\n   * validation errors only display in response to user interactions.\n   */\n  @state() private dirty = false;\n  @state() private focused = false;\n  /**\n   * Whether or not a native error has been reported via `reportValidity()`.\n   */\n  @state() private nativeError = false;\n  /**\n   * The validation message displayed from a native error via\n   * `reportValidity()`.\n   */\n  @state() private nativeErrorText = '';\n\n  private get hasError() {\n    return this.error || this.nativeError;\n  }\n\n  @query('.input')\n  private readonly inputOrTextarea!:\n    | HTMLInputElement\n    | HTMLTextAreaElement\n    | null;\n  @query('.field') private readonly field!: Field | null;\n  @queryAssignedElements({slot: 'leading-icon'})\n  private readonly leadingIcons!: Element[];\n  @queryAssignedElements({slot: 'trailing-icon'})\n  private readonly trailingIcons!: Element[];\n\n  /**\n   * Selects all the text in the text field.\n   *\n   * https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/select\n   */\n  select() {\n    this.getInputOrTextarea().select();\n  }\n\n  /**\n   * Replaces a range of text with a new string.\n   *\n   * https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/setRangeText\n   */\n  setRangeText(replacement: string): void;\n  setRangeText(\n    replacement: string,\n    start: number,\n    end: number,\n    selectionMode?: SelectionMode,\n  ): void;\n  setRangeText(...args: unknown[]) {\n    // Calling setRangeText with 1 vs 3-4 arguments has different behavior.\n    // Use spread syntax and type casting to ensure correct usage.\n    this.getInputOrTextarea().setRangeText(\n      ...(args as Parameters<HTMLInputElement['setRangeText']>),\n    );\n    this.value = this.getInputOrTextarea().value;\n  }\n\n  /**\n   * Sets the start and end positions of a selection in the text field.\n   *\n   * https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/setSelectionRange\n   *\n   * @param start The offset into the text field for the start of the selection.\n   * @param end The offset into the text field for the end of the selection.\n   * @param direction The direction in which the selection is performed.\n   */\n  setSelectionRange(\n    start: number | null,\n    end: number | null,\n    direction?: 'forward' | 'backward' | 'none',\n  ) {\n    this.getInputOrTextarea().setSelectionRange(start, end, direction);\n  }\n\n  /**\n   * Decrements the value of a numeric type text field by `step` or `n` `step`\n   * number of times.\n   *\n   * https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/stepDown\n   *\n   * @param stepDecrement The number of steps to decrement, defaults to 1.\n   */\n  stepDown(stepDecrement?: number) {\n    const input = this.getInput();\n    if (!input) {\n      return;\n    }\n\n    input.stepDown(stepDecrement);\n    this.value = input.value;\n  }\n\n  /**\n   * Increments the value of a numeric type text field by `step` or `n` `step`\n   * number of times.\n   *\n   * https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/stepUp\n   *\n   * @param stepIncrement The number of steps to increment, defaults to 1.\n   */\n  stepUp(stepIncrement?: number) {\n    const input = this.getInput();\n    if (!input) {\n      return;\n    }\n\n    input.stepUp(stepIncrement);\n    this.value = input.value;\n  }\n\n  /**\n   * Reset the text field to its default value.\n   */\n  reset() {\n    this.dirty = false;\n    this.value = this.getAttribute('value') ?? '';\n    this.nativeError = false;\n    this.nativeErrorText = '';\n  }\n\n  override attributeChangedCallback(\n    attribute: string,\n    newValue: string | null,\n    oldValue: string | null,\n  ) {\n    if (attribute === 'value' && this.dirty) {\n      // After user input, changing the value attribute no longer updates the\n      // text field's value (until reset). This matches native <input> behavior.\n      return;\n    }\n\n    super.attributeChangedCallback(attribute, newValue, oldValue);\n  }\n\n  protected override render() {\n    const classes = {\n      'disabled': this.disabled,\n      'error': !this.disabled && this.hasError,\n      'textarea': this.type === 'textarea',\n      'no-spinner': this.noSpinner,\n    };\n\n    return html`\n      <span class=\"text-field ${classMap(classes)}\">\n        ${this.renderField()}\n      </span>\n    `;\n  }\n\n  protected override updated(changedProperties: PropertyValues) {\n    // Keep changedProperties arg so that subclasses may call it\n\n    // If a property such as `type` changes and causes the internal <input>\n    // value to change without dispatching an event, re-sync it.\n    const value = this.getInputOrTextarea().value;\n    if (this.value !== value) {\n      // Note this is typically inefficient in updated() since it schedules\n      // another update. However, it is needed for the <input> to fully render\n      // before checking its value.\n      this.value = value;\n    }\n  }\n\n  private renderField() {\n    return staticHtml`<${this.fieldTag}\n      class=\"field\"\n      count=${this.value.length}\n      ?disabled=${this.disabled}\n      ?error=${this.hasError}\n      error-text=${this.getErrorText()}\n      ?focused=${this.focused}\n      ?has-end=${this.hasTrailingIcon}\n      ?has-start=${this.hasLeadingIcon}\n      label=${this.label}\n      max=${this.maxLength}\n      ?populated=${!!this.value}\n      ?required=${this.required}\n      ?resizable=${this.type === 'textarea'}\n      supporting-text=${this.supportingText}\n    >\n      ${this.renderLeadingIcon()}\n      ${this.renderInputOrTextarea()}\n      ${this.renderTrailingIcon()}\n      <div id=\"description\" slot=\"aria-describedby\"></div>\n    </${this.fieldTag}>`;\n  }\n\n  private renderLeadingIcon() {\n    return html`\n      <span class=\"icon leading\" slot=\"start\">\n        <slot name=\"leading-icon\" @slotchange=${this.handleIconChange}></slot>\n      </span>\n    `;\n  }\n\n  private renderTrailingIcon() {\n    return html`\n      <span class=\"icon trailing\" slot=\"end\">\n        <slot name=\"trailing-icon\" @slotchange=${this.handleIconChange}></slot>\n      </span>\n    `;\n  }\n\n  private renderInputOrTextarea() {\n    const style: StyleInfo = {'direction': this.textDirection};\n    const ariaLabel =\n      (this as ARIAMixinStrict).ariaLabel || this.label || nothing;\n    // lit-anaylzer `autocomplete` types are too strict\n    // tslint:disable-next-line:no-any\n    const autocomplete = this.autocomplete as any;\n\n    // These properties may be set to null if the attribute is removed, and\n    // `null > -1` is incorrectly `true`.\n    const hasMaxLength = (this.maxLength ?? -1) > -1;\n    const hasMinLength = (this.minLength ?? -1) > -1;\n    if (this.type === 'textarea') {\n      return html`\n        <textarea\n          class=\"input\"\n          style=${styleMap(style)}\n          aria-describedby=\"description\"\n          aria-invalid=${this.hasError}\n          aria-label=${ariaLabel}\n          autocomplete=${autocomplete || nothing}\n          ?disabled=${this.disabled}\n          maxlength=${hasMaxLength ? this.maxLength : nothing}\n          minlength=${hasMinLength ? this.minLength : nothing}\n          placeholder=${this.placeholder || nothing}\n          ?readonly=${this.readOnly}\n          ?required=${this.required}\n          rows=${this.rows}\n          cols=${this.cols}\n          .value=${live(this.value)}\n          @change=${this.redispatchEvent}\n          @focus=${this.handleFocusChange}\n          @blur=${this.handleFocusChange}\n          @input=${this.handleInput}\n          @select=${this.redispatchEvent}></textarea>\n      `;\n    }\n\n    const prefix = this.renderPrefix();\n    const suffix = this.renderSuffix();\n\n    // TODO(b/243805848): remove `as unknown as number` and `as any` once lit\n    // analyzer is fixed\n    // tslint:disable-next-line:no-any\n    const inputMode = this.inputMode as any;\n    return html`\n      <div class=\"input-wrapper\">\n        ${prefix}\n        <input\n          class=\"input\"\n          style=${styleMap(style)}\n          aria-describedby=\"description\"\n          aria-invalid=${this.hasError}\n          aria-label=${ariaLabel}\n          autocomplete=${autocomplete || nothing}\n          ?disabled=${this.disabled}\n          inputmode=${inputMode || nothing}\n          max=${(this.max || nothing) as unknown as number}\n          maxlength=${hasMaxLength ? this.maxLength : nothing}\n          min=${(this.min || nothing) as unknown as number}\n          minlength=${hasMinLength ? this.minLength : nothing}\n          pattern=${this.pattern || nothing}\n          placeholder=${this.placeholder || nothing}\n          ?readonly=${this.readOnly}\n          ?required=${this.required}\n          ?multiple=${this.multiple}\n          step=${(this.step || nothing) as unknown as number}\n          type=${this.type}\n          .value=${live(this.value)}\n          @change=${this.redispatchEvent}\n          @focus=${this.handleFocusChange}\n          @blur=${this.handleFocusChange}\n          @input=${this.handleInput}\n          @select=${this.redispatchEvent} />\n        ${suffix}\n      </div>\n    `;\n  }\n\n  private renderPrefix() {\n    return this.renderAffix(this.prefixText, /* isSuffix */ false);\n  }\n\n  private renderSuffix() {\n    return this.renderAffix(this.suffixText, /* isSuffix */ true);\n  }\n\n  private renderAffix(text: string, isSuffix: boolean) {\n    if (!text) {\n      return nothing;\n    }\n\n    const classes = {\n      'suffix': isSuffix,\n      'prefix': !isSuffix,\n    };\n\n    return html`<span class=\"${classMap(classes)}\">${text}</span>`;\n  }\n\n  private getErrorText() {\n    return this.error ? this.errorText : this.nativeErrorText;\n  }\n\n  private handleFocusChange() {\n    // When calling focus() or reportValidity() during change, it's possible\n    // for blur to be called after the new focus event. Rather than set\n    // `this.focused` to true/false on focus/blur, we always set it to whether\n    // or not the input itself is focused.\n    this.focused = this.inputOrTextarea?.matches(':focus') ?? false;\n  }\n\n  private handleInput(event: InputEvent) {\n    this.dirty = true;\n    this.value = (event.target as HTMLInputElement).value;\n  }\n\n  private redispatchEvent(event: Event) {\n    redispatchEvent(this, event);\n  }\n\n  private getInputOrTextarea() {\n    if (!this.inputOrTextarea) {\n      // If the input is not yet defined, synchronously render.\n      // e.g.\n      // const textField = document.createElement('md-outlined-text-field');\n      // document.body.appendChild(textField);\n      // textField.focus(); // synchronously render\n      this.connectedCallback();\n      this.scheduleUpdate();\n    }\n\n    if (this.isUpdatePending) {\n      // If there are pending updates, synchronously perform them. This ensures\n      // that constraint validation properties (like `required`) are synced\n      // before interacting with input APIs that depend on them.\n      this.scheduleUpdate();\n    }\n\n    return this.inputOrTextarea!;\n  }\n\n  private getInput() {\n    if (this.type === 'textarea') {\n      return null;\n    }\n\n    return this.getInputOrTextarea() as HTMLInputElement;\n  }\n\n  private handleIconChange() {\n    this.hasLeadingIcon = this.leadingIcons.length > 0;\n    this.hasTrailingIcon = this.trailingIcons.length > 0;\n  }\n\n  // Writable mixin properties for lit-html binding, needed for lit-analyzer\n  declare disabled: boolean;\n  declare name: string;\n\n  override [getFormValue]() {\n    return this.value;\n  }\n\n  override formResetCallback() {\n    this.reset();\n  }\n\n  override formStateRestoreCallback(state: string) {\n    this.value = state;\n  }\n\n  override focus() {\n    // Required for the case that the user slots a focusable element into the\n    // leading icon slot such as an iconbutton due to how delegatesFocus works.\n    this.getInputOrTextarea().focus();\n  }\n\n  [createValidator](): Validator<unknown> {\n    return new TextFieldValidator(() => ({\n      state: this,\n      renderedControl: this.inputOrTextarea,\n    }));\n  }\n\n  [getValidityAnchor](): HTMLElement | null {\n    return this.inputOrTextarea;\n  }\n\n  [onReportValidity](invalidEvent: Event | null) {\n    // Prevent default pop-up behavior.\n    invalidEvent?.preventDefault();\n\n    const prevMessage = this.getErrorText();\n    this.nativeError = !!invalidEvent;\n    this.nativeErrorText = this.validationMessage;\n\n    if (prevMessage === this.getErrorText()) {\n      this.field?.reannounceError();\n    }\n  }\n}\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport '../../field/filled-field.js';\n\nimport {literal} from 'lit/static-html.js';\n\nimport {TextField} from './text-field.js';\n\n/**\n * A filled text field component.\n */\nexport class FilledTextField extends TextField {\n  protected readonly fieldTag = literal`md-filled-field`;\n}\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./textfield/internal/shared-styles.css.\nimport {css} from 'lit';\nexport const styles = css`:host{display:inline-flex;outline:none;resize:both;text-align:start;-webkit-tap-highlight-color:rgba(0,0,0,0)}.text-field,.field{width:100%}.text-field{display:inline-flex}.field{cursor:text}.disabled .field{cursor:default}.text-field,.textarea .field{resize:inherit}.icon{color:currentColor;display:flex;fill:currentColor}.icon ::slotted(*){display:flex}[hasstart] .icon.leading{font-size:var(--_leading-icon-size);height:var(--_leading-icon-size);width:var(--_leading-icon-size)}[hasend] .icon.trailing{font-size:var(--_trailing-icon-size);height:var(--_trailing-icon-size);width:var(--_trailing-icon-size)}.input-wrapper{display:flex}.input-wrapper>*{all:inherit;padding:0}.input{caret-color:var(--_caret-color);overflow-x:hidden;text-align:inherit}.input::placeholder{color:currentColor;opacity:1}.input::-webkit-calendar-picker-indicator{display:none}.input::-webkit-search-decoration,.input::-webkit-search-cancel-button{display:none}@media(forced-colors: active){.input{background:none}}.no-spinner .input::-webkit-inner-spin-button,.no-spinner .input::-webkit-outer-spin-button{display:none}.no-spinner .input[type=number]{-moz-appearance:textfield}:focus-within .input{caret-color:var(--_focus-caret-color)}.error:focus-within .input{caret-color:var(--_error-focus-caret-color)}.text-field:not(.disabled) .prefix{color:var(--_input-text-prefix-color)}.text-field:not(.disabled) .suffix{color:var(--_input-text-suffix-color)}.text-field:not(.disabled) .input::placeholder{color:var(--_input-text-placeholder-color)}.prefix,.suffix{text-wrap:nowrap;width:min-content}.prefix{padding-inline-end:var(--_input-text-prefix-trailing-space)}.suffix{padding-inline-start:var(--_input-text-suffix-leading-space)}\n`;\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport '../field/filled-field.js';\n\nimport {CSSResultOrNative} from 'lit';\nimport {customElement} from 'lit/decorators.js';\nimport {literal} from 'lit/static-html.js';\n\nimport {styles as filledStyles} from './internal/filled-styles.js';\nimport {FilledTextField} from './internal/filled-text-field.js';\nimport {styles as sharedStyles} from './internal/shared-styles.js';\n\nexport {type TextFieldType} from './internal/text-field.js';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'md-filled-text-field': MdFilledTextField;\n  }\n}\n\n/**\n * TODO(b/228525797): Add docs\n * @final\n * @suppress {visibility}\n */\n@customElement('md-filled-text-field')\nexport class MdFilledTextField extends FilledTextField {\n  static override styles: CSSResultOrNative[] = [sharedStyles, filledStyles];\n\n  protected override readonly fieldTag = literal`md-filled-field`;\n}\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./textfield/internal/outlined-styles.css.\nimport {css} from 'lit';\nexport const styles = css`:host{--_caret-color: var(--md-outlined-text-field-caret-color, var(--md-sys-color-primary, #6750a4));--_disabled-input-text-color: var(--md-outlined-text-field-disabled-input-text-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-input-text-opacity: var(--md-outlined-text-field-disabled-input-text-opacity, 0.38);--_disabled-label-text-color: var(--md-outlined-text-field-disabled-label-text-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-label-text-opacity: var(--md-outlined-text-field-disabled-label-text-opacity, 0.38);--_disabled-leading-icon-color: var(--md-outlined-text-field-disabled-leading-icon-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-leading-icon-opacity: var(--md-outlined-text-field-disabled-leading-icon-opacity, 0.38);--_disabled-outline-color: var(--md-outlined-text-field-disabled-outline-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-outline-opacity: var(--md-outlined-text-field-disabled-outline-opacity, 0.12);--_disabled-outline-width: var(--md-outlined-text-field-disabled-outline-width, 1px);--_disabled-supporting-text-color: var(--md-outlined-text-field-disabled-supporting-text-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-supporting-text-opacity: var(--md-outlined-text-field-disabled-supporting-text-opacity, 0.38);--_disabled-trailing-icon-color: var(--md-outlined-text-field-disabled-trailing-icon-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-trailing-icon-opacity: var(--md-outlined-text-field-disabled-trailing-icon-opacity, 0.38);--_error-focus-caret-color: var(--md-outlined-text-field-error-focus-caret-color, var(--md-sys-color-error, #b3261e));--_error-focus-input-text-color: var(--md-outlined-text-field-error-focus-input-text-color, var(--md-sys-color-on-surface, #1d1b20));--_error-focus-label-text-color: var(--md-outlined-text-field-error-focus-label-text-color, var(--md-sys-color-error, #b3261e));--_error-focus-leading-icon-color: var(--md-outlined-text-field-error-focus-leading-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_error-focus-outline-color: var(--md-outlined-text-field-error-focus-outline-color, var(--md-sys-color-error, #b3261e));--_error-focus-supporting-text-color: var(--md-outlined-text-field-error-focus-supporting-text-color, var(--md-sys-color-error, #b3261e));--_error-focus-trailing-icon-color: var(--md-outlined-text-field-error-focus-trailing-icon-color, var(--md-sys-color-error, #b3261e));--_error-hover-input-text-color: var(--md-outlined-text-field-error-hover-input-text-color, var(--md-sys-color-on-surface, #1d1b20));--_error-hover-label-text-color: var(--md-outlined-text-field-error-hover-label-text-color, var(--md-sys-color-on-error-container, #410e0b));--_error-hover-leading-icon-color: var(--md-outlined-text-field-error-hover-leading-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_error-hover-outline-color: var(--md-outlined-text-field-error-hover-outline-color, var(--md-sys-color-on-error-container, #410e0b));--_error-hover-supporting-text-color: var(--md-outlined-text-field-error-hover-supporting-text-color, var(--md-sys-color-error, #b3261e));--_error-hover-trailing-icon-color: var(--md-outlined-text-field-error-hover-trailing-icon-color, var(--md-sys-color-on-error-container, #410e0b));--_error-input-text-color: var(--md-outlined-text-field-error-input-text-color, var(--md-sys-color-on-surface, #1d1b20));--_error-label-text-color: var(--md-outlined-text-field-error-label-text-color, var(--md-sys-color-error, #b3261e));--_error-leading-icon-color: var(--md-outlined-text-field-error-leading-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_error-outline-color: var(--md-outlined-text-field-error-outline-color, var(--md-sys-color-error, #b3261e));--_error-supporting-text-color: var(--md-outlined-text-field-error-supporting-text-color, var(--md-sys-color-error, #b3261e));--_error-trailing-icon-color: var(--md-outlined-text-field-error-trailing-icon-color, var(--md-sys-color-error, #b3261e));--_focus-input-text-color: var(--md-outlined-text-field-focus-input-text-color, var(--md-sys-color-on-surface, #1d1b20));--_focus-label-text-color: var(--md-outlined-text-field-focus-label-text-color, var(--md-sys-color-primary, #6750a4));--_focus-leading-icon-color: var(--md-outlined-text-field-focus-leading-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_focus-outline-color: var(--md-outlined-text-field-focus-outline-color, var(--md-sys-color-primary, #6750a4));--_focus-outline-width: var(--md-outlined-text-field-focus-outline-width, 3px);--_focus-supporting-text-color: var(--md-outlined-text-field-focus-supporting-text-color, var(--md-sys-color-on-surface-variant, #49454f));--_focus-trailing-icon-color: var(--md-outlined-text-field-focus-trailing-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_hover-input-text-color: var(--md-outlined-text-field-hover-input-text-color, var(--md-sys-color-on-surface, #1d1b20));--_hover-label-text-color: var(--md-outlined-text-field-hover-label-text-color, var(--md-sys-color-on-surface, #1d1b20));--_hover-leading-icon-color: var(--md-outlined-text-field-hover-leading-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_hover-outline-color: var(--md-outlined-text-field-hover-outline-color, var(--md-sys-color-on-surface, #1d1b20));--_hover-outline-width: var(--md-outlined-text-field-hover-outline-width, 1px);--_hover-supporting-text-color: var(--md-outlined-text-field-hover-supporting-text-color, var(--md-sys-color-on-surface-variant, #49454f));--_hover-trailing-icon-color: var(--md-outlined-text-field-hover-trailing-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_input-text-color: var(--md-outlined-text-field-input-text-color, var(--md-sys-color-on-surface, #1d1b20));--_input-text-font: var(--md-outlined-text-field-input-text-font, var(--md-sys-typescale-body-large-font, var(--md-ref-typeface-plain, Roboto)));--_input-text-line-height: var(--md-outlined-text-field-input-text-line-height, var(--md-sys-typescale-body-large-line-height, 1.5rem));--_input-text-placeholder-color: var(--md-outlined-text-field-input-text-placeholder-color, var(--md-sys-color-on-surface-variant, #49454f));--_input-text-prefix-color: var(--md-outlined-text-field-input-text-prefix-color, var(--md-sys-color-on-surface-variant, #49454f));--_input-text-size: var(--md-outlined-text-field-input-text-size, var(--md-sys-typescale-body-large-size, 1rem));--_input-text-suffix-color: var(--md-outlined-text-field-input-text-suffix-color, var(--md-sys-color-on-surface-variant, #49454f));--_input-text-weight: var(--md-outlined-text-field-input-text-weight, var(--md-sys-typescale-body-large-weight, var(--md-ref-typeface-weight-regular, 400)));--_label-text-color: var(--md-outlined-text-field-label-text-color, var(--md-sys-color-on-surface-variant, #49454f));--_label-text-font: var(--md-outlined-text-field-label-text-font, var(--md-sys-typescale-body-large-font, var(--md-ref-typeface-plain, Roboto)));--_label-text-line-height: var(--md-outlined-text-field-label-text-line-height, var(--md-sys-typescale-body-large-line-height, 1.5rem));--_label-text-populated-line-height: var(--md-outlined-text-field-label-text-populated-line-height, var(--md-sys-typescale-body-small-line-height, 1rem));--_label-text-populated-size: var(--md-outlined-text-field-label-text-populated-size, var(--md-sys-typescale-body-small-size, 0.75rem));--_label-text-size: var(--md-outlined-text-field-label-text-size, var(--md-sys-typescale-body-large-size, 1rem));--_label-text-weight: var(--md-outlined-text-field-label-text-weight, var(--md-sys-typescale-body-large-weight, var(--md-ref-typeface-weight-regular, 400)));--_leading-icon-color: var(--md-outlined-text-field-leading-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_leading-icon-size: var(--md-outlined-text-field-leading-icon-size, 24px);--_outline-color: var(--md-outlined-text-field-outline-color, var(--md-sys-color-outline, #79747e));--_outline-width: var(--md-outlined-text-field-outline-width, 1px);--_supporting-text-color: var(--md-outlined-text-field-supporting-text-color, var(--md-sys-color-on-surface-variant, #49454f));--_supporting-text-font: var(--md-outlined-text-field-supporting-text-font, var(--md-sys-typescale-body-small-font, var(--md-ref-typeface-plain, Roboto)));--_supporting-text-line-height: var(--md-outlined-text-field-supporting-text-line-height, var(--md-sys-typescale-body-small-line-height, 1rem));--_supporting-text-size: var(--md-outlined-text-field-supporting-text-size, var(--md-sys-typescale-body-small-size, 0.75rem));--_supporting-text-weight: var(--md-outlined-text-field-supporting-text-weight, var(--md-sys-typescale-body-small-weight, var(--md-ref-typeface-weight-regular, 400)));--_trailing-icon-color: var(--md-outlined-text-field-trailing-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_trailing-icon-size: var(--md-outlined-text-field-trailing-icon-size, 24px);--_container-shape-start-start: var(--md-outlined-text-field-container-shape-start-start, var(--md-outlined-text-field-container-shape, var(--md-sys-shape-corner-extra-small, 4px)));--_container-shape-start-end: var(--md-outlined-text-field-container-shape-start-end, var(--md-outlined-text-field-container-shape, var(--md-sys-shape-corner-extra-small, 4px)));--_container-shape-end-end: var(--md-outlined-text-field-container-shape-end-end, var(--md-outlined-text-field-container-shape, var(--md-sys-shape-corner-extra-small, 4px)));--_container-shape-end-start: var(--md-outlined-text-field-container-shape-end-start, var(--md-outlined-text-field-container-shape, var(--md-sys-shape-corner-extra-small, 4px)));--_leading-space: var(--md-outlined-text-field-leading-space, 16px);--_trailing-space: var(--md-outlined-text-field-trailing-space, 16px);--_top-space: var(--md-outlined-text-field-top-space, 16px);--_bottom-space: var(--md-outlined-text-field-bottom-space, 16px);--_input-text-prefix-trailing-space: var(--md-outlined-text-field-input-text-prefix-trailing-space, 2px);--_input-text-suffix-leading-space: var(--md-outlined-text-field-input-text-suffix-leading-space, 2px);--_focus-caret-color: var(--md-outlined-text-field-focus-caret-color, var(--md-sys-color-primary, #6750a4));--md-outlined-field-bottom-space: var(--_bottom-space);--md-outlined-field-container-shape-end-end: var(--_container-shape-end-end);--md-outlined-field-container-shape-end-start: var(--_container-shape-end-start);--md-outlined-field-container-shape-start-end: var(--_container-shape-start-end);--md-outlined-field-container-shape-start-start: var(--_container-shape-start-start);--md-outlined-field-content-color: var(--_input-text-color);--md-outlined-field-content-font: var(--_input-text-font);--md-outlined-field-content-line-height: var(--_input-text-line-height);--md-outlined-field-content-size: var(--_input-text-size);--md-outlined-field-content-weight: var(--_input-text-weight);--md-outlined-field-disabled-content-color: var(--_disabled-input-text-color);--md-outlined-field-disabled-content-opacity: var(--_disabled-input-text-opacity);--md-outlined-field-disabled-label-text-color: var(--_disabled-label-text-color);--md-outlined-field-disabled-label-text-opacity: var(--_disabled-label-text-opacity);--md-outlined-field-disabled-leading-content-color: var(--_disabled-leading-icon-color);--md-outlined-field-disabled-leading-content-opacity: var(--_disabled-leading-icon-opacity);--md-outlined-field-disabled-outline-color: var(--_disabled-outline-color);--md-outlined-field-disabled-outline-opacity: var(--_disabled-outline-opacity);--md-outlined-field-disabled-outline-width: var(--_disabled-outline-width);--md-outlined-field-disabled-supporting-text-color: var(--_disabled-supporting-text-color);--md-outlined-field-disabled-supporting-text-opacity: var(--_disabled-supporting-text-opacity);--md-outlined-field-disabled-trailing-content-color: var(--_disabled-trailing-icon-color);--md-outlined-field-disabled-trailing-content-opacity: var(--_disabled-trailing-icon-opacity);--md-outlined-field-error-content-color: var(--_error-input-text-color);--md-outlined-field-error-focus-content-color: var(--_error-focus-input-text-color);--md-outlined-field-error-focus-label-text-color: var(--_error-focus-label-text-color);--md-outlined-field-error-focus-leading-content-color: var(--_error-focus-leading-icon-color);--md-outlined-field-error-focus-outline-color: var(--_error-focus-outline-color);--md-outlined-field-error-focus-supporting-text-color: var(--_error-focus-supporting-text-color);--md-outlined-field-error-focus-trailing-content-color: var(--_error-focus-trailing-icon-color);--md-outlined-field-error-hover-content-color: var(--_error-hover-input-text-color);--md-outlined-field-error-hover-label-text-color: var(--_error-hover-label-text-color);--md-outlined-field-error-hover-leading-content-color: var(--_error-hover-leading-icon-color);--md-outlined-field-error-hover-outline-color: var(--_error-hover-outline-color);--md-outlined-field-error-hover-supporting-text-color: var(--_error-hover-supporting-text-color);--md-outlined-field-error-hover-trailing-content-color: var(--_error-hover-trailing-icon-color);--md-outlined-field-error-label-text-color: var(--_error-label-text-color);--md-outlined-field-error-leading-content-color: var(--_error-leading-icon-color);--md-outlined-field-error-outline-color: var(--_error-outline-color);--md-outlined-field-error-supporting-text-color: var(--_error-supporting-text-color);--md-outlined-field-error-trailing-content-color: var(--_error-trailing-icon-color);--md-outlined-field-focus-content-color: var(--_focus-input-text-color);--md-outlined-field-focus-label-text-color: var(--_focus-label-text-color);--md-outlined-field-focus-leading-content-color: var(--_focus-leading-icon-color);--md-outlined-field-focus-outline-color: var(--_focus-outline-color);--md-outlined-field-focus-outline-width: var(--_focus-outline-width);--md-outlined-field-focus-supporting-text-color: var(--_focus-supporting-text-color);--md-outlined-field-focus-trailing-content-color: var(--_focus-trailing-icon-color);--md-outlined-field-hover-content-color: var(--_hover-input-text-color);--md-outlined-field-hover-label-text-color: var(--_hover-label-text-color);--md-outlined-field-hover-leading-content-color: var(--_hover-leading-icon-color);--md-outlined-field-hover-outline-color: var(--_hover-outline-color);--md-outlined-field-hover-outline-width: var(--_hover-outline-width);--md-outlined-field-hover-supporting-text-color: var(--_hover-supporting-text-color);--md-outlined-field-hover-trailing-content-color: var(--_hover-trailing-icon-color);--md-outlined-field-label-text-color: var(--_label-text-color);--md-outlined-field-label-text-font: var(--_label-text-font);--md-outlined-field-label-text-line-height: var(--_label-text-line-height);--md-outlined-field-label-text-populated-line-height: var(--_label-text-populated-line-height);--md-outlined-field-label-text-populated-size: var(--_label-text-populated-size);--md-outlined-field-label-text-size: var(--_label-text-size);--md-outlined-field-label-text-weight: var(--_label-text-weight);--md-outlined-field-leading-content-color: var(--_leading-icon-color);--md-outlined-field-leading-space: var(--_leading-space);--md-outlined-field-outline-color: var(--_outline-color);--md-outlined-field-outline-width: var(--_outline-width);--md-outlined-field-supporting-text-color: var(--_supporting-text-color);--md-outlined-field-supporting-text-font: var(--_supporting-text-font);--md-outlined-field-supporting-text-line-height: var(--_supporting-text-line-height);--md-outlined-field-supporting-text-size: var(--_supporting-text-size);--md-outlined-field-supporting-text-weight: var(--_supporting-text-weight);--md-outlined-field-top-space: var(--_top-space);--md-outlined-field-trailing-content-color: var(--_trailing-icon-color);--md-outlined-field-trailing-space: var(--_trailing-space)}\n`;\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport '../../field/outlined-field.js';\n\nimport {literal} from 'lit/static-html.js';\n\nimport {TextField} from './text-field.js';\n\n/**\n * An outlined text field component\n */\nexport class OutlinedTextField extends TextField {\n  protected readonly fieldTag = literal`md-outlined-field`;\n}\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport '../field/outlined-field.js';\n\nimport {CSSResultOrNative} from 'lit';\nimport {customElement} from 'lit/decorators.js';\nimport {literal} from 'lit/static-html.js';\n\nimport {styles as outlinedStyles} from './internal/outlined-styles.js';\nimport {OutlinedTextField} from './internal/outlined-text-field.js';\nimport {styles as sharedStyles} from './internal/shared-styles.js';\n\nexport {type TextFieldType} from './internal/text-field.js';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'md-outlined-text-field': MdOutlinedTextField;\n  }\n}\n\n/**\n * TODO(b/228525797): Add docs\n * @final\n * @suppress {visibility}\n */\n@customElement('md-outlined-text-field')\nexport class MdOutlinedTextField extends OutlinedTextField {\n  static override styles: CSSResultOrNative[] = [sharedStyles, outlinedStyles];\n\n  protected override readonly fieldTag = literal`md-outlined-field`;\n}\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {css, html, LitElement} from 'lit';\nimport {customElement} from 'lit/decorators.js';\n\n/**\n * A layout element that lays out the\n * catalog-component-header-title[slot=\"title\"] and the header image in our\n * component READMEs. This element is never hydrated only SSRd.\n *\n * See component-template.md in internal team docs for usage.\n */\n@customElement('catalog-component-header')\nexport class CatalogComponentHeader extends LitElement {\n  render() {\n    return html` <div>\n      <slot class=\"title\" name=\"title\"></slot>\n      <slot class=\"image\"></slot>\n    </div>`;\n  }\n\n  static styles = css`\n    :host {\n      display: block;\n      --catalog-image-border-radius: var(--catalog-shape-xl);\n      container: host / inline-size;\n      position: relative;\n      margin-inline: auto;\n    }\n\n    slot {\n      height: 100%;\n    }\n\n    slot,\n    .image::slotted(*) {\n      display: flex;\n      align-items: start;\n      margin: 0;\n    }\n\n    .end slot,\n    .end .image::slotted(*) {\n      align-items: end;\n    }\n\n    .center slot,\n    .center .image::slotted(*) {\n      align-items: center;\n    }\n\n    .image {\n      /* Color needs to differ from top-app-bar and sidebar */\n      background-color: var(--md-sys-color-surface-variant);\n      border-radius: var(--catalog-image-border-radius);\n      overflow: hidden;\n      margin-block-start: 16px;\n      aspect-ratio: 3 / 2;\n      max-width: 100%;\n    }\n\n    ::slotted(*) {\n      box-sizing: border-box;\n      height: 100%;\n      width: 100%;\n    }\n\n    .image::slotted(*) {\n      --catalog-image-border-radius: 0px;\n      --catalog-header-image-height: 100%;\n      --catalog-header-image-width: auto;\n      display: flex;\n      justify-content: center;\n    }\n\n    /* fit ipad pro at least */\n    @container (width > 1000px) {\n      div {\n        display: grid;\n        grid-gap: 8px;\n        gap: 8px;\n        grid-template-columns: repeat(2, 1fr);\n        grid-auto-flow: row;\n      }\n\n      .image {\n        margin-block-start: 0;\n        aspect-ratio: unset;\n      }\n\n      .image,\n      .image::slotted(*) {\n        min-height: 100%;\n        max-height: 544px;\n      }\n    }\n  `;\n}\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {css, html, LitElement} from 'lit';\nimport {customElement} from 'lit/decorators.js';\n\n/**\n * A layout element that lays out the slotted h1 in our component READMEs. This\n * element is never hydrated only SSRd.\n *\n * See component-template.md in internal team docs for usage.\n */\n@customElement('catalog-component-header-title')\nexport class CatalogComponentHeaderTitle extends LitElement {\n  render() {\n    return html`<slot></slot>`;\n  }\n\n  static styles = css`\n    :host {\n      width: 100%;\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      border-radius: var(--catalog-image-border-radius);\n      padding: 56px;\n      /* It has no border so we need it to be a different color from the top app\n       * bar and nav drawer.\n       */\n      background-color: var(--md-sys-color-surface-variant);\n      color: var(--md-sys-color-on-surface-variant);\n    }\n\n    slot::slotted(h1) {\n      margin-block-end: 8px;\n      font-weight: 475;\n    }\n\n    slot::slotted(p) {\n      font-size: var(--catalog-title-l-font-size);\n    }\n\n    slot::slotted(*) {\n      margin-block-start: 0;\n    }\n\n    slot::slotted(*:last-child) {\n      margin-block-end: 0;\n    }\n\n    @media screen and (max-width: 600px) {\n      :host {\n        padding: 32px;\n      }\n    }\n  `;\n}\n", "/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/**\n * Overview:\n *\n * This module is designed to add support for an async `setValue` API and\n * `disconnected` callback to directives with the least impact on the core\n * runtime or payload when that feature is not used.\n *\n * The strategy is to introduce a `AsyncDirective` subclass of\n * `Directive` that climbs the \"parent\" tree in its constructor to note which\n * branches of lit-html's \"logical tree\" of data structures contain such\n * directives and thus need to be crawled when a subtree is being cleared (or\n * manually disconnected) in order to run the `disconnected` callback.\n *\n * The \"nodes\" of the logical tree include Parts, TemplateInstances (for when a\n * TemplateResult is committed to a value of a ChildPart), and Directives; these\n * all implement a common interface called `DisconnectableChild`. Each has a\n * `_$parent` reference which is set during construction in the core code, and a\n * `_$disconnectableChildren` field which is initially undefined.\n *\n * The sparse tree created by means of the `AsyncDirective` constructor\n * crawling up the `_$parent` tree and placing a `_$disconnectableChildren` Set\n * on each parent that includes each child that contains a\n * `AsyncDirective` directly or transitively via its children. In order to\n * notify connection state changes and disconnect (or reconnect) a tree, the\n * `_$notifyConnectionChanged` API is patched onto ChildParts as a directive\n * climbs the parent tree, which is called by the core when clearing a part if\n * it exists. When called, that method iterates over the sparse tree of\n * Set<DisconnectableChildren> built up by AsyncDirectives, and calls\n * `_$notifyDirectiveConnectionChanged` on any directives that are encountered\n * in that tree, running the required callbacks.\n *\n * A given \"logical tree\" of lit-html data-structures might look like this:\n *\n *  ChildPart(N1) _$dC=[D2,T3]\n *   ._directive\n *     AsyncDirective(D2)\n *   ._value // user value was TemplateResult\n *     TemplateInstance(T3) _$dC=[A4,A6,N10,N12]\n *      ._$parts[]\n *        AttributePart(A4) _$dC=[D5]\n *         ._directives[]\n *           AsyncDirective(D5)\n *        AttributePart(A6) _$dC=[D7,D8]\n *         ._directives[]\n *           AsyncDirective(D7)\n *           Directive(D8) _$dC=[D9]\n *            ._directive\n *              AsyncDirective(D9)\n *        ChildPart(N10) _$dC=[D11]\n *         ._directive\n *           AsyncDirective(D11)\n *         ._value\n *           string\n *        ChildPart(N12) _$dC=[D13,N14,N16]\n *         ._directive\n *           AsyncDirective(D13)\n *         ._value // user value was iterable\n *           Array<ChildPart>\n *             ChildPart(N14) _$dC=[D15]\n *              ._value\n *                string\n *             ChildPart(N16) _$dC=[D17,T18]\n *              ._directive\n *                AsyncDirective(D17)\n *              ._value // user value was TemplateResult\n *                TemplateInstance(T18) _$dC=[A19,A21,N25]\n *                 ._$parts[]\n *                   AttributePart(A19) _$dC=[D20]\n *                    ._directives[]\n *                      AsyncDirective(D20)\n *                   AttributePart(A21) _$dC=[22,23]\n *                    ._directives[]\n *                      AsyncDirective(D22)\n *                      Directive(D23) _$dC=[D24]\n *                       ._directive\n *                         AsyncDirective(D24)\n *                   ChildPart(N25) _$dC=[D26]\n *                    ._directive\n *                      AsyncDirective(D26)\n *                    ._value\n *                      string\n *\n * Example 1: The directive in ChildPart(N12) updates and returns `nothing`. The\n * ChildPart will _clear() itself, and so we need to disconnect the \"value\" of\n * the ChildPart (but not its directive). In this case, when `_clear()` calls\n * `_$notifyConnectionChanged()`, we don't iterate all of the\n * _$disconnectableChildren, rather we do a value-specific disconnection: i.e.\n * since the _value was an Array<ChildPart> (because an iterable had been\n * committed), we iterate the array of ChildParts (N14, N16) and run\n * `setConnected` on them (which does recurse down the full tree of\n * `_$disconnectableChildren` below it, and also removes N14 and N16 from N12's\n * `_$disconnectableChildren`). Once the values have been disconnected, we then\n * check whether the ChildPart(N12)'s list of `_$disconnectableChildren` is empty\n * (and would remove it from its parent TemplateInstance(T3) if so), but since\n * it would still contain its directive D13, it stays in the disconnectable\n * tree.\n *\n * Example 2: In the course of Example 1, `setConnected` will reach\n * ChildPart(N16); in this case the entire part is being disconnected, so we\n * simply iterate all of N16's `_$disconnectableChildren` (D17,T18) and\n * recursively run `setConnected` on them. Note that we only remove children\n * from `_$disconnectableChildren` for the top-level values being disconnected\n * on a clear; doing this bookkeeping lower in the tree is wasteful since it's\n * all being thrown away.\n *\n * Example 3: If the LitElement containing the entire tree above becomes\n * disconnected, it will run `childPart.setConnected()` (which calls\n * `childPart._$notifyConnectionChanged()` if it exists); in this case, we\n * recursively run `setConnected()` over the entire tree, without removing any\n * children from `_$disconnectableChildren`, since this tree is required to\n * re-connect the tree, which does the same operation, simply passing\n * `isConnected: true` down the tree, signaling which callback to run.\n */\n\nimport {AttributePart, ChildPart, Disconnectable, Part} from './lit-html.js';\nimport {isSingleExpression} from './directive-helpers.js';\nimport {Directive, PartInfo, PartType} from './directive.js';\nexport * from './directive.js';\n\nconst DEV_MODE = true;\n\n/**\n * Recursively walks down the tree of Parts/TemplateInstances/Directives to set\n * the connected state of directives and run `disconnected`/ `reconnected`\n * callbacks.\n *\n * @return True if there were children to disconnect; false otherwise\n */\nconst notifyChildrenConnectedChanged = (\n  parent: Disconnectable,\n  isConnected: boolean\n): boolean => {\n  const children = parent._$disconnectableChildren;\n  if (children === undefined) {\n    return false;\n  }\n  for (const obj of children) {\n    // The existence of `_$notifyDirectiveConnectionChanged` is used as a \"brand\" to\n    // disambiguate AsyncDirectives from other DisconnectableChildren\n    // (as opposed to using an instanceof check to know when to call it); the\n    // redundancy of \"Directive\" in the API name is to avoid conflicting with\n    // `_$notifyConnectionChanged`, which exists `ChildParts` which are also in\n    // this list\n    // Disconnect Directive (and any nested directives contained within)\n    // This property needs to remain unminified.\n    (obj as AsyncDirective)['_$notifyDirectiveConnectionChanged']?.(\n      isConnected,\n      false\n    );\n    // Disconnect Part/TemplateInstance\n    notifyChildrenConnectedChanged(obj, isConnected);\n  }\n  return true;\n};\n\n/**\n * Removes the given child from its parent list of disconnectable children, and\n * if the parent list becomes empty as a result, removes the parent from its\n * parent, and so forth up the tree when that causes subsequent parent lists to\n * become empty.\n */\nconst removeDisconnectableFromParent = (obj: Disconnectable) => {\n  let parent, children;\n  do {\n    if ((parent = obj._$parent) === undefined) {\n      break;\n    }\n    children = parent._$disconnectableChildren!;\n    children.delete(obj);\n    obj = parent;\n  } while (children?.size === 0);\n};\n\nconst addDisconnectableToParent = (obj: Disconnectable) => {\n  // Climb the parent tree, creating a sparse tree of children needing\n  // disconnection\n  for (let parent; (parent = obj._$parent); obj = parent) {\n    let children = parent._$disconnectableChildren;\n    if (children === undefined) {\n      parent._$disconnectableChildren = children = new Set();\n    } else if (children.has(obj)) {\n      // Once we've reached a parent that already contains this child, we\n      // can short-circuit\n      break;\n    }\n    children.add(obj);\n    installDisconnectAPI(parent);\n  }\n};\n\n/**\n * Changes the parent reference of the ChildPart, and updates the sparse tree of\n * Disconnectable children accordingly.\n *\n * Note, this method will be patched onto ChildPart instances and called from\n * the core code when parts are moved between different parents.\n */\nfunction reparentDisconnectables(this: ChildPart, newParent: Disconnectable) {\n  if (this._$disconnectableChildren !== undefined) {\n    removeDisconnectableFromParent(this);\n    this._$parent = newParent;\n    addDisconnectableToParent(this);\n  } else {\n    this._$parent = newParent;\n  }\n}\n\n/**\n * Sets the connected state on any directives contained within the committed\n * value of this part (i.e. within a TemplateInstance or iterable of\n * ChildParts) and runs their `disconnected`/`reconnected`s, as well as within\n * any directives stored on the ChildPart (when `valueOnly` is false).\n *\n * `isClearingValue` should be passed as `true` on a top-level part that is\n * clearing itself, and not as a result of recursively disconnecting directives\n * as part of a `clear` operation higher up the tree. This both ensures that any\n * directive on this ChildPart that produced a value that caused the clear\n * operation is not disconnected, and also serves as a performance optimization\n * to avoid needless bookkeeping when a subtree is going away; when clearing a\n * subtree, only the top-most part need to remove itself from the parent.\n *\n * `fromPartIndex` is passed only in the case of a partial `_clear` running as a\n * result of truncating an iterable.\n *\n * Note, this method will be patched onto ChildPart instances and called from the\n * core code when parts are cleared or the connection state is changed by the\n * user.\n */\nfunction notifyChildPartConnectedChanged(\n  this: ChildPart,\n  isConnected: boolean,\n  isClearingValue = false,\n  fromPartIndex = 0\n) {\n  const value = this._$committedValue;\n  const children = this._$disconnectableChildren;\n  if (children === undefined || children.size === 0) {\n    return;\n  }\n  if (isClearingValue) {\n    if (Array.isArray(value)) {\n      // Iterable case: Any ChildParts created by the iterable should be\n      // disconnected and removed from this ChildPart's disconnectable\n      // children (starting at `fromPartIndex` in the case of truncation)\n      for (let i = fromPartIndex; i < value.length; i++) {\n        notifyChildrenConnectedChanged(value[i], false);\n        removeDisconnectableFromParent(value[i]);\n      }\n    } else if (value != null) {\n      // TemplateInstance case: If the value has disconnectable children (will\n      // only be in the case that it is a TemplateInstance), we disconnect it\n      // and remove it from this ChildPart's disconnectable children\n      notifyChildrenConnectedChanged(value as Disconnectable, false);\n      removeDisconnectableFromParent(value as Disconnectable);\n    }\n  } else {\n    notifyChildrenConnectedChanged(this, isConnected);\n  }\n}\n\n/**\n * Patches disconnection API onto ChildParts.\n */\nconst installDisconnectAPI = (obj: Disconnectable) => {\n  if ((obj as ChildPart).type == PartType.CHILD) {\n    (obj as ChildPart)._$notifyConnectionChanged ??=\n      notifyChildPartConnectedChanged;\n    (obj as ChildPart)._$reparentDisconnectables ??= reparentDisconnectables;\n  }\n};\n\n/**\n * An abstract `Directive` base class whose `disconnected` method will be\n * called when the part containing the directive is cleared as a result of\n * re-rendering, or when the user calls `part.setConnected(false)` on\n * a part that was previously rendered containing the directive (as happens\n * when e.g. a LitElement disconnects from the DOM).\n *\n * If `part.setConnected(true)` is subsequently called on a\n * containing part, the directive's `reconnected` method will be called prior\n * to its next `update`/`render` callbacks. When implementing `disconnected`,\n * `reconnected` should also be implemented to be compatible with reconnection.\n *\n * Note that updates may occur while the directive is disconnected. As such,\n * directives should generally check the `this.isConnected` flag during\n * render/update to determine whether it is safe to subscribe to resources\n * that may prevent garbage collection.\n */\nexport abstract class AsyncDirective extends Directive {\n  // As opposed to other Disconnectables, AsyncDirectives always get notified\n  // when the RootPart connection changes, so the public `isConnected`\n  // is a locally stored variable initialized via its part's getter and synced\n  // via `_$notifyDirectiveConnectionChanged`. This is cheaper than using\n  // the _$isConnected getter, which has to look back up the tree each time.\n  /**\n   * The connection state for this Directive.\n   */\n  isConnected!: boolean;\n\n  // @internal\n  override _$disconnectableChildren?: Set<Disconnectable> = undefined;\n  /**\n   * Initialize the part with internal fields\n   * @param part\n   * @param parent\n   * @param attributeIndex\n   */\n  override _$initialize(\n    part: Part,\n    parent: Disconnectable,\n    attributeIndex: number | undefined\n  ) {\n    super._$initialize(part, parent, attributeIndex);\n    addDisconnectableToParent(this);\n    this.isConnected = part._$isConnected;\n  }\n  // This property needs to remain unminified.\n  /**\n   * Called from the core code when a directive is going away from a part (in\n   * which case `shouldRemoveFromParent` should be true), and from the\n   * `setChildrenConnected` helper function when recursively changing the\n   * connection state of a tree (in which case `shouldRemoveFromParent` should\n   * be false).\n   *\n   * @param isConnected\n   * @param isClearingDirective - True when the directive itself is being\n   *     removed; false when the tree is being disconnected\n   * @internal\n   */\n  override ['_$notifyDirectiveConnectionChanged'](\n    isConnected: boolean,\n    isClearingDirective = true\n  ) {\n    if (isConnected !== this.isConnected) {\n      this.isConnected = isConnected;\n      if (isConnected) {\n        this.reconnected?.();\n      } else {\n        this.disconnected?.();\n      }\n    }\n    if (isClearingDirective) {\n      notifyChildrenConnectedChanged(this, isConnected);\n      removeDisconnectableFromParent(this);\n    }\n  }\n\n  /**\n   * Sets the value of the directive's Part outside the normal `update`/`render`\n   * lifecycle of a directive.\n   *\n   * This method should not be called synchronously from a directive's `update`\n   * or `render`.\n   *\n   * @param directive The directive to update\n   * @param value The value to set\n   */\n  setValue(value: unknown) {\n    if (isSingleExpression(this.__part as unknown as PartInfo)) {\n      this.__part._$setValue(value, this);\n    } else {\n      // this.__attributeIndex will be defined in this case, but\n      // assert it in dev mode\n      if (DEV_MODE && this.__attributeIndex === undefined) {\n        throw new Error(`Expected this.__attributeIndex to be a number`);\n      }\n      const newValues = [...(this.__part._$committedValue as Array<unknown>)];\n      newValues[this.__attributeIndex!] = value;\n      (this.__part as AttributePart)._$setValue(newValues, this, 0);\n    }\n  }\n\n  /**\n   * User callbacks for implementing logic to release any resources/subscriptions\n   * that may have been retained by this directive. Since directives may also be\n   * re-connected, `reconnected` should also be implemented to restore the\n   * working state of the directive prior to the next render.\n   */\n  protected disconnected() {}\n  protected reconnected() {}\n}\n", "import {ReactiveControllerHost} from 'lit';\nimport {Animate, Options} from './animate.js';\n\nexport const controllerMap: WeakMap<ReactiveControllerHost, AnimateController> =\n  new WeakMap();\n\n/**\n * AnimateController can be used to provide default configuration options to all\n * `animate()` directives in a given component.\n *\n * It also provides control over all the `animate()` animations within a given\n * component, for example, `this.animateController.pause()` pauses all animations.\n */\nexport class AnimateController {\n  host: ReactiveControllerHost;\n  defaultOptions: Options;\n  startPaused = false;\n  disabled = false;\n  onComplete?: () => void;\n\n  constructor(\n    host: ReactiveControllerHost,\n    options: {\n      defaultOptions?: Options;\n      startPaused?: boolean;\n      disabled?: boolean;\n      onComplete?: () => void;\n    }\n  ) {\n    this.host = host;\n    this.defaultOptions = options.defaultOptions || {};\n    this.startPaused = !!options.startPaused;\n    this.disabled = !!options.disabled;\n    this.onComplete = options.onComplete;\n    controllerMap.set(this.host, this);\n  }\n\n  /**\n   * Set of active `animate()` directives in the host component\n   */\n  clients: Set<Animate> = new Set();\n\n  protected pendingComplete = false;\n\n  async add(animate: Animate) {\n    this.clients.add(animate);\n    if (this.startPaused) {\n      animate.webAnimation?.pause();\n    }\n    this.pendingComplete = true;\n    await animate.finished;\n    if (this.pendingComplete && !this.isAnimating) {\n      this.pendingComplete = false;\n      this.onComplete?.();\n    }\n  }\n\n  remove(animate: Animate) {\n    this.clients.delete(animate);\n  }\n\n  /**\n   * Pauses all animations running in the host component.\n   */\n  pause() {\n    this.clients.forEach((f) => f.webAnimation?.pause());\n  }\n\n  /**\n   * Plays all active animations in the host component.\n   */\n  play() {\n    this.clients.forEach((f) => f.webAnimation?.play());\n  }\n\n  cancel() {\n    this.clients.forEach((f) => f.webAnimation?.cancel());\n    this.clients.clear();\n  }\n\n  finish() {\n    this.clients.forEach((f) => f.webAnimation?.finish());\n    this.clients.clear();\n  }\n\n  /**\n   * Toggles the play/pause state of all active `animate()` animations in the host component.\n   */\n  togglePlay() {\n    if (this.isPlaying) {\n      this.pause();\n    } else {\n      this.play();\n    }\n  }\n\n  /**\n   * Returns true if the host component has any active `animate()` animations.\n   */\n  get isAnimating() {\n    return this.clients.size > 0;\n  }\n\n  /**\n   * Returns true if the host component has any playing `animate()` animations.\n   */\n  get isPlaying() {\n    return Array.from(this.clients).some(\n      (a) => a.webAnimation?.playState === 'running'\n    );\n  }\n\n  async finished() {\n    await Promise.all(Array.from(this.clients).map((f) => f.finished));\n  }\n}\n", "import {LitElement, ReactiveControllerHost} from 'lit';\nimport {nothing, AttributePart} from 'lit/html.js';\nimport {directive, PartInfo, PartType} from 'lit/directive.js';\nimport {AsyncDirective} from 'lit/async-directive.js';\nimport {controllerMap} from './animate-controller.js';\nexport {AnimateController} from './animate-controller.js';\n\nexport type CSSValues = {\n  [index: string]: string | number;\n};\n\nexport type CSSPropertiesList = string[];\n\n// zIndex for \"in\" animations\nlet z = 0;\n\nconst disconnectedProps: Map<unknown, CSSValues> = new Map();\nconst renderedHosts: WeakSet<ReactiveControllerHost> = new WeakSet();\n\nexport type Options = {\n  // Options used for the animation\n  keyframeOptions?: KeyframeAnimationOptions;\n  // List of css properties to animate\n  properties?: CSSPropertiesList;\n  // if `true`, the `animate` is disabled\n  disabled?: boolean;\n  // Callback run to produce a value which is dirty checked to determine if animation should run.\n  guard?: () => unknown;\n  // Id for this `animate`; used to link to other `animate`s via e.g. `inId`\n  id?: unknown;\n  // Set to the `animate` id to map to when rendering \"in\"\n  inId?: unknown;\n  // Keyframes to use when animating \"in\"\n  in?: Keyframe[];\n  // Keyframes to use when animating \"out\"\n  out?: Keyframe[];\n  // Set to true to match DOM position when animating \"out\"\n  stabilizeOut?: boolean;\n  // Skips animation when initially rendering\n  skipInitial?: boolean;\n  // Callback run when the `animate` animation starts\n  onStart?: (animate: Animate) => void;\n  // Callback run when the animation is complete\n  onComplete?: (animate: Animate) => void;\n  // Callback run to modify frames used to animate\n  onFrames?: (animate: Animate) => Keyframe[] | undefined;\n};\n\nexport const animationFrame = () =>\n  new Promise((resolve) => requestAnimationFrame(resolve));\n\n// Presets for animating \"in\" and \"out\" of the DOM.\nexport const flyBelow = [{transform: 'translateY(100%) scale(0)', opacity: 0}];\nexport const flyAbove = [{transform: 'translateY(-100%) scale(0)', opacity: 0}];\nexport const flyLeft = [{transform: 'translateX(-100%) scale(0)', opacity: 0}];\nexport const flyRight = [{transform: 'translateX(100%) scale(0)', opacity: 0}];\nexport const none = [{}];\nexport const fadeOut = [{opacity: 0}];\nexport const fade = fadeOut;\nexport const fadeIn = [{opacity: 0}, {opacity: 1}];\nexport const fadeInSlow = [\n  {opacity: 0},\n  {opacity: 0.25, offset: 0.75},\n  {opacity: 1},\n];\n\nconst diffOp = (a: number, b: number) => {\n  const v = a - b;\n  return v === 0 ? undefined : v;\n};\nconst quotientOp = (a: number, b: number) => {\n  const v = a / b;\n  return v === 1 ? undefined : v;\n};\n\n// Computes a transform given a before and after input for given properties.\nexport const transformProps = {\n  left: (a: number, b: number) => {\n    const value = diffOp(a, b);\n    return {value, transform: value && `translateX(${value}px)`};\n  },\n  top: (a: number, b: number) => {\n    const value = diffOp(a, b);\n    return {value, transform: value && `translateY(${value}px)`};\n  },\n  width: (a: number, b: number) => {\n    const value = quotientOp(a, b);\n    return {value, transform: value && `scaleX(${value})`};\n  },\n  height: (a: number, b: number) => {\n    const value = quotientOp(a, b);\n    return {value, transform: value && `scaleY(${value})`};\n  },\n};\n\nexport const defaultKeyframeOptions: KeyframeAnimationOptions = {\n  duration: 333,\n  easing: `ease-in-out`,\n};\n\nexport const defaultCssProperties: CSSPropertiesList = [\n  'left',\n  'top',\n  'width',\n  'height',\n  'opacity',\n  'color',\n  'background',\n];\n\n// Dirty checks the value received from the `guard` option.\nconst isDirty = (value: unknown, previous: unknown) => {\n  if (Array.isArray(value)) {\n    // Dirty-check arrays by item\n    if (\n      Array.isArray(previous) &&\n      previous.length === value.length &&\n      value.every((v, i) => v === (previous as Array<unknown>)[i])\n    ) {\n      return false;\n    }\n  } else if (previous === value) {\n    // Dirty-check non-arrays by identity\n    return false;\n  }\n  return true;\n};\n\n// Mapping of node on which the `animate` directive is used to the `animate` directive.\n// Used to get the ancestor `animate` animations (which are used to modify\n// `animate` transforms), done by ascending the DOM.\nconst nodeToAnimateMap: WeakMap<Node, Animate> = new WeakMap();\n\n/**\n * `animate` directive class. Animates a node's position between renders.\n */\nexport class Animate extends AsyncDirective {\n  private _host?: LitElement;\n  private _fromValues?: CSSValues;\n  private _parentNode: Element | null = null;\n  private _nextSibling: Node | null = null;\n  private _shouldAnimate = true;\n  private _previousValue: unknown;\n  private _styles?: string | undefined | null;\n  element!: HTMLElement;\n\n  shouldLog = false;\n  animatingProperties?: CSSValues;\n  frames?: Keyframe[];\n  webAnimation?: Animation;\n  options!: Options;\n  optionsOrCallback?: (() => Options) | Options;\n\n  finished!: Promise<void>;\n  private _resolveFinished?: () => void;\n\n  constructor(part: PartInfo) {\n    super(part);\n    if (part.type === PartType.CHILD) {\n      throw new Error(\n        'The `animate` directive must be used in attribute position.'\n      );\n    }\n    this.createFinished();\n  }\n\n  createFinished() {\n    this.resolveFinished?.();\n    this.finished = new Promise((r) => {\n      this._resolveFinished = r;\n    });\n  }\n\n  async resolveFinished() {\n    this._resolveFinished?.();\n    this._resolveFinished = undefined;\n  }\n\n  render(_options?: (() => Options) | Options) {\n    return nothing;\n  }\n\n  getController() {\n    return controllerMap.get(this._host!);\n  }\n\n  isDisabled() {\n    return this.options.disabled || this.getController()?.disabled;\n  }\n\n  override update(part: AttributePart, [options]: Parameters<this['render']>) {\n    const firstUpdate = this._host === undefined;\n    if (firstUpdate) {\n      this._host = part.options?.host as LitElement;\n      this._host.addController(this);\n      this.element = part.element;\n      nodeToAnimateMap.set(this.element, this);\n    }\n    this.optionsOrCallback = options;\n    if (firstUpdate || typeof options !== 'function') {\n      this._setOptions(options as Options);\n    }\n    return this.render(options);\n  }\n\n  // TODO(sorvell): instead of a function/object, just use an object that the\n  // user can mutate and create accessors for the data that do lookups as needed.\n  // We're doing this every hostUpdate anyway and these lookups are fast.\n  private _setOptions(options?: Options) {\n    options = options ?? {};\n    // Mixin controller options.\n    const controller = this.getController();\n    if (controller !== undefined) {\n      options = {\n        ...controller.defaultOptions,\n        ...options,\n      };\n      options.keyframeOptions = {\n        ...controller.defaultOptions.keyframeOptions,\n        ...options.keyframeOptions,\n      };\n    }\n    // Ensure there are some properties to animation and some animation options.\n    options!.properties ??= defaultCssProperties;\n    this.options = options;\n  }\n\n  // Measures and returns metrics for the element's bounding box and styling\n  private _measure() {\n    const props: CSSValues = {};\n    const bounds = this.element.getBoundingClientRect();\n    const computedStyle = getComputedStyle(this.element);\n    this.options.properties!.forEach((p) => {\n      const v =\n        bounds[p as keyof typeof bounds] ??\n        (!transformProps[p as keyof typeof transformProps]\n          ? computedStyle[p as keyof CSSStyleDeclaration]\n          : undefined);\n      const asNum = Number(v);\n      props[p] = isNaN(asNum) ? String(v) : asNum;\n    });\n    return props;\n  }\n\n  // Returns true if a `animate` should be started.\n  private _canStart() {\n    let dirty = true,\n      value = undefined;\n    if (this.options.guard) {\n      value = this.options.guard();\n      dirty = isDirty(value, this._previousValue);\n    }\n    this._shouldAnimate =\n      this._host!.hasUpdated &&\n      !this.isDisabled() &&\n      !this.isAnimating() &&\n      dirty &&\n      this.element.isConnected;\n    if (this._shouldAnimate) {\n      // Copy the value if it's an array so that if it's mutated we don't forget\n      // what the previous values were.\n      this._previousValue = Array.isArray(value) ? Array.from(value) : value;\n    }\n    return this._shouldAnimate;\n  }\n\n  hostUpdate() {\n    // TODO(sorvell): If options will change that will affect measuring,\n    // then the user must pass a callback which can be called at update time.\n    if (typeof this.optionsOrCallback === 'function') {\n      this._setOptions(this.optionsOrCallback());\n    }\n    if (this._canStart()) {\n      this._fromValues = this._measure();\n      // Record parent and nextSibling used to re-attach node when animating \"out\"\n      this._parentNode =\n        this._parentNode ?? (this.element.parentNode as Element);\n      this._nextSibling = this.element.nextSibling;\n    }\n  }\n\n  async hostUpdated() {\n    if (\n      !this._shouldAnimate ||\n      !this.element.isConnected ||\n      (this.options.skipInitial && !this.isHostRendered)\n    ) {\n      return;\n    }\n    this.prepare();\n    // Wait for rendering so any sub-elements have a chance to render.\n    await animationFrame;\n    let frames: Keyframe[] | undefined;\n    const ancestors = this._getAncestors();\n    // These inherit from ancestors. This allows easier synchronization of\n    // child `animate`s within ancestor `animate`s.\n    const animationOptions = this._calculateKeyframeOptions(\n      this.options.keyframeOptions,\n      ancestors\n    );\n    const toValues = this._measure();\n    // Normal or inverse scale\n    if (this._fromValues !== undefined) {\n      const {from, to} = this._applyAncestorAdjustments(\n        this._fromValues,\n        toValues,\n        ancestors\n      );\n      this.log('measured', [this._fromValues, toValues, from, to]);\n      frames = this.calculateKeyframes(from, to);\n      // \"In\" `animate`.\n    } else {\n      const disconnected = disconnectedProps.get(this.options.inId);\n      if (disconnected) {\n        // use disconnected data only once.\n        disconnectedProps.delete(this.options.inId);\n        const {from, to} = this._applyAncestorAdjustments(\n          disconnected!,\n          toValues,\n          ancestors\n        );\n        frames = this.calculateKeyframes(from, to);\n        // \"merge\" with \"in\" frames\n        frames = this.options.in\n          ? [\n              {...this.options.in[0], ...frames![0]},\n              ...this.options.in.slice(1),\n              frames![1],\n            ]\n          : frames;\n        // adjust z so always on top...\n        z++;\n        frames!.forEach((f) => (f.zIndex = z));\n      } else if (this.options.in) {\n        frames = [...this.options.in, {}];\n      }\n    }\n    this.animate(frames, animationOptions);\n  }\n\n  resetStyles() {\n    if (this._styles !== undefined) {\n      this.element.setAttribute('style', this._styles ?? '');\n      this._styles = undefined;\n    }\n  }\n\n  commitStyles() {\n    this._styles = this.element.getAttribute('style');\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (this.webAnimation as any)?.commitStyles();\n    this.webAnimation?.cancel();\n  }\n\n  override reconnected() {}\n\n  // Experimental animate out functionality.\n  override async disconnected() {\n    if (!this._shouldAnimate) {\n      return;\n    }\n    if (this.options.id !== undefined) {\n      disconnectedProps.set(this.options.id, this._fromValues!);\n    }\n    if (this.options.out === undefined) {\n      return;\n    }\n    this.prepare();\n    await animationFrame();\n    if (this._parentNode?.isConnected) {\n      // put element back in DOM\n      const ref =\n        this._nextSibling && this._nextSibling.parentNode === this._parentNode\n          ? this._nextSibling\n          : null;\n      this._parentNode.insertBefore(this.element, ref);\n      // Optionally move element back to its position before it was detached.\n      if (this.options.stabilizeOut) {\n        // Measure current position after re-attaching.\n        const shifted = this._measure();\n        this.log('stabilizing out');\n        // TODO(sorvell): these nudges could conflict with existing styling\n        // or animation but setting left/top should be rare, especially via\n        // animation.\n        const left =\n          (this._fromValues!.left as number) - (shifted.left as number);\n        const top = (this._fromValues!.top as number) - (shifted.top as number);\n        const isStatic = getComputedStyle(this.element).position === 'static';\n        if (isStatic && (left !== 0 || top !== 0)) {\n          this.element.style.position = 'relative';\n        }\n        if (left !== 0) {\n          this.element.style.left = left + 'px';\n        }\n        if (top !== 0) {\n          this.element.style.top = top + 'px';\n        }\n      }\n    }\n    // These inherit from ancestors. This allows easier synchronization of\n    // child `animate`s within ancestor `animate`s.\n    const keyframeOptions = this._calculateKeyframeOptions(\n      this.options.keyframeOptions\n    );\n    await this.animate(this.options.out, keyframeOptions);\n    this.element.remove();\n  }\n\n  prepare() {\n    this.createFinished();\n  }\n\n  start() {\n    this.options.onStart?.(this);\n  }\n\n  didFinish(didAnimate: boolean) {\n    if (didAnimate) {\n      this.options.onComplete?.(this);\n    }\n    this._fromValues = undefined;\n    this.animatingProperties = undefined;\n    this.frames = undefined;\n    this.resolveFinished();\n  }\n\n  private _getAncestors() {\n    const ancestors = [];\n    for (\n      let p: Node | null | undefined = this.element.parentNode;\n      p;\n      p = p?.parentNode\n    ) {\n      const a = nodeToAnimateMap.get(p!);\n      if (a && !a.isDisabled() && a) {\n        ancestors.push(a);\n      }\n    }\n    return ancestors;\n  }\n\n  protected get isHostRendered() {\n    const hostRendered = renderedHosts.has(this._host!);\n    if (!hostRendered) {\n      this._host!.updateComplete.then(() => {\n        renderedHosts.add(this._host!);\n      });\n    }\n    return hostRendered;\n  }\n\n  private _calculateKeyframeOptions(\n    options: KeyframeAnimationOptions | undefined,\n    ancestors: Animate[] = this._getAncestors()\n  ) {\n    // merges this `animate`'s options over ancestor options over defaults\n    const keyframeOptions = {...defaultKeyframeOptions};\n    ancestors.forEach((a) =>\n      Object.assign(keyframeOptions, a.options.keyframeOptions)\n    );\n    Object.assign(keyframeOptions, options);\n    return keyframeOptions;\n  }\n\n  // Adjust position based on ancestor scaling.\n  private _applyAncestorAdjustments(\n    from: CSSValues,\n    to: CSSValues,\n    ancestors: Animate[]\n  ) {\n    from = {...from};\n    to = {...to};\n    const ancestorProps = ancestors\n      .map((a) => a.animatingProperties)\n      .filter((a) => a !== undefined) as CSSValues[];\n    let dScaleX = 1;\n    let dScaleY = 1;\n    if (ancestorProps !== undefined) {\n      // gather scaling data for ancestors\n      ancestorProps.forEach((a) => {\n        if (a.width) {\n          dScaleX = dScaleX / (a.width as number);\n        }\n        if (a.height) {\n          dScaleY = dScaleY / (a.height as number);\n        }\n      });\n      // Move position by ancestor scaling amount.\n      if (from.left !== undefined && to.left !== undefined) {\n        from.left = dScaleX * (from.left as number);\n        to.left = dScaleX * (to.left as number);\n      }\n      if (from.top !== undefined && to.top !== undefined) {\n        from.top = dScaleY * (from.top as number);\n        to.top = dScaleY * (to.top as number);\n      }\n    }\n    return {from, to};\n  }\n\n  protected calculateKeyframes(from: CSSValues, to: CSSValues, center = false) {\n    const fromFrame: Keyframe = {};\n    const toFrame: Keyframe = {};\n    let hasFrames = false;\n    const props: CSSValues = {};\n    for (const p in to) {\n      const f = from[p],\n        t = to[p];\n      if (p in transformProps) {\n        const tp = transformProps[p as keyof typeof transformProps];\n        if (f === undefined || t === undefined) {\n          continue;\n        }\n        const op = tp(f as number, t as number);\n        if (op.transform !== undefined) {\n          props[p] = op.value!;\n          hasFrames = true;\n          fromFrame.transform = `${fromFrame.transform ?? ''} ${op.transform}`;\n        }\n      } else if (f !== t && f !== undefined && t !== undefined) {\n        hasFrames = true;\n        fromFrame[p] = f;\n        toFrame[p] = t;\n      }\n    }\n    fromFrame.transformOrigin = toFrame.transformOrigin = center\n      ? 'center center'\n      : 'top left';\n    this.animatingProperties = props;\n    return hasFrames ? [fromFrame, toFrame] : undefined;\n  }\n\n  protected async animate(\n    frames: Keyframe[] | undefined,\n    options = this.options.keyframeOptions\n  ) {\n    this.start();\n    this.frames = frames;\n    let didAnimate = false;\n    if (!this.isAnimating() && !this.isDisabled()) {\n      if (this.options.onFrames) {\n        this.frames = frames = this.options.onFrames(this);\n        this.log('modified frames', frames);\n      }\n      if (frames !== undefined) {\n        this.log('animate', [frames, options]);\n        didAnimate = true;\n        this.webAnimation = this.element.animate(frames, options);\n        const controller = this.getController();\n        controller?.add(this);\n        try {\n          await this.webAnimation.finished;\n        } catch (e) {\n          // cancelled.\n        }\n        controller?.remove(this);\n      }\n    }\n    this.didFinish(didAnimate);\n    return didAnimate;\n  }\n\n  protected isAnimating() {\n    return (\n      this.webAnimation?.playState === 'running' || this.webAnimation?.pending\n    );\n  }\n\n  log(message: string, data?: unknown) {\n    if (this.shouldLog && !this.isDisabled()) {\n      console.log(message, this.options.id, data);\n    }\n  }\n}\n\n/**\n * The `animate` directive animates a node's layout between renders.\n * It will perform a \"tweening\" animation between the two states based on\n * the options given. In addition, elements can animate when they initially\n * render to DOM and when they are removed.\n *\n * Options include:\n * * animationOptions:  configure animation via standard KeyframeAnimationOptions\n * * properties: list of properties to animate, defaults to\n * ['left', 'top','width', 'height', 'opacity', 'color', 'background']\n * * disabled: disables animation\n * * guard: function producing values that must change for the `animate` to run\n * * in: keyframes to use when animating in\n * * out: keyframes to use when animating out\n * * skipInitial: skip animating in the first time\n * * id: used to link to other `animate`s via `inId`\n * * inId: id of the `animate` to render from when animating in\n * * onStart: run when the `animate` starts\n * * onComplete: run when the `animate` completes\n * * onFrames: run when the frames are produces, use to modify frames\n */\nexport const animate = directive(Animate);\n", "import {LitElement} from 'lit';\nimport {nothing, AttributePart} from 'lit/html.js';\nimport {directive, PartInfo, PartType} from 'lit/directive.js';\nimport {AsyncDirective} from 'lit/async-directive.js';\n\ninterface Positionables {\n  readonly bottom: number;\n  readonly height: number;\n  readonly left: number;\n  readonly right: number;\n  readonly top: number;\n  readonly width: number;\n}\n\ntype Ref = {value: HTMLElement};\nexport type TargetCallbackOrRef = (() => HTMLElement) | Ref;\n\nexport type Positions = Array<keyof Positionables>;\n\nconst positionedPoints = ['top', 'right', 'bottom', 'left'];\n\nexport class Position extends AsyncDirective {\n  private _host?: LitElement;\n  private _element?: Element;\n  private _targetCallbackOrRef!: TargetCallbackOrRef;\n  private _positions?: Positions;\n\n  constructor(part: PartInfo) {\n    super(part);\n    if (part.type !== PartType.ELEMENT) {\n      throw new Error(\n        'The `position` directive must be used in attribute position.'\n      );\n    }\n  }\n\n  render(_targetCallbackOrRef: TargetCallbackOrRef, _positions: Positions) {\n    return nothing;\n  }\n\n  override update(\n    part: AttributePart,\n    [target, positions]: Parameters<this['render']>\n  ) {\n    if (this._host === undefined) {\n      this._host = part.options?.host as LitElement;\n      this._host.addController(this);\n    }\n    this._element = part.element;\n    this._targetCallbackOrRef = target;\n    this._positions = positions ?? ['left', 'top', 'width', 'height'];\n    return this.render(target, positions);\n  }\n\n  hostUpdated() {\n    this._position();\n  }\n\n  private _position() {\n    const target =\n      typeof this._targetCallbackOrRef === 'function'\n        ? this._targetCallbackOrRef()\n        : this._targetCallbackOrRef?.value;\n    const parent = target.offsetParent;\n    if (target === undefined || !parent) {\n      return;\n    }\n    const tr = target.getBoundingClientRect();\n    const pr = parent.getBoundingClientRect();\n    this._positions?.forEach((p) => {\n      const x = positionedPoints.includes(p) ? tr[p] - pr[p] : tr[p];\n      (this._element as HTMLElement).style[p] = `${x}px`;\n    });\n  }\n}\n\n/**\n * Positions and sizes the element on which the `position()` directive is used\n * relative to the given target element.\n */\nexport const position = directive(Position);\n", "function cycleDetected(): never {\n\tthrow new Error(\"Cycle detected\");\n}\nfunction mutationDetected(): never {\n\tthrow new Error(\"Computed cannot have side-effects\");\n}\n\n// Flags for Computed and Effect.\nconst RUNNING = 1 << 0;\nconst NOTIFIED = 1 << 1;\nconst OUTDATED = 1 << 2;\nconst DISPOSED = 1 << 3;\nconst HAS_ERROR = 1 << 4;\nconst TRACKING = 1 << 5;\n\n// A linked list node used to track dependencies (sources) and dependents (targets).\n// Also used to remember the source's last version number that the target saw.\ntype Node = {\n\t// A source whose value the target depends on.\n\t_source: Signal;\n\t_prevSource?: Node;\n\t_nextSource?: Node;\n\n\t// A target that depends on the source and should be notified when the source changes.\n\t_target: Computed | Effect;\n\t_prevTarget?: Node;\n\t_nextTarget?: Node;\n\n\t// The version number of the source that target has last seen. We use version numbers\n\t// instead of storing the source value, because source values can take arbitrary amount\n\t// of memory, and computeds could hang on to them forever because they're lazily evaluated.\n\t// Use the special value -1 to mark potentially unused but recyclable nodes.\n\t_version: number;\n\n\t// Used to remember & roll back the source's previous `._node` value when entering &\n\t// exiting a new evaluation context.\n\t_rollbackNode?: Node;\n};\n\nfunction startBatch() {\n\tbatchDepth++;\n}\n\nfunction endBatch() {\n\tif (batchDepth > 1) {\n\t\tbatchDepth--;\n\t\treturn;\n\t}\n\n\tlet error: unknown;\n\tlet hasError = false;\n\n\twhile (batchedEffect !== undefined) {\n\t\tlet effect: Effect | undefined = batchedEffect;\n\t\tbatchedEffect = undefined;\n\n\t\tbatchIteration++;\n\n\t\twhile (effect !== undefined) {\n\t\t\tconst next: Effect | undefined = effect._nextBatchedEffect;\n\t\t\teffect._nextBatchedEffect = undefined;\n\t\t\teffect._flags &= ~NOTIFIED;\n\n\t\t\tif (!(effect._flags & DISPOSED) && needsToRecompute(effect)) {\n\t\t\t\ttry {\n\t\t\t\t\teffect._callback();\n\t\t\t\t} catch (err) {\n\t\t\t\t\tif (!hasError) {\n\t\t\t\t\t\terror = err;\n\t\t\t\t\t\thasError = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\teffect = next;\n\t\t}\n\t}\n\tbatchIteration = 0;\n\tbatchDepth--;\n\n\tif (hasError) {\n\t\tthrow error;\n\t}\n}\n\nfunction batch<T>(callback: () => T): T {\n\tif (batchDepth > 0) {\n\t\treturn callback();\n\t}\n\t/*@__INLINE__**/ startBatch();\n\ttry {\n\t\treturn callback();\n\t} finally {\n\t\tendBatch();\n\t}\n}\n\n// Currently evaluated computed or effect.\nlet evalContext: Computed | Effect | undefined = undefined;\n\n// Effects collected into a batch.\nlet batchedEffect: Effect | undefined = undefined;\nlet batchDepth = 0;\nlet batchIteration = 0;\n\n// A global version number for signals, used for fast-pathing repeated\n// computed.peek()/computed.value calls when nothing has changed globally.\nlet globalVersion = 0;\n\nfunction addDependency(signal: Signal): Node | undefined {\n\tif (evalContext === undefined) {\n\t\treturn undefined;\n\t}\n\n\tlet node = signal._node;\n\tif (node === undefined || node._target !== evalContext) {\n\t\t/**\n\t\t * `signal` is a new dependency. Create a new dependency node, and set it\n\t\t * as the tail of the current context's dependency list. e.g:\n\t\t *\n\t\t * { A <-> B       }\n\t\t *         ↑     ↑\n\t\t *        tail  node (new)\n\t\t *               ↓\n\t\t * { A <-> B <-> C }\n\t\t *               ↑\n\t\t *              tail (evalContext._sources)\n\t\t */\n\t\tnode = {\n\t\t\t_version: 0,\n\t\t\t_source: signal,\n\t\t\t_prevSource: evalContext._sources,\n\t\t\t_nextSource: undefined,\n\t\t\t_target: evalContext,\n\t\t\t_prevTarget: undefined,\n\t\t\t_nextTarget: undefined,\n\t\t\t_rollbackNode: node,\n\t\t};\n\n\t\tif (evalContext._sources !== undefined) {\n\t\t\tevalContext._sources._nextSource = node;\n\t\t}\n\t\tevalContext._sources = node;\n\t\tsignal._node = node;\n\n\t\t// Subscribe to change notifications from this dependency if we're in an effect\n\t\t// OR evaluating a computed signal that in turn has subscribers.\n\t\tif (evalContext._flags & TRACKING) {\n\t\t\tsignal._subscribe(node);\n\t\t}\n\t\treturn node;\n\t} else if (node._version === -1) {\n\t\t// `signal` is an existing dependency from a previous evaluation. Reuse it.\n\t\tnode._version = 0;\n\n\t\t/**\n\t\t * If `node` is not already the current tail of the dependency list (i.e.\n\t\t * there is a next node in the list), then make the `node` the new tail. e.g:\n\t\t *\n\t\t * { A <-> B <-> C <-> D }\n\t\t *         ↑           ↑\n\t\t *        node   ┌─── tail (evalContext._sources)\n\t\t *         └─────│─────┐\n\t\t *               ↓     ↓\n\t\t * { A <-> C <-> D <-> B }\n\t\t *                     ↑\n\t\t *                    tail (evalContext._sources)\n\t\t */\n\t\tif (node._nextSource !== undefined) {\n\t\t\tnode._nextSource._prevSource = node._prevSource;\n\n\t\t\tif (node._prevSource !== undefined) {\n\t\t\t\tnode._prevSource._nextSource = node._nextSource;\n\t\t\t}\n\n\t\t\tnode._prevSource = evalContext._sources;\n\t\t\tnode._nextSource = undefined;\n\n\t\t\tevalContext._sources!._nextSource = node;\n\t\t\tevalContext._sources = node;\n\t\t}\n\n\t\t// We can assume that the currently evaluated effect / computed signal is already\n\t\t// subscribed to change notifications from `signal` if needed.\n\t\treturn node;\n\t}\n\treturn undefined;\n}\n\n// @ts-ignore internal Signal is viewed as a function\ndeclare class Signal<T = any> {\n\t/** @internal */\n\t_value: unknown;\n\n\t/**\n\t * @internal\n\t * Version numbers should always be >= 0, because the special value -1 is used\n\t * by Nodes to signify potentially unused but recyclable nodes.\n\t */\n\t_version: number;\n\n\t/** @internal */\n\t_node?: Node;\n\n\t/** @internal */\n\t_targets?: Node;\n\n\tconstructor(value?: T);\n\n\t/** @internal */\n\t_refresh(): boolean;\n\n\t/** @internal */\n\t_subscribe(node: Node): void;\n\n\t/** @internal */\n\t_unsubscribe(node: Node): void;\n\n\tsubscribe(fn: (value: T) => void): () => void;\n\n\tvalueOf(): T;\n\n\ttoString(): string;\n\n\ttoJSON(): T;\n\n\tpeek(): T;\n\n\tget value(): T;\n\tset value(value: T);\n}\n\n/** @internal */\n// @ts-ignore internal Signal is viewed as function\nfunction Signal(this: Signal, value?: unknown) {\n\tthis._value = value;\n\tthis._version = 0;\n\tthis._node = undefined;\n\tthis._targets = undefined;\n}\n\nSignal.prototype._refresh = function () {\n\treturn true;\n};\n\nSignal.prototype._subscribe = function (node) {\n\tif (this._targets !== node && node._prevTarget === undefined) {\n\t\tnode._nextTarget = this._targets;\n\t\tif (this._targets !== undefined) {\n\t\t\tthis._targets._prevTarget = node;\n\t\t}\n\t\tthis._targets = node;\n\t}\n};\n\nSignal.prototype._unsubscribe = function (node) {\n\t// Only run the unsubscribe step if the signal has any subscribers to begin with.\n\tif (this._targets !== undefined) {\n\t\tconst prev = node._prevTarget;\n\t\tconst next = node._nextTarget;\n\t\tif (prev !== undefined) {\n\t\t\tprev._nextTarget = next;\n\t\t\tnode._prevTarget = undefined;\n\t\t}\n\t\tif (next !== undefined) {\n\t\t\tnext._prevTarget = prev;\n\t\t\tnode._nextTarget = undefined;\n\t\t}\n\t\tif (node === this._targets) {\n\t\t\tthis._targets = next;\n\t\t}\n\t}\n};\n\nSignal.prototype.subscribe = function (fn) {\n\tconst signal = this;\n\treturn effect(function (this: Effect) {\n\t\tconst value = signal.value;\n\t\tconst flag = this._flags & TRACKING;\n\t\tthis._flags &= ~TRACKING;\n\t\ttry {\n\t\t\tfn(value);\n\t\t} finally {\n\t\t\tthis._flags |= flag;\n\t\t}\n\t});\n};\n\nSignal.prototype.valueOf = function () {\n\treturn this.value;\n};\n\nSignal.prototype.toString = function () {\n\treturn this.value + \"\";\n};\n\nSignal.prototype.toJSON = function () {\n\treturn this.value;\n};\n\nSignal.prototype.peek = function () {\n\treturn this._value;\n};\n\nObject.defineProperty(Signal.prototype, \"value\", {\n\tget() {\n\t\tconst node = addDependency(this);\n\t\tif (node !== undefined) {\n\t\t\tnode._version = this._version;\n\t\t}\n\t\treturn this._value;\n\t},\n\tset(this: Signal, value) {\n\t\tif (evalContext instanceof Computed) {\n\t\t\tmutationDetected();\n\t\t}\n\n\t\tif (value !== this._value) {\n\t\t\tif (batchIteration > 100) {\n\t\t\t\tcycleDetected();\n\t\t\t}\n\n\t\t\tthis._value = value;\n\t\t\tthis._version++;\n\t\t\tglobalVersion++;\n\n\t\t\t/**@__INLINE__*/ startBatch();\n\t\t\ttry {\n\t\t\t\tfor (\n\t\t\t\t\tlet node = this._targets;\n\t\t\t\t\tnode !== undefined;\n\t\t\t\t\tnode = node._nextTarget\n\t\t\t\t) {\n\t\t\t\t\tnode._target._notify();\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tendBatch();\n\t\t\t}\n\t\t}\n\t},\n});\n\nfunction signal<T>(value: T): Signal<T> {\n\treturn new Signal(value);\n}\n\nfunction needsToRecompute(target: Computed | Effect): boolean {\n\t// Check the dependencies for changed values. The dependency list is already\n\t// in order of use. Therefore if multiple dependencies have changed values, only\n\t// the first used dependency is re-evaluated at this point.\n\tfor (\n\t\tlet node = target._sources;\n\t\tnode !== undefined;\n\t\tnode = node._nextSource\n\t) {\n\t\t// If there's a new version of the dependency before or after refreshing,\n\t\t// or the dependency has something blocking it from refreshing at all (e.g. a\n\t\t// dependency cycle), then we need to recompute.\n\t\tif (\n\t\t\tnode._source._version !== node._version ||\n\t\t\t!node._source._refresh() ||\n\t\t\tnode._source._version !== node._version\n\t\t) {\n\t\t\treturn true;\n\t\t}\n\t}\n\t// If none of the dependencies have changed values since last recompute then\n\t// there's no need to recompute.\n\treturn false;\n}\n\nfunction prepareSources(target: Computed | Effect) {\n\t/**\n\t * 1. Mark all current sources as re-usable nodes (version: -1)\n\t * 2. Set a rollback node if the current node is being used in a different context\n\t * 3. Point 'target._sources' to the tail of the doubly-linked list, e.g:\n\t *\n\t *    { undefined <- A <-> B <-> C -> undefined }\n\t *                   ↑           ↑\n\t *                   │           └──────┐\n\t * target._sources = A; (node is head)  │\n\t *                   ↓                  │\n\t * target._sources = C; (node is tail) ─┘\n\t */\n\tfor (\n\t\tlet node = target._sources;\n\t\tnode !== undefined;\n\t\tnode = node._nextSource\n\t) {\n\t\tconst rollbackNode = node._source._node;\n\t\tif (rollbackNode !== undefined) {\n\t\t\tnode._rollbackNode = rollbackNode;\n\t\t}\n\t\tnode._source._node = node;\n\t\tnode._version = -1;\n\n\t\tif (node._nextSource === undefined) {\n\t\t\ttarget._sources = node;\n\t\t\tbreak;\n\t\t}\n\t}\n}\n\nfunction cleanupSources(target: Computed | Effect) {\n\tlet node = target._sources;\n\tlet head = undefined;\n\n\t/**\n\t * At this point 'target._sources' points to the tail of the doubly-linked list.\n\t * It contains all existing sources + new sources in order of use.\n\t * Iterate backwards until we find the head node while dropping old dependencies.\n\t */\n\twhile (node !== undefined) {\n\t\tconst prev = node._prevSource;\n\n\t\t/**\n\t\t * The node was not re-used, unsubscribe from its change notifications and remove itself\n\t\t * from the doubly-linked list. e.g:\n\t\t *\n\t\t * { A <-> B <-> C }\n\t\t *         ↓\n\t\t *    { A <-> C }\n\t\t */\n\t\tif (node._version === -1) {\n\t\t\tnode._source._unsubscribe(node);\n\n\t\t\tif (prev !== undefined) {\n\t\t\t\tprev._nextSource = node._nextSource;\n\t\t\t}\n\t\t\tif (node._nextSource !== undefined) {\n\t\t\t\tnode._nextSource._prevSource = prev;\n\t\t\t}\n\t\t} else {\n\t\t\t/**\n\t\t\t * The new head is the last node seen which wasn't removed/unsubscribed\n\t\t\t * from the doubly-linked list. e.g:\n\t\t\t *\n\t\t\t * { A <-> B <-> C }\n\t\t\t *   ↑     ↑     ↑\n\t\t\t *   │     │     └ head = node\n\t\t\t *   │     └ head = node\n\t\t\t *   └ head = node\n\t\t\t */\n\t\t\thead = node;\n\t\t}\n\n\t\tnode._source._node = node._rollbackNode;\n\t\tif (node._rollbackNode !== undefined) {\n\t\t\tnode._rollbackNode = undefined;\n\t\t}\n\n\t\tnode = prev;\n\t}\n\n\ttarget._sources = head;\n}\n\ndeclare class Computed<T = any> extends Signal<T> {\n\t_compute: () => T;\n\t_sources?: Node;\n\t_globalVersion: number;\n\t_flags: number;\n\n\tconstructor(compute: () => T);\n\n\t_notify(): void;\n\tget value(): T;\n}\n\nfunction Computed(this: Computed, compute: () => unknown) {\n\tSignal.call(this, undefined);\n\n\tthis._compute = compute;\n\tthis._sources = undefined;\n\tthis._globalVersion = globalVersion - 1;\n\tthis._flags = OUTDATED;\n}\n\nComputed.prototype = new Signal() as Computed;\n\nComputed.prototype._refresh = function () {\n\tthis._flags &= ~NOTIFIED;\n\n\tif (this._flags & RUNNING) {\n\t\treturn false;\n\t}\n\n\t// If this computed signal has subscribed to updates from its dependencies\n\t// (TRACKING flag set) and none of them have notified about changes (OUTDATED\n\t// flag not set), then the computed value can't have changed.\n\tif ((this._flags & (OUTDATED | TRACKING)) === TRACKING) {\n\t\treturn true;\n\t}\n\tthis._flags &= ~OUTDATED;\n\n\tif (this._globalVersion === globalVersion) {\n\t\treturn true;\n\t}\n\tthis._globalVersion = globalVersion;\n\n\t// Mark this computed signal running before checking the dependencies for value\n\t// changes, so that the RUNNING flag can be used to notice cyclical dependencies.\n\tthis._flags |= RUNNING;\n\tif (this._version > 0 && !needsToRecompute(this)) {\n\t\tthis._flags &= ~RUNNING;\n\t\treturn true;\n\t}\n\n\tconst prevContext = evalContext;\n\ttry {\n\t\tprepareSources(this);\n\t\tevalContext = this;\n\t\tconst value = this._compute();\n\t\tif (\n\t\t\tthis._flags & HAS_ERROR ||\n\t\t\tthis._value !== value ||\n\t\t\tthis._version === 0\n\t\t) {\n\t\t\tthis._value = value;\n\t\t\tthis._flags &= ~HAS_ERROR;\n\t\t\tthis._version++;\n\t\t}\n\t} catch (err) {\n\t\tthis._value = err;\n\t\tthis._flags |= HAS_ERROR;\n\t\tthis._version++;\n\t}\n\tevalContext = prevContext;\n\tcleanupSources(this);\n\tthis._flags &= ~RUNNING;\n\treturn true;\n};\n\nComputed.prototype._subscribe = function (node) {\n\tif (this._targets === undefined) {\n\t\tthis._flags |= OUTDATED | TRACKING;\n\n\t\t// A computed signal subscribes lazily to its dependencies when the it\n\t\t// gets its first subscriber.\n\t\tfor (\n\t\t\tlet node = this._sources;\n\t\t\tnode !== undefined;\n\t\t\tnode = node._nextSource\n\t\t) {\n\t\t\tnode._source._subscribe(node);\n\t\t}\n\t}\n\tSignal.prototype._subscribe.call(this, node);\n};\n\nComputed.prototype._unsubscribe = function (node) {\n\t// Only run the unsubscribe step if the computed signal has any subscribers.\n\tif (this._targets !== undefined) {\n\t\tSignal.prototype._unsubscribe.call(this, node);\n\n\t\t// Computed signal unsubscribes from its dependencies when it loses its last subscriber.\n\t\t// This makes it possible for unreferences subgraphs of computed signals to get garbage collected.\n\t\tif (this._targets === undefined) {\n\t\t\tthis._flags &= ~TRACKING;\n\n\t\t\tfor (\n\t\t\t\tlet node = this._sources;\n\t\t\t\tnode !== undefined;\n\t\t\t\tnode = node._nextSource\n\t\t\t) {\n\t\t\t\tnode._source._unsubscribe(node);\n\t\t\t}\n\t\t}\n\t}\n};\n\nComputed.prototype._notify = function () {\n\tif (!(this._flags & NOTIFIED)) {\n\t\tthis._flags |= OUTDATED | NOTIFIED;\n\n\t\tfor (\n\t\t\tlet node = this._targets;\n\t\t\tnode !== undefined;\n\t\t\tnode = node._nextTarget\n\t\t) {\n\t\t\tnode._target._notify();\n\t\t}\n\t}\n};\n\nComputed.prototype.peek = function () {\n\tif (!this._refresh()) {\n\t\tcycleDetected();\n\t}\n\tif (this._flags & HAS_ERROR) {\n\t\tthrow this._value;\n\t}\n\treturn this._value;\n};\n\nObject.defineProperty(Computed.prototype, \"value\", {\n\tget() {\n\t\tif (this._flags & RUNNING) {\n\t\t\tcycleDetected();\n\t\t}\n\t\tconst node = addDependency(this);\n\t\tthis._refresh();\n\t\tif (node !== undefined) {\n\t\t\tnode._version = this._version;\n\t\t}\n\t\tif (this._flags & HAS_ERROR) {\n\t\t\tthrow this._value;\n\t\t}\n\t\treturn this._value;\n\t},\n});\n\ninterface ReadonlySignal<T = any> extends Signal<T> {\n\treadonly value: T;\n}\n\nfunction computed<T>(compute: () => T): ReadonlySignal<T> {\n\treturn new Computed(compute);\n}\n\nfunction cleanupEffect(effect: Effect) {\n\tconst cleanup = effect._cleanup;\n\teffect._cleanup = undefined;\n\n\tif (typeof cleanup === \"function\") {\n\t\t/*@__INLINE__**/ startBatch();\n\n\t\t// Run cleanup functions always outside of any context.\n\t\tconst prevContext = evalContext;\n\t\tevalContext = undefined;\n\t\ttry {\n\t\t\tcleanup();\n\t\t} catch (err) {\n\t\t\teffect._flags &= ~RUNNING;\n\t\t\teffect._flags |= DISPOSED;\n\t\t\tdisposeEffect(effect);\n\t\t\tthrow err;\n\t\t} finally {\n\t\t\tevalContext = prevContext;\n\t\t\tendBatch();\n\t\t}\n\t}\n}\n\nfunction disposeEffect(effect: Effect) {\n\tfor (\n\t\tlet node = effect._sources;\n\t\tnode !== undefined;\n\t\tnode = node._nextSource\n\t) {\n\t\tnode._source._unsubscribe(node);\n\t}\n\teffect._compute = undefined;\n\teffect._sources = undefined;\n\n\tcleanupEffect(effect);\n}\n\nfunction endEffect(this: Effect, prevContext?: Computed | Effect) {\n\tif (evalContext !== this) {\n\t\tthrow new Error(\"Out-of-order effect\");\n\t}\n\tcleanupSources(this);\n\tevalContext = prevContext;\n\n\tthis._flags &= ~RUNNING;\n\tif (this._flags & DISPOSED) {\n\t\tdisposeEffect(this);\n\t}\n\tendBatch();\n}\n\ndeclare class Effect {\n\t_compute?: () => void | (() => void);\n\t_cleanup?: () => void;\n\t_sources?: Node;\n\t_nextBatchedEffect?: Effect;\n\t_flags: number;\n\n\tconstructor(compute: () => void | (() => void));\n\n\t_callback(): void;\n\t_start(): () => void;\n\t_notify(): void;\n\t_dispose(): void;\n}\n\nfunction Effect(this: Effect, compute: () => void | (() => void)) {\n\tthis._compute = compute;\n\tthis._cleanup = undefined;\n\tthis._sources = undefined;\n\tthis._nextBatchedEffect = undefined;\n\tthis._flags = TRACKING;\n}\n\nEffect.prototype._callback = function () {\n\tconst finish = this._start();\n\ttry {\n\t\tif (this._flags & DISPOSED) return;\n\t\tif (this._compute === undefined) return;\n\n\t\tconst cleanup = this._compute();\n\t\tif (typeof cleanup === \"function\") {\n\t\t\tthis._cleanup = cleanup;\n\t\t}\n\t} finally {\n\t\tfinish();\n\t}\n};\n\nEffect.prototype._start = function () {\n\tif (this._flags & RUNNING) {\n\t\tcycleDetected();\n\t}\n\tthis._flags |= RUNNING;\n\tthis._flags &= ~DISPOSED;\n\tcleanupEffect(this);\n\tprepareSources(this);\n\n\t/*@__INLINE__**/ startBatch();\n\tconst prevContext = evalContext;\n\tevalContext = this;\n\treturn endEffect.bind(this, prevContext);\n};\n\nEffect.prototype._notify = function () {\n\tif (!(this._flags & NOTIFIED)) {\n\t\tthis._flags |= NOTIFIED;\n\t\tthis._nextBatchedEffect = batchedEffect;\n\t\tbatchedEffect = this;\n\t}\n};\n\nEffect.prototype._dispose = function () {\n\tthis._flags |= DISPOSED;\n\n\tif (!(this._flags & RUNNING)) {\n\t\tdisposeEffect(this);\n\t}\n};\n\nfunction effect(compute: () => void | (() => void)): () => void {\n\tconst effect = new Effect(compute);\n\ttry {\n\t\teffect._callback();\n\t} catch (err) {\n\t\teffect._dispose();\n\t\tthrow err;\n\t}\n\t// Return a bound function instead of a wrapper like `() => effect._dispose()`,\n\t// because bound functions seem to be just as fast and take up a lot less memory.\n\treturn effect._dispose.bind(effect);\n}\n\nexport { signal, computed, effect, batch, Signal, type ReadonlySignal };\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {effect} from '@preact/signals-core';\nimport type {ReactiveElement} from 'lit';\n\nexport {signal} from '@preact/signals-core';\n\n// params that are going to be passed into any child extending SignalElement\n// tslint:disable-next-line:no-any We do not know the types of constructor\ntype ReactiveElementConstructor = new (...args: any[]) => ReactiveElement;\n\n/**\n * A mixin that hooks Preact signal changes to ReactiveElement.\n *\n * @param Base The class to mix-in and listen to Preact signal changes.\n */\nexport function SignalElement<T extends ReactiveElementConstructor>(\n  Base: T,\n): T {\n  return class SignalElement extends Base {\n    private _disposeEffect?: () => void;\n\n    performUpdate() {\n      if (!this.isUpdatePending) {\n        return;\n      }\n      this._disposeEffect?.();\n      let performingUpdate = true;\n      this._disposeEffect = effect(() => {\n        if (performingUpdate) {\n          performingUpdate = false;\n          super.performUpdate();\n        } else {\n          this.requestUpdate();\n        }\n      });\n    }\n  };\n}\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {signal} from './signal-element.js';\n\n/**\n * Whether or not the sidebar drawer should be open.\n */\nexport const drawerOpenSignal = signal(false);\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {signal} from './signal-element.js';\n\n/**\n * Whether or not the site content should be inert (sidebar is still\n * interactive).\n */\nexport const inertContentSignal = signal(false);\n\n/**\n * Whether or not the sidebar should be inert.\n */\nexport const inertSidebarSignal = signal(false);\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {animate, fadeIn, fadeOut} from '@lit-labs/motion';\nimport {EASING} from '@material/web/internal/motion/animation.js';\nimport {LitElement, PropertyValues, css, html, nothing} from 'lit';\nimport {customElement, property, state} from 'lit/decorators.js';\n\nimport {drawerOpenSignal} from '../signals/drawer-open-state.js';\nimport {inertContentSignal, inertSidebarSignal} from '../signals/inert.js';\nimport {SignalElement} from '../signals/signal-element.js';\n\n/**\n * A layout element that positions the top-app-bar, the main page content, and\n * the side navigation drawer.\n *\n * The drawer will automatically set itself as collapsible at narrower page\n * widths, and position itself inline with the page at wider page widths. Most\n * importantly, this sidebar is SSR compatible.\n */\n@customElement('nav-drawer')\nexport class NavDrawer extends SignalElement(LitElement) {\n  /**\n   * Whether or not the side drawer is collapsible or inline.\n   */\n  @state() private isCollapsible = false;\n\n  /**\n   * Whether or not the TOC should be rendered.\n   */\n  @property({type: Boolean, attribute: 'has-toc'}) hasToc = false;\n\n  @property({attribute: 'page-title'}) pageTitle = '';\n\n  private lastDrawerOpen = drawerOpenSignal.value;\n\n  render() {\n    const showModal = this.isCollapsible && drawerOpenSignal.value;\n\n    // Values taken from internal material motion spec\n    const drawerSlideAnimationDuration = showModal ? 500 : 150;\n    const drawerContentOpacityDuration = showModal ? 300 : 150;\n    const scrimOpacityDuration = 150;\n\n    const drawerSlideAnimationEasing = showModal\n      ? EASING.EMPHASIZED\n      : EASING.EMPHASIZED_ACCELERATE;\n\n    return html`\n      <div class=\"root\">\n        <slot name=\"top-app-bar\"></slot>\n        <div class=\"body  ${drawerOpenSignal.value ? 'open' : ''}\">\n          <div class=\"spacer\" ?inert=${inertSidebarSignal.value}>\n            ${showModal\n              ? html`<div\n                  class=\"scrim\"\n                  @click=${this.onScrimClick}\n                  ${animate({\n                    properties: ['opacity'],\n                    keyframeOptions: {\n                      duration: scrimOpacityDuration,\n                      easing: 'linear',\n                    },\n                    in: fadeIn,\n                    out: fadeOut,\n                  })}></div>`\n              : nothing}\n            <aside\n              ?inert=${this.isCollapsible && !drawerOpenSignal.value}\n              ${animate({\n                properties: ['transform'],\n                keyframeOptions: {\n                  duration: drawerSlideAnimationDuration,\n                  easing: drawerSlideAnimationEasing,\n                },\n              })}>\n              <div class=\"scroll-wrapper\">\n                <slot\n                  ${animate({\n                    properties: ['opacity'],\n                    keyframeOptions: {\n                      duration: drawerContentOpacityDuration,\n                      easing: 'linear',\n                    },\n                  })}></slot>\n              </div>\n            </aside>\n          </div>\n          <div class=\"panes\">\n            ${this.renderTocPane(showModal)}${this.renderContent(showModal)}\n          </div>\n        </div>\n      </div>\n    `;\n  }\n\n  private renderContent(showModal: boolean) {\n    return html` <div\n      class=\"pane content-pane\"\n      ?inert=${showModal || inertContentSignal.value}>\n      <div class=\"scroll-wrapper\">\n        <div class=\"content\">\n          <slot name=\"app-content\"></slot>\n        </div>\n      </div>\n    </div>`;\n  }\n\n  private renderTocPane(showModal: boolean) {\n    if (!this.hasToc) {\n      return nothing;\n    }\n\n    return html` <div\n      class=\"pane toc\"\n      ?inert=${showModal || inertContentSignal.value}>\n      <div class=\"scroll-wrapper\">\n        <p>On this page:</p>\n        <h2>${this.pageTitle}</h2>\n        <slot name=\"toc\"></slot>\n      </div>\n    </div>`;\n  }\n\n  /**\n   * Closes the drawer on scrim click.\n   */\n  private onScrimClick() {\n    drawerOpenSignal.value = false;\n  }\n\n  firstUpdated() {\n    const queryResult = window.matchMedia('(max-width: 1500px)');\n    this.isCollapsible = queryResult.matches;\n\n    // Listen for page resizes to mark the drawer as collapsible.\n    queryResult.addEventListener('change', (e) => {\n      this.isCollapsible = e.matches;\n    });\n  }\n\n  updated(changed: PropertyValues<this>) {\n    super.updated(changed);\n    if (\n      this.lastDrawerOpen !== drawerOpenSignal.value &&\n      drawerOpenSignal.value &&\n      this.isCollapsible\n    ) {\n      (\n        this.querySelector(\n          'md-list.nav md-list-item[tabindex=\"0\"]',\n        ) as HTMLElement\n      )?.focus();\n    }\n  }\n\n  static styles = css`\n    :host {\n      --_drawer-width: var(--catalog-drawer-width, 300px);\n      /* When in wide mode inline start margin is handled by the sidebar */\n      --_pane-margin-inline-start: 0px;\n      --_pane-margin-inline-end: var(--catalog-spacing-l);\n      --_pane-margin-block-end: var(--catalog-spacing-l);\n      --_toc-pane-width: 250px;\n      min-height: 100dvh;\n      display: flex;\n      flex-direction: column;\n    }\n\n    ::slotted(nav) {\n      list-style: none;\n    }\n\n    .body {\n      display: flex;\n      flex-grow: 1;\n    }\n\n    .spacer {\n      position: relative;\n      transition: min-width 0.5s cubic-bezier(0.3, 0, 0, 1);\n    }\n\n    .spacer,\n    aside {\n      min-width: var(--_drawer-width);\n      max-width: var(--_drawer-width);\n    }\n\n    .pane {\n      box-sizing: border-box;\n      overflow: auto;\n      width: 100%;\n      /* Explicit height to make overflow work */\n      height: calc(\n        100dvh - var(--catalog-top-app-bar-height) -\n          var(--_pane-margin-block-end)\n      );\n      background-color: var(--md-sys-color-surface);\n      border-radius: var(--catalog-shape-xl);\n    }\n\n    .pane,\n    .panes {\n      /* emphasized \u2013 duration matching render fn for sidebar */\n      transition: 0.5s cubic-bezier(0.3, 0, 0, 1);\n      transition-property: margin, height, border-radius, max-width, width;\n    }\n\n    .panes {\n      display: flex;\n      justify-content: start;\n      flex-direction: row-reverse;\n      gap: var(--_pane-margin-inline-end);\n      margin-inline: var(--_pane-margin-inline-start)\n        var(--_pane-margin-inline-end);\n      width: 100%;\n      max-width: calc(\n        100% - var(--_drawer-width) - var(--_pane-margin-inline-start) -\n          var(--_pane-margin-inline-end)\n      );\n    }\n\n    .pane.content-pane {\n      flex-grow: 1;\n    }\n\n    .pane.toc {\n      width: auto;\n      box-sizing: border-box;\n      width: var(--_toc-pane-width);\n    }\n\n    .toc .scroll-wrapper {\n      padding-inline: var(--catalog-spacing-xl);\n    }\n\n    .pane.toc p {\n      margin-block: 0;\n      font-size: var(--catalog-label-s-font-size);\n    }\n\n    .pane.toc h2 {\n      margin-block: var(--catalog-spacing-s) var(--catalog-spacing-m);\n      font-size: var(--catalog-headline-s-font-size);\n    }\n\n    .content {\n      flex-grow: 1;\n      display: flex;\n      justify-content: center;\n      box-sizing: border-box;\n      padding-inline: var(--catalog-spacing-xl);\n      width: 100%;\n    }\n\n    .content slot {\n      display: block;\n      width: 100%;\n      max-width: min(100%, var(--_max-width));\n    }\n\n    aside {\n      transition: transform 0.5s cubic-bezier(0.3, 0, 0, 1);\n      position: fixed;\n      isolation: isolate;\n      inset: var(--catalog-top-app-bar-height) 0 0 0;\n      z-index: 12;\n      background-color: var(--md-sys-color-surface-container);\n      overflow: hidden;\n    }\n\n    .scroll-wrapper {\n      overflow-y: auto;\n      max-height: 100%;\n      border-radius: inherit;\n      box-sizing: border-box;\n    }\n\n    .pane .scroll-wrapper {\n      padding-block: var(--catalog-spacing-xl);\n    }\n\n    aside slot {\n      display: block;\n    }\n\n    .scrim {\n      background-color: rgba(0, 0, 0, 0.32);\n    }\n\n    @media (max-width: 900px) {\n      .pane.toc {\n        display: none;\n      }\n    }\n\n    @media (max-width: 1500px) {\n      .spacer {\n        min-width: 0px;\n      }\n\n      .panes {\n        max-width: calc(\n          100% - var(--_pane-margin-inline-start) -\n            var(--_pane-margin-inline-end)\n        );\n      }\n\n      .content {\n        max-width: 100vw;\n        padding-inline: var(--catalog-spacing-xl);\n      }\n\n      .scrim {\n        position: fixed;\n        inset: 0;\n      }\n\n      aside {\n        transition: unset;\n        transform: translateX(-100%);\n        border-radius: 0 var(--catalog-shape-xl) var(--catalog-shape-xl) 0;\n      }\n\n      :host {\n        --_pane-margin-inline-start: var(--catalog-spacing-xl);\n      }\n\n      .open aside {\n        transform: translateX(0);\n      }\n\n      aside slot {\n        opacity: 0;\n      }\n\n      .open aside slot {\n        opacity: 1;\n      }\n\n      .open .scrim {\n        inset: 0;\n        z-index: 11;\n      }\n    }\n\n    @media (max-width: 600px) {\n      .pane {\n        border-end-start-radius: 0;\n        border-end-end-radius: 0;\n      }\n\n      :host {\n        --_pane-margin-block-end: 0px;\n        --_pane-margin-inline-start: 0px;\n        --_pane-margin-inline-end: 0px;\n      }\n    }\n\n    /* On desktop, make the scrollbars less blocky so you can see the border\n     * radius of the pane. On most mobile platforms, these scrollbars are hidden\n     * by default. It'll still unfortunately render on top of the border radius.\n     */\n    @media (pointer: fine) {\n      :host {\n        --_scrollbar-width: 8px;\n      }\n\n      .scroll-wrapper {\n        /* firefox */\n        scrollbar-color: var(--md-sys-color-primary) transparent;\n        scrollbar-width: thin;\n      }\n\n      .content {\n        /* adjust for the scrollbar width */\n        padding-inline-end: calc(\n          var(--catalog-spacing-xl) - var(--_scrollbar-width)\n        );\n      }\n\n      /* Chromium + Safari */\n      .scroll-wrapper::-webkit-scrollbar {\n        background-color: transparent;\n        width: var(--_scrollbar-width);\n      }\n\n      .scroll-wrapper::-webkit-scrollbar-thumb {\n        background-color: var(--md-sys-color-primary);\n        border-radius: calc(var(--_scrollbar-width) / 2);\n      }\n    }\n\n    @media (forced-colors: active) {\n      .pane {\n        border: 1px solid CanvasText;\n      }\n\n      @media (max-width: 1500px) {\n        aside {\n          box-sizing: border-box;\n          border: 1px solid CanvasText;\n        }\n\n        .scrim {\n          background-color: rgba(0, 0, 0, 0.75);\n        }\n      }\n\n      @media (pointer: fine) {\n        .scroll-wrapper {\n          /* firefox */\n          scrollbar-color: CanvasText transparent;\n        }\n\n        .scroll-wrapper::-webkit-scrollbar-thumb {\n          /* Chromium + Safari */\n          background-color: CanvasText;\n        }\n      }\n    }\n  `;\n}\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport '../../../focus/md-focus-ring.js';\nimport '../../../ripple/ripple.js';\n\nimport {html, LitElement, nothing, PropertyValues, TemplateResult} from 'lit';\nimport {property, queryAssignedElements, state} from 'lit/decorators.js';\nimport {classMap} from 'lit/directives/class-map.js';\n\nimport {ARIAMixinStrict} from '../../../internal/aria/aria.js';\nimport {requestUpdateOnAriaChange} from '../../../internal/aria/delegate.js';\n\n/**\n * SegmentedButton is a web component implementation of the Material Design\n * segmented button component. It is intended **only** for use as a child of a\n * `SementedButtonSet` component. It is **not** intended for use in any other\n * context.\n *\n * @fires segmented-button-interaction {Event} Dispatched whenever a button is\n * clicked. --bubbles --composed\n */\nexport class SegmentedButton extends LitElement {\n  static {\n    requestUpdateOnAriaChange(SegmentedButton);\n  }\n\n  @property({type: Boolean}) disabled = false;\n  @property({type: Boolean}) selected = false;\n  @property() label = '';\n  @property({type: Boolean, attribute: 'no-checkmark'}) noCheckmark = false;\n  @property({type: Boolean, attribute: 'has-icon'}) hasIcon = false;\n\n  @state() private animState = '';\n  @queryAssignedElements({slot: 'icon', flatten: true})\n  private readonly iconElement!: HTMLElement[];\n\n  protected override update(props: PropertyValues<SegmentedButton>) {\n    this.animState = this.nextAnimationState(props);\n    super.update(props);\n    // NOTE: This needs to be set *after* calling super.update() to ensure the\n    // appropriate CSS classes are applied.\n    this.hasIcon = this.iconElement.length > 0;\n  }\n\n  private nextAnimationState(\n    changedProps: PropertyValues<SegmentedButton>,\n  ): string {\n    const prevSelected = changedProps.get('selected');\n    // Early exit for first update.\n    if (prevSelected === undefined) return '';\n\n    const nextSelected = this.selected;\n    const nextHasCheckmark = !this.noCheckmark;\n    if (!prevSelected && nextSelected && nextHasCheckmark) {\n      return 'selecting';\n    }\n    if (prevSelected && !nextSelected && nextHasCheckmark) {\n      return 'deselecting';\n    }\n    return '';\n  }\n\n  private handleClick() {\n    const event = new Event('segmented-button-interaction', {\n      bubbles: true,\n      composed: true,\n    });\n    this.dispatchEvent(event);\n  }\n\n  protected override render() {\n    // Needed for closure conformance\n    const {ariaLabel} = this as ARIAMixinStrict;\n    return html`\n      <button\n        tabindex=\"${this.disabled ? '-1' : '0'}\"\n        aria-label=${ariaLabel || nothing}\n        aria-pressed=${this.selected}\n        ?disabled=${this.disabled}\n        @click=\"${this.handleClick}\"\n        class=\"md3-segmented-button ${classMap(this.getRenderClasses())}\">\n        <md-focus-ring\n          class=\"md3-segmented-button__focus-ring\"\n          part=\"focus-ring\"></md-focus-ring>\n        <md-ripple\n          ?disabled=\"${this.disabled}\"\n          class=\"md3-segmented-button__ripple\"></md-ripple>\n        ${this.renderOutline()} ${this.renderLeading()} ${this.renderLabel()}\n        ${this.renderTouchTarget()}\n      </button>\n    `;\n  }\n\n  protected getRenderClasses() {\n    return {\n      'md3-segmented-button--selected': this.selected,\n      'md3-segmented-button--unselected': !this.selected,\n      'md3-segmented-button--with-label': this.label !== '',\n      'md3-segmented-button--without-label': this.label === '',\n      'md3-segmented-button--with-icon': this.hasIcon,\n      'md3-segmented-button--with-checkmark': !this.noCheckmark,\n      'md3-segmented-button--without-checkmark': this.noCheckmark,\n      'md3-segmented-button--selecting': this.animState === 'selecting',\n      'md3-segmented-button--deselecting': this.animState === 'deselecting',\n    };\n  }\n\n  protected renderOutline(): TemplateResult | typeof nothing {\n    return nothing;\n  }\n\n  private renderLeading() {\n    return this.label === ''\n      ? this.renderLeadingWithoutLabel()\n      : this.renderLeadingWithLabel();\n  }\n\n  private renderLeadingWithoutLabel() {\n    return html`\n      <span class=\"md3-segmented-button__leading\" aria-hidden=\"true\">\n        <span class=\"md3-segmented-button__graphic\">\n          <svg class=\"md3-segmented-button__checkmark\" viewBox=\"0 0 24 24\">\n            <path\n              class=\"md3-segmented-button__checkmark-path\"\n              fill=\"none\"\n              d=\"M1.73,12.91 8.1,19.28 22.79,4.59\"></path>\n          </svg>\n        </span>\n        <span class=\"md3-segmented-button__icon\" aria-hidden=\"true\">\n          <slot name=\"icon\"></slot>\n        </span>\n      </span>\n    `;\n  }\n\n  private renderLeadingWithLabel() {\n    return html`\n      <span class=\"md3-segmented-button__leading\" aria-hidden=\"true\">\n        <span class=\"md3-segmented-button__graphic\">\n          <svg class=\"md3-segmented-button__checkmark\" viewBox=\"0 0 24 24\">\n            <path\n              class=\"md3-segmented-button__checkmark-path\"\n              fill=\"none\"\n              d=\"M1.73,12.91 8.1,19.28 22.79,4.59\"></path>\n          </svg>\n          <span class=\"md3-segmented-button__icon\" aria-hidden=\"true\">\n            <slot name=\"icon\"></slot>\n          </span>\n        </span>\n      </span>\n    `;\n  }\n\n  private renderLabel() {\n    return html`\n      <span class=\"md3-segmented-button__label-text\">${this.label}</span>\n    `;\n  }\n\n  private renderTouchTarget() {\n    return html`<span class=\"md3-segmented-button__touch\"></span>`;\n  }\n}\n", "/**\n * @license\n * Copyright 2022 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {html} from 'lit';\n\nimport {SegmentedButton} from './segmented-button.js';\n\n/**\n * b/265346443 - add docs\n */\nexport class OutlinedSegmentedButton extends SegmentedButton {\n  protected override getRenderClasses() {\n    return {\n      ...super.getRenderClasses(),\n      'md3-segmented-button--outlined': true,\n    };\n  }\n\n  protected override renderOutline() {\n    return html`<span class=\"md3-segmented-button__outline\"></span>`;\n  }\n}\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./labs/segmentedbutton/internal/outlined-styles.css.\nimport {css} from 'lit';\nexport const styles = css`:host{--_container-height: var(--md-outlined-segmented-button-container-height, 40px);--_disabled-icon-color: var(--md-outlined-segmented-button-disabled-icon-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-label-text-color: var(--md-outlined-segmented-button-disabled-label-text-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-outline-color: var(--md-outlined-segmented-button-disabled-outline-color, var(--md-sys-color-on-surface, #1d1b20));--_hover-state-layer-opacity: var(--md-outlined-segmented-button-hover-state-layer-opacity, 0.08);--_label-text-font: var(--md-outlined-segmented-button-label-text-font, var(--md-sys-typescale-label-large-font, var(--md-ref-typeface-plain, Roboto)));--_label-text-line-height: var(--md-outlined-segmented-button-label-text-line-height, var(--md-sys-typescale-label-large-line-height, 1.25rem));--_label-text-size: var(--md-outlined-segmented-button-label-text-size, var(--md-sys-typescale-label-large-size, 0.875rem));--_label-text-weight: var(--md-outlined-segmented-button-label-text-weight, var(--md-sys-typescale-label-large-weight, var(--md-ref-typeface-weight-medium, 500)));--_outline-color: var(--md-outlined-segmented-button-outline-color, var(--md-sys-color-outline, #79747e));--_pressed-state-layer-opacity: var(--md-outlined-segmented-button-pressed-state-layer-opacity, 0.12);--_selected-container-color: var(--md-outlined-segmented-button-selected-container-color, var(--md-sys-color-secondary-container, #e8def8));--_selected-focus-icon-color: var(--md-outlined-segmented-button-selected-focus-icon-color, var(--md-sys-color-on-secondary-container, #1d192b));--_selected-focus-label-text-color: var(--md-outlined-segmented-button-selected-focus-label-text-color, var(--md-sys-color-on-secondary-container, #1d192b));--_selected-hover-icon-color: var(--md-outlined-segmented-button-selected-hover-icon-color, var(--md-sys-color-on-secondary-container, #1d192b));--_selected-hover-label-text-color: var(--md-outlined-segmented-button-selected-hover-label-text-color, var(--md-sys-color-on-secondary-container, #1d192b));--_selected-hover-state-layer-color: var(--md-outlined-segmented-button-selected-hover-state-layer-color, var(--md-sys-color-on-secondary-container, #1d192b));--_selected-label-text-color: var(--md-outlined-segmented-button-selected-label-text-color, var(--md-sys-color-on-secondary-container, #1d192b));--_selected-pressed-icon-color: var(--md-outlined-segmented-button-selected-pressed-icon-color, var(--md-sys-color-on-secondary-container, #1d192b));--_selected-pressed-label-text-color: var(--md-outlined-segmented-button-selected-pressed-label-text-color, var(--md-sys-color-on-secondary-container, #1d192b));--_selected-pressed-state-layer-color: var(--md-outlined-segmented-button-selected-pressed-state-layer-color, var(--md-sys-color-on-secondary-container, #1d192b));--_shape: var(--md-outlined-segmented-button-shape, var(--md-sys-shape-corner-full, 9999px));--_unselected-focus-icon-color: var(--md-outlined-segmented-button-unselected-focus-icon-color, var(--md-sys-color-on-surface, #1d1b20));--_unselected-focus-label-text-color: var(--md-outlined-segmented-button-unselected-focus-label-text-color, var(--md-sys-color-on-surface, #1d1b20));--_unselected-hover-icon-color: var(--md-outlined-segmented-button-unselected-hover-icon-color, var(--md-sys-color-on-surface, #1d1b20));--_unselected-hover-label-text-color: var(--md-outlined-segmented-button-unselected-hover-label-text-color, var(--md-sys-color-on-surface, #1d1b20));--_unselected-hover-state-layer-color: var(--md-outlined-segmented-button-unselected-hover-state-layer-color, var(--md-sys-color-on-surface, #1d1b20));--_unselected-label-text-color: var(--md-outlined-segmented-button-unselected-label-text-color, var(--md-sys-color-on-surface, #1d1b20));--_unselected-pressed-icon-color: var(--md-outlined-segmented-button-unselected-pressed-icon-color, var(--md-sys-color-on-surface, #1d1b20));--_unselected-pressed-label-text-color: var(--md-outlined-segmented-button-unselected-pressed-label-text-color, var(--md-sys-color-on-surface, #1d1b20));--_unselected-pressed-state-layer-color: var(--md-outlined-segmented-button-unselected-pressed-state-layer-color, var(--md-sys-color-on-surface, #1d1b20));--_icon-size: var(--md-outlined-segmented-button-icon-size, 18px);--_selected-icon-color: var(--md-outlined-segmented-button-selected-icon-color, var(--md-sys-color-on-secondary-container, #1d192b));--_unselected-icon-color: var(--md-outlined-segmented-button-unselected-icon-color, var(--md-sys-color-on-surface, #1d1b20));--_shape-start-start: var(--md-outlined-segmented-button-shape-start-start, var(--md-sys-shape-corner-full, 9999px));--_shape-start-end: var(--md-outlined-segmented-button-shape-start-end, var(--md-sys-shape-corner-full, 9999px));--_shape-end-end: var(--md-outlined-segmented-button-shape-end-end, var(--md-sys-shape-corner-full, 9999px));--_shape-end-start: var(--md-outlined-segmented-button-shape-end-start, var(--md-sys-shape-corner-full, 9999px));--_spacing-leading: var(--md-outlined-segmented-button-spacing-leading, 12px);--_spacing-trailing: var(--md-outlined-segmented-button-spacing-trailing, 12px)}.md3-segmented-button__outline{border-radius:inherit;border-style:solid;border-width:1px;inset:0px -0.5px;pointer-events:none;position:absolute}\n`;\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./labs/segmentedbutton/internal/shared-styles.css.\nimport {css} from 'lit';\nexport const styles = css`@keyframes md3-segmented-button-checkmark-selection-draw-in{from{stroke-dashoffset:29.7833385}to{stroke-dashoffset:0}}@keyframes md3-segmented-button-simple-fade-out{from{opacity:1}to{opacity:0}}@keyframes md3-segmented-button-simple-fade-in{from{opacity:0}to{opacity:1}}:host{display:inline-flex;outline:none;-webkit-tap-highlight-color:rgba(0,0,0,0)}.md3-segmented-button{align-items:center;background:rgba(0,0,0,0);border:none;border-radius:inherit;display:flex;flex:1;justify-content:center;outline:none;position:relative;vertical-align:middle;padding-inline-start:var(--_spacing-leading);padding-inline-end:var(--_spacing-trailing);text-transform:inherit}.md3-segmented-button .md3-segmented-button__outline{border-color:var(--_outline-color)}.md3-segmented-button:disabled .md3-segmented-button__outline{border-color:var(--_disabled-outline-color)}.md3-segmented-button .md3-segmented-button__graphic,.md3-segmented-button .md3-segmented-button__checkmark,.md3-segmented-button .md3-segmented-button__icon,.md3-segmented-button .md3-segmented-button__icon ::slotted([slot=icon]){height:var(--_icon-size);width:var(--_icon-size);font-size:var(--_icon-size)}.md3-segmented-button.md3-segmented-button--with-icon.md3-segmented-button--with-label .md3-segmented-button__graphic,.md3-segmented-button.md3-segmented-button--selected.md3-segmented-button--with-label.md3-segmented-button--with-checkmark .md3-segmented-button__graphic,.md3-segmented-button.md3-segmented-button--selected.md3-segmented-button--without-label.md3-segmented-button--with-checkmark .md3-segmented-button__graphic{width:calc(var(--_icon-size) + 8px)}.md3-segmented-button .md3-segmented-button__label-text{font-family:var(--_label-text-font);font-size:var(--_label-text-size);line-height:var(--_label-text-line-height);font-weight:var(--_label-text-weight)}.md3-segmented-button.md3-segmented-button--selected:enabled .md3-segmented-button__label-text{color:var(--_selected-label-text-color)}.md3-segmented-button.md3-segmented-button--selected:enabled:hover .md3-segmented-button__label-text{color:var(--_selected-hover-label-text-color)}.md3-segmented-button.md3-segmented-button--selected:enabled:focus .md3-segmented-button__label-text{color:var(--_selected-focus-label-text-color)}.md3-segmented-button.md3-segmented-button--selected:enabled:active .md3-segmented-button__label-text{color:var(--_selected-pressed-label-text-color)}.md3-segmented-button.md3-segmented-button--unselected:enabled .md3-segmented-button__label-text{color:var(--_unselected-label-text-color)}.md3-segmented-button.md3-segmented-button--unselected:enabled:hover .md3-segmented-button__label-text{color:var(--_unselected-hover-label-text-color)}.md3-segmented-button.md3-segmented-button--unselected:enabled:focus .md3-segmented-button__label-text{color:var(--_unselected-focus-label-text-color)}.md3-segmented-button.md3-segmented-button--unselected:enabled:active .md3-segmented-button__label-text{color:var(--_unselected-pressed-label-text-color)}.md3-segmented-button:disabled .md3-segmented-button__label-text{color:var(--_disabled-label-text-color)}.md3-segmented-button--unselected{--md-ripple-hover-color: var(--_unselected-hover-state-layer-color);--md-ripple-hover-opacity: var(--_hover-state-layer-opacity);--md-ripple-pressed-color: var(--_unselected-pressed-state-layer-color);--md-ripple-pressed-opacity: var(--_pressed-state-layer-opacity)}.md3-segmented-button--unselected .md3-segmented-button__icon{color:var(--_unselected-icon-color)}.md3-segmented-button--unselected:hover .md3-segmented-button__icon{color:var(--_unselected-hover-icon-color)}.md3-segmented-button--unselected:focus .md3-segmented-button__icon{color:var(--_unselected-focus-icon-color)}.md3-segmented-button--unselected:active .md3-segmented-button__icon{color:var(--_unselected-pressed-icon-color)}.md3-segmented-button--unselected:disabled .md3-segmented-button__icon{color:var(--_disabled-icon-color)}.md3-segmented-button--selected{background-color:var(--_selected-container-color);--md-ripple-hover-color: var(--_selected-hover-state-layer-color);--md-ripple-hover-opacity: var(--_hover-state-layer-opacity);--md-ripple-pressed-color: var(--_selected-pressed-state-layer-color);--md-ripple-pressed-opacity: var(--_pressed-state-layer-opacity)}.md3-segmented-button--selected .md3-segmented-button__icon{color:var(--_selected-icon-color)}.md3-segmented-button--selected .md3-segmented-button__checkmark-path{stroke:var(--_selected-icon-color)}.md3-segmented-button--selected:hover .md3-segmented-button__checkmark-path{stroke:var(--_selected-hover-icon-color)}.md3-segmented-button--selected:focus .md3-segmented-button__checkmark-path{stroke:var(--_selected-focus-icon-color)}.md3-segmented-button--selected:active .md3-segmented-button__checkmark-path{stroke:var(--_selected-pressed-icon-color)}.md3-segmented-button--selected:disabled .md3-segmented-button__checkmark-path{stroke:var(--_disabled-icon-color)}.md3-segmented-button:enabled{cursor:pointer}.md3-segmented-button__focus-ring{z-index:1}.md3-segmented-button__ripple{border-radius:inherit;z-index:0}.md3-segmented-button__touch{position:absolute;top:50%;height:48px;left:50%;width:100%;transform:translate(-50%, -50%)}.md3-segmented-button__leading,.md3-segmented-button__graphic{display:inline-flex;justify-content:flex-start;align-items:center}.md3-segmented-button__graphic{position:relative;overflow:hidden}.md3-segmented-button__graphic{transition:width 150ms cubic-bezier(0.4, 0, 0.2, 1)}.md3-segmented-button--unselected.md3-segmented-button--with-label .md3-segmented-button__graphic,.md3-segmented-button--unselected.md3-segmented-button--without-label .md3-segmented-button__graphic,.md3-segmented-button--selected.md3-segmented-button--without-checkmark .md3-segmented-button__graphic{width:0}.md3-segmented-button--unselected .md3-segmented-button__checkmark{opacity:0}.md3-segmented-button--selected.md3-segmented-button--with-label .md3-segmented-button__icon{opacity:0}.md3-segmented-button--with-label .md3-segmented-button__checkmark{display:inline-flex;position:absolute}.md3-segmented-button__checkmark-path{stroke-width:2px;stroke-dasharray:29.7833385}.md3-segmented-button--selecting .md3-segmented-button__checkmark-path{stroke-dashoffset:29.7833385;animation:md3-segmented-button-checkmark-selection-draw-in;animation-duration:150ms;animation-delay:50ms;animation-fill-mode:forwards;animation-timing-function:cubic-bezier(0.4, 0, 0.2, 1)}.md3-segmented-button--selecting.md3-segmented-button--with-label .md3-segmented-button__icon{animation:md3-segmented-button-simple-fade-out;animation-duration:75ms;animation-timing-function:linear;animation-fill-mode:forwards}.md3-segmented-button--deselecting .md3-segmented-button__checkmark{animation:md3-segmented-button-simple-fade-out;animation-duration:50ms;animation-timing-function:linear;animation-fill-mode:forwards}.md3-segmented-button--deselecting.md3-segmented-button--with-label .md3-segmented-button__icon{opacity:0;animation:md3-segmented-button-simple-fade-in;animation-delay:50ms;animation-duration:150ms;animation-timing-function:linear;animation-fill-mode:forwards}\n`;\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {CSSResultOrNative} from 'lit';\nimport {customElement} from 'lit/decorators.js';\n\nimport {OutlinedSegmentedButton} from './internal/outlined-segmented-button.js';\nimport {styles as outlinedStyles} from './internal/outlined-styles.js';\nimport {styles as sharedStyles} from './internal/shared-styles.js';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'md-outlined-segmented-button': MdOutlinedSegmentedButton;\n  }\n}\n\n/**\n * MdOutlinedSegmentedButton is the custom element for the Material\n * Design outlined segmented button component.\n * @final\n * @suppress {visibility}\n */\n@customElement('md-outlined-segmented-button')\nexport class MdOutlinedSegmentedButton extends OutlinedSegmentedButton {\n  static override styles: CSSResultOrNative[] = [sharedStyles, outlinedStyles];\n}\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {html, LitElement, nothing} from 'lit';\nimport {property, queryAssignedElements} from 'lit/decorators.js';\n\nimport {ARIAMixinStrict} from '../../../internal/aria/aria.js';\nimport {requestUpdateOnAriaChange} from '../../../internal/aria/delegate.js';\nimport {SegmentedButton} from '../../segmentedbutton/internal/segmented-button.js';\n\n/**\n * SegmentedButtonSet is the parent component for two or more\n * `SegmentedButton` components. **Only** `SegmentedButton` components may be\n * used as children.\n *\n * @fires segmented-button-set-selection {CustomEvent<{button: SegmentedButton, selected: boolean, index: number}>}\n * Dispatched when a button is selected programattically with the\n * `setButtonSelected` or the `toggleSelection` methods as well as on user\n * interaction. --bubbles --composed\n */\nexport class SegmentedButtonSet extends LitElement {\n  static {\n    requestUpdateOnAriaChange(SegmentedButtonSet);\n  }\n\n  @property({type: Boolean}) multiselect = false;\n\n  @queryAssignedElements({flatten: true}) buttons!: SegmentedButton[];\n\n  getButtonDisabled(index: number): boolean {\n    if (this.indexOutOfBounds(index)) return false;\n    return this.buttons[index].disabled;\n  }\n\n  setButtonDisabled(index: number, disabled: boolean) {\n    if (this.indexOutOfBounds(index)) return;\n    this.buttons[index].disabled = disabled;\n  }\n\n  getButtonSelected(index: number): boolean {\n    if (this.indexOutOfBounds(index)) return false;\n    return this.buttons[index].selected;\n  }\n\n  setButtonSelected(index: number, selected: boolean) {\n    // Ignore out-of-index values.\n    if (this.indexOutOfBounds(index)) return;\n    // Ignore disabled buttons.\n    if (this.getButtonDisabled(index)) return;\n\n    if (this.multiselect) {\n      this.buttons[index].selected = selected;\n      this.emitSelectionEvent(index);\n      return;\n    }\n\n    // Single-select segmented buttons are not unselectable.\n    if (!selected) return;\n\n    this.buttons[index].selected = true;\n    this.emitSelectionEvent(index);\n    // Deselect all other buttons for single-select.\n    for (let i = 0; i < this.buttons.length; i++) {\n      if (i === index) continue;\n      this.buttons[i].selected = false;\n    }\n  }\n\n  private handleSegmentedButtonInteraction(event: CustomEvent) {\n    const index = this.buttons.indexOf(event.target as SegmentedButton);\n    this.toggleSelection(index);\n  }\n\n  private toggleSelection(index: number) {\n    if (this.indexOutOfBounds(index)) return;\n    this.setButtonSelected(index, !this.buttons[index].selected);\n  }\n\n  private indexOutOfBounds(index: number): boolean {\n    return index < 0 || index >= this.buttons.length;\n  }\n\n  private emitSelectionEvent(index: number) {\n    this.dispatchEvent(\n      new CustomEvent('segmented-button-set-selection', {\n        detail: {\n          button: this.buttons[index],\n          selected: this.buttons[index].selected,\n          index,\n        },\n        bubbles: true,\n        composed: true,\n      }),\n    );\n  }\n\n  protected override render() {\n    // Needed for closure conformance\n    const {ariaLabel} = this as ARIAMixinStrict;\n    return html`\n      <span\n        role=\"group\"\n        @segmented-button-interaction=\"${this.handleSegmentedButtonInteraction}\"\n        aria-label=${ariaLabel || nothing}\n        class=\"md3-segmented-button-set\">\n        <slot></slot>\n      </span>\n    `;\n  }\n\n  protected getRenderClasses() {\n    return {};\n  }\n}\n", "/**\n * @license\n * Copyright 2022 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {SegmentedButtonSet} from './segmented-button-set.js';\n\n/**\n * b/265346443 - add docs\n */\nexport class OutlinedSegmentedButtonSet extends SegmentedButtonSet {\n  protected override getRenderClasses() {\n    return {\n      ...super.getRenderClasses(),\n      'md3-segmented-button-set--outlined': true,\n    };\n  }\n}\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./labs/segmentedbuttonset/internal/outlined-styles.css.\nimport {css} from 'lit';\nexport const styles = css`:host{--_container-height: var(--md-outlined-segmented-button-container-height, 40px);--_disabled-icon-color: var(--md-outlined-segmented-button-disabled-icon-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-label-text-color: var(--md-outlined-segmented-button-disabled-label-text-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-outline-color: var(--md-outlined-segmented-button-disabled-outline-color, var(--md-sys-color-on-surface, #1d1b20));--_hover-state-layer-opacity: var(--md-outlined-segmented-button-hover-state-layer-opacity, 0.08);--_label-text-font: var(--md-outlined-segmented-button-label-text-font, var(--md-sys-typescale-label-large-font, var(--md-ref-typeface-plain, Roboto)));--_label-text-line-height: var(--md-outlined-segmented-button-label-text-line-height, var(--md-sys-typescale-label-large-line-height, 1.25rem));--_label-text-size: var(--md-outlined-segmented-button-label-text-size, var(--md-sys-typescale-label-large-size, 0.875rem));--_label-text-weight: var(--md-outlined-segmented-button-label-text-weight, var(--md-sys-typescale-label-large-weight, var(--md-ref-typeface-weight-medium, 500)));--_outline-color: var(--md-outlined-segmented-button-outline-color, var(--md-sys-color-outline, #79747e));--_pressed-state-layer-opacity: var(--md-outlined-segmented-button-pressed-state-layer-opacity, 0.12);--_selected-container-color: var(--md-outlined-segmented-button-selected-container-color, var(--md-sys-color-secondary-container, #e8def8));--_selected-focus-icon-color: var(--md-outlined-segmented-button-selected-focus-icon-color, var(--md-sys-color-on-secondary-container, #1d192b));--_selected-focus-label-text-color: var(--md-outlined-segmented-button-selected-focus-label-text-color, var(--md-sys-color-on-secondary-container, #1d192b));--_selected-hover-icon-color: var(--md-outlined-segmented-button-selected-hover-icon-color, var(--md-sys-color-on-secondary-container, #1d192b));--_selected-hover-label-text-color: var(--md-outlined-segmented-button-selected-hover-label-text-color, var(--md-sys-color-on-secondary-container, #1d192b));--_selected-hover-state-layer-color: var(--md-outlined-segmented-button-selected-hover-state-layer-color, var(--md-sys-color-on-secondary-container, #1d192b));--_selected-label-text-color: var(--md-outlined-segmented-button-selected-label-text-color, var(--md-sys-color-on-secondary-container, #1d192b));--_selected-pressed-icon-color: var(--md-outlined-segmented-button-selected-pressed-icon-color, var(--md-sys-color-on-secondary-container, #1d192b));--_selected-pressed-label-text-color: var(--md-outlined-segmented-button-selected-pressed-label-text-color, var(--md-sys-color-on-secondary-container, #1d192b));--_selected-pressed-state-layer-color: var(--md-outlined-segmented-button-selected-pressed-state-layer-color, var(--md-sys-color-on-secondary-container, #1d192b));--_unselected-focus-icon-color: var(--md-outlined-segmented-button-unselected-focus-icon-color, var(--md-sys-color-on-surface, #1d1b20));--_unselected-focus-label-text-color: var(--md-outlined-segmented-button-unselected-focus-label-text-color, var(--md-sys-color-on-surface, #1d1b20));--_unselected-hover-icon-color: var(--md-outlined-segmented-button-unselected-hover-icon-color, var(--md-sys-color-on-surface, #1d1b20));--_unselected-hover-label-text-color: var(--md-outlined-segmented-button-unselected-hover-label-text-color, var(--md-sys-color-on-surface, #1d1b20));--_unselected-hover-state-layer-color: var(--md-outlined-segmented-button-unselected-hover-state-layer-color, var(--md-sys-color-on-surface, #1d1b20));--_unselected-label-text-color: var(--md-outlined-segmented-button-unselected-label-text-color, var(--md-sys-color-on-surface, #1d1b20));--_unselected-pressed-icon-color: var(--md-outlined-segmented-button-unselected-pressed-icon-color, var(--md-sys-color-on-surface, #1d1b20));--_unselected-pressed-label-text-color: var(--md-outlined-segmented-button-unselected-pressed-label-text-color, var(--md-sys-color-on-surface, #1d1b20));--_unselected-pressed-state-layer-color: var(--md-outlined-segmented-button-unselected-pressed-state-layer-color, var(--md-sys-color-on-surface, #1d1b20));--_icon-size: var(--md-outlined-segmented-button-icon-size, 18px);--_selected-icon-color: var(--md-outlined-segmented-button-selected-icon-color, var(--md-sys-color-on-secondary-container, #1d192b));--_unselected-icon-color: var(--md-outlined-segmented-button-unselected-icon-color, var(--md-sys-color-on-surface, #1d1b20));--_shape-start-start: var(--md-outlined-segmented-button-shape-start-start, var(--md-outlined-segmented-button-shape, var(--md-sys-shape-corner-full, 9999px)));--_shape-start-end: var(--md-outlined-segmented-button-shape-start-end, var(--md-outlined-segmented-button-shape, var(--md-sys-shape-corner-full, 9999px)));--_shape-end-end: var(--md-outlined-segmented-button-shape-end-end, var(--md-outlined-segmented-button-shape, var(--md-sys-shape-corner-full, 9999px)));--_shape-end-start: var(--md-outlined-segmented-button-shape-end-start, var(--md-outlined-segmented-button-shape, var(--md-sys-shape-corner-full, 9999px)))}\n`;\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./labs/segmentedbuttonset/internal/shared-styles.css.\nimport {css} from 'lit';\nexport const styles = css`:host{display:flex;outline:none}.md3-segmented-button-set{display:grid;grid-auto-columns:1fr;grid-auto-flow:column;grid-auto-rows:auto;width:100%;height:var(--_container-height)}.md3-segmented-button-set ::slotted(:first-child){border-start-start-radius:var(--_shape-start-start);border-end-start-radius:var(--_shape-end-start)}.md3-segmented-button-set ::slotted(:last-child){border-start-end-radius:var(--_shape-start-end);border-end-end-radius:var(--_shape-end-end)}\n`;\n", "/**\n * @license\n * Copyright 2022 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {CSSResultOrNative} from 'lit';\nimport {customElement} from 'lit/decorators.js';\n\nimport {OutlinedSegmentedButtonSet} from './internal/outlined-segmented-button-set.js';\nimport {styles as outlinedStyles} from './internal/outlined-styles.js';\nimport {styles as sharedStyles} from './internal/shared-styles.js';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'md-outlined-segmented-button-set': MdOutlinedSegmentedButtonSet;\n  }\n}\n\n/**\n * MdOutlinedSegmentedButtonSet is the custom element for the Material\n * Design outlined segmented button set component.\n * @final\n * @suppress {visibility}\n */\n@customElement('md-outlined-segmented-button-set')\nexport class MdOutlinedSegmentedButtonSet extends OutlinedSegmentedButtonSet {\n  static override styles: CSSResultOrNative[] = [sharedStyles, outlinedStyles];\n}\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport '@material/web/icon/icon.js';\nimport '@material/web/iconbutton/icon-button.js';\n\nimport {MdIconButton} from '@material/web/iconbutton/icon-button.js';\nimport {css, html, LitElement} from 'lit';\nimport {\n  customElement,\n  property,\n  query,\n  queryAssignedElements,\n  state,\n} from 'lit/decorators.js';\n\n/**\n * A custom element that places a copy button at the top right corner of a\n * markdown-it codeblock. Injected into the page by the\n * /catalog/eleventy-helpers/plugins/copy-code-button.cjs markdown-it plugin.\n */\n@customElement('copy-code-button')\nexport class CopyCodeButton extends LitElement {\n  static styles = css`\n    :host {\n      display: block;\n      position: relative;\n      --_border-radius: calc(var(--catalog-code-block-border-radius) / 4);\n    }\n\n    md-icon-button {\n      color: red;\n      position: absolute;\n      inset: var(\n        --catalog-copy-code-button-inset,\n        var(--_border-radius) var(--_border-radius) auto auto\n      );\n      --md-sys-color-on-surface-variant: var(--md-sys-color-on-surface);\n      --md-sys-color-primary: var(--md-sys-color-on-surface);\n    }\n  `;\n\n  private timeoutId: number | undefined;\n\n  @state() private showCheckmark = false;\n\n  /**\n   * The aria label for the copy button when it has not been clicked.\n   */\n  @property() label = 'Copy code';\n\n  /**\n   * The aria label for the copy button when it has been clicked and the copy is\n   * successul.\n   */\n  @property({attribute: 'success-label'}) successLabel = 'Copy successful';\n\n  /**\n   * The title to be set on the copy button.\n   */\n  @property({attribute: 'button-title'}) buttonTitle = 'Copy code';\n\n  @query('md-icon-button') private copyButton!: MdIconButton;\n\n  @queryAssignedElements({flatten: true, selector: '*'})\n  private slottedEls!: NodeListOf<HTMLElement>;\n\n  render() {\n    return html`\n      <slot></slot>\n      <md-icon-button\n        toggle\n        @click=${this.onClick}\n        @input=${this.onInput}\n        title=${this.buttonTitle}\n        .selected=${this.showCheckmark}\n        aria-label=${this.label}\n        aria-label-selected=${this.successLabel}>\n        <md-icon>content_copy</md-icon>\n        <md-icon slot=\"selected\">checkmark</md-icon>\n      </md-icon-button>\n    `;\n  }\n\n  private async onClick() {\n    await navigator.clipboard.writeText(this.getCopyText());\n    this.onCopySuccess();\n  }\n\n  private onInput() {\n    this.showCheckmark = this.copyButton.selected;\n  }\n\n  /**\n   * Returns the text to be copied. By default, it copies the textContent of the\n   * nodes slotted into the element. Override for custom functionality.\n   */\n  getCopyText() {\n    let text = '';\n    for (const el of this.slottedEls) {\n      text += el.textContent;\n    }\n\n    return text;\n  }\n\n  private onCopySuccess() {\n    this.showCheckmark = true;\n\n    if (this.timeoutId) {\n      window.clearTimeout(this.timeoutId);\n    }\n\n    this.timeoutId = window.setTimeout(() => {\n      this.showCheckmark = false;\n    }, 2000);\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'copy-code-button': CopyCodeButton;\n  }\n}\n", "/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// This file is automatically generated. Do not modify it.\n\n/**\n * Utility methods for mathematical operations.\n */\n\n/**\n * The signum function.\n *\n * @return 1 if num > 0, -1 if num < 0, and 0 if num = 0\n */\nexport function signum(num: number): number {\n  if (num < 0) {\n    return -1;\n  } else if (num === 0) {\n    return 0;\n  } else {\n    return 1;\n  }\n}\n\n/**\n * The linear interpolation function.\n *\n * @return start if amount = 0 and stop if amount = 1\n */\nexport function lerp(start: number, stop: number, amount: number): number {\n  return (1.0 - amount) * start + amount * stop;\n}\n\n/**\n * Clamps an integer between two integers.\n *\n * @return input when min <= input <= max, and either min or max\n * otherwise.\n */\nexport function clampInt(min: number, max: number, input: number): number {\n  if (input < min) {\n    return min;\n  } else if (input > max) {\n    return max;\n  }\n\n  return input;\n}\n\n/**\n * Clamps an integer between two floating-point numbers.\n *\n * @return input when min <= input <= max, and either min or max\n * otherwise.\n */\nexport function clampDouble(min: number, max: number, input: number): number {\n  if (input < min) {\n    return min;\n  } else if (input > max) {\n    return max;\n  }\n\n  return input;\n}\n\n/**\n * Sanitizes a degree measure as an integer.\n *\n * @return a degree measure between 0 (inclusive) and 360\n * (exclusive).\n */\nexport function sanitizeDegreesInt(degrees: number): number {\n  degrees = degrees % 360;\n  if (degrees < 0) {\n    degrees = degrees + 360;\n  }\n  return degrees;\n}\n\n/**\n * Sanitizes a degree measure as a floating-point number.\n *\n * @return a degree measure between 0.0 (inclusive) and 360.0\n * (exclusive).\n */\nexport function sanitizeDegreesDouble(degrees: number): number {\n  degrees = degrees % 360.0;\n  if (degrees < 0) {\n    degrees = degrees + 360.0;\n  }\n  return degrees;\n}\n\n/**\n * Sign of direction change needed to travel from one angle to\n * another.\n *\n * For angles that are 180 degrees apart from each other, both\n * directions have the same travel distance, so either direction is\n * shortest. The value 1.0 is returned in this case.\n *\n * @param from The angle travel starts from, in degrees.\n * @param to The angle travel ends at, in degrees.\n * @return -1 if decreasing from leads to the shortest travel\n * distance, 1 if increasing from leads to the shortest travel\n * distance.\n */\nexport function rotationDirection(from: number, to: number): number {\n  const increasingDifference = sanitizeDegreesDouble(to - from);\n  return increasingDifference <= 180.0 ? 1.0 : -1.0;\n}\n\n/**\n * Distance of two points on a circle, represented using degrees.\n */\nexport function differenceDegrees(a: number, b: number): number {\n  return 180.0 - Math.abs(Math.abs(a - b) - 180.0);\n}\n\n/**\n * Multiplies a 1x3 row vector with a 3x3 matrix.\n */\nexport function matrixMultiply(row: number[], matrix: number[][]): number[] {\n  const a =\n      row[0] * matrix[0][0] + row[1] * matrix[0][1] + row[2] * matrix[0][2];\n  const b =\n      row[0] * matrix[1][0] + row[1] * matrix[1][1] + row[2] * matrix[1][2];\n  const c =\n      row[0] * matrix[2][0] + row[1] * matrix[2][1] + row[2] * matrix[2][2];\n  return [a, b, c];\n}\n", "/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// This file is automatically generated. Do not modify it.\n\nimport * as mathUtils from './math_utils.js';\n\n/**\n * Color science utilities.\n *\n * Utility methods for color science constants and color space\n * conversions that aren't HCT or CAM16.\n */\n\nconst SRGB_TO_XYZ = [\n  [0.41233895, 0.35762064, 0.18051042],\n  [0.2126, 0.7152, 0.0722],\n  [0.01932141, 0.11916382, 0.95034478],\n];\n\nconst XYZ_TO_SRGB = [\n  [\n    3.2413774792388685,\n    -1.5376652402851851,\n    -0.49885366846268053,\n  ],\n  [\n    -0.9691452513005321,\n    1.8758853451067872,\n    0.04156585616912061,\n  ],\n  [\n    0.05562093689691305,\n    -0.20395524564742123,\n    1.0571799111220335,\n  ],\n];\n\nconst WHITE_POINT_D65 = [95.047, 100.0, 108.883];\n\n/**\n * Converts a color from RGB components to ARGB format.\n */\nexport function argbFromRgb(red: number, green: number, blue: number): number {\n  return (255 << 24 | (red & 255) << 16 | (green & 255) << 8 | blue & 255) >>>\n      0;\n}\n\n/**\n * Converts a color from linear RGB components to ARGB format.\n */\nexport function argbFromLinrgb(linrgb: number[]): number {\n  const r = delinearized(linrgb[0]);\n  const g = delinearized(linrgb[1]);\n  const b = delinearized(linrgb[2]);\n  return argbFromRgb(r, g, b);\n}\n\n/**\n * Returns the alpha component of a color in ARGB format.\n */\nexport function alphaFromArgb(argb: number): number {\n  return argb >> 24 & 255;\n}\n\n/**\n * Returns the red component of a color in ARGB format.\n */\nexport function redFromArgb(argb: number): number {\n  return argb >> 16 & 255;\n}\n\n/**\n * Returns the green component of a color in ARGB format.\n */\nexport function greenFromArgb(argb: number): number {\n  return argb >> 8 & 255;\n}\n\n/**\n * Returns the blue component of a color in ARGB format.\n */\nexport function blueFromArgb(argb: number): number {\n  return argb & 255;\n}\n\n/**\n * Returns whether a color in ARGB format is opaque.\n */\nexport function isOpaque(argb: number): boolean {\n  return alphaFromArgb(argb) >= 255;\n}\n\n/**\n * Converts a color from ARGB to XYZ.\n */\nexport function argbFromXyz(x: number, y: number, z: number): number {\n  const matrix = XYZ_TO_SRGB;\n  const linearR = matrix[0][0] * x + matrix[0][1] * y + matrix[0][2] * z;\n  const linearG = matrix[1][0] * x + matrix[1][1] * y + matrix[1][2] * z;\n  const linearB = matrix[2][0] * x + matrix[2][1] * y + matrix[2][2] * z;\n  const r = delinearized(linearR);\n  const g = delinearized(linearG);\n  const b = delinearized(linearB);\n  return argbFromRgb(r, g, b);\n}\n\n/**\n * Converts a color from XYZ to ARGB.\n */\nexport function xyzFromArgb(argb: number): number[] {\n  const r = linearized(redFromArgb(argb));\n  const g = linearized(greenFromArgb(argb));\n  const b = linearized(blueFromArgb(argb));\n  return mathUtils.matrixMultiply([r, g, b], SRGB_TO_XYZ);\n}\n\n/**\n * Converts a color represented in Lab color space into an ARGB\n * integer.\n */\nexport function argbFromLab(l: number, a: number, b: number): number {\n  const whitePoint = WHITE_POINT_D65;\n  const fy = (l + 16.0) / 116.0;\n  const fx = a / 500.0 + fy;\n  const fz = fy - b / 200.0;\n  const xNormalized = labInvf(fx);\n  const yNormalized = labInvf(fy);\n  const zNormalized = labInvf(fz);\n  const x = xNormalized * whitePoint[0];\n  const y = yNormalized * whitePoint[1];\n  const z = zNormalized * whitePoint[2];\n  return argbFromXyz(x, y, z);\n}\n\n/**\n * Converts a color from ARGB representation to L*a*b*\n * representation.\n *\n * @param argb the ARGB representation of a color\n * @return a Lab object representing the color\n */\nexport function labFromArgb(argb: number): number[] {\n  const linearR = linearized(redFromArgb(argb));\n  const linearG = linearized(greenFromArgb(argb));\n  const linearB = linearized(blueFromArgb(argb));\n  const matrix = SRGB_TO_XYZ;\n  const x =\n      matrix[0][0] * linearR + matrix[0][1] * linearG + matrix[0][2] * linearB;\n  const y =\n      matrix[1][0] * linearR + matrix[1][1] * linearG + matrix[1][2] * linearB;\n  const z =\n      matrix[2][0] * linearR + matrix[2][1] * linearG + matrix[2][2] * linearB;\n  const whitePoint = WHITE_POINT_D65;\n  const xNormalized = x / whitePoint[0];\n  const yNormalized = y / whitePoint[1];\n  const zNormalized = z / whitePoint[2];\n  const fx = labF(xNormalized);\n  const fy = labF(yNormalized);\n  const fz = labF(zNormalized);\n  const l = 116.0 * fy - 16;\n  const a = 500.0 * (fx - fy);\n  const b = 200.0 * (fy - fz);\n  return [l, a, b];\n}\n\n/**\n * Converts an L* value to an ARGB representation.\n *\n * @param lstar L* in L*a*b*\n * @return ARGB representation of grayscale color with lightness\n * matching L*\n */\nexport function argbFromLstar(lstar: number): number {\n  const y = yFromLstar(lstar);\n  const component = delinearized(y);\n  return argbFromRgb(component, component, component);\n}\n\n/**\n * Computes the L* value of a color in ARGB representation.\n *\n * @param argb ARGB representation of a color\n * @return L*, from L*a*b*, coordinate of the color\n */\nexport function lstarFromArgb(argb: number): number {\n  const y = xyzFromArgb(argb)[1];\n  return 116.0 * labF(y / 100.0) - 16.0;\n}\n\n/**\n * Converts an L* value to a Y value.\n *\n * L* in L*a*b* and Y in XYZ measure the same quantity, luminance.\n *\n * L* measures perceptual luminance, a linear scale. Y in XYZ\n * measures relative luminance, a logarithmic scale.\n *\n * @param lstar L* in L*a*b*\n * @return Y in XYZ\n */\nexport function yFromLstar(lstar: number): number {\n  return 100.0 * labInvf((lstar + 16.0) / 116.0);\n}\n\n/**\n * Converts a Y value to an L* value.\n *\n * L* in L*a*b* and Y in XYZ measure the same quantity, luminance.\n *\n * L* measures perceptual luminance, a linear scale. Y in XYZ\n * measures relative luminance, a logarithmic scale.\n *\n * @param y Y in XYZ\n * @return L* in L*a*b*\n */\nexport function lstarFromY(y: number): number {\n  return labF(y / 100.0) * 116.0 - 16.0;\n}\n\n/**\n * Linearizes an RGB component.\n *\n * @param rgbComponent 0 <= rgb_component <= 255, represents R/G/B\n * channel\n * @return 0.0 <= output <= 100.0, color channel converted to\n * linear RGB space\n */\nexport function linearized(rgbComponent: number): number {\n  const normalized = rgbComponent / 255.0;\n  if (normalized <= 0.040449936) {\n    return normalized / 12.92 * 100.0;\n  } else {\n    return Math.pow((normalized + 0.055) / 1.055, 2.4) * 100.0;\n  }\n}\n\n/**\n * Delinearizes an RGB component.\n *\n * @param rgbComponent 0.0 <= rgb_component <= 100.0, represents\n * linear R/G/B channel\n * @return 0 <= output <= 255, color channel converted to regular\n * RGB space\n */\nexport function delinearized(rgbComponent: number): number {\n  const normalized = rgbComponent / 100.0;\n  let delinearized = 0.0;\n  if (normalized <= 0.0031308) {\n    delinearized = normalized * 12.92;\n  } else {\n    delinearized = 1.055 * Math.pow(normalized, 1.0 / 2.4) - 0.055;\n  }\n  return mathUtils.clampInt(0, 255, Math.round(delinearized * 255.0));\n}\n\n/**\n * Returns the standard white point; white on a sunny day.\n *\n * @return The white point\n */\nexport function whitePointD65(): number[] {\n  return WHITE_POINT_D65;\n}\n\n/**\n * RGBA component\n * \n * @param r Red value should be between 0-255\n * @param g Green value should be between 0-255\n * @param b Blue value should be between 0-255\n * @param a Alpha value should be between 0-255\n */\nexport interface Rgba {\n  r: number;\n  g: number;\n  b: number;\n  a: number;\n}\n\n/**\n * Return RGBA from a given int32 color\n *\n * @param argb ARGB representation of a int32 color.\n * @return RGBA representation of a int32 color.\n */\nexport function rgbaFromArgb(argb: number): Rgba {\n  const r = redFromArgb(argb);\n  const g = greenFromArgb(argb);\n  const b = blueFromArgb(argb);\n  const a = alphaFromArgb(argb);\n  return {r, g, b, a};\n}\n\n/**\n * Return int32 color from a given RGBA component\n * \n * @param rgba RGBA representation of a int32 color.\n * @returns ARGB representation of a int32 color.\n */\nexport function argbFromRgba({r, g, b, a}: Rgba): number {\n  const rValue = clampComponent(r);\n  const gValue = clampComponent(g);\n  const bValue = clampComponent(b);\n  const aValue = clampComponent(a);\n  return (aValue << 24) | (rValue << 16) | (gValue << 8) | bValue;\n}\n\nfunction clampComponent(value: number) {\n  if (value < 0) return 0;\n  if (value > 255) return 255;\n  return value\n}\n\nfunction labF(t: number): number {\n  const e = 216.0 / 24389.0;\n  const kappa = 24389.0 / 27.0;\n  if (t > e) {\n    return Math.pow(t, 1.0 / 3.0);\n  } else {\n    return (kappa * t + 16) / 116;\n  }\n}\n\nfunction labInvf(ft: number): number {\n  const e = 216.0 / 24389.0;\n  const kappa = 24389.0 / 27.0;\n  const ft3 = ft * ft * ft;\n  if (ft3 > e) {\n    return ft3;\n  } else {\n    return (116 * ft - 16) / kappa;\n  }\n}\n", "/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as utils from '../utils/color_utils.js';\nimport * as math from '../utils/math_utils.js';\n\n/**\n * In traditional color spaces, a color can be identified solely by the\n * observer's measurement of the color. Color appearance models such as CAM16\n * also use information about the environment where the color was\n * observed, known as the viewing conditions.\n *\n * For example, white under the traditional assumption of a midday sun white\n * point is accurately measured as a slightly chromatic blue by CAM16. (roughly,\n * hue 203, chroma 3, lightness 100)\n *\n * This class caches intermediate values of the CAM16 conversion process that\n * depend only on viewing conditions, enabling speed ups.\n */\nexport class ViewingConditions {\n  /** sRGB-like viewing conditions.  */\n  static DEFAULT = ViewingConditions.make();\n\n  /**\n   * Create ViewingConditions from a simple, physically relevant, set of\n   * parameters.\n   *\n   * @param whitePoint White point, measured in the XYZ color space.\n   *     default = D65, or sunny day afternoon\n   * @param adaptingLuminance The luminance of the adapting field. Informally,\n   *     how bright it is in the room where the color is viewed. Can be\n   *     calculated from lux by multiplying lux by 0.0586. default = 11.72,\n   *     or 200 lux.\n   * @param backgroundLstar The lightness of the area surrounding the color.\n   *     measured by L* in L*a*b*. default = 50.0\n   * @param surround A general description of the lighting surrounding the\n   *     color. 0 is pitch dark, like watching a movie in a theater. 1.0 is a\n   *     dimly light room, like watching TV at home at night. 2.0 means there\n   *     is no difference between the lighting on the color and around it.\n   *     default = 2.0\n   * @param discountingIlluminant Whether the eye accounts for the tint of the\n   *     ambient lighting, such as knowing an apple is still red in green light.\n   *     default = false, the eye does not perform this process on\n   *       self-luminous objects like displays.\n   */\n  static make(\n      whitePoint = utils.whitePointD65(),\n      adaptingLuminance = (200.0 / Math.PI) * utils.yFromLstar(50.0) / 100.0,\n      backgroundLstar = 50.0, surround = 2.0,\n      discountingIlluminant = false): ViewingConditions {\n    const xyz = whitePoint;\n    const rW = xyz[0] * 0.401288 + xyz[1] * 0.650173 + xyz[2] * -0.051461;\n    const gW = xyz[0] * -0.250268 + xyz[1] * 1.204414 + xyz[2] * 0.045854;\n    const bW = xyz[0] * -0.002079 + xyz[1] * 0.048952 + xyz[2] * 0.953127;\n    const f = 0.8 + surround / 10.0;\n    const c = f >= 0.9 ? math.lerp(0.59, 0.69, (f - 0.9) * 10.0) :\n                         math.lerp(0.525, 0.59, (f - 0.8) * 10.0);\n    let d = discountingIlluminant ?\n        1.0 :\n        f * (1.0 - (1.0 / 3.6) * Math.exp((-adaptingLuminance - 42.0) / 92.0));\n    d = d > 1.0 ? 1.0 : d < 0.0 ? 0.0 : d;\n    const nc = f;\n    const rgbD = [\n      d * (100.0 / rW) + 1.0 - d,\n      d * (100.0 / gW) + 1.0 - d,\n      d * (100.0 / bW) + 1.0 - d,\n    ];\n    const k = 1.0 / (5.0 * adaptingLuminance + 1.0);\n    const k4 = k * k * k * k;\n    const k4F = 1.0 - k4;\n    const fl = k4 * adaptingLuminance +\n        0.1 * k4F * k4F * Math.cbrt(5.0 * adaptingLuminance);\n    const n = utils.yFromLstar(backgroundLstar) / whitePoint[1];\n    const z = 1.48 + Math.sqrt(n);\n    const nbb = 0.725 / Math.pow(n, 0.2);\n    const ncb = nbb;\n    const rgbAFactors = [\n      Math.pow((fl * rgbD[0] * rW) / 100.0, 0.42),\n      Math.pow((fl * rgbD[1] * gW) / 100.0, 0.42),\n      Math.pow((fl * rgbD[2] * bW) / 100.0, 0.42),\n    ];\n    const rgbA = [\n      (400.0 * rgbAFactors[0]) / (rgbAFactors[0] + 27.13),\n      (400.0 * rgbAFactors[1]) / (rgbAFactors[1] + 27.13),\n      (400.0 * rgbAFactors[2]) / (rgbAFactors[2] + 27.13),\n    ];\n    const aw = (2.0 * rgbA[0] + rgbA[1] + 0.05 * rgbA[2]) * nbb;\n    return new ViewingConditions(\n        n, aw, nbb, ncb, c, nc, rgbD, fl, Math.pow(fl, 0.25), z);\n  }\n\n  /**\n   * Parameters are intermediate values of the CAM16 conversion process. Their\n   * names are shorthand for technical color science terminology, this class\n   * would not benefit from documenting them individually. A brief overview\n   * is available in the CAM16 specification, and a complete overview requires\n   * a color science textbook, such as Fairchild's Color Appearance Models.\n   */\n  private constructor(\n      public n: number, public aw: number, public nbb: number,\n      public ncb: number, public c: number, public nc: number,\n      public rgbD: number[], public fl: number, public fLRoot: number,\n      public z: number) {}\n}\n", "/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as utils from '../utils/color_utils.js';\nimport * as math from '../utils/math_utils.js';\n\nimport {ViewingConditions} from './viewing_conditions.js';\n\n/**\n * CAM16, a color appearance model. Colors are not just defined by their hex\n * code, but rather, a hex code and viewing conditions.\n *\n * CAM16 instances also have coordinates in the CAM16-UCS space, called J*, a*,\n * b*, or jstar, astar, bstar in code. CAM16-UCS is included in the CAM16\n * specification, and should be used when measuring distances between colors.\n *\n * In traditional color spaces, a color can be identified solely by the\n * observer's measurement of the color. Color appearance models such as CAM16\n * also use information about the environment where the color was\n * observed, known as the viewing conditions.\n *\n * For example, white under the traditional assumption of a midday sun white\n * point is accurately measured as a slightly chromatic blue by CAM16. (roughly,\n * hue 203, chroma 3, lightness 100)\n */\nexport class Cam16 {\n  /**\n   * All of the CAM16 dimensions can be calculated from 3 of the dimensions, in\n   * the following combinations:\n   *      -  {j or q} and {c, m, or s} and hue\n   *      - jstar, astar, bstar\n   * Prefer using a static method that constructs from 3 of those dimensions.\n   * This constructor is intended for those methods to use to return all\n   * possible dimensions.\n   *\n   * @param hue\n   * @param chroma informally, colorfulness / color intensity. like saturation\n   *     in HSL, except perceptually accurate.\n   * @param j lightness\n   * @param q brightness; ratio of lightness to white point's lightness\n   * @param m colorfulness\n   * @param s saturation; ratio of chroma to white point's chroma\n   * @param jstar CAM16-UCS J coordinate\n   * @param astar CAM16-UCS a coordinate\n   * @param bstar CAM16-UCS b coordinate\n   */\n  constructor(\n      readonly hue: number, readonly chroma: number, readonly j: number,\n      readonly q: number, readonly m: number, readonly s: number,\n      readonly jstar: number, readonly astar: number, readonly bstar: number) {}\n\n  /**\n   * CAM16 instances also have coordinates in the CAM16-UCS space, called J*,\n   * a*, b*, or jstar, astar, bstar in code. CAM16-UCS is included in the CAM16\n   * specification, and is used to measure distances between colors.\n   */\n  distance(other: Cam16): number {\n    const dJ = this.jstar - other.jstar;\n    const dA = this.astar - other.astar;\n    const dB = this.bstar - other.bstar;\n    const dEPrime = Math.sqrt(dJ * dJ + dA * dA + dB * dB);\n    const dE = 1.41 * Math.pow(dEPrime, 0.63);\n    return dE;\n  }\n\n  /**\n   * @param argb ARGB representation of a color.\n   * @return CAM16 color, assuming the color was viewed in default viewing\n   *     conditions.\n   */\n  static fromInt(argb: number): Cam16 {\n    return Cam16.fromIntInViewingConditions(argb, ViewingConditions.DEFAULT);\n  }\n\n  /**\n   * @param argb ARGB representation of a color.\n   * @param viewingConditions Information about the environment where the color\n   *     was observed.\n   * @return CAM16 color.\n   */\n  static fromIntInViewingConditions(\n      argb: number, viewingConditions: ViewingConditions): Cam16 {\n    const red = (argb & 0x00ff0000) >> 16;\n    const green = (argb & 0x0000ff00) >> 8;\n    const blue = (argb & 0x000000ff);\n    const redL = utils.linearized(red);\n    const greenL = utils.linearized(green);\n    const blueL = utils.linearized(blue);\n    const x = 0.41233895 * redL + 0.35762064 * greenL + 0.18051042 * blueL;\n    const y = 0.2126 * redL + 0.7152 * greenL + 0.0722 * blueL;\n    const z = 0.01932141 * redL + 0.11916382 * greenL + 0.95034478 * blueL;\n\n    const rC = 0.401288 * x + 0.650173 * y - 0.051461 * z;\n    const gC = -0.250268 * x + 1.204414 * y + 0.045854 * z;\n    const bC = -0.002079 * x + 0.048952 * y + 0.953127 * z;\n\n    const rD = viewingConditions.rgbD[0] * rC;\n    const gD = viewingConditions.rgbD[1] * gC;\n    const bD = viewingConditions.rgbD[2] * bC;\n\n    const rAF = Math.pow((viewingConditions.fl * Math.abs(rD)) / 100.0, 0.42);\n    const gAF = Math.pow((viewingConditions.fl * Math.abs(gD)) / 100.0, 0.42);\n    const bAF = Math.pow((viewingConditions.fl * Math.abs(bD)) / 100.0, 0.42);\n\n    const rA = (math.signum(rD) * 400.0 * rAF) / (rAF + 27.13);\n    const gA = (math.signum(gD) * 400.0 * gAF) / (gAF + 27.13);\n    const bA = (math.signum(bD) * 400.0 * bAF) / (bAF + 27.13);\n\n    const a = (11.0 * rA + -12.0 * gA + bA) / 11.0;\n    const b = (rA + gA - 2.0 * bA) / 9.0;\n    const u = (20.0 * rA + 20.0 * gA + 21.0 * bA) / 20.0;\n    const p2 = (40.0 * rA + 20.0 * gA + bA) / 20.0;\n    const atan2 = Math.atan2(b, a);\n    const atanDegrees = (atan2 * 180.0) / Math.PI;\n    const hue = atanDegrees < 0 ? atanDegrees + 360.0 :\n        atanDegrees >= 360      ? atanDegrees - 360.0 :\n                                  atanDegrees;\n    const hueRadians = (hue * Math.PI) / 180.0;\n\n    const ac = p2 * viewingConditions.nbb;\n    const j = 100.0 *\n        Math.pow(\n            ac / viewingConditions.aw,\n            viewingConditions.c * viewingConditions.z);\n    const q = (4.0 / viewingConditions.c) * Math.sqrt(j / 100.0) *\n        (viewingConditions.aw + 4.0) * viewingConditions.fLRoot;\n    const huePrime = hue < 20.14 ? hue + 360 : hue;\n    const eHue = 0.25 * (Math.cos((huePrime * Math.PI) / 180.0 + 2.0) + 3.8);\n    const p1 =\n        (50000.0 / 13.0) * eHue * viewingConditions.nc * viewingConditions.ncb;\n    const t = (p1 * Math.sqrt(a * a + b * b)) / (u + 0.305);\n    const alpha = Math.pow(t, 0.9) *\n        Math.pow(1.64 - Math.pow(0.29, viewingConditions.n), 0.73);\n    const c = alpha * Math.sqrt(j / 100.0);\n    const m = c * viewingConditions.fLRoot;\n    const s = 50.0 *\n        Math.sqrt((alpha * viewingConditions.c) / (viewingConditions.aw + 4.0));\n    const jstar = ((1.0 + 100.0 * 0.007) * j) / (1.0 + 0.007 * j);\n    const mstar = (1.0 / 0.0228) * Math.log(1.0 + 0.0228 * m);\n    const astar = mstar * Math.cos(hueRadians);\n    const bstar = mstar * Math.sin(hueRadians);\n\n    return new Cam16(hue, c, j, q, m, s, jstar, astar, bstar);\n  }\n\n  /**\n   * @param j CAM16 lightness\n   * @param c CAM16 chroma\n   * @param h CAM16 hue\n   */\n  static fromJch(j: number, c: number, h: number): Cam16 {\n    return Cam16.fromJchInViewingConditions(j, c, h, ViewingConditions.DEFAULT);\n  }\n\n  /**\n   * @param j CAM16 lightness\n   * @param c CAM16 chroma\n   * @param h CAM16 hue\n   * @param viewingConditions Information about the environment where the color\n   *     was observed.\n   */\n  static fromJchInViewingConditions(\n      j: number, c: number, h: number,\n      viewingConditions: ViewingConditions): Cam16 {\n    const q = (4.0 / viewingConditions.c) * Math.sqrt(j / 100.0) *\n        (viewingConditions.aw + 4.0) * viewingConditions.fLRoot;\n    const m = c * viewingConditions.fLRoot;\n    const alpha = c / Math.sqrt(j / 100.0);\n    const s = 50.0 *\n        Math.sqrt((alpha * viewingConditions.c) / (viewingConditions.aw + 4.0));\n    const hueRadians = (h * Math.PI) / 180.0;\n    const jstar = ((1.0 + 100.0 * 0.007) * j) / (1.0 + 0.007 * j);\n    const mstar = (1.0 / 0.0228) * Math.log(1.0 + 0.0228 * m);\n    const astar = mstar * Math.cos(hueRadians);\n    const bstar = mstar * Math.sin(hueRadians);\n    return new Cam16(h, c, j, q, m, s, jstar, astar, bstar);\n  }\n\n  /**\n   * @param jstar CAM16-UCS lightness.\n   * @param astar CAM16-UCS a dimension. Like a* in L*a*b*, it is a Cartesian\n   *     coordinate on the Y axis.\n   * @param bstar CAM16-UCS b dimension. Like a* in L*a*b*, it is a Cartesian\n   *     coordinate on the X axis.\n   */\n  static fromUcs(jstar: number, astar: number, bstar: number): Cam16 {\n    return Cam16.fromUcsInViewingConditions(\n        jstar, astar, bstar, ViewingConditions.DEFAULT);\n  }\n\n  /**\n   * @param jstar CAM16-UCS lightness.\n   * @param astar CAM16-UCS a dimension. Like a* in L*a*b*, it is a Cartesian\n   *     coordinate on the Y axis.\n   * @param bstar CAM16-UCS b dimension. Like a* in L*a*b*, it is a Cartesian\n   *     coordinate on the X axis.\n   * @param viewingConditions Information about the environment where the color\n   *     was observed.\n   */\n  static fromUcsInViewingConditions(\n      jstar: number, astar: number, bstar: number,\n      viewingConditions: ViewingConditions): Cam16 {\n    const a = astar;\n    const b = bstar;\n    const m = Math.sqrt(a * a + b * b);\n    const M = (Math.exp(m * 0.0228) - 1.0) / 0.0228;\n    const c = M / viewingConditions.fLRoot;\n    let h = Math.atan2(b, a) * (180.0 / Math.PI);\n    if (h < 0.0) {\n      h += 360.0;\n    }\n    const j = jstar / (1 - (jstar - 100) * 0.007);\n    return Cam16.fromJchInViewingConditions(j, c, h, viewingConditions);\n  }\n\n  /**\n   *  @return ARGB representation of color, assuming the color was viewed in\n   *     default viewing conditions, which are near-identical to the default\n   *     viewing conditions for sRGB.\n   */\n  toInt(): number {\n    return this.viewed(ViewingConditions.DEFAULT);\n  }\n\n  /**\n   * @param viewingConditions Information about the environment where the color\n   *     will be viewed.\n   * @return ARGB representation of color\n   */\n  viewed(viewingConditions: ViewingConditions): number {\n    const alpha = this.chroma === 0.0 || this.j === 0.0 ?\n        0.0 :\n        this.chroma / Math.sqrt(this.j / 100.0);\n\n    const t = Math.pow(\n        alpha / Math.pow(1.64 - Math.pow(0.29, viewingConditions.n), 0.73),\n        1.0 / 0.9);\n    const hRad = (this.hue * Math.PI) / 180.0;\n\n    const eHue = 0.25 * (Math.cos(hRad + 2.0) + 3.8);\n    const ac = viewingConditions.aw *\n        Math.pow(\n            this.j / 100.0, 1.0 / viewingConditions.c / viewingConditions.z);\n    const p1 =\n        eHue * (50000.0 / 13.0) * viewingConditions.nc * viewingConditions.ncb;\n    const p2 = ac / viewingConditions.nbb;\n\n    const hSin = Math.sin(hRad);\n    const hCos = Math.cos(hRad);\n\n    const gamma = (23.0 * (p2 + 0.305) * t) /\n        (23.0 * p1 + 11.0 * t * hCos + 108.0 * t * hSin);\n    const a = gamma * hCos;\n    const b = gamma * hSin;\n    const rA = (460.0 * p2 + 451.0 * a + 288.0 * b) / 1403.0;\n    const gA = (460.0 * p2 - 891.0 * a - 261.0 * b) / 1403.0;\n    const bA = (460.0 * p2 - 220.0 * a - 6300.0 * b) / 1403.0;\n\n    const rCBase = Math.max(0, (27.13 * Math.abs(rA)) / (400.0 - Math.abs(rA)));\n    const rC = math.signum(rA) * (100.0 / viewingConditions.fl) *\n        Math.pow(rCBase, 1.0 / 0.42);\n    const gCBase = Math.max(0, (27.13 * Math.abs(gA)) / (400.0 - Math.abs(gA)));\n    const gC = math.signum(gA) * (100.0 / viewingConditions.fl) *\n        Math.pow(gCBase, 1.0 / 0.42);\n    const bCBase = Math.max(0, (27.13 * Math.abs(bA)) / (400.0 - Math.abs(bA)));\n    const bC = math.signum(bA) * (100.0 / viewingConditions.fl) *\n        Math.pow(bCBase, 1.0 / 0.42);\n    const rF = rC / viewingConditions.rgbD[0];\n    const gF = gC / viewingConditions.rgbD[1];\n    const bF = bC / viewingConditions.rgbD[2];\n\n    const x = 1.86206786 * rF - 1.01125463 * gF + 0.14918677 * bF;\n    const y = 0.38752654 * rF + 0.62144744 * gF - 0.00897398 * bF;\n    const z = -0.01584150 * rF - 0.03412294 * gF + 1.04996444 * bF;\n\n    const argb = utils.argbFromXyz(x, y, z);\n    return argb;\n  }\n\n  /// Given color expressed in XYZ and viewed in [viewingConditions], convert to\n  /// CAM16.\n  static fromXyzInViewingConditions(\n      x: number, y: number, z: number,\n      viewingConditions: ViewingConditions): Cam16 {\n    // Transform XYZ to 'cone'/'rgb' responses\n\n    const rC = 0.401288 * x + 0.650173 * y - 0.051461 * z;\n    const gC = -0.250268 * x + 1.204414 * y + 0.045854 * z;\n    const bC = -0.002079 * x + 0.048952 * y + 0.953127 * z;\n\n    // Discount illuminant\n    const rD = viewingConditions.rgbD[0] * rC;\n    const gD = viewingConditions.rgbD[1] * gC;\n    const bD = viewingConditions.rgbD[2] * bC;\n\n    // chromatic adaptation\n    const rAF = Math.pow(viewingConditions.fl * Math.abs(rD) / 100.0, 0.42);\n    const gAF = Math.pow(viewingConditions.fl * Math.abs(gD) / 100.0, 0.42);\n    const bAF = Math.pow(viewingConditions.fl * Math.abs(bD) / 100.0, 0.42);\n    const rA = math.signum(rD) * 400.0 * rAF / (rAF + 27.13);\n    const gA = math.signum(gD) * 400.0 * gAF / (gAF + 27.13);\n    const bA = math.signum(bD) * 400.0 * bAF / (bAF + 27.13);\n\n    // redness-greenness\n    const a = (11.0 * rA + -12.0 * gA + bA) / 11.0;\n    // yellowness-blueness\n    const b = (rA + gA - 2.0 * bA) / 9.0;\n\n    // auxiliary components\n    const u = (20.0 * rA + 20.0 * gA + 21.0 * bA) / 20.0;\n    const p2 = (40.0 * rA + 20.0 * gA + bA) / 20.0;\n\n    // hue\n    const atan2 = Math.atan2(b, a);\n    const atanDegrees = atan2 * 180.0 / Math.PI;\n    const hue = atanDegrees < 0 ? atanDegrees + 360.0 :\n        atanDegrees >= 360      ? atanDegrees - 360 :\n                                  atanDegrees;\n    const hueRadians = hue * Math.PI / 180.0;\n\n    // achromatic response to color\n    const ac = p2 * viewingConditions.nbb;\n\n    // CAM16 lightness and brightness\n    const J = 100.0 *\n        Math.pow(\n            ac / viewingConditions.aw,\n            viewingConditions.c * viewingConditions.z);\n    const Q = (4.0 / viewingConditions.c) * Math.sqrt(J / 100.0) *\n        (viewingConditions.aw + 4.0) * (viewingConditions.fLRoot);\n\n    const huePrime = (hue < 20.14) ? hue + 360 : hue;\n    const eHue =\n        (1.0 / 4.0) * (Math.cos(huePrime * Math.PI / 180.0 + 2.0) + 3.8);\n    const p1 =\n        50000.0 / 13.0 * eHue * viewingConditions.nc * viewingConditions.ncb;\n    const t = p1 * Math.sqrt(a * a + b * b) / (u + 0.305);\n    const alpha = Math.pow(t, 0.9) *\n        Math.pow(1.64 - Math.pow(0.29, viewingConditions.n), 0.73);\n    // CAM16 chroma, colorfulness, chroma\n    const C = alpha * Math.sqrt(J / 100.0);\n    const M = C * viewingConditions.fLRoot;\n    const s = 50.0 *\n        Math.sqrt((alpha * viewingConditions.c) / (viewingConditions.aw + 4.0));\n\n    // CAM16-UCS components\n    const jstar = (1.0 + 100.0 * 0.007) * J / (1.0 + 0.007 * J);\n    const mstar = Math.log(1.0 + 0.0228 * M) / 0.0228;\n    const astar = mstar * Math.cos(hueRadians);\n    const bstar = mstar * Math.sin(hueRadians);\n    return new Cam16(hue, C, J, Q, M, s, jstar, astar, bstar);\n  }\n\n  /// XYZ representation of CAM16 seen in [viewingConditions].\n  xyzInViewingConditions(viewingConditions: ViewingConditions): number[] {\n    const alpha = (this.chroma === 0.0 || this.j === 0.0) ?\n        0.0 :\n        this.chroma / Math.sqrt(this.j / 100.0);\n\n    const t = Math.pow(\n        alpha / Math.pow(1.64 - Math.pow(0.29, viewingConditions.n), 0.73),\n        1.0 / 0.9);\n    const hRad = this.hue * Math.PI / 180.0;\n\n    const eHue = 0.25 * (Math.cos(hRad + 2.0) + 3.8);\n    const ac = viewingConditions.aw *\n        Math.pow(\n            this.j / 100.0, 1.0 / viewingConditions.c / viewingConditions.z);\n    const p1 =\n        eHue * (50000.0 / 13.0) * viewingConditions.nc * viewingConditions.ncb;\n\n    const p2 = (ac / viewingConditions.nbb);\n\n    const hSin = Math.sin(hRad);\n    const hCos = Math.cos(hRad);\n\n    const gamma = 23.0 * (p2 + 0.305) * t /\n        (23.0 * p1 + 11 * t * hCos + 108.0 * t * hSin);\n    const a = gamma * hCos;\n    const b = gamma * hSin;\n    const rA = (460.0 * p2 + 451.0 * a + 288.0 * b) / 1403.0;\n    const gA = (460.0 * p2 - 891.0 * a - 261.0 * b) / 1403.0;\n    const bA = (460.0 * p2 - 220.0 * a - 6300.0 * b) / 1403.0;\n\n    const rCBase = Math.max(0, (27.13 * Math.abs(rA)) / (400.0 - Math.abs(rA)));\n    const rC = math.signum(rA) * (100.0 / viewingConditions.fl) *\n        Math.pow(rCBase, 1.0 / 0.42);\n    const gCBase = Math.max(0, (27.13 * Math.abs(gA)) / (400.0 - Math.abs(gA)));\n    const gC = math.signum(gA) * (100.0 / viewingConditions.fl) *\n        Math.pow(gCBase, 1.0 / 0.42);\n    const bCBase = Math.max(0, (27.13 * Math.abs(bA)) / (400.0 - Math.abs(bA)));\n    const bC = math.signum(bA) * (100.0 / viewingConditions.fl) *\n        Math.pow(bCBase, 1.0 / 0.42);\n    const rF = rC / viewingConditions.rgbD[0];\n    const gF = gC / viewingConditions.rgbD[1];\n    const bF = bC / viewingConditions.rgbD[2];\n\n    const x = 1.86206786 * rF - 1.01125463 * gF + 0.14918677 * bF;\n    const y = 0.38752654 * rF + 0.62144744 * gF - 0.00897398 * bF;\n    const z = -0.01584150 * rF - 0.03412294 * gF + 1.04996444 * bF;\n\n    return [x, y, z];\n  }\n}\n", "/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// This file is automatically generated. Do not modify it.\n\nimport * as colorUtils from '../utils/color_utils.js';\nimport * as mathUtils from '../utils/math_utils.js';\n\nimport {Cam16} from './cam16.js';\nimport {ViewingConditions} from './viewing_conditions.js';\n\n\n// material_color_utilities is designed to have a consistent API across\n// platforms and modular components that can be moved around easily. Using a\n// class as a namespace facilitates this.\n//\n// tslint:disable:class-as-namespace\n/**\n * A class that solves the HCT equation.\n */\nexport class HctSolver {\n  static SCALED_DISCOUNT_FROM_LINRGB = [\n    [\n      0.001200833568784504,\n      0.002389694492170889,\n      0.0002795742885861124,\n    ],\n    [\n      0.0005891086651375999,\n      0.0029785502573438758,\n      0.0003270666104008398,\n    ],\n    [\n      0.00010146692491640572,\n      0.0005364214359186694,\n      0.0032979401770712076,\n    ],\n  ];\n\n  static LINRGB_FROM_SCALED_DISCOUNT = [\n    [\n      1373.2198709594231,\n      -1100.4251190754821,\n      -7.278681089101213,\n    ],\n    [\n      -271.815969077903,\n      559.6580465940733,\n      -32.46047482791194,\n    ],\n    [\n      1.9622899599665666,\n      -57.173814538844006,\n      308.7233197812385,\n    ],\n  ];\n\n  static Y_FROM_LINRGB = [0.2126, 0.7152, 0.0722];\n\n  static CRITICAL_PLANES = [\n    0.015176349177441876, 0.045529047532325624, 0.07588174588720938,\n    0.10623444424209313,  0.13658714259697685,  0.16693984095186062,\n    0.19729253930674434,  0.2276452376616281,   0.2579979360165119,\n    0.28835063437139563,  0.3188300904430532,   0.350925934958123,\n    0.3848314933096426,   0.42057480301049466,  0.458183274052838,\n    0.4976837250274023,   0.5391024159806381,   0.5824650784040898,\n    0.6277969426914107,   0.6751227633498623,   0.7244668422128921,\n    0.775853049866786,    0.829304845476233,    0.8848452951698498,\n    0.942497089126609,    1.0022825574869039,   1.0642236851973577,\n    1.1283421258858297,   1.1946592148522128,   1.2631959812511864,\n    1.3339731595349034,   1.407011200216447,    1.4823302800086415,\n    1.5599503113873272,   1.6398909516233677,   1.7221716113234105,\n    1.8068114625156377,   1.8938294463134073,   1.9832442801866852,\n    2.075074464868551,    2.1693382909216234,   2.2660538449872063,\n    2.36523901573795,     2.4669114995532007,   2.5710888059345764,\n    2.6777882626779785,   2.7870270208169257,   2.898822059350997,\n    3.0131901897720907,   3.1301480604002863,   3.2497121605402226,\n    3.3718988244681087,   3.4967242352587946,   3.624204428461639,\n    3.754355295633311,    3.887192587735158,    4.022731918402185,\n    4.160988767090289,    4.301978482107941,    4.445716283538092,\n    4.592217266055746,    4.741496401646282,    4.893568542229298,\n    5.048448422192488,    5.20615066083972,     5.3666897647573375,\n    5.5300801301023865,   5.696336044816294,    5.865471690767354,\n    6.037501145825082,    6.212438385869475,    6.390297286737924,\n    6.571091626112461,    6.7548350853498045,   6.941541251256611,\n    7.131223617812143,    7.323895587840543,    7.5195704746346665,\n    7.7182615035334345,   7.919981813454504,    8.124744458384042,\n    8.332562408825165,    8.543448553206703,    8.757415699253682,\n    8.974476575321063,    9.194643831691977,    9.417930041841839,\n    9.644347703669503,    9.873909240696694,    10.106627003236781,\n    10.342513269534024,   10.58158024687427,    10.8238400726681,\n    11.069304815507364,   11.317986476196008,   11.569896988756009,\n    11.825048221409341,   12.083451977536606,   12.345119996613247,\n    12.610063955123938,   12.878295467455942,   13.149826086772048,\n    13.42466730586372,    13.702830557985108,   13.984327217668513,\n    14.269168601521828,   14.55736596900856,    14.848930523210871,\n    15.143873411576273,   15.44220572664832,    15.743938506781891,\n    16.04908273684337,    16.35764934889634,    16.66964922287304,\n    16.985093187232053,   17.30399201960269,    17.62635644741625,\n    17.95219714852476,    18.281524751807332,   18.614349837764564,\n    18.95068293910138,    19.290534541298456,   19.633915083172692,\n    19.98083495742689,    20.331304511189067,   20.685334046541502,\n    21.042933821039977,   21.404114048223256,   21.76888489811322,\n    22.137256497705877,   22.50923893145328,    22.884842241736916,\n    23.264076429332462,   23.6469514538663,     24.033477234264016,\n    24.42366364919083,    24.817520537484558,   25.21505769858089,\n    25.61628489293138,    26.021211842414342,   26.429848230738664,\n    26.842203703840827,   27.258287870275353,   27.678110301598522,\n    28.10168053274597,    28.529008062403893,   28.96010235337422,\n    29.39497283293396,    29.83362889318845,    30.276079891419332,\n    30.722335150426627,   31.172403958865512,   31.62629557157785,\n    32.08401920991837,    32.54558406207592,    33.010999283389665,\n    33.4802739966603,     33.953417292456834,   34.430438229418264,\n    34.911345834551085,   35.39614910352207,    35.88485700094671,\n    36.37747846067349,    36.87402238606382,    37.37449765026789,\n    37.87891309649659,    38.38727753828926,    38.89959975977785,\n    39.41588851594697,    39.93615253289054,    40.460400508064545,\n    40.98864111053629,    41.520882981230194,   42.05713473317016,\n    42.597404951718396,   43.141702194811224,   43.6900349931913,\n    44.24241185063697,    44.798841244188324,   45.35933162437017,\n    45.92389141541209,    46.49252901546552,    47.065252796817916,\n    47.64207110610409,    48.22299226451468,    48.808024568002054,\n    49.3971762874833,     49.9904556690408,     50.587870934119984,\n    51.189430279724725,   51.79514187861014,    52.40501387947288,\n    53.0190544071392,     53.637271562750364,   54.259673423945976,\n    54.88626804504493,    55.517063457223934,   56.15206766869424,\n    56.79128866487574,    57.43473440856916,    58.08241284012621,\n    58.734331877617365,   59.39049941699807,    60.05092333227251,\n    60.715611475655585,   61.38457167773311,    62.057811747619894,\n    62.7353394731159,     63.417162620860914,   64.10328893648692,\n    64.79372614476921,    65.48848194977529,    66.18756403501224,\n    66.89098006357258,    67.59873767827808,    68.31084450182222,\n    69.02730813691093,    69.74813616640164,    70.47333615344107,\n    71.20291564160104,    71.93688215501312,    72.67524319850172,\n    73.41800625771542,    74.16517879925733,    74.9167682708136,\n    75.67278210128072,    76.43322770089146,    77.1981124613393,\n    77.96744375590167,    78.74122893956174,    79.51947534912904,\n    80.30219030335869,    81.08938110306934,    81.88105503125999,\n    82.67721935322541,    83.4778813166706,     84.28304815182372,\n    85.09272707154808,    85.90692527145302,    86.72564993000343,\n    87.54890820862819,    88.3767072518277,     89.2090541872801,\n    90.04595612594655,    90.88742016217518,    91.73345337380438,\n    92.58406282226491,    93.43925555268066,    94.29903859396902,\n    95.16341895893969,    96.03240364439274,    96.9059996312159,\n    97.78421388448044,    98.6670533535366,     99.55452497210776,\n  ];\n\n  /**\n   * Sanitizes a small enough angle in radians.\n   *\n   * @param angle An angle in radians; must not deviate too much\n   * from 0.\n   * @return A coterminal angle between 0 and 2pi.\n   */\n  private static sanitizeRadians(angle: number): number {\n    return (angle + Math.PI * 8) % (Math.PI * 2);\n  }\n\n  /**\n   * Delinearizes an RGB component, returning a floating-point\n   * number.\n   *\n   * @param rgbComponent 0.0 <= rgb_component <= 100.0, represents\n   * linear R/G/B channel\n   * @return 0.0 <= output <= 255.0, color channel converted to\n   * regular RGB space\n   */\n  private static trueDelinearized(rgbComponent: number): number {\n    const normalized = rgbComponent / 100.0;\n    let delinearized = 0.0;\n    if (normalized <= 0.0031308) {\n      delinearized = normalized * 12.92;\n    } else {\n      delinearized = 1.055 * Math.pow(normalized, 1.0 / 2.4) - 0.055;\n    }\n    return delinearized * 255.0;\n  }\n\n  private static chromaticAdaptation(component: number): number {\n    const af = Math.pow(Math.abs(component), 0.42);\n    return mathUtils.signum(component) * 400.0 * af / (af + 27.13);\n  }\n\n  /**\n   * Returns the hue of a linear RGB color in CAM16.\n   *\n   * @param linrgb The linear RGB coordinates of a color.\n   * @return The hue of the color in CAM16, in radians.\n   */\n  private static hueOf(linrgb: number[]): number {\n    const scaledDiscount =\n        mathUtils.matrixMultiply(linrgb, HctSolver.SCALED_DISCOUNT_FROM_LINRGB);\n    const rA = HctSolver.chromaticAdaptation(scaledDiscount[0]);\n    const gA = HctSolver.chromaticAdaptation(scaledDiscount[1]);\n    const bA = HctSolver.chromaticAdaptation(scaledDiscount[2]);\n    // redness-greenness\n    const a = (11.0 * rA + -12.0 * gA + bA) / 11.0;\n    // yellowness-blueness\n    const b = (rA + gA - 2.0 * bA) / 9.0;\n    return Math.atan2(b, a);\n  }\n\n  private static areInCyclicOrder(a: number, b: number, c: number): boolean {\n    const deltaAB = HctSolver.sanitizeRadians(b - a);\n    const deltaAC = HctSolver.sanitizeRadians(c - a);\n    return deltaAB < deltaAC;\n  }\n\n  /**\n   * Solves the lerp equation.\n   *\n   * @param source The starting number.\n   * @param mid The number in the middle.\n   * @param target The ending number.\n   * @return A number t such that lerp(source, target, t) = mid.\n   */\n  private static intercept(source: number, mid: number, target: number):\n      number {\n    return (mid - source) / (target - source);\n  }\n\n  private static lerpPoint(source: number[], t: number, target: number[]):\n      number[] {\n    return [\n      source[0] + (target[0] - source[0]) * t,\n      source[1] + (target[1] - source[1]) * t,\n      source[2] + (target[2] - source[2]) * t,\n    ];\n  }\n\n  /**\n   * Intersects a segment with a plane.\n   *\n   * @param source The coordinates of point A.\n   * @param coordinate The R-, G-, or B-coordinate of the plane.\n   * @param target The coordinates of point B.\n   * @param axis The axis the plane is perpendicular with. (0: R, 1:\n   * G, 2: B)\n   * @return The intersection point of the segment AB with the plane\n   * R=coordinate, G=coordinate, or B=coordinate\n   */\n  private static setCoordinate(\n      source: number[],\n      coordinate: number,\n      target: number[],\n      axis: number,\n      ): number[] {\n    const t = HctSolver.intercept(source[axis], coordinate, target[axis]);\n    return HctSolver.lerpPoint(source, t, target);\n  }\n\n  private static isBounded(x: number): boolean {\n    return 0.0 <= x && x <= 100.0;\n  }\n\n  /**\n   * Returns the nth possible vertex of the polygonal intersection.\n   *\n   * @param y The Y value of the plane.\n   * @param n The zero-based index of the point. 0 <= n <= 11.\n   * @return The nth possible vertex of the polygonal intersection\n   * of the y plane and the RGB cube, in linear RGB coordinates, if\n   * it exists. If this possible vertex lies outside of the cube,\n   * [-1.0, -1.0, -1.0] is returned.\n   */\n  private static nthVertex(y: number, n: number): number[] {\n    const kR = HctSolver.Y_FROM_LINRGB[0];\n    const kG = HctSolver.Y_FROM_LINRGB[1];\n    const kB = HctSolver.Y_FROM_LINRGB[2];\n    const coordA = n % 4 <= 1 ? 0.0 : 100.0;\n    const coordB = n % 2 === 0 ? 0.0 : 100.0;\n    if (n < 4) {\n      const g = coordA;\n      const b = coordB;\n      const r = (y - g * kG - b * kB) / kR;\n      if (HctSolver.isBounded(r)) {\n        return [r, g, b];\n      } else {\n        return [-1.0, -1.0, -1.0];\n      }\n    } else if (n < 8) {\n      const b = coordA;\n      const r = coordB;\n      const g = (y - r * kR - b * kB) / kG;\n      if (HctSolver.isBounded(g)) {\n        return [r, g, b];\n      } else {\n        return [-1.0, -1.0, -1.0];\n      }\n    } else {\n      const r = coordA;\n      const g = coordB;\n      const b = (y - r * kR - g * kG) / kB;\n      if (HctSolver.isBounded(b)) {\n        return [r, g, b];\n      } else {\n        return [-1.0, -1.0, -1.0];\n      }\n    }\n  }\n\n  /**\n   * Finds the segment containing the desired color.\n   *\n   * @param y The Y value of the color.\n   * @param targetHue The hue of the color.\n   * @return A list of two sets of linear RGB coordinates, each\n   * corresponding to an endpoint of the segment containing the\n   * desired color.\n   */\n  private static bisectToSegment(y: number, targetHue: number): number[][] {\n    let left = [-1.0, -1.0, -1.0];\n    let right = left;\n    let leftHue = 0.0;\n    let rightHue = 0.0;\n    let initialized = false;\n    let uncut = true;\n    for (let n = 0; n < 12; n++) {\n      const mid = HctSolver.nthVertex(y, n);\n      if (mid[0] < 0) {\n        continue;\n      }\n      const midHue = HctSolver.hueOf(mid);\n      if (!initialized) {\n        left = mid;\n        right = mid;\n        leftHue = midHue;\n        rightHue = midHue;\n        initialized = true;\n        continue;\n      }\n      if (uncut || HctSolver.areInCyclicOrder(leftHue, midHue, rightHue)) {\n        uncut = false;\n        if (HctSolver.areInCyclicOrder(leftHue, targetHue, midHue)) {\n          right = mid;\n          rightHue = midHue;\n        } else {\n          left = mid;\n          leftHue = midHue;\n        }\n      }\n    }\n    return [left, right];\n  }\n\n  private static midpoint(a: number[], b: number[]): number[] {\n    return [\n      (a[0] + b[0]) / 2,\n      (a[1] + b[1]) / 2,\n      (a[2] + b[2]) / 2,\n    ];\n  }\n\n  private static criticalPlaneBelow(x: number): number {\n    return Math.floor(x - 0.5);\n  }\n\n  private static criticalPlaneAbove(x: number): number {\n    return Math.ceil(x - 0.5);\n  }\n\n  /**\n   * Finds a color with the given Y and hue on the boundary of the\n   * cube.\n   *\n   * @param y The Y value of the color.\n   * @param targetHue The hue of the color.\n   * @return The desired color, in linear RGB coordinates.\n   */\n  private static bisectToLimit(y: number, targetHue: number): number[] {\n    const segment = HctSolver.bisectToSegment(y, targetHue);\n    let left = segment[0];\n    let leftHue = HctSolver.hueOf(left);\n    let right = segment[1];\n    for (let axis = 0; axis < 3; axis++) {\n      if (left[axis] !== right[axis]) {\n        let lPlane = -1;\n        let rPlane = 255;\n        if (left[axis] < right[axis]) {\n          lPlane = HctSolver.criticalPlaneBelow(\n              HctSolver.trueDelinearized(left[axis]));\n          rPlane = HctSolver.criticalPlaneAbove(\n              HctSolver.trueDelinearized(right[axis]));\n        } else {\n          lPlane = HctSolver.criticalPlaneAbove(\n              HctSolver.trueDelinearized(left[axis]));\n          rPlane = HctSolver.criticalPlaneBelow(\n              HctSolver.trueDelinearized(right[axis]));\n        }\n        for (let i = 0; i < 8; i++) {\n          if (Math.abs(rPlane - lPlane) <= 1) {\n            break;\n          } else {\n            const mPlane = Math.floor((lPlane + rPlane) / 2.0);\n            const midPlaneCoordinate = HctSolver.CRITICAL_PLANES[mPlane];\n            const mid =\n                HctSolver.setCoordinate(left, midPlaneCoordinate, right, axis);\n            const midHue = HctSolver.hueOf(mid);\n            if (HctSolver.areInCyclicOrder(leftHue, targetHue, midHue)) {\n              right = mid;\n              rPlane = mPlane;\n            } else {\n              left = mid;\n              leftHue = midHue;\n              lPlane = mPlane;\n            }\n          }\n        }\n      }\n    }\n    return HctSolver.midpoint(left, right);\n  }\n\n  private static inverseChromaticAdaptation(adapted: number): number {\n    const adaptedAbs = Math.abs(adapted);\n    const base = Math.max(0, 27.13 * adaptedAbs / (400.0 - adaptedAbs));\n    return mathUtils.signum(adapted) * Math.pow(base, 1.0 / 0.42);\n  }\n\n  /**\n   * Finds a color with the given hue, chroma, and Y.\n   *\n   * @param hueRadians The desired hue in radians.\n   * @param chroma The desired chroma.\n   * @param y The desired Y.\n   * @return The desired color as a hexadecimal integer, if found; 0\n   * otherwise.\n   */\n  private static findResultByJ(hueRadians: number, chroma: number, y: number):\n      number {\n    // Initial estimate of j.\n    let j = Math.sqrt(y) * 11.0;\n    // ===========================================================\n    // Operations inlined from Cam16 to avoid repeated calculation\n    // ===========================================================\n    const viewingConditions = ViewingConditions.DEFAULT;\n    const tInnerCoeff =\n        1 / Math.pow(1.64 - Math.pow(0.29, viewingConditions.n), 0.73);\n    const eHue = 0.25 * (Math.cos(hueRadians + 2.0) + 3.8);\n    const p1 =\n        eHue * (50000.0 / 13.0) * viewingConditions.nc * viewingConditions.ncb;\n    const hSin = Math.sin(hueRadians);\n    const hCos = Math.cos(hueRadians);\n    for (let iterationRound = 0; iterationRound < 5; iterationRound++) {\n      // ===========================================================\n      // Operations inlined from Cam16 to avoid repeated calculation\n      // ===========================================================\n      const jNormalized = j / 100.0;\n      const alpha =\n          chroma === 0.0 || j === 0.0 ? 0.0 : chroma / Math.sqrt(jNormalized);\n      const t = Math.pow(alpha * tInnerCoeff, 1.0 / 0.9);\n      const ac = viewingConditions.aw *\n          Math.pow(\n              jNormalized,\n              1.0 / viewingConditions.c / viewingConditions.z,\n          );\n      const p2 = ac / viewingConditions.nbb;\n      const gamma = 23.0 * (p2 + 0.305) * t /\n          (23.0 * p1 + 11 * t * hCos + 108.0 * t * hSin);\n      const a = gamma * hCos;\n      const b = gamma * hSin;\n      const rA = (460.0 * p2 + 451.0 * a + 288.0 * b) / 1403.0;\n      const gA = (460.0 * p2 - 891.0 * a - 261.0 * b) / 1403.0;\n      const bA = (460.0 * p2 - 220.0 * a - 6300.0 * b) / 1403.0;\n      const rCScaled = HctSolver.inverseChromaticAdaptation(rA);\n      const gCScaled = HctSolver.inverseChromaticAdaptation(gA);\n      const bCScaled = HctSolver.inverseChromaticAdaptation(bA);\n      const linrgb = mathUtils.matrixMultiply(\n          [rCScaled, gCScaled, bCScaled],\n          HctSolver.LINRGB_FROM_SCALED_DISCOUNT,\n      );\n      // ===========================================================\n      // Operations inlined from Cam16 to avoid repeated calculation\n      // ===========================================================\n      if (linrgb[0] < 0 || linrgb[1] < 0 || linrgb[2] < 0) {\n        return 0;\n      }\n      const kR = HctSolver.Y_FROM_LINRGB[0];\n      const kG = HctSolver.Y_FROM_LINRGB[1];\n      const kB = HctSolver.Y_FROM_LINRGB[2];\n      const fnj = kR * linrgb[0] + kG * linrgb[1] + kB * linrgb[2];\n      if (fnj <= 0) {\n        return 0;\n      }\n      if (iterationRound === 4 || Math.abs(fnj - y) < 0.002) {\n        if (linrgb[0] > 100.01 || linrgb[1] > 100.01 || linrgb[2] > 100.01) {\n          return 0;\n        }\n        return colorUtils.argbFromLinrgb(linrgb);\n      }\n      // Iterates with Newton method,\n      // Using 2 * fn(j) / j as the approximation of fn'(j)\n      j = j - (fnj - y) * j / (2 * fnj);\n    }\n    return 0;\n  }\n\n  /**\n   * Finds an sRGB color with the given hue, chroma, and L*, if\n   * possible.\n   *\n   * @param hueDegrees The desired hue, in degrees.\n   * @param chroma The desired chroma.\n   * @param lstar The desired L*.\n   * @return A hexadecimal representing the sRGB color. The color\n   * has sufficiently close hue, chroma, and L* to the desired\n   * values, if possible; otherwise, the hue and L* will be\n   * sufficiently close, and chroma will be maximized.\n   */\n  static solveToInt(hueDegrees: number, chroma: number, lstar: number): number {\n    if (chroma < 0.0001 || lstar < 0.0001 || lstar > 99.9999) {\n      return colorUtils.argbFromLstar(lstar);\n    }\n    hueDegrees = mathUtils.sanitizeDegreesDouble(hueDegrees);\n    const hueRadians = hueDegrees / 180 * Math.PI;\n    const y = colorUtils.yFromLstar(lstar);\n    const exactAnswer = HctSolver.findResultByJ(hueRadians, chroma, y);\n    if (exactAnswer !== 0) {\n      return exactAnswer;\n    }\n    const linrgb = HctSolver.bisectToLimit(y, hueRadians);\n    return colorUtils.argbFromLinrgb(linrgb);\n  }\n\n  /**\n   * Finds an sRGB color with the given hue, chroma, and L*, if\n   * possible.\n   *\n   * @param hueDegrees The desired hue, in degrees.\n   * @param chroma The desired chroma.\n   * @param lstar The desired L*.\n   * @return An CAM16 object representing the sRGB color. The color\n   * has sufficiently close hue, chroma, and L* to the desired\n   * values, if possible; otherwise, the hue and L* will be\n   * sufficiently close, and chroma will be maximized.\n   */\n  static solveToCam(hueDegrees: number, chroma: number, lstar: number): Cam16 {\n    return Cam16.fromInt(HctSolver.solveToInt(hueDegrees, chroma, lstar));\n  }\n}\n", "/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A color system built using CAM16 hue and chroma, and L* from\n * L*a*b*.\n *\n * Using L* creates a link between the color system, contrast, and thus\n * accessibility. Contrast ratio depends on relative luminance, or Y in the XYZ\n * color space. L*, or perceptual luminance can be calculated from Y.\n *\n * Unlike Y, L* is linear to human perception, allowing trivial creation of\n * accurate color tones.\n *\n * Unlike contrast ratio, measuring contrast in L* is linear, and simple to\n * calculate. A difference of 40 in HCT tone guarantees a contrast ratio >= 3.0,\n * and a difference of 50 guarantees a contrast ratio >= 4.5.\n */\n\nimport * as utils from '../utils/color_utils.js';\n\nimport {Cam16} from './cam16.js';\nimport {HctSolver} from './hct_solver.js';\nimport {ViewingConditions} from './viewing_conditions.js';\n\n\n/**\n * HCT, hue, chroma, and tone. A color system that provides a perceptually\n * accurate color measurement system that can also accurately render what colors\n * will appear as in different lighting environments.\n */\nexport class Hct {\n  /**\n   * @param hue 0 <= hue < 360; invalid values are corrected.\n   * @param chroma 0 <= chroma < ?; Informally, colorfulness. The color\n   *     returned may be lower than the requested chroma. Chroma has a different\n   *     maximum for any given hue and tone.\n   * @param tone 0 <= tone <= 100; invalid values are corrected.\n   * @return HCT representation of a color in default viewing conditions.\n   */\n\n  internalHue: number;\n  internalChroma: number;\n  internalTone: number;\n\n  static from(hue: number, chroma: number, tone: number) {\n    return new Hct(HctSolver.solveToInt(hue, chroma, tone));\n  }\n\n  /**\n   * @param argb ARGB representation of a color.\n   * @return HCT representation of a color in default viewing conditions\n   */\n  static fromInt(argb: number) {\n    return new Hct(argb);\n  }\n\n  toInt(): number {\n    return this.argb;\n  }\n\n  /**\n   * A number, in degrees, representing ex. red, orange, yellow, etc.\n   * Ranges from 0 <= hue < 360.\n   */\n  get hue(): number {\n    return this.internalHue;\n  }\n\n  /**\n   * @param newHue 0 <= newHue < 360; invalid values are corrected.\n   * Chroma may decrease because chroma has a different maximum for any given\n   * hue and tone.\n   */\n  set hue(newHue: number) {\n    this.setInternalState(\n        HctSolver.solveToInt(\n            newHue,\n            this.internalChroma,\n            this.internalTone,\n            ),\n    );\n  }\n\n  get chroma(): number {\n    return this.internalChroma;\n  }\n\n  /**\n   * @param newChroma 0 <= newChroma < ?\n   * Chroma may decrease because chroma has a different maximum for any given\n   * hue and tone.\n   */\n  set chroma(newChroma: number) {\n    this.setInternalState(\n        HctSolver.solveToInt(\n            this.internalHue,\n            newChroma,\n            this.internalTone,\n            ),\n    );\n  }\n\n  /** Lightness. Ranges from 0 to 100. */\n  get tone(): number {\n    return this.internalTone;\n  }\n\n  /**\n   * @param newTone 0 <= newTone <= 100; invalid valids are corrected.\n   * Chroma may decrease because chroma has a different maximum for any given\n   * hue and tone.\n   */\n  set tone(newTone: number) {\n    this.setInternalState(\n        HctSolver.solveToInt(\n            this.internalHue,\n            this.internalChroma,\n            newTone,\n            ),\n    );\n  }\n\n  private constructor(private argb: number) {\n    const cam = Cam16.fromInt(argb);\n    this.internalHue = cam.hue;\n    this.internalChroma = cam.chroma;\n    this.internalTone = utils.lstarFromArgb(argb);\n    this.argb = argb;\n  }\n\n  private setInternalState(argb: number) {\n    const cam = Cam16.fromInt(argb);\n    this.internalHue = cam.hue;\n    this.internalChroma = cam.chroma;\n    this.internalTone = utils.lstarFromArgb(argb);\n    this.argb = argb;\n  }\n\n  /**\n   * Translates a color into different [ViewingConditions].\n   *\n   * Colors change appearance. They look different with lights on versus off,\n   * the same color, as in hex code, on white looks different when on black.\n   * This is called color relativity, most famously explicated by Josef Albers\n   * in Interaction of Color.\n   *\n   * In color science, color appearance models can account for this and\n   * calculate the appearance of a color in different settings. HCT is based on\n   * CAM16, a color appearance model, and uses it to make these calculations.\n   *\n   * See [ViewingConditions.make] for parameters affecting color appearance.\n   */\n  inViewingConditions(vc: ViewingConditions): Hct {\n    // 1. Use CAM16 to find XYZ coordinates of color in specified VC.\n    const cam = Cam16.fromInt(this.toInt());\n    const viewedInVc = cam.xyzInViewingConditions(vc);\n\n    // 2. Create CAM16 of those XYZ coordinates in default VC.\n    const recastInVc = Cam16.fromXyzInViewingConditions(\n        viewedInVc[0],\n        viewedInVc[1],\n        viewedInVc[2],\n        ViewingConditions.make(),\n    );\n\n    // 3. Create HCT from:\n    // - CAM16 using default VC with XYZ coordinates in specified VC.\n    // - L* converted from Y in XYZ coordinates in specified VC.\n    const recastHct = Hct.from(\n        recastInVc.hue,\n        recastInVc.chroma,\n        utils.lstarFromY(viewedInVc[1]),\n    );\n    return recastHct;\n  }\n}\n", "/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// material_color_utilities is designed to have a consistent API across\n// platforms and modular components that can be moved around easily. Using a\n// class as a namespace facilitates this.\n//\n// tslint:disable:class-as-namespace\n\nimport * as utils from '../utils/color_utils.js';\nimport * as math from '../utils/math_utils.js';\n\n/**\n * Utility methods for calculating contrast given two colors, or calculating a\n * color given one color and a contrast ratio.\n *\n * Contrast ratio is calculated using XYZ's Y. When linearized to match human\n * perception, Y becomes HCT's tone and L*a*b*'s' L*. Informally, this is the\n * lightness of a color.\n *\n * Methods refer to tone, T in the the HCT color space.\n * Tone is equivalent to L* in the L*a*b* color space, or L in the LCH color\n * space.\n */\nexport class Contrast {\n  /**\n   * Returns a contrast ratio, which ranges from 1 to 21.\n   *\n   * @param toneA Tone between 0 and 100. Values outside will be clamped.\n   * @param toneB Tone between 0 and 100. Values outside will be clamped.\n   */\n  static ratioOfTones(toneA: number, toneB: number): number {\n    toneA = math.clampDouble(0.0, 100.0, toneA);\n    toneB = math.clampDouble(0.0, 100.0, toneB);\n    return Contrast.ratioOfYs(utils.yFromLstar(toneA), utils.yFromLstar(toneB));\n  }\n\n  static ratioOfYs(y1: number, y2: number): number {\n    const lighter = y1 > y2 ? y1 : y2;\n    const darker = (lighter === y2) ? y1 : y2;\n    return (lighter + 5.0) / (darker + 5.0);\n  }\n\n  /**\n   * Returns a tone >= tone parameter that ensures ratio parameter.\n   * Return value is between 0 and 100.\n   * Returns -1 if ratio cannot be achieved with tone parameter.\n   *\n   * @param tone Tone return value must contrast with.\n   * Range is 0 to 100. Invalid values will result in -1 being returned.\n   * @param ratio Contrast ratio of return value and tone.\n   * Range is 1 to 21, invalid values have undefined behavior.\n   */\n  static lighter(tone: number, ratio: number): number {\n    if (tone < 0.0 || tone > 100.0) {\n      return -1.0;\n    }\n\n    const darkY = utils.yFromLstar(tone);\n    const lightY = ratio * (darkY + 5.0) - 5.0;\n    const realContrast = Contrast.ratioOfYs(lightY, darkY);\n    const delta = Math.abs(realContrast - ratio);\n    if (realContrast < ratio && delta > 0.04) {\n      return -1;\n    }\n\n    // Ensure gamut mapping, which requires a 'range' on tone, will still result\n    // the correct ratio by darkening slightly.\n    const returnValue = utils.lstarFromY(lightY) + 0.4;\n    if (returnValue < 0 || returnValue > 100) {\n      return -1;\n    }\n    return returnValue;\n  }\n\n  /**\n   * Returns a tone <= tone parameter that ensures ratio parameter.\n   * Return value is between 0 and 100.\n   * Returns -1 if ratio cannot be achieved with tone parameter.\n   *\n   * @param tone Tone return value must contrast with.\n   * Range is 0 to 100. Invalid values will result in -1 being returned.\n   * @param ratio Contrast ratio of return value and tone.\n   * Range is 1 to 21, invalid values have undefined behavior.\n   */\n  static darker(tone: number, ratio: number): number {\n    if (tone < 0.0 || tone > 100.0) {\n      return -1.0;\n    }\n\n    const lightY = utils.yFromLstar(tone);\n    const darkY = ((lightY + 5.0) / ratio) - 5.0;\n    const realContrast = Contrast.ratioOfYs(lightY, darkY);\n\n    const delta = Math.abs(realContrast - ratio);\n    if (realContrast < ratio && delta > 0.04) {\n      return -1;\n    }\n\n    // Ensure gamut mapping, which requires a 'range' on tone, will still result\n    // the correct ratio by darkening slightly.\n    const returnValue = utils.lstarFromY(darkY) - 0.4;\n    if (returnValue < 0 || returnValue > 100) {\n      return -1;\n    }\n    return returnValue;\n  }\n\n  /**\n   * Returns a tone >= tone parameter that ensures ratio parameter.\n   * Return value is between 0 and 100.\n   * Returns 100 if ratio cannot be achieved with tone parameter.\n   *\n   * This method is unsafe because the returned value is guaranteed to be in\n   * bounds for tone, i.e. between 0 and 100. However, that value may not reach\n   * the ratio with tone. For example, there is no color lighter than T100.\n   *\n   * @param tone Tone return value must contrast with.\n   * Range is 0 to 100. Invalid values will result in 100 being returned.\n   * @param ratio Desired contrast ratio of return value and tone parameter.\n   * Range is 1 to 21, invalid values have undefined behavior.\n   */\n  static lighterUnsafe(tone: number, ratio: number): number {\n    const lighterSafe = Contrast.lighter(tone, ratio);\n    return (lighterSafe < 0.0) ? 100.0 : lighterSafe;\n  }\n\n  /**\n   * Returns a tone >= tone parameter that ensures ratio parameter.\n   * Return value is between 0 and 100.\n   * Returns 100 if ratio cannot be achieved with tone parameter.\n   *\n   * This method is unsafe because the returned value is guaranteed to be in\n   * bounds for tone, i.e. between 0 and 100. However, that value may not reach\n   * the [ratio with [tone]. For example, there is no color darker than T0.\n   *\n   * @param tone Tone return value must contrast with.\n   * Range is 0 to 100. Invalid values will result in 0 being returned.\n   * @param ratio Desired contrast ratio of return value and tone parameter.\n   * Range is 1 to 21, invalid values have undefined behavior.\n   */\n  static darkerUnsafe(tone: number, ratio: number): number {\n    const darkerSafe = Contrast.darker(tone, ratio);\n    return (darkerSafe < 0.0) ? 0.0 : darkerSafe;\n  }\n}", "/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Hct} from '../hct/hct.js';\n\n// material_color_utilities is designed to have a consistent API across\n// platforms and modular components that can be moved around easily. Using a\n// class as a namespace facilitates this.\n//\n// tslint:disable:class-as-namespace\n\n/**\n * Check and/or fix universally disliked colors.\n * Color science studies of color preference indicate universal distaste for\n * dark yellow-greens, and also show this is correlated to distate for\n * biological waste and rotting food.\n *\n * See Palmer and Schloss, 2010 or Schloss and Palmer's Chapter 21 in Handbook\n * of Color Psychology (2015).\n */\nexport class DislikeAnalyzer {\n  /**\n   * Returns true if a color is disliked.\n   *\n   * @param hct A color to be judged.\n   * @return Whether the color is disliked.\n   *\n   * Disliked is defined as a dark yellow-green that is not neutral.\n   */\n  static isDisliked(hct: Hct): boolean {\n    const huePasses =\n        Math.round(hct.hue) >= 90.0 && Math.round(hct.hue) <= 111.0;\n    const chromaPasses = Math.round(hct.chroma) > 16.0;\n    const tonePasses = Math.round(hct.tone) < 65.0;\n\n    return huePasses && chromaPasses && tonePasses;\n  }\n\n  /**\n   * If a color is disliked, lighten it to make it likable.\n   *\n   * @param hct A color to be judged.\n   * @return A new color if the original color is disliked, or the original\n   *   color if it is acceptable.\n   */\n  static fixIfDisliked(hct: Hct): Hct {\n    if (DislikeAnalyzer.isDisliked(hct)) {\n      return Hct.from(\n          hct.hue,\n          hct.chroma,\n          70.0,\n      );\n    }\n\n    return hct;\n  }\n}\n", "/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Contrast} from '../contrast/contrast.js';\nimport {Hct} from '../hct/hct.js';\nimport {TonalPalette} from '../palettes/tonal_palette.js';\nimport {DynamicScheme} from '../scheme/dynamic_scheme.js';\nimport * as math from '../utils/math_utils.js';\n\nimport {ContrastCurve} from './contrast_curve.js';\nimport {ToneDeltaPair} from './tone_delta_pair.js';\n\n/**\n * @param name The name of the dynamic color. Defaults to empty.\n * @param palette Function that provides a TonalPalette given\n * DynamicScheme. A TonalPalette is defined by a hue and chroma, so this\n * replaces the need to specify hue/chroma. By providing a tonal palette, when\n * contrast adjustments are made, intended chroma can be preserved.\n * @param tone Function that provides a tone given DynamicScheme.\n * @param isBackground Whether this dynamic color is a background, with\n * some other color as the foreground. Defaults to false.\n * @param background The background of the dynamic color (as a function of a\n *     `DynamicScheme`), if it exists.\n * @param secondBackground A second background of the dynamic color (as a\n *     function of a `DynamicScheme`), if it\n * exists.\n * @param contrastCurve A `ContrastCurve` object specifying how its contrast\n * against its background should behave in various contrast levels options.\n * @param toneDeltaPair A `ToneDeltaPair` object specifying a tone delta\n * constraint between two colors. One of them must be the color being\n * constructed.\n */\ninterface FromPaletteOptions {\n  name?: string;\n  palette: (scheme: DynamicScheme) => TonalPalette;\n  tone: (scheme: DynamicScheme) => number;\n  isBackground?: boolean;\n  background?: (scheme: DynamicScheme) => DynamicColor;\n  secondBackground?: (scheme: DynamicScheme) => DynamicColor;\n  contrastCurve?: ContrastCurve;\n  toneDeltaPair?: (scheme: DynamicScheme) => ToneDeltaPair;\n}\n\n/**\n * A color that adjusts itself based on UI state provided by DynamicScheme.\n *\n * Colors without backgrounds do not change tone when contrast changes. Colors\n * with backgrounds become closer to their background as contrast lowers, and\n * further when contrast increases.\n *\n * Prefer static constructors. They require either a hexcode, a palette and\n * tone, or a hue and chroma. Optionally, they can provide a background\n * DynamicColor.\n */\nexport class DynamicColor {\n  private readonly hctCache = new Map<DynamicScheme, Hct>();\n\n  /**\n   * Create a DynamicColor defined by a TonalPalette and HCT tone.\n   *\n   * @param args Functions with DynamicScheme as input. Must provide a palette\n   * and tone. May provide a background DynamicColor and ToneDeltaConstraint.\n   */\n  static fromPalette(args: FromPaletteOptions): DynamicColor {\n    return new DynamicColor(\n        args.name ?? '',\n        args.palette,\n        args.tone,\n        args.isBackground ?? false,\n        args.background,\n        args.secondBackground,\n        args.contrastCurve,\n        args.toneDeltaPair,\n    );\n  }\n\n  /**\n   * The base constructor for DynamicColor.\n   *\n   * _Strongly_ prefer using one of the convenience constructors. This class is\n   * arguably too flexible to ensure it can support any scenario. Functional\n   * arguments allow  overriding without risks that come with subclasses.\n   *\n   * For example, the default behavior of adjust tone at max contrast\n   * to be at a 7.0 ratio with its background is principled and\n   * matches accessibility guidance. That does not mean it's the desired\n   * approach for _every_ design system, and every color pairing,\n   * always, in every case.\n   *\n   * @param name The name of the dynamic color. Defaults to empty.\n   * @param palette Function that provides a TonalPalette given\n   * DynamicScheme. A TonalPalette is defined by a hue and chroma, so this\n   * replaces the need to specify hue/chroma. By providing a tonal palette, when\n   * contrast adjustments are made, intended chroma can be preserved.\n   * @param tone Function that provides a tone, given a DynamicScheme.\n   * @param isBackground Whether this dynamic color is a background, with\n   * some other color as the foreground. Defaults to false.\n   * @param background The background of the dynamic color (as a function of a\n   *     `DynamicScheme`), if it exists.\n   * @param secondBackground A second background of the dynamic color (as a\n   *     function of a `DynamicScheme`), if it\n   * exists.\n   * @param contrastCurve A `ContrastCurve` object specifying how its contrast\n   * against its background should behave in various contrast levels options.\n   * @param toneDeltaPair A `ToneDeltaPair` object specifying a tone delta\n   * constraint between two colors. One of them must be the color being\n   * constructed.\n   */\n  constructor(\n      readonly name: string,\n      readonly palette: (scheme: DynamicScheme) => TonalPalette,\n      readonly tone: (scheme: DynamicScheme) => number,\n      readonly isBackground: boolean,\n      readonly background?: (scheme: DynamicScheme) => DynamicColor,\n      readonly secondBackground?: (scheme: DynamicScheme) => DynamicColor,\n      readonly contrastCurve?: ContrastCurve,\n      readonly toneDeltaPair?: (scheme: DynamicScheme) => ToneDeltaPair,\n  ) {\n    if ((!background) && secondBackground) {\n      throw new Error(\n          `Color ${name} has secondBackground` +\n          `defined, but background is not defined.`);\n    }\n    if ((!background) && contrastCurve) {\n      throw new Error(\n          `Color ${name} has contrastCurve` +\n          `defined, but background is not defined.`);\n    }\n    if (background && !contrastCurve) {\n      throw new Error(\n          `Color ${name} has background` +\n          `defined, but contrastCurve is not defined.`);\n    }\n  }\n\n  /**\n   * Return a ARGB integer (i.e. a hex code).\n   *\n   * @param scheme Defines the conditions of the user interface, for example,\n   * whether or not it is dark mode or light mode, and what the desired\n   * contrast level is.\n   */\n  getArgb(scheme: DynamicScheme): number {\n    return this.getHct(scheme).toInt();\n  }\n\n  /**\n   * Return a color, expressed in the HCT color space, that this\n   * DynamicColor is under the conditions in scheme.\n   *\n   * @param scheme Defines the conditions of the user interface, for example,\n   * whether or not it is dark mode or light mode, and what the desired\n   * contrast level is.\n   */\n  getHct(scheme: DynamicScheme): Hct {\n    const cachedAnswer = this.hctCache.get(scheme);\n    if (cachedAnswer != null) {\n      return cachedAnswer;\n    }\n    const tone = this.getTone(scheme);\n    const answer = this.palette(scheme).getHct(tone);\n    if (this.hctCache.size > 4) {\n      this.hctCache.clear();\n    }\n    this.hctCache.set(scheme, answer);\n    return answer;\n  }\n\n  /**\n   * Return a tone, T in the HCT color space, that this DynamicColor is under\n   * the conditions in scheme.\n   *\n   * @param scheme Defines the conditions of the user interface, for example,\n   * whether or not it is dark mode or light mode, and what the desired\n   * contrast level is.\n   */\n  getTone(scheme: DynamicScheme): number {\n    const decreasingContrast = scheme.contrastLevel < 0;\n\n    // Case 1: dual foreground, pair of colors with delta constraint.\n    if (this.toneDeltaPair) {\n      const toneDeltaPair = this.toneDeltaPair(scheme);\n      const roleA = toneDeltaPair.roleA;\n      const roleB = toneDeltaPair.roleB;\n      const delta = toneDeltaPair.delta;\n      const polarity = toneDeltaPair.polarity;\n      const stayTogether = toneDeltaPair.stayTogether;\n\n      const bg = this.background!(scheme);\n      const bgTone = bg.getTone(scheme);\n\n      const aIsNearer =\n          (polarity === 'nearer' ||\n           (polarity === 'lighter' && !scheme.isDark) ||\n           (polarity === 'darker' && scheme.isDark));\n      const nearer = aIsNearer ? roleA : roleB;\n      const farther = aIsNearer ? roleB : roleA;\n      const amNearer = this.name === nearer.name;\n      const expansionDir = scheme.isDark ? 1 : -1;\n\n      // 1st round: solve to min, each\n      const nContrast = nearer.contrastCurve!.getContrast(scheme.contrastLevel);\n      const fContrast =\n          farther.contrastCurve!.getContrast(scheme.contrastLevel);\n\n      // If a color is good enough, it is not adjusted.\n      // Initial and adjusted tones for `nearer`\n      const nInitialTone = nearer.tone(scheme);\n      let nTone = Contrast.ratioOfTones(bgTone, nInitialTone) >= nContrast ?\n          nInitialTone :\n          DynamicColor.foregroundTone(bgTone, nContrast);\n      // Initial and adjusted tones for `farther`\n      const fInitialTone = farther.tone(scheme);\n      let fTone = Contrast.ratioOfTones(bgTone, fInitialTone) >= fContrast ?\n          fInitialTone :\n          DynamicColor.foregroundTone(bgTone, fContrast);\n\n      if (decreasingContrast) {\n        // If decreasing contrast, adjust color to the \"bare minimum\"\n        // that satisfies contrast.\n        nTone = DynamicColor.foregroundTone(bgTone, nContrast);\n        fTone = DynamicColor.foregroundTone(bgTone, fContrast);\n      }\n\n      if ((fTone - nTone) * expansionDir >= delta) {\n        // Good! Tones satisfy the constraint; no change needed.\n      } else {\n        // 2nd round: expand farther to match delta.\n        fTone = math.clampDouble(0, 100, nTone + delta * expansionDir);\n        if ((fTone - nTone) * expansionDir >= delta) {\n          // Good! Tones now satisfy the constraint; no change needed.\n        } else {\n          // 3rd round: contract nearer to match delta.\n          nTone = math.clampDouble(0, 100, fTone - delta * expansionDir);\n        }\n      }\n\n      // Avoids the 50-59 awkward zone.\n      if (50 <= nTone && nTone < 60) {\n        // If `nearer` is in the awkward zone, move it away, together with\n        // `farther`.\n        if (expansionDir > 0) {\n          nTone = 60;\n          fTone = Math.max(fTone, nTone + delta * expansionDir);\n        } else {\n          nTone = 49;\n          fTone = Math.min(fTone, nTone + delta * expansionDir);\n        }\n      } else if (50 <= fTone && fTone < 60) {\n        if (stayTogether) {\n          // Fixes both, to avoid two colors on opposite sides of the \"awkward\n          // zone\".\n          if (expansionDir > 0) {\n            nTone = 60;\n            fTone = Math.max(fTone, nTone + delta * expansionDir);\n          } else {\n            nTone = 49;\n            fTone = Math.min(fTone, nTone + delta * expansionDir);\n          }\n        } else {\n          // Not required to stay together; fixes just one.\n          if (expansionDir > 0) {\n            fTone = 60;\n          } else {\n            fTone = 49;\n          }\n        }\n      }\n\n      // Returns `nTone` if this color is `nearer`, otherwise `fTone`.\n      return amNearer ? nTone : fTone;\n    }\n\n    else {\n      // Case 2: No contrast pair; just solve for itself.\n      let answer = this.tone(scheme);\n\n      if (this.background == null) {\n        return answer;  // No adjustment for colors with no background.\n      }\n\n      const bgTone = this.background(scheme).getTone(scheme);\n\n      const desiredRatio =\n          this.contrastCurve!.getContrast(scheme.contrastLevel);\n\n      if (Contrast.ratioOfTones(bgTone, answer) >= desiredRatio) {\n        // Don't \"improve\" what's good enough.\n      } else {\n        // Rough improvement.\n        answer = DynamicColor.foregroundTone(bgTone, desiredRatio);\n      }\n\n      if (decreasingContrast) {\n        answer = DynamicColor.foregroundTone(bgTone, desiredRatio);\n      }\n\n      if (this.isBackground && 50 <= answer && answer < 60) {\n        // Must adjust\n        if (Contrast.ratioOfTones(49, bgTone) >= desiredRatio) {\n          answer = 49;\n        } else {\n          answer = 60;\n        }\n      }\n\n      if (this.secondBackground) {\n        // Case 3: Adjust for dual backgrounds.\n\n        const [bg1, bg2] = [this.background, this.secondBackground];\n        const [bgTone1, bgTone2] =\n            [bg1(scheme).getTone(scheme), bg2(scheme).getTone(scheme)];\n        const [upper, lower] =\n            [Math.max(bgTone1, bgTone2), Math.min(bgTone1, bgTone2)];\n\n        if (Contrast.ratioOfTones(upper, answer) >= desiredRatio &&\n            Contrast.ratioOfTones(lower, answer) >= desiredRatio) {\n          return answer;\n        }\n\n        // The darkest light tone that satisfies the desired ratio,\n        // or -1 if such ratio cannot be reached.\n        const lightOption = Contrast.lighter(upper, desiredRatio);\n\n        // The lightest dark tone that satisfies the desired ratio,\n        // or -1 if such ratio cannot be reached.\n        const darkOption = Contrast.darker(lower, desiredRatio);\n\n        // Tones suitable for the foreground.\n        const availables = [];\n        if (lightOption !== -1) availables.push(lightOption);\n        if (darkOption !== -1) availables.push(darkOption);\n\n        const prefersLight = DynamicColor.tonePrefersLightForeground(bgTone1) ||\n            DynamicColor.tonePrefersLightForeground(bgTone2);\n        if (prefersLight) {\n          return (lightOption < 0) ? 100 : lightOption;\n        }\n        if (availables.length === 1) {\n          return availables[0];\n        }\n        return (darkOption < 0) ? 0 : darkOption;\n      }\n\n      return answer;\n    }\n  }\n\n  /**\n   * Given a background tone, find a foreground tone, while ensuring they reach\n   * a contrast ratio that is as close to [ratio] as possible.\n   *\n   * @param bgTone Tone in HCT. Range is 0 to 100, undefined behavior when it\n   *     falls outside that range.\n   * @param ratio The contrast ratio desired between bgTone and the return\n   *     value.\n   */\n  static foregroundTone(bgTone: number, ratio: number): number {\n    const lighterTone = Contrast.lighterUnsafe(bgTone, ratio);\n    const darkerTone = Contrast.darkerUnsafe(bgTone, ratio);\n    const lighterRatio = Contrast.ratioOfTones(lighterTone, bgTone);\n    const darkerRatio = Contrast.ratioOfTones(darkerTone, bgTone);\n    const preferLighter = DynamicColor.tonePrefersLightForeground(bgTone);\n\n    if (preferLighter) {\n      // This handles an edge case where the initial contrast ratio is high\n      // (ex. 13.0), and the ratio passed to the function is that high\n      // ratio, and both the lighter and darker ratio fails to pass that\n      // ratio.\n      //\n      // This was observed with Tonal Spot's On Primary Container turning\n      // black momentarily between high and max contrast in light mode. PC's\n      // standard tone was T90, OPC's was T10, it was light mode, and the\n      // contrast value was 0.6568521221032331.\n      const negligibleDifference = Math.abs(lighterRatio - darkerRatio) < 0.1 &&\n          lighterRatio < ratio && darkerRatio < ratio;\n      return lighterRatio >= ratio || lighterRatio >= darkerRatio ||\n              negligibleDifference ?\n          lighterTone :\n          darkerTone;\n    } else {\n      return darkerRatio >= ratio || darkerRatio >= lighterRatio ? darkerTone :\n                                                                   lighterTone;\n    }\n  }\n\n  /**\n   * Returns whether [tone] prefers a light foreground.\n   *\n   * People prefer white foregrounds on ~T60-70. Observed over time, and also\n   * by Andrew Somers during research for APCA.\n   *\n   * T60 used as to create the smallest discontinuity possible when skipping\n   * down to T49 in order to ensure light foregrounds.\n   * Since `tertiaryContainer` in dark monochrome scheme requires a tone of\n   * 60, it should not be adjusted. Therefore, 60 is excluded here.\n   */\n  static tonePrefersLightForeground(tone: number): boolean {\n    return Math.round(tone) < 60.0;\n  }\n\n  /**\n   * Returns whether [tone] can reach a contrast ratio of 4.5 with a lighter\n   * color.\n   */\n  static toneAllowsLightForeground(tone: number): boolean {\n    return Math.round(tone) <= 49.0;\n  }\n\n  /**\n   * Adjust a tone such that white has 4.5 contrast, if the tone is\n   * reasonably close to supporting it.\n   */\n  static enableLightForeground(tone: number): number {\n    if (DynamicColor.tonePrefersLightForeground(tone) &&\n        !DynamicColor.toneAllowsLightForeground(tone)) {\n      return 49.0;\n    }\n    return tone;\n  }\n}\n", "/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Set of themes supported by Dynamic Color.\n * Instantiate the corresponding subclass, ex. SchemeTonalSpot, to create\n * colors corresponding to the theme.\n */\nexport enum Variant {\n  MONOCHROME,\n  NEUTRAL,\n  TONAL_SPOT,\n  VIBRANT,\n  EXPRESSIVE,\n  FIDELITY,\n  CONTENT,\n  RAINBOW,\n  FRUIT_SALAD\n}\n", "/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as math from '../utils/math_utils.js';\n\n/**\n * A class containing the contrast curve for a dynamic color on its background.\n *\n * The four values correspond to contrast requirements for contrast levels\n * -1.0, 0.0, 0.5, and 1.0, respectively.\n */\nexport class ContrastCurve {\n  /**\n   * Creates a `ContrastCurve` object.\n   *\n   * @param low Contrast requirement for contrast level -1.0\n   * @param normal Contrast requirement for contrast level 0.0\n   * @param medium Contrast requirement for contrast level 0.5\n   * @param high Contrast requirement for contrast level 1.0\n   */\n  constructor(\n      readonly low: number,\n      readonly normal: number,\n      readonly medium: number,\n      readonly high: number,\n  ) {}\n\n  /**\n   * Returns the contrast ratio at a given contrast level.\n   *\n   * @param contrastLevel The contrast level. 0.0 is the default (normal);\n   * -1.0 is the lowest; 1.0 is the highest.\n   * @return The contrast ratio, a number between 1.0 and 21.0.\n   */\n  getContrast(contrastLevel: number): number {\n    if (contrastLevel <= -1.0) {\n      return this.low;\n    } else if (contrastLevel < 0.0) {\n      return math.lerp(this.low, this.normal, (contrastLevel - (-1)) / 1);\n    } else if (contrastLevel < 0.5) {\n      return math.lerp(this.normal, this.medium, (contrastLevel - 0) / 0.5);\n    } else if (contrastLevel < 1.0) {\n      return math.lerp(this.medium, this.high, (contrastLevel - 0.5) / 0.5);\n    } else {\n      return this.high;\n    }\n  }\n}\n", "/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {DynamicColor} from './dynamic_color.js';\n\n/**\n * Describes the different in tone between colors.\n */\nexport type TonePolarity = 'darker'|'lighter'|'nearer'|'farther';\n\n/**\n * Documents a constraint between two DynamicColors, in which their tones must\n * have a certain distance from each other.\n *\n * Prefer a DynamicColor with a background, this is for special cases when\n * designers want tonal distance, literally contrast, between two colors that\n * don't have a background / foreground relationship or a contrast guarantee.\n */\nexport class ToneDeltaPair {\n  /**\n   * Documents a constraint in tone distance between two DynamicColors.\n   *\n   * The polarity is an adjective that describes \"A\", compared to \"B\".\n   *\n   * For instance, ToneDeltaPair(A, B, 15, 'darker', stayTogether) states that\n   * A's tone should be at least 15 darker than B's.\n   *\n   * 'nearer' and 'farther' describes closeness to the surface roles. For\n   * instance, ToneDeltaPair(A, B, 10, 'nearer', stayTogether) states that A\n   * should be 10 lighter than B in light mode, and 10 darker than B in dark\n   * mode.\n   *\n   * @param roleA The first role in a pair.\n   * @param roleB The second role in a pair.\n   * @param delta Required difference between tones. Absolute value, negative\n   * values have undefined behavior.\n   * @param polarity The relative relation between tones of roleA and roleB,\n   * as described above.\n   * @param stayTogether Whether these two roles should stay on the same side of\n   * the \"awkward zone\" (T50-59). This is necessary for certain cases where\n   * one role has two backgrounds.\n   */\n  constructor(\n      readonly roleA: DynamicColor,\n      readonly roleB: DynamicColor,\n      readonly delta: number,\n      readonly polarity: TonePolarity,\n      readonly stayTogether: boolean,\n  ) {}\n}\n", "/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {DislikeAnalyzer} from '../dislike/dislike_analyzer.js';\nimport {Hct} from '../hct/hct.js';\nimport {ViewingConditions} from '../hct/viewing_conditions.js';\nimport {DynamicScheme} from '../scheme/dynamic_scheme.js';\nimport {Variant} from '../scheme/variant.js';\n\nimport {ContrastCurve} from './contrast_curve.js';\nimport {DynamicColor} from './dynamic_color.js';\nimport {ToneDeltaPair} from './tone_delta_pair.js';\n\nfunction isFidelity(scheme: DynamicScheme): boolean {\n  return scheme.variant === Variant.FIDELITY ||\n      scheme.variant === Variant.CONTENT;\n}\n\nfunction isMonochrome(scheme: DynamicScheme): boolean {\n  return scheme.variant === Variant.MONOCHROME;\n}\n\nfunction findDesiredChromaByTone(\n    hue: number, chroma: number, tone: number,\n    byDecreasingTone: boolean): number {\n  let answer = tone;\n\n  let closestToChroma = Hct.from(hue, chroma, tone);\n  if (closestToChroma.chroma < chroma) {\n    let chromaPeak = closestToChroma.chroma;\n    while (closestToChroma.chroma < chroma) {\n      answer += byDecreasingTone ? -1.0 : 1.0;\n      const potentialSolution = Hct.from(hue, chroma, answer);\n      if (chromaPeak > potentialSolution.chroma) {\n        break;\n      }\n      if (Math.abs(potentialSolution.chroma - chroma) < 0.4) {\n        break;\n      }\n\n      const potentialDelta = Math.abs(potentialSolution.chroma - chroma);\n      const currentDelta = Math.abs(closestToChroma.chroma - chroma);\n      if (potentialDelta < currentDelta) {\n        closestToChroma = potentialSolution;\n      }\n      chromaPeak = Math.max(chromaPeak, potentialSolution.chroma);\n    }\n  }\n\n  return answer;\n}\n\nfunction viewingConditionsForAlbers(scheme: DynamicScheme): ViewingConditions {\n  return ViewingConditions.make(\n      /*whitePoint=*/ undefined,\n      /*adaptingLuminance=*/ undefined,\n      /*backgroundLstar=*/ scheme.isDark ? 30 : 80,\n      /*surround=*/ undefined,\n      /*discountingIlluminant=*/ undefined,\n  );\n}\n\nfunction performAlbers(prealbers: Hct, scheme: DynamicScheme): number {\n  const albersd =\n      prealbers.inViewingConditions(viewingConditionsForAlbers(scheme));\n  if (DynamicColor.tonePrefersLightForeground(prealbers.tone) &&\n      !DynamicColor.toneAllowsLightForeground(albersd.tone)) {\n    return DynamicColor.enableLightForeground(prealbers.tone);\n  } else {\n    return DynamicColor.enableLightForeground(albersd.tone);\n  }\n}\n\n/**\n * DynamicColors for the colors in the Material Design system.\n */\n// Material Color Utilities namespaces the various utilities it provides.\n// tslint:disable-next-line:class-as-namespace\nexport class MaterialDynamicColors {\n  static contentAccentToneDelta = 15.0;\n  static highestSurface(s: DynamicScheme): DynamicColor {\n    return s.isDark ? MaterialDynamicColors.surfaceBright :\n                      MaterialDynamicColors.surfaceDim;\n  }\n\n  static primaryPaletteKeyColor = DynamicColor.fromPalette({\n    name: 'primary_palette_key_color',\n    palette: (s) => s.primaryPalette,\n    tone: (s) => s.primaryPalette.keyColor.tone,\n  });\n\n  static secondaryPaletteKeyColor = DynamicColor.fromPalette({\n    name: 'secondary_palette_key_color',\n    palette: (s) => s.secondaryPalette,\n    tone: (s) => s.secondaryPalette.keyColor.tone,\n  });\n\n  static tertiaryPaletteKeyColor = DynamicColor.fromPalette({\n    name: 'tertiary_palette_key_color',\n    palette: (s) => s.tertiaryPalette,\n    tone: (s) => s.tertiaryPalette.keyColor.tone,\n  });\n\n  static neutralPaletteKeyColor = DynamicColor.fromPalette({\n    name: 'neutral_palette_key_color',\n    palette: (s) => s.neutralPalette,\n    tone: (s) => s.neutralPalette.keyColor.tone,\n  });\n\n  static neutralVariantPaletteKeyColor = DynamicColor.fromPalette({\n    name: 'neutral_variant_palette_key_color',\n    palette: (s) => s.neutralVariantPalette,\n    tone: (s) => s.neutralVariantPalette.keyColor.tone,\n  });\n\n  static background = DynamicColor.fromPalette({\n    name: 'background',\n    palette: (s) => s.neutralPalette,\n    tone: (s) => s.isDark ? 6 : 98,\n    isBackground: true,\n  });\n\n  static onBackground = DynamicColor.fromPalette({\n    name: 'on_background',\n    palette: (s) => s.neutralPalette,\n    tone: (s) => s.isDark ? 90 : 10,\n    background: (s) => MaterialDynamicColors.background,\n    contrastCurve: new ContrastCurve(3, 3, 4.5, 7),\n  });\n\n  static surface = DynamicColor.fromPalette({\n    name: 'surface',\n    palette: (s) => s.neutralPalette,\n    tone: (s) => s.isDark ? 6 : 98,\n    isBackground: true,\n  });\n\n  static surfaceDim = DynamicColor.fromPalette({\n    name: 'surface_dim',\n    palette: (s) => s.neutralPalette,\n    tone: (s) => s.isDark ? 6 : 87,\n    isBackground: true,\n  });\n\n  static surfaceBright = DynamicColor.fromPalette({\n    name: 'surface_bright',\n    palette: (s) => s.neutralPalette,\n    tone: (s) => s.isDark ? 24 : 98,\n    isBackground: true,\n  });\n\n  static surfaceContainerLowest = DynamicColor.fromPalette({\n    name: 'surface_container_lowest',\n    palette: (s) => s.neutralPalette,\n    tone: (s) => s.isDark ? 4 : 100,\n    isBackground: true,\n  });\n\n  static surfaceContainerLow = DynamicColor.fromPalette({\n    name: 'surface_container_low',\n    palette: (s) => s.neutralPalette,\n    tone: (s) => s.isDark ? 10 : 96,\n    isBackground: true,\n  });\n\n  static surfaceContainer = DynamicColor.fromPalette({\n    name: 'surface_container',\n    palette: (s) => s.neutralPalette,\n    tone: (s) => s.isDark ? 12 : 94,\n    isBackground: true,\n  });\n\n  static surfaceContainerHigh = DynamicColor.fromPalette({\n    name: 'surface_container_high',\n    palette: (s) => s.neutralPalette,\n    tone: (s) => s.isDark ? 17 : 92,\n    isBackground: true,\n  });\n\n  static surfaceContainerHighest = DynamicColor.fromPalette({\n    name: 'surface_container_highest',\n    palette: (s) => s.neutralPalette,\n    tone: (s) => s.isDark ? 22 : 90,\n    isBackground: true,\n  });\n\n  static onSurface = DynamicColor.fromPalette({\n    name: 'on_surface',\n    palette: (s) => s.neutralPalette,\n    tone: (s) => s.isDark ? 90 : 10,\n    background: (s) => MaterialDynamicColors.highestSurface(s),\n    contrastCurve: new ContrastCurve(4.5, 7, 11, 21),\n  });\n\n  static surfaceVariant = DynamicColor.fromPalette({\n    name: 'surface_variant',\n    palette: (s) => s.neutralVariantPalette,\n    tone: (s) => s.isDark ? 30 : 90,\n    isBackground: true,\n  });\n\n  static onSurfaceVariant = DynamicColor.fromPalette({\n    name: 'on_surface_variant',\n    palette: (s) => s.neutralVariantPalette,\n    tone: (s) => s.isDark ? 80 : 30,\n    background: (s) => MaterialDynamicColors.highestSurface(s),\n    contrastCurve: new ContrastCurve(3, 4.5, 7, 11),\n  });\n\n  static inverseSurface = DynamicColor.fromPalette({\n    name: 'inverse_surface',\n    palette: (s) => s.neutralPalette,\n    tone: (s) => s.isDark ? 90 : 20,\n  });\n\n  static inverseOnSurface = DynamicColor.fromPalette({\n    name: 'inverse_on_surface',\n    palette: (s) => s.neutralPalette,\n    tone: (s) => s.isDark ? 20 : 95,\n    background: (s) => MaterialDynamicColors.inverseSurface,\n    contrastCurve: new ContrastCurve(4.5, 7, 11, 21),\n  });\n\n  static outline = DynamicColor.fromPalette({\n    name: 'outline',\n    palette: (s) => s.neutralVariantPalette,\n    tone: (s) => s.isDark ? 60 : 50,\n    background: (s) => MaterialDynamicColors.highestSurface(s),\n    contrastCurve: new ContrastCurve(1.5, 3, 4.5, 7),\n  });\n\n  static outlineVariant = DynamicColor.fromPalette({\n    name: 'outline_variant',\n    palette: (s) => s.neutralVariantPalette,\n    tone: (s) => s.isDark ? 30 : 80,\n    background: (s) => MaterialDynamicColors.highestSurface(s),\n    contrastCurve: new ContrastCurve(1, 1, 3, 7),\n  });\n\n  static shadow = DynamicColor.fromPalette({\n    name: 'shadow',\n    palette: (s) => s.neutralPalette,\n    tone: (s) => 0,\n  });\n\n  static scrim = DynamicColor.fromPalette({\n    name: 'scrim',\n    palette: (s) => s.neutralPalette,\n    tone: (s) => 0,\n  });\n\n  static surfaceTint = DynamicColor.fromPalette({\n    name: 'surface_tint',\n    palette: (s) => s.primaryPalette,\n    tone: (s) => s.isDark ? 80 : 40,\n    isBackground: true,\n  });\n\n  static primary = DynamicColor.fromPalette({\n    name: 'primary',\n    palette: (s) => s.primaryPalette,\n    tone:\n        (s) => {\n          if (isMonochrome(s)) {\n            return s.isDark ? 100 : 0;\n          }\n          return s.isDark ? 80 : 40;\n        },\n    isBackground: true,\n    background: (s) => MaterialDynamicColors.highestSurface(s),\n    contrastCurve: new ContrastCurve(3, 4.5, 7, 11),\n    toneDeltaPair: (s) => new ToneDeltaPair(\n        MaterialDynamicColors.primaryContainer, MaterialDynamicColors.primary,\n        15, 'nearer', false),\n  });\n\n  static onPrimary = DynamicColor.fromPalette({\n    name: 'on_primary',\n    palette: (s) => s.primaryPalette,\n    tone:\n        (s) => {\n          if (isMonochrome(s)) {\n            return s.isDark ? 10 : 90;\n          }\n          return s.isDark ? 20 : 100;\n        },\n    background: (s) => MaterialDynamicColors.primary,\n    contrastCurve: new ContrastCurve(4.5, 7, 11, 21),\n  });\n\n  static primaryContainer = DynamicColor.fromPalette({\n    name: 'primary_container',\n    palette: (s) => s.primaryPalette,\n    tone:\n        (s) => {\n          if (isFidelity(s)) {\n            return performAlbers(s.sourceColorHct, s);\n          }\n          if (isMonochrome(s)) {\n            return s.isDark ? 85 : 25;\n          }\n          return s.isDark ? 30 : 90;\n        },\n    isBackground: true,\n    background: (s) => MaterialDynamicColors.highestSurface(s),\n    contrastCurve: new ContrastCurve(1, 1, 3, 7),\n    toneDeltaPair: (s) => new ToneDeltaPair(\n        MaterialDynamicColors.primaryContainer, MaterialDynamicColors.primary,\n        15, 'nearer', false),\n  });\n\n  static onPrimaryContainer = DynamicColor.fromPalette({\n    name: 'on_primary_container',\n    palette: (s) => s.primaryPalette,\n    tone:\n        (s) => {\n          if (isFidelity(s)) {\n            return DynamicColor.foregroundTone(\n                MaterialDynamicColors.primaryContainer.tone(s), 4.5);\n          }\n          if (isMonochrome(s)) {\n            return s.isDark ? 0 : 100;\n          }\n          return s.isDark ? 90 : 10;\n        },\n    background: (s) => MaterialDynamicColors.primaryContainer,\n    contrastCurve: new ContrastCurve(4.5, 7, 11, 21),\n  });\n\n  static inversePrimary = DynamicColor.fromPalette({\n    name: 'inverse_primary',\n    palette: (s) => s.primaryPalette,\n    tone: (s) => s.isDark ? 40 : 80,\n    background: (s) => MaterialDynamicColors.inverseSurface,\n    contrastCurve: new ContrastCurve(3, 4.5, 7, 11),\n  });\n\n  static secondary = DynamicColor.fromPalette({\n    name: 'secondary',\n    palette: (s) => s.secondaryPalette,\n    tone: (s) => s.isDark ? 80 : 40,\n    isBackground: true,\n    background: (s) => MaterialDynamicColors.highestSurface(s),\n    contrastCurve: new ContrastCurve(3, 4.5, 7, 11),\n    toneDeltaPair: (s) => new ToneDeltaPair(\n        MaterialDynamicColors.secondaryContainer,\n        MaterialDynamicColors.secondary, 15, 'nearer', false),\n  });\n\n  static onSecondary = DynamicColor.fromPalette({\n    name: 'on_secondary',\n    palette: (s) => s.secondaryPalette,\n    tone:\n        (s) => {\n          if (isMonochrome(s)) {\n            return s.isDark ? 10 : 100;\n          } else {\n            return s.isDark ? 20 : 100;\n          }\n        },\n    background: (s) => MaterialDynamicColors.secondary,\n    contrastCurve: new ContrastCurve(4.5, 7, 11, 21),\n  });\n\n  static secondaryContainer = DynamicColor.fromPalette({\n    name: 'secondary_container',\n    palette: (s) => s.secondaryPalette,\n    tone:\n        (s) => {\n          const initialTone = s.isDark ? 30 : 90;\n          if (isMonochrome(s)) {\n            return s.isDark ? 30 : 85;\n          }\n          if (!isFidelity(s)) {\n            return initialTone;\n          }\n          let answer = findDesiredChromaByTone(\n              s.secondaryPalette.hue, s.secondaryPalette.chroma, initialTone,\n              s.isDark ? false : true);\n          answer = performAlbers(s.secondaryPalette.getHct(answer), s);\n          return answer;\n        },\n    isBackground: true,\n    background: (s) => MaterialDynamicColors.highestSurface(s),\n    contrastCurve: new ContrastCurve(1, 1, 3, 7),\n    toneDeltaPair: (s) => new ToneDeltaPair(\n        MaterialDynamicColors.secondaryContainer,\n        MaterialDynamicColors.secondary, 15, 'nearer', false),\n  });\n\n  static onSecondaryContainer = DynamicColor.fromPalette({\n    name: 'on_secondary_container',\n    palette: (s) => s.secondaryPalette,\n    tone:\n        (s) => {\n          if (!isFidelity(s)) {\n            return s.isDark ? 90 : 10;\n          }\n          return DynamicColor.foregroundTone(\n              MaterialDynamicColors.secondaryContainer.tone(s), 4.5);\n        },\n    background: (s) => MaterialDynamicColors.secondaryContainer,\n    contrastCurve: new ContrastCurve(4.5, 7, 11, 21),\n  });\n\n  static tertiary = DynamicColor.fromPalette({\n    name: 'tertiary',\n    palette: (s) => s.tertiaryPalette,\n    tone:\n        (s) => {\n          if (isMonochrome(s)) {\n            return s.isDark ? 90 : 25;\n          }\n          return s.isDark ? 80 : 40;\n        },\n    isBackground: true,\n    background: (s) => MaterialDynamicColors.highestSurface(s),\n    contrastCurve: new ContrastCurve(3, 4.5, 7, 11),\n    toneDeltaPair: (s) => new ToneDeltaPair(\n        MaterialDynamicColors.tertiaryContainer, MaterialDynamicColors.tertiary,\n        15, 'nearer', false),\n  });\n\n  static onTertiary = DynamicColor.fromPalette({\n    name: 'on_tertiary',\n    palette: (s) => s.tertiaryPalette,\n    tone:\n        (s) => {\n          if (isMonochrome(s)) {\n            return s.isDark ? 10 : 90;\n          }\n          return s.isDark ? 20 : 100;\n        },\n    background: (s) => MaterialDynamicColors.tertiary,\n    contrastCurve: new ContrastCurve(4.5, 7, 11, 21),\n  });\n\n  static tertiaryContainer = DynamicColor.fromPalette({\n    name: 'tertiary_container',\n    palette: (s) => s.tertiaryPalette,\n    tone:\n        (s) => {\n          if (isMonochrome(s)) {\n            return s.isDark ? 60 : 49;\n          }\n          if (!isFidelity(s)) {\n            return s.isDark ? 30 : 90;\n          }\n          const albersTone =\n              performAlbers(s.tertiaryPalette.getHct(s.sourceColorHct.tone), s);\n          const proposedHct = s.tertiaryPalette.getHct(albersTone);\n          return DislikeAnalyzer.fixIfDisliked(proposedHct).tone;\n        },\n    isBackground: true,\n    background: (s) => MaterialDynamicColors.highestSurface(s),\n    contrastCurve: new ContrastCurve(1, 1, 3, 7),\n    toneDeltaPair: (s) => new ToneDeltaPair(\n        MaterialDynamicColors.tertiaryContainer, MaterialDynamicColors.tertiary,\n        15, 'nearer', false),\n  });\n\n  static onTertiaryContainer = DynamicColor.fromPalette({\n    name: 'on_tertiary_container',\n    palette: (s) => s.tertiaryPalette,\n    tone:\n        (s) => {\n          if (isMonochrome(s)) {\n            return s.isDark ? 0 : 100;\n          }\n          if (!isFidelity(s)) {\n            return s.isDark ? 90 : 10;\n          }\n          return DynamicColor.foregroundTone(\n              MaterialDynamicColors.tertiaryContainer.tone(s), 4.5);\n        },\n    background: (s) => MaterialDynamicColors.tertiaryContainer,\n    contrastCurve: new ContrastCurve(4.5, 7, 11, 21),\n  });\n\n  static error = DynamicColor.fromPalette({\n    name: 'error',\n    palette: (s) => s.errorPalette,\n    tone: (s) => s.isDark ? 80 : 40,\n    isBackground: true,\n    background: (s) => MaterialDynamicColors.highestSurface(s),\n    contrastCurve: new ContrastCurve(3, 4.5, 7, 11),\n    toneDeltaPair: (s) => new ToneDeltaPair(\n        MaterialDynamicColors.errorContainer, MaterialDynamicColors.error, 15,\n        'nearer', false),\n  });\n\n  static onError = DynamicColor.fromPalette({\n    name: 'on_error',\n    palette: (s) => s.errorPalette,\n    tone: (s) => s.isDark ? 20 : 100,\n    background: (s) => MaterialDynamicColors.error,\n    contrastCurve: new ContrastCurve(4.5, 7, 11, 21),\n  });\n\n  static errorContainer = DynamicColor.fromPalette({\n    name: 'error_container',\n    palette: (s) => s.errorPalette,\n    tone: (s) => s.isDark ? 30 : 90,\n    isBackground: true,\n    background: (s) => MaterialDynamicColors.highestSurface(s),\n    contrastCurve: new ContrastCurve(1, 1, 3, 7),\n    toneDeltaPair: (s) => new ToneDeltaPair(\n        MaterialDynamicColors.errorContainer, MaterialDynamicColors.error, 15,\n        'nearer', false),\n  });\n\n  static onErrorContainer = DynamicColor.fromPalette({\n    name: 'on_error_container',\n    palette: (s) => s.errorPalette,\n    tone: (s) => s.isDark ? 90 : 10,\n    background: (s) => MaterialDynamicColors.errorContainer,\n    contrastCurve: new ContrastCurve(4.5, 7, 11, 21),\n  });\n\n  static primaryFixed = DynamicColor.fromPalette({\n    name: 'primary_fixed',\n    palette: (s) => s.primaryPalette,\n    tone: (s) => isMonochrome(s) ? 40.0 : 90.0,\n    isBackground: true,\n    background: (s) => MaterialDynamicColors.highestSurface(s),\n    contrastCurve: new ContrastCurve(1, 1, 3, 7),\n    toneDeltaPair: (s) => new ToneDeltaPair(\n        MaterialDynamicColors.primaryFixed,\n        MaterialDynamicColors.primaryFixedDim, 10, 'lighter', true),\n  });\n\n  static primaryFixedDim = DynamicColor.fromPalette({\n    name: 'primary_fixed_dim',\n    palette: (s) => s.primaryPalette,\n    tone: (s) => isMonochrome(s) ? 30.0 : 80.0,\n    isBackground: true,\n    background: (s) => MaterialDynamicColors.highestSurface(s),\n    contrastCurve: new ContrastCurve(1, 1, 3, 7),\n    toneDeltaPair: (s) => new ToneDeltaPair(\n        MaterialDynamicColors.primaryFixed,\n        MaterialDynamicColors.primaryFixedDim, 10, 'lighter', true),\n  });\n\n  static onPrimaryFixed = DynamicColor.fromPalette({\n    name: 'on_primary_fixed',\n    palette: (s) => s.primaryPalette,\n    tone: (s) => isMonochrome(s) ? 100.0 : 10.0,\n    background: (s) => MaterialDynamicColors.primaryFixedDim,\n    secondBackground: (s) => MaterialDynamicColors.primaryFixed,\n    contrastCurve: new ContrastCurve(4.5, 7, 11, 21),\n  });\n\n  static onPrimaryFixedVariant = DynamicColor.fromPalette({\n    name: 'on_primary_fixed_variant',\n    palette: (s) => s.primaryPalette,\n    tone: (s) => isMonochrome(s) ? 90.0 : 30.0,\n    background: (s) => MaterialDynamicColors.primaryFixedDim,\n    secondBackground: (s) => MaterialDynamicColors.primaryFixed,\n    contrastCurve: new ContrastCurve(3, 4.5, 7, 11),\n  });\n\n  static secondaryFixed = DynamicColor.fromPalette({\n    name: 'secondary_fixed',\n    palette: (s) => s.secondaryPalette,\n    tone: (s) => isMonochrome(s) ? 80.0 : 90.0,\n    isBackground: true,\n    background: (s) => MaterialDynamicColors.highestSurface(s),\n    contrastCurve: new ContrastCurve(1, 1, 3, 7),\n    toneDeltaPair: (s) => new ToneDeltaPair(\n        MaterialDynamicColors.secondaryFixed,\n        MaterialDynamicColors.secondaryFixedDim, 10, 'lighter', true),\n  });\n\n  static secondaryFixedDim = DynamicColor.fromPalette({\n    name: 'secondary_fixed_dim',\n    palette: (s) => s.secondaryPalette,\n    tone: (s) => isMonochrome(s) ? 70.0 : 80.0,\n    isBackground: true,\n    background: (s) => MaterialDynamicColors.highestSurface(s),\n    contrastCurve: new ContrastCurve(1, 1, 3, 7),\n    toneDeltaPair: (s) => new ToneDeltaPair(\n        MaterialDynamicColors.secondaryFixed,\n        MaterialDynamicColors.secondaryFixedDim, 10, 'lighter', true),\n  });\n\n  static onSecondaryFixed = DynamicColor.fromPalette({\n    name: 'on_secondary_fixed',\n    palette: (s) => s.secondaryPalette,\n    tone: (s) => 10.0,\n    background: (s) => MaterialDynamicColors.secondaryFixedDim,\n    secondBackground: (s) => MaterialDynamicColors.secondaryFixed,\n    contrastCurve: new ContrastCurve(4.5, 7, 11, 21),\n  });\n\n  static onSecondaryFixedVariant = DynamicColor.fromPalette({\n    name: 'on_secondary_fixed_variant',\n    palette: (s) => s.secondaryPalette,\n    tone: (s) => isMonochrome(s) ? 25.0 : 30.0,\n    background: (s) => MaterialDynamicColors.secondaryFixedDim,\n    secondBackground: (s) => MaterialDynamicColors.secondaryFixed,\n    contrastCurve: new ContrastCurve(3, 4.5, 7, 11),\n  });\n\n  static tertiaryFixed = DynamicColor.fromPalette({\n    name: 'tertiary_fixed',\n    palette: (s) => s.tertiaryPalette,\n    tone: (s) => isMonochrome(s) ? 40.0 : 90.0,\n    isBackground: true,\n    background: (s) => MaterialDynamicColors.highestSurface(s),\n    contrastCurve: new ContrastCurve(1, 1, 3, 7),\n    toneDeltaPair: (s) => new ToneDeltaPair(\n        MaterialDynamicColors.tertiaryFixed,\n        MaterialDynamicColors.tertiaryFixedDim, 10, 'lighter', true),\n  });\n\n  static tertiaryFixedDim = DynamicColor.fromPalette({\n    name: 'tertiary_fixed_dim',\n    palette: (s) => s.tertiaryPalette,\n    tone: (s) => isMonochrome(s) ? 30.0 : 80.0,\n    isBackground: true,\n    background: (s) => MaterialDynamicColors.highestSurface(s),\n    contrastCurve: new ContrastCurve(1, 1, 3, 7),\n    toneDeltaPair: (s) => new ToneDeltaPair(\n        MaterialDynamicColors.tertiaryFixed,\n        MaterialDynamicColors.tertiaryFixedDim, 10, 'lighter', true),\n  });\n\n  static onTertiaryFixed = DynamicColor.fromPalette({\n    name: 'on_tertiary_fixed',\n    palette: (s) => s.tertiaryPalette,\n    tone: (s) => isMonochrome(s) ? 100.0 : 10.0,\n    background: (s) => MaterialDynamicColors.tertiaryFixedDim,\n    secondBackground: (s) => MaterialDynamicColors.tertiaryFixed,\n    contrastCurve: new ContrastCurve(4.5, 7, 11, 21),\n  });\n\n  static onTertiaryFixedVariant = DynamicColor.fromPalette({\n    name: 'on_tertiary_fixed_variant',\n    palette: (s) => s.tertiaryPalette,\n    tone: (s) => isMonochrome(s) ? 90.0 : 30.0,\n    background: (s) => MaterialDynamicColors.tertiaryFixedDim,\n    secondBackground: (s) => MaterialDynamicColors.tertiaryFixed,\n    contrastCurve: new ContrastCurve(3, 4.5, 7, 11),\n  });\n}\n", "/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Hct} from '../hct/hct.js';\n\n/**\n *  A convenience class for retrieving colors that are constant in hue and\n *  chroma, but vary in tone.\n */\nexport class TonalPalette {\n  private readonly cache = new Map<number, number>();\n\n  /**\n   * @param argb ARGB representation of a color\n   * @return Tones matching that color's hue and chroma.\n   */\n  static fromInt(argb: number): TonalPalette {\n    const hct = Hct.fromInt(argb);\n    return TonalPalette.fromHct(hct);\n  }\n\n  /**\n   * @param hct Hct\n   * @return Tones matching that color's hue and chroma.\n   */\n  static fromHct(hct: Hct) {\n    return new TonalPalette(hct.hue, hct.chroma, hct);\n  }\n\n  /**\n   * @param hue HCT hue\n   * @param chroma HCT chroma\n   * @return Tones matching hue and chroma.\n   */\n  static fromHueAndChroma(hue: number, chroma: number): TonalPalette {\n    return new TonalPalette(hue, chroma, TonalPalette.createKeyColor(hue, chroma));\n  }\n\n  private constructor(readonly hue: number, readonly chroma: number, readonly keyColor: Hct) {}\n\n  private static createKeyColor(hue: number, chroma: number): Hct {\n    const startTone = 50.0;\n    let smallestDeltaHct = Hct.from(hue, chroma, startTone);\n    let smallestDelta = Math.abs(smallestDeltaHct.chroma - chroma);\n    // Starting from T50, check T+/-delta to see if they match the requested\n    // chroma.\n    //\n    // Starts from T50 because T50 has the most chroma available, on\n    // average. Thus it is most likely to have a direct answer and minimize\n    // iteration.\n    for (let delta = 1.0; delta < 50.0; delta += 1.0) {\n      // Termination condition rounding instead of minimizing delta to avoid\n      // case where requested chroma is 16.51, and the closest chroma is 16.49.\n      // Error is minimized, but when rounded and displayed, requested chroma\n      // is 17, key color's chroma is 16.\n      if (Math.round(chroma) === Math.round(smallestDeltaHct.chroma)) {\n        return smallestDeltaHct;\n      }\n\n      const hctAdd = Hct.from(hue, chroma, startTone + delta);\n      const hctAddDelta = Math.abs(hctAdd.chroma - chroma);\n      if (hctAddDelta < smallestDelta) {\n        smallestDelta = hctAddDelta;\n        smallestDeltaHct = hctAdd;\n      }\n\n      const hctSubtract = Hct.from(hue, chroma, startTone - delta);\n      const hctSubtractDelta = Math.abs(hctSubtract.chroma - chroma);\n      if (hctSubtractDelta < smallestDelta) {\n        smallestDelta = hctSubtractDelta;\n        smallestDeltaHct = hctSubtract;\n      }\n    }\n\n    return smallestDeltaHct;\n  }\n\n  /**\n   * @param tone HCT tone, measured from 0 to 100.\n   * @return ARGB representation of a color with that tone.\n   */\n  tone(tone: number): number {\n    let argb = this.cache.get(tone);\n    if (argb === undefined) {\n      argb = Hct.from(this.hue, this.chroma, tone).toInt();\n      this.cache.set(tone, argb);\n    }\n    return argb;\n  }\n\n  /**\n   * @param tone HCT tone.\n   * @return HCT representation of a color with that tone.\n   */\n  getHct(tone: number): Hct {\n    return Hct.fromInt(this.tone(tone));\n  }\n}\n", "/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Hct} from '../hct/hct.js';\nimport {TonalPalette} from '../palettes/tonal_palette.js';\nimport * as math from '../utils/math_utils.js';\n\nimport {Variant} from './variant.js';\n\n/**\n * @param sourceColorArgb The source color of the theme as an ARGB 32-bit\n *     integer.\n * @param variant The variant, or style, of the theme.\n * @param contrastLevel Value from -1 to 1. -1 represents minimum contrast,\n * 0 represents standard (i.e. the design as spec'd), and 1 represents maximum\n * contrast.\n * @param isDark Whether the scheme is in dark mode or light mode.\n * @param primaryPalette Given a tone, produces a color. Hue and chroma of the\n * color are specified in the design specification of the variant. Usually\n * colorful.\n * @param secondaryPalette Given a tone, produces a color. Hue and chroma of\n * the color are specified in the design specification of the variant. Usually\n * less colorful.\n * @param tertiaryPalette Given a tone, produces a color. Hue and chroma of\n * the color are specified in the design specification of the variant. Usually\n * a different hue from primary and colorful.\n * @param neutralPalette Given a tone, produces a color. Hue and chroma of the\n * color are specified in the design specification of the variant. Usually not\n * colorful at all, intended for background & surface colors.\n * @param neutralVariantPalette Given a tone, produces a color. Hue and chroma\n * of the color are specified in the design specification of the variant.\n * Usually not colorful, but slightly more colorful than Neutral. Intended for\n * backgrounds & surfaces.\n */\ninterface DynamicSchemeOptions {\n  sourceColorArgb: number;\n  variant: Variant;\n  contrastLevel: number;\n  isDark: boolean;\n  primaryPalette: TonalPalette;\n  secondaryPalette: TonalPalette;\n  tertiaryPalette: TonalPalette;\n  neutralPalette: TonalPalette;\n  neutralVariantPalette: TonalPalette;\n}\n\n/**\n * Constructed by a set of values representing the current UI state (such as\n * whether or not its dark theme, what the theme style is, etc.), and\n * provides a set of TonalPalettes that can create colors that fit in\n * with the theme style. Used by DynamicColor to resolve into a color.\n */\nexport class DynamicScheme {\n  /**\n   * The source color of the theme as an HCT color.\n   */\n  sourceColorHct: Hct;\n  /**\n   * Given a tone, produces a reddish, colorful, color.\n   */\n  errorPalette: TonalPalette;\n\n  /** The source color of the theme as an ARGB 32-bit integer. */\n  readonly sourceColorArgb: number;\n\n  /** The variant, or style, of the theme. */\n  readonly variant: Variant;\n\n  /**\n   * Value from -1 to 1. -1 represents minimum contrast. 0 represents standard\n   * (i.e. the design as spec'd), and 1 represents maximum contrast.\n   */\n  readonly contrastLevel: number;\n\n  /** Whether the scheme is in dark mode or light mode. */\n  readonly isDark: boolean;\n\n  /**\n   * Given a tone, produces a color. Hue and chroma of the\n   * color are specified in the design specification of the variant. Usually\n   * colorful.\n   */\n  readonly primaryPalette: TonalPalette;\n\n  /**\n   * Given a tone, produces a color. Hue and chroma of\n   * the color are specified in the design specification of the variant. Usually\n   * less colorful.\n   */\n  readonly secondaryPalette: TonalPalette;\n\n  /**\n   * Given a tone, produces a color. Hue and chroma of\n   * the color are specified in the design specification of the variant. Usually\n   * a different hue from primary and colorful.\n   */\n  readonly tertiaryPalette: TonalPalette;\n\n  /**\n   * Given a tone, produces a color. Hue and chroma of the\n   * color are specified in the design specification of the variant. Usually not\n   * colorful at all, intended for background & surface colors.\n   */\n  readonly neutralPalette: TonalPalette;\n\n  /**\n   * Given a tone, produces a color. Hue and chroma\n   * of the color are specified in the design specification of the variant.\n   * Usually not colorful, but slightly more colorful than Neutral. Intended for\n   * backgrounds & surfaces.\n   */\n  readonly neutralVariantPalette: TonalPalette;\n\n  constructor(args: DynamicSchemeOptions) {\n    this.sourceColorArgb = args.sourceColorArgb;\n    this.variant = args.variant;\n    this.contrastLevel = args.contrastLevel;\n    this.isDark = args.isDark;\n    this.sourceColorHct = Hct.fromInt(args.sourceColorArgb);\n    this.primaryPalette = args.primaryPalette;\n    this.secondaryPalette = args.secondaryPalette;\n    this.tertiaryPalette = args.tertiaryPalette;\n    this.neutralPalette = args.neutralPalette;\n    this.neutralVariantPalette = args.neutralVariantPalette;\n    this.errorPalette = TonalPalette.fromHueAndChroma(25.0, 84.0);\n  }\n\n  /**\n   * Support design spec'ing Dynamic Color by schemes that specify hue\n   * rotations that should be applied at certain breakpoints.\n   * @param sourceColor the source color of the theme, in HCT.\n   * @param hues The \"breakpoints\", i.e. the hues at which a rotation should\n   * be apply.\n   * @param rotations The rotation that should be applied when source color's\n   * hue is >= the same index in hues array, and <= the hue at the next index\n   * in hues array.\n   */\n  static getRotatedHue(sourceColor: Hct, hues: number[], rotations: number[]):\n      number {\n    const sourceHue = sourceColor.hue;\n    if (hues.length !== rotations.length) {\n      throw new Error(`mismatch between hue length ${hues.length} & rotations ${\n          rotations.length}`);\n    }\n    if (rotations.length === 1) {\n      return math.sanitizeDegreesDouble(sourceColor.hue + rotations[0]);\n    }\n    const size = hues.length;\n    for (let i = 0; i <= size - 2; i++) {\n      const thisHue = hues[i];\n      const nextHue = hues[i + 1];\n      if (thisHue < sourceHue && sourceHue < nextHue) {\n        return math.sanitizeDegreesDouble(sourceHue + rotations[i]);\n      }\n    }\n    // If this statement executes, something is wrong, there should have been a\n    // rotation found using the arrays.\n    return sourceHue;\n  }\n}", "/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Hct} from '../hct/hct.js';\nimport {TonalPalette} from '../palettes/tonal_palette.js';\nimport * as math from '../utils/math_utils.js';\n\nimport {DynamicScheme} from './dynamic_scheme.js';\nimport {Variant} from './variant.js';\n\n/**\n * A Dynamic Color theme that is intentionally detached from the source color.\n */\nexport class SchemeExpressive extends DynamicScheme {\n  /**\n   * Hues (in degrees) used at breakpoints such that designers can specify a\n   * hue rotation that occurs at a given break point.\n   */\n  private static readonly hues: number[] = [\n    0.0,\n    21.0,\n    51.0,\n    121.0,\n    151.0,\n    191.0,\n    271.0,\n    321.0,\n    360.0,\n  ];\n\n  /**\n   * Hue rotations (in degrees) of the Secondary [TonalPalette],\n   * corresponding to the breakpoints in [hues].\n   */\n  private static readonly secondaryRotations: number[] = [\n    45.0,\n    95.0,\n    45.0,\n    20.0,\n    45.0,\n    90.0,\n    45.0,\n    45.0,\n    45.0,\n  ];\n\n  /**\n   * Hue rotations (in degrees) of the Tertiary [TonalPalette],\n   * corresponding to the breakpoints in [hues].\n   */\n  private static readonly tertiaryRotations: number[] = [\n    120.0,\n    120.0,\n    20.0,\n    45.0,\n    20.0,\n    15.0,\n    20.0,\n    120.0,\n    120.0,\n  ];\n\n  constructor(sourceColorHct: Hct, isDark: boolean, contrastLevel: number) {\n    super({\n      sourceColorArgb: sourceColorHct.toInt(),\n      variant: Variant.EXPRESSIVE,\n      contrastLevel,\n      isDark,\n      primaryPalette: TonalPalette.fromHueAndChroma(\n          math.sanitizeDegreesDouble(sourceColorHct.hue + 240.0), 40.0),\n      secondaryPalette: TonalPalette.fromHueAndChroma(\n          DynamicScheme.getRotatedHue(\n              sourceColorHct, SchemeExpressive.hues,\n              SchemeExpressive.secondaryRotations),\n          24.0),\n      tertiaryPalette: TonalPalette.fromHueAndChroma(\n          DynamicScheme.getRotatedHue(\n              sourceColorHct, SchemeExpressive.hues,\n              SchemeExpressive.tertiaryRotations),\n          32.0),\n      neutralPalette:\n          TonalPalette.fromHueAndChroma(sourceColorHct.hue + 15, 8.0),\n      neutralVariantPalette:\n          TonalPalette.fromHueAndChroma(sourceColorHct.hue + 15, 12.0),\n    });\n  }\n}\n", "/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Hct} from '../hct/hct.js';\nimport {TonalPalette} from '../palettes/tonal_palette.js';\n\nimport {DynamicScheme} from './dynamic_scheme.js';\nimport {Variant} from './variant.js';\n\n/**\n * A Dynamic Color theme that maxes out colorfulness at each position in the\n * Primary Tonal Palette.\n */\nexport class SchemeVibrant extends DynamicScheme {\n  /**\n   * Hues (in degrees) used at breakpoints such that designers can specify a\n   * hue rotation that occurs at a given break point.\n   */\n  private static readonly hues = [\n    0.0,\n    41.0,\n    61.0,\n    101.0,\n    131.0,\n    181.0,\n    251.0,\n    301.0,\n    360.0,\n  ];\n\n  /**\n   * Hue rotations (in degrees) of the Secondary [TonalPalette],\n   * corresponding to the breakpoints in [hues].\n   */\n  private static readonly secondaryRotations = [\n    18.0,\n    15.0,\n    10.0,\n    12.0,\n    15.0,\n    18.0,\n    15.0,\n    12.0,\n    12.0,\n  ];\n\n  /**\n   * Hue rotations (in degrees) of the Tertiary [TonalPalette],\n   * corresponding to the breakpoints in [hues].\n   */\n  private static readonly tertiaryRotations = [\n    35.0,\n    30.0,\n    20.0,\n    25.0,\n    30.0,\n    35.0,\n    30.0,\n    25.0,\n    25.0,\n  ];\n\n  constructor(sourceColorHct: Hct, isDark: boolean, contrastLevel: number) {\n    super({\n      sourceColorArgb: sourceColorHct.toInt(),\n      variant: Variant.VIBRANT,\n      contrastLevel,\n      isDark,\n      primaryPalette: TonalPalette.fromHueAndChroma(sourceColorHct.hue, 200.0),\n      secondaryPalette: TonalPalette.fromHueAndChroma(\n          DynamicScheme.getRotatedHue(\n              sourceColorHct, SchemeVibrant.hues,\n              SchemeVibrant.secondaryRotations),\n          24.0),\n      tertiaryPalette: TonalPalette.fromHueAndChroma(\n          DynamicScheme.getRotatedHue(\n              sourceColorHct, SchemeVibrant.hues,\n              SchemeVibrant.tertiaryRotations),\n          32.0),\n      neutralPalette: TonalPalette.fromHueAndChroma(sourceColorHct.hue, 10.0),\n      neutralVariantPalette:\n          TonalPalette.fromHueAndChroma(sourceColorHct.hue, 12.0),\n    });\n  }\n}\n", "/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Hct} from '../hct/hct.js';\nimport * as math from '../utils/math_utils.js';\n\n/**\n * Default options for ranking colors based on usage counts.\n * desired: is the max count of the colors returned.\n * fallbackColorARGB: Is the default color that should be used if no\n *                    other colors are suitable.\n * filter: controls if the resulting colors should be filtered to not include\n *         hues that are not used often enough, and colors that are effectively\n *         grayscale.\n */\ndeclare interface ScoreOptions {\n  desired?: number;\n  fallbackColorARGB?: number;\n  filter?: boolean;\n}\n\nconst SCORE_OPTION_DEFAULTS = {\n  desired: 4,  // 4 colors matches what Android wallpaper picker.\n  fallbackColorARGB: 0xff4285f4,  // Google Blue.\n  filter: true,  // Avoid unsuitable colors.\n};\n\nfunction compare(a: {hct: Hct, score: number}, b: {hct: Hct, score: number}): number {\n  if (a.score > b.score) {\n    return -1;\n  } else if (a.score < b.score) {\n    return 1;\n  }\n  return 0;\n}\n\n/**\n *  Given a large set of colors, remove colors that are unsuitable for a UI\n *  theme, and rank the rest based on suitability.\n *\n *  Enables use of a high cluster count for image quantization, thus ensuring\n *  colors aren't muddied, while curating the high cluster count to a much\n *  smaller number of appropriate choices.\n */\nexport class Score {\n  private static readonly TARGET_CHROMA = 48.0;  // A1 Chroma\n  private static readonly WEIGHT_PROPORTION = 0.7;\n  private static readonly WEIGHT_CHROMA_ABOVE = 0.3;\n  private static readonly WEIGHT_CHROMA_BELOW = 0.1;\n  private static readonly CUTOFF_CHROMA = 5.0;\n  private static readonly CUTOFF_EXCITED_PROPORTION = 0.01;\n\n  private constructor() {}\n\n  /**\n   * Given a map with keys of colors and values of how often the color appears,\n   * rank the colors based on suitability for being used for a UI theme.\n   *\n   * @param colorsToPopulation map with keys of colors and values of how often\n   *     the color appears, usually from a source image.\n   * @param {ScoreOptions} options optional parameters.\n   * @return Colors sorted by suitability for a UI theme. The most suitable\n   *     color is the first item, the least suitable is the last. There will\n   *     always be at least one color returned. If all the input colors\n   *     were not suitable for a theme, a default fallback color will be\n   *     provided, Google Blue.\n   */\n  static score(\n    colorsToPopulation: Map<number, number>, options?: ScoreOptions):\n      number[] {\n    const {desired, fallbackColorARGB, filter} = {...SCORE_OPTION_DEFAULTS, ...options};\n    // Get the HCT color for each Argb value, while finding the per hue count and\n    // total count.\n    const colorsHct: Hct[] = [];\n    const huePopulation = new Array<number>(360).fill(0);\n    let populationSum = 0;\n    for (const [argb, population] of colorsToPopulation.entries()) {\n      const hct = Hct.fromInt(argb);\n      colorsHct.push(hct);\n      const hue = Math.floor(hct.hue);\n      huePopulation[hue] += population;\n      populationSum += population;\n    }\n\n    // Hues with more usage in neighboring 30 degree slice get a larger number.\n    const hueExcitedProportions = new Array<number>(360).fill(0.0);\n    for (let hue = 0; hue < 360; hue++) {\n      const proportion = huePopulation[hue] / populationSum;\n      for (let i = hue - 14; i < hue + 16; i++) {\n        const neighborHue = math.sanitizeDegreesInt(i);\n        hueExcitedProportions[neighborHue] += proportion;\n      }\n    }\n\n    // Scores each HCT color based on usage and chroma, while optionally\n    // filtering out values that do not have enough chroma or usage.\n    const scoredHct = new Array<{hct: Hct, score: number}>();\n    for (const hct of colorsHct) {\n      const hue = math.sanitizeDegreesInt(Math.round(hct.hue));\n      const proportion = hueExcitedProportions[hue];\n      if (filter && (hct.chroma < Score.CUTOFF_CHROMA || proportion <= Score.CUTOFF_EXCITED_PROPORTION)) {\n        continue;\n      }\n\n      const proportionScore = proportion * 100.0 * Score.WEIGHT_PROPORTION;\n      const chromaWeight = hct.chroma < Score.TARGET_CHROMA ? Score.WEIGHT_CHROMA_BELOW : Score.WEIGHT_CHROMA_ABOVE;\n      const chromaScore = (hct.chroma - Score.TARGET_CHROMA) * chromaWeight;\n      const score = proportionScore + chromaScore;\n      scoredHct.push({hct, score});\n    }\n    // Sorted so that colors with higher scores come first.\n    scoredHct.sort(compare);\n\n    // Iterates through potential hue differences in degrees in order to select\n    // the colors with the largest distribution of hues possible. Starting at\n    // 90 degrees(maximum difference for 4 colors) then decreasing down to a\n    // 15 degree minimum.\n    const chosenColors: Hct[] = [];\n    for (let differenceDegrees = 90; differenceDegrees >= 15; differenceDegrees--) {\n      chosenColors.length = 0;\n      for (const {hct} of scoredHct) {\n        const duplicateHue = chosenColors.find(chosenHct => {\n          return math.differenceDegrees(hct.hue, chosenHct.hue) < differenceDegrees;\n        });\n        if (!duplicateHue) {\n          chosenColors.push(hct);\n        }\n        if (chosenColors.length >= desired) break;\n      }\n      if (chosenColors.length >= desired) break;\n    }\n    const colors: number[] = [];\n    if (chosenColors.length === 0) {\n      colors.push(fallbackColorARGB);\n    }\n    for (const chosenHct of chosenColors) {\n      colors.push(chosenHct.toInt());\n    }\n    return colors;\n  }\n}\n", "/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as colorUtils from './color_utils.js';\n\n/**\n * Utility methods for hexadecimal representations of colors.\n */\n\n/**\n * @param argb ARGB representation of a color.\n * @return Hex string representing color, ex. #ff0000 for red.\n */\nexport function hexFromArgb(argb: number) {\n  const r = colorUtils.redFromArgb(argb);\n  const g = colorUtils.greenFromArgb(argb);\n  const b = colorUtils.blueFromArgb(argb);\n  const outParts = [r.toString(16), g.toString(16), b.toString(16)];\n\n  // Pad single-digit output values\n  for (const [i, part] of outParts.entries()) {\n    if (part.length === 1) {\n      outParts[i] = '0' + part;\n    }\n  }\n\n  return '#' + outParts.join('');\n}\n\n/**\n * @param hex String representing color as hex code. Accepts strings with or\n *     without leading #, and string representing the color using 3, 6, or 8\n *     hex characters.\n * @return ARGB representation of color.\n */\nexport function argbFromHex(hex: string) {\n  hex = hex.replace('#', '');\n  const isThree = hex.length === 3;\n  const isSix = hex.length === 6;\n  const isEight = hex.length === 8;\n  if (!isThree && !isSix && !isEight) {\n    throw new Error('unexpected hex ' + hex);\n  }\n  let r = 0;\n  let g = 0;\n  let b = 0;\n  if (isThree) {\n    r = parseIntHex(hex.slice(0, 1).repeat(2));\n    g = parseIntHex(hex.slice(1, 2).repeat(2));\n    b = parseIntHex(hex.slice(2, 3).repeat(2));\n  } else if (isSix) {\n    r = parseIntHex(hex.slice(0, 2));\n    g = parseIntHex(hex.slice(2, 4));\n    b = parseIntHex(hex.slice(4, 6));\n  } else if (isEight) {\n    r = parseIntHex(hex.slice(2, 4));\n    g = parseIntHex(hex.slice(4, 6));\n    b = parseIntHex(hex.slice(6, 8));\n  }\n\n  return (\n      ((255 << 24) | ((r & 0x0ff) << 16) | ((g & 0x0ff) << 8) | (b & 0x0ff)) >>>\n      0);\n}\n\nfunction parseIntHex(value: string) {\n  // tslint:disable-next-line:ban\n  return parseInt(value, 16);\n}\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  argbFromHex,\n  Hct,\n  hexFromArgb,\n  MaterialDynamicColors,\n  SchemeContent,\n} from '@material/material-color-utilities';\n\nimport type {Theme} from '../types/color-events.js';\n\nimport {applyThemeString} from './apply-theme-string.js';\n\n/**\n * A Mapping of color token name to MCU HCT color function generator.\n */\nconst materialColors = {\n  background: MaterialDynamicColors.background,\n  'on-background': MaterialDynamicColors.onBackground,\n  surface: MaterialDynamicColors.surface,\n  'surface-dim': MaterialDynamicColors.surfaceDim,\n  'surface-bright': MaterialDynamicColors.surfaceBright,\n  'surface-container-lowest': MaterialDynamicColors.surfaceContainerLowest,\n  'surface-container-low': MaterialDynamicColors.surfaceContainerLow,\n  'surface-container': MaterialDynamicColors.surfaceContainer,\n  'surface-container-high': MaterialDynamicColors.surfaceContainerHigh,\n  'surface-container-highest': MaterialDynamicColors.surfaceContainerHighest,\n  'on-surface': MaterialDynamicColors.onSurface,\n  'surface-variant': MaterialDynamicColors.surfaceVariant,\n  'on-surface-variant': MaterialDynamicColors.onSurfaceVariant,\n  'inverse-surface': MaterialDynamicColors.inverseSurface,\n  'inverse-on-surface': MaterialDynamicColors.inverseOnSurface,\n  outline: MaterialDynamicColors.outline,\n  'outline-variant': MaterialDynamicColors.outlineVariant,\n  shadow: MaterialDynamicColors.shadow,\n  scrim: MaterialDynamicColors.scrim,\n  'surface-tint': MaterialDynamicColors.surfaceTint,\n  primary: MaterialDynamicColors.primary,\n  'on-primary': MaterialDynamicColors.onPrimary,\n  'primary-container': MaterialDynamicColors.primaryContainer,\n  'on-primary-container': MaterialDynamicColors.onPrimaryContainer,\n  'inverse-primary': MaterialDynamicColors.inversePrimary,\n  secondary: MaterialDynamicColors.secondary,\n  'on-secondary': MaterialDynamicColors.onSecondary,\n  'secondary-container': MaterialDynamicColors.secondaryContainer,\n  'on-secondary-container': MaterialDynamicColors.onSecondaryContainer,\n  tertiary: MaterialDynamicColors.tertiary,\n  'on-tertiary': MaterialDynamicColors.onTertiary,\n  'tertiary-container': MaterialDynamicColors.tertiaryContainer,\n  'on-tertiary-container': MaterialDynamicColors.onTertiaryContainer,\n  error: MaterialDynamicColors.error,\n  'on-error': MaterialDynamicColors.onError,\n  'error-container': MaterialDynamicColors.errorContainer,\n  'on-error-container': MaterialDynamicColors.onErrorContainer,\n};\n\n/**\n * Converts a hex value to a HCT tuple.\n *\n * @param value A stringified hex color e.g. '#C01075'\n * @return Material Color Utilities HCT color tuple.\n */\nexport function hctFromHex(value: string) {\n  return Hct.fromInt(argbFromHex(value));\n}\n\n/**\n * Converts a hue chroma and tone to a hex color value clamped in the hex\n * colorspace.\n *\n * @param hue The hue of the color of value [0,360]\n * @param chroma The chroma of the color of value [0,150]\n * @param tone The tone of the color of value [0,100]\n * @return A clamped, stringified hex color value representing the HCT values.\n */\nexport function hexFromHct(hue: number, chroma: number, tone: number) {\n  const hct = Hct.from(hue, chroma, tone);\n  const value = hct.toInt();\n  return hexFromArgb(value);\n}\n\n/**\n * Generates a theme object mapping of kebab-system-color-token to stringified\n * sRGB hex value in the Material SchemeContent color scheme given a single\n * color.\n *\n * @param color A stringified hex color e.g. '#C01075'\n * @param isDark Whether or not to generate a dark mode theme.\n * @return A theme object that maps the sys color token to its value (not a\n *     custom property).\n */\nexport function themeFromSourceColor(color: string, isDark: boolean): Theme {\n  const scheme = new SchemeContent(Hct.fromInt(argbFromHex(color)), isDark, 0);\n  const theme: {[key: string]: string} = {};\n\n  for (const [key, value] of Object.entries(materialColors)) {\n    theme[key] = hexFromArgb(value.getArgb(scheme));\n  }\n  return theme;\n}\n\n/**\n * Generates a stylesheet string of custom properties from the given theme, and\n * applies the styles to the given document or shadow root, and caches the value\n * in memory and localstorage given an optional ssName.\n *\n * @param doc Document or ShadowRoot to apply theme.\n * @param theme A theme object that maps the sys color token to its value\n *     (output of themeFromSourceColor).\n * @param ssName Optional global identifier of the constructable stylesheet and\n *     used to generate the localstorage name.\n */\nexport function applyMaterialTheme(\n  doc: DocumentOrShadowRoot,\n  theme: Theme,\n  ssName = 'material-theme',\n) {\n  let styleString = ':root,:host{';\n  for (const [key, value] of Object.entries(theme)) {\n    styleString += `--md-sys-color-${key}:${value};`;\n  }\n  styleString += '}';\n\n  applyThemeString(doc, styleString, ssName);\n}\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport '@material/web/slider/slider.js';\n\nimport type {MdSlider} from '@material/web/slider/slider.js';\nimport {css, html, LitElement} from 'lit';\nimport {customElement, property} from 'lit/decorators.js';\nimport {styleMap} from 'lit/directives/style-map.js';\n\nimport {hctFromHex, hexFromHct} from '../utils/material-color-helpers.js';\n\n/**\n * A tuple denoting an inclusive value range.\n */\ntype Range = [number, number];\n\nconst HUE_RANGE: Range = [0, 360];\nconst CHROMA_RANGE: Range = [0, 150];\nconst TONE_RANGE: Range = [0, 100];\n\n/**\n * A slider for either hue, chroma, or tone with a preview gradient.\n *\n * @event input Fired when the user changes the value.\n */\n@customElement('hct-slider')\nexport class HCTSlider extends LitElement {\n  /**\n   * The visiable and accessible label for the control.\n   */\n  @property({type: String}) label = '';\n\n  /**\n   * The value of the slider.\n   */\n  @property({type: Number}) value = 0;\n\n  /**\n   * The color from which to base the preview gradient (really only useful for\n   * chroma).\n   */\n  @property({type: String}) color = '';\n\n  /**\n   * The type of HCT slider to display\n   */\n  @property({type: String}) type: 'hue' | 'chroma' | 'tone' = 'hue';\n\n  override render() {\n    let range = HUE_RANGE;\n\n    if (this.type === 'chroma') {\n      range = CHROMA_RANGE;\n    } else if (this.type === 'tone') {\n      range = TONE_RANGE;\n    }\n\n    return html`<section>\n      <span id=\"label\" class=\"color-on-surface-text\">${this.label}</span>\n      <md-slider\n        id=\"source\"\n        labeled\n        aria-label=${this.label}\n        .min=${range[0]}\n        .max=${range[1]}\n        .value=${this.value}\n        @input=${this.onInput}></md-slider>\n      <div\n        id=\"gradient\"\n        class=${this.type}\n        style=${styleMap({\n          background: this.buildGradient(),\n        })}></div>\n    </section>`;\n  }\n\n  private onInput(e: Event) {\n    const target = e.target as MdSlider;\n    this.value = target.value as number;\n\n    this.dispatchEvent(new Event('input'));\n  }\n\n  /**\n   * Generates the linear-gradient background image CSS string for the gradient\n   * preview under the slider.\n   *\n   * @return A linear gradient CSS string.\n   */\n  private buildGradient() {\n    const numStops = 100;\n\n    let linearGradientString = 'linear-gradient(to right';\n\n    if (this.type === 'hue') {\n      for (let i = 0; i < numStops; i++) {\n        const hue = (HUE_RANGE[1] / numStops) * i;\n        // Set chroma to something fairly saturated + tone in the middle of\n        // black and white so it's not too dark or too bright and vary the hue\n        const hex = hexFromHct(hue, 100, 50);\n        linearGradientString += `, ${hex} ${i}%`;\n      }\n    } else if (this.type === 'chroma') {\n      const hct = hctFromHex(this.color || '#000');\n      const hue = hct.hue;\n\n      for (let i = 0; i < numStops; i++) {\n        const chroma = (CHROMA_RANGE[1] / numStops) * i;\n        // Change the color of the bar to the current hue and set the tone to\n        // mid so we it's not too dark or too bright and vary the chroma\n        const hex = hexFromHct(hue, chroma, 50);\n        linearGradientString += `, ${hex} ${i}%`;\n      }\n    } else if (this.type === 'tone') {\n      for (let i = 0; i < numStops; i++) {\n        const tone = (TONE_RANGE[1] / numStops) * i;\n        // Set tone color to black (0 chroma means that hue doesn't matter) and\n        // vary the tone\n        const hex = hexFromHct(0, 0, tone);\n        linearGradientString += `, ${hex} ${i}%`;\n      }\n    }\n\n    linearGradientString += ')';\n\n    return linearGradientString;\n  }\n\n  static override styles = css`\n    section {\n      display: flex;\n      flex-direction: column;\n    }\n\n    #gradient {\n      height: 24px;\n      border-radius: 12px;\n      border: 1px solid currentColor;\n      box-sizing: border-box;\n    }\n\n    #gradient.chroma {\n      will-change: background;\n    }\n\n    #label,\n    #gradient {\n      margin-inline: calc(var(--md-slider-handle-width, 20px) / 2);\n    }\n  `;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'hct-slider': HCTSlider;\n  }\n}\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * A theme mapping of token name (not custom property name) to stringified CSS\n * value.\n */\nexport interface Theme {\n  [tokenName: string]: string;\n}\n\n/**\n * Requests the global theme listener change the theme due to a color change.\n */\nexport class ChangeColorEvent extends Event {\n  /**\n   * @param color The new source color to apply.\n   */\n  constructor(public color: string) {\n    super('change-color', {bubbles: true, composed: true});\n  }\n}\n\n/**\n * Requests the global theme listener change the theme due to a dark mode\n * change.\n */\nexport class ChangeDarkModeEvent extends Event {\n  /**\n   * @param mode The new color mode to apply.\n   */\n  constructor(public mode: 'light' | 'dark' | 'auto') {\n    super('change-mode', {bubbles: true, composed: true});\n  }\n}\n\ndeclare global {\n  interface HTMLElementEventMap {\n    'change-color': ChangeColorEvent;\n    'change-mode': ChangeDarkModeEvent;\n  }\n}\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  applyMaterialTheme,\n  themeFromSourceColor,\n} from './material-color-helpers.js';\n\n/** Color mode, either overriding light/dark or the user's preference. */\nexport type ColorMode = 'light' | 'dark' | 'auto';\n\n/**\n * Generates a Material Theme from a given color and dark mode boolean, and\n * applies the theme to the document and lets the app know that the theme has\n * changed.\n *\n * @param color The source color to generate the theme.\n * @param isDark Whether or not the theme should be in dark mode.\n */\nfunction applyThemeFromColor(color: string, isDark: boolean) {\n  const theme = themeFromSourceColor(color, isDark);\n  applyMaterialTheme(document, theme);\n  // Dispatches event to communicate with components pages' JS to update the\n  // theme in the playground preview.\n  window.dispatchEvent(new Event('theme-changed'));\n}\n\n/**\n * Determines whether or not the mode should be Dark. This also means\n * calculating whether it should be dark if the current mode is 'auto'.\n *\n * @param mode The current color mode 'light', 'dark', or 'auto'.\n * @param saveAutoMode (Optional) Whether or not to save last auto mode to\n *     localstorage. Set to false if you simply want to query whether auto mode\n *     is dark or not. Defaults to true.\n * @return Whether or not the dark mode color tokens should apply.\n */\nexport function isModeDark(mode: ColorMode, saveAutoMode = true) {\n  let isDark = mode === 'dark';\n\n  // Determines whether the auto mode should display light or dark.\n  if (mode === 'auto') {\n    isDark = window.matchMedia('(prefers-color-scheme: dark)').matches;\n    if (saveAutoMode) {\n      // We have to save this because if the user closes the tab when it's light\n      // and reopens it when it's dark, we need to know whether the last applied\n      // 'auto' mode was correct.\n      saveLastSavedAutoColorMode(isDark ? 'dark' : 'light');\n    }\n  }\n\n  return isDark;\n}\n\n/**\n * Gets the current stringified material theme css string from localstorage.\n *\n * @return The current stringified material theme css string.\n */\nexport function getCurrentThemeString(): string | null {\n  return localStorage.getItem('material-theme');\n}\n\n/**\n * Gets the current color mode from localstorage.\n *\n * @return The current color mode.\n */\nexport function getCurrentMode(): ColorMode | null {\n  return localStorage.getItem('color-mode') as ColorMode | null;\n}\n\n/**\n * Saves the given color mode to localstorage.\n *\n * @param mode The color mode to save to localstorage.\n */\nexport function saveColorMode(mode: ColorMode) {\n  localStorage.setItem('color-mode', mode);\n}\n\n/**\n * Gets the current seed color from localstorage.\n *\n * @return The current seed color.\n */\nexport function getCurrentSeedColor(): string | null {\n  return localStorage.getItem('seed-color');\n}\n\n/**\n * Saves the given seed color to localstorage.\n *\n * @param color The seed color to save to local storage.\n */\nexport function saveSeedColor(color: string) {\n  localStorage.setItem('seed-color', color);\n}\n\n/**\n * Gets last applied color mode while in \"auto\" from localstorage.\n *\n * @return The last applied color mode while in \"auto\".\n */\nexport function getLastSavedAutoColorMode() {\n  return localStorage.getItem('last-auto-color-mode') as\n    | 'light'\n    | 'dark'\n    | null;\n}\n\n/**\n * Saves last applied color mode while in \"auto\" from localstorage.\n *\n * @param mode The last applied color mode while in \"auto\" to be saved to local\n *     storage.\n */\nexport function saveLastSavedAutoColorMode(mode: 'light' | 'dark') {\n  localStorage.setItem('last-auto-color-mode', mode);\n}\n\n/**\n * Generates and applies a new theme due to a change in source color.\n *\n * @param color The new source color from which to generate the new theme.\n */\nexport function changeColor(color: string) {\n  const lastColorMode = getCurrentMode()!;\n  const isDark = isModeDark(lastColorMode);\n\n  applyThemeFromColor(color, isDark);\n  saveSeedColor(color);\n}\n\n/**\n * Generates and applies a new theme due to a change in color mode.\n *\n * @param mode The new color mode from which to generate the new theme.\n */\nexport function changeColorMode(mode: ColorMode) {\n  const color = getCurrentSeedColor()!;\n  const isDark = isModeDark(mode);\n\n  applyThemeFromColor(color, isDark);\n  saveColorMode(mode);\n}\n\n/**\n * Generates and applies a new theme due to a change in both source color and\n * color mode.\n *\n * @param color The new source color from which to generate the new theme.\n * @param mode The new color mode from which to generate the new theme.\n */\nexport function changeColorAndMode(color: string, mode: ColorMode) {\n  const isDark = isModeDark(mode);\n\n  applyThemeFromColor(color, isDark);\n  saveSeedColor(color);\n  saveColorMode(mode);\n}\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport '@material/web/focus/md-focus-ring.js';\nimport '@material/web/icon/icon.js';\nimport '@material/web/labs/segmentedbutton/outlined-segmented-button.js';\nimport '@material/web/labs/segmentedbuttonset/outlined-segmented-button-set.js';\nimport './copy-code-button.js';\nimport './hct-slider.js';\n\nimport type {MdOutlinedSegmentedButton} from '@material/web/labs/segmentedbutton/outlined-segmented-button.js';\nimport {css, html, LitElement} from 'lit';\nimport {customElement, query, queryAll, state} from 'lit/decorators.js';\nimport {live} from 'lit/directives/live.js';\n\nimport {ChangeColorEvent, ChangeDarkModeEvent} from '../types/color-events.js';\nimport {hctFromHex, hexFromHct} from '../utils/material-color-helpers.js';\nimport type {ColorMode} from '../utils/theme.js';\nimport {\n  getCurrentMode,\n  getCurrentSeedColor,\n  getCurrentThemeString,\n} from '../utils/theme.js';\n\nimport type {HCTSlider} from './hct-slider.js';\n\n/**\n * A small set of controls that allows the user to change the theme and preview\n * color values.\n */\n@customElement('theme-changer')\nexport class ThemeChanger extends LitElement {\n  static override shadowRootOptions = {\n    ...LitElement.shadowRootOptions,\n    delegatesFocus: true,\n  };\n\n  /**\n   * The currently selected color mode.\n   */\n  @state() selectedColorMode: ColorMode | null = null;\n\n  /**\n   * The currently selected hex color.\n   *\n   * NOTE: Hex colors are in the srgb color space and HCT has a much larger, so\n   * this value is a clipped value of HCT.\n   */\n  @state() hexColor = '';\n\n  /**\n   * The current hue value of the hue slider.\n   */\n  @state() hue = 0;\n\n  /**\n   * The crrent value of the chroma slider.\n   */\n  @state() chroma = 0;\n\n  /**\n   * The current value of the tone slider.\n   */\n  @state() tone = 0;\n\n  @query('input') private inputEl!: HTMLInputElement;\n  @queryAll('hct-slider') private sliders!: NodeListOf<HCTSlider>;\n\n  render() {\n    return html`\n      <div id=\"head-wrapper\">\n        <h2> Theme Controls </h2>\n        <copy-code-button\n          button-title=\"Copy current theme to clipboard\"\n          label=\"Copy current theme\"\n          .getCopyText=${getCurrentThemeString}>\n        </copy-code-button>\n      </div>\n      ${this.renderHexPicker()} ${this.renderHctPicker()}\n      ${this.renderColorModePicker()}\n    `;\n  }\n\n  /**\n   * Renders a circular native color picker with a focus ring.\n   */\n  protected renderHexPicker() {\n    return html`<div>\n      <label id=\"hex\" for=\"color-input\">\n        <span class=\"label\">Hex Source Color</span>\n        <span class=\"input-wrapper\">\n          <div class=\"overflow\">\n            <input\n              id=\"color-input\"\n              @input=${this.onHexPickerInput}\n              type=\"color\"\n              .value=${live(this.hexColor)} />\n          </div>\n          <md-focus-ring for=\"color-input\"></md-focus-ring>\n        </span>\n      </label>\n    </div>`;\n  }\n\n  /**\n   * Renders the three hct color pickers.\n   */\n  private renderHctPicker() {\n    return html`<div class=\"sliders\">\n      <hct-slider\n        .value=${live(this.hue)}\n        type=\"hue\"\n        label=\"Hue\"\n        max=\"360\"\n        @input=${this.onSliderInput}></hct-slider>\n      <hct-slider\n        .value=${live(this.chroma)}\n        .color=${this.hexColor}\n        type=\"chroma\"\n        label=\"Chroma\"\n        max=\"150\"\n        @input=${this.onSliderInput}></hct-slider>\n      <hct-slider\n        .value=${live(this.tone)}\n        type=\"tone\"\n        label=\"Tone\"\n        max=\"100\"\n        @input=${this.onSliderInput}></hct-slider>\n    </div>`;\n  }\n\n  /**\n   * Renders the color mode segmented button set picker.\n   */\n  private renderColorModePicker() {\n    return html`<md-outlined-segmented-button-set\n      @segmented-button-set-selection=${this.onColorModeSelection}\n      aria-label=\"Color mode\">\n      ${this.renderModeButton('dark', 'dark_mode')}\n      ${this.renderModeButton('auto', 'brightness_medium')}\n      ${this.renderModeButton('light', 'light_mode')}\n    </md-outlined-segmented-button-set>`;\n  }\n\n  /**\n   * Renders a color mode segmented button.\n   *\n   * @param mode Sets the value and the title of the button to the given color\n   *     mode.\n   * @param icon The icon to display in the button.\n   */\n  private renderModeButton(mode: ColorMode, icon: string) {\n    return html`<md-outlined-segmented-button\n      data-value=${mode}\n      title=${mode}\n      aria-label=\"${mode} color scheme\"\n      .selected=${this.selectedColorMode === mode}>\n      <md-icon slot=\"icon\">${icon}</md-icon>\n    </md-outlined-segmented-button>`;\n  }\n\n  private onSliderInput() {\n    for (const slider of this.sliders) {\n      this[slider.type] = slider.value;\n    }\n\n    this.hexColor = hexFromHct(this.hue, this.chroma, this.tone);\n    this.dispatchEvent(new ChangeColorEvent(this.hexColor));\n  }\n\n  /**\n   * Updates the HCT sliders by converting a hex color to HCT.\n   *\n   * @param hexColor The hex color to convert to HCT and update the sliders.\n   */\n  private updateHctFromHex(hexColor: string) {\n    const hct = hctFromHex(hexColor);\n    this.hue = hct.hue;\n    this.chroma = hct.chroma;\n    this.tone = hct.tone;\n  }\n\n  private onHexPickerInput() {\n    this.hexColor = this.inputEl.value;\n    this.updateHctFromHex(this.hexColor);\n    this.dispatchEvent(new ChangeColorEvent(this.hexColor));\n  }\n\n  async firstUpdated() {\n    if (!this.selectedColorMode) {\n      // localStorage is not available on server so must do this here.\n      this.selectedColorMode = getCurrentMode();\n    }\n\n    if (!this.hexColor) {\n      // localStorage is not available on server so must do this here.\n      this.hexColor = getCurrentSeedColor()!;\n    }\n\n    this.updateHctFromHex(this.hexColor);\n  }\n\n  private onColorModeSelection(\n    e: CustomEvent<{\n      button: MdOutlinedSegmentedButton;\n      selected: boolean;\n      index: number;\n    }>,\n  ) {\n    const {button} = e.detail;\n    const value = button.dataset.value as ColorMode;\n    this.selectedColorMode = value;\n    this.dispatchEvent(new ChangeDarkModeEvent(value));\n  }\n\n  static styles = css`\n    :host {\n      /* These are the default values, but we don't want the alignment to break\n       * in case the token values are updated.\n       */\n      --_copy-button-button-size: 40px;\n      --_copy-button-icon-size: 24px;\n      position: relative;\n      display: flex;\n      flex-direction: column;\n      margin: var(--catalog-spacing-m) var(--catalog-spacing-l);\n    }\n\n    :host > * {\n      margin-block-end: var(--catalog-spacing-l);\n    }\n\n    :host > *:last-child {\n      margin-block-end: 0;\n    }\n\n    #head-wrapper {\n      display: flex;\n      align-items: space-between;\n    }\n\n    input {\n      border: none;\n      background: none;\n    }\n\n    .sliders,\n    #hex {\n      padding-inline: var(--catalog-spacing-m);\n      border-radius: var(--catalog-shape-l);\n      background-color: var(--md-sys-color-surface-variant);\n      color: var(--md-sys-color-on-surface-variant);\n\n      /* Default track color is inaccessible in a surface-variant */\n      --md-slider-inactive-track-color: var(--md-sys-color-on-surface-variant);\n    }\n\n    hct-slider {\n      display: block;\n      margin-block: 24px;\n    }\n\n    h2 {\n      margin: 0;\n      text-align: center;\n      position: relative;\n      height: var(--_copy-button-icon-size);\n    }\n\n    copy-code-button {\n      --md-icon-button-icon-size: var(--_copy-button-icon-size);\n      --md-icon-button-state-layer-width: var(--_copy-button-button-size);\n      --md-icon-button-state-layer-height: var(--_copy-button-button-size);\n      /*\n       * Center the copy icon with the h2 text\n       * -(icon button size - intrinsic icon size) / 2\n       */\n      --_inline-block-inset: calc(\n        -1 * (var(--_copy-button-button-size) - var(--_copy-button-icon-size)) /\n          2\n      );\n      --catalog-copy-code-button-inset: var(--_inline-block-inset) 0 auto auto;\n      position: static;\n    }\n\n    #hex {\n      display: flex;\n      padding: 12px;\n      align-items: center;\n    }\n\n    #hex .label {\n      flex-grow: 1;\n    }\n\n    #hex .input-wrapper {\n      box-sizing: border-box;\n      width: 48px;\n      height: 48px;\n      box-sizing: border-box;\n      border: 1px solid var(--md-sys-color-on-secondary-container);\n      position: relative;\n    }\n\n    #hex .input-wrapper,\n    #hex md-focus-ring {\n      border-radius: 50%;\n    }\n\n    .overflow {\n      width: 100%;\n      height: 100%;\n      overflow: hidden;\n      border-radius: inherit;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n    }\n\n    #hex input {\n      min-width: 200%;\n      min-height: 200%;\n    }\n\n    @media (forced-colors: active) {\n      #hex,\n      .sliders {\n        box-sizing: border-box;\n        border: 1px solid CanvasText;\n      }\n    }\n  `;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'theme-changer': ThemeChanger;\n  }\n}\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {html} from 'lit';\n\n/**\n * The Material design logo.\n *\n * Source: Internal google symbols search.\n */\nexport const materialDesign = html` <svg\n  viewBox=\"0 96 960 960\"\n  fill=\"currentColor\">\n  <path\n    d=\"M480 1016q-91 0-171-34.5T169 887q-60-60-94.5-140T40 576q0-91 34.5-171T169 265q60-60 140-94.5T480 136q91 0 171 34.5T791 265q60 60 94.5 140T920 576q0 91-34.5 171T791 887q-60 60-140 94.5T480 1016ZM200 802V351q-38 47-59 104t-21 121q0 65 21 122t59 104Zm54-506h452q-47-38-104-59t-122-21q-65 0-122 21t-104 59Zm226 381 151-301H330l150 301Zm40 99h160V456L520 776Zm-240 0h160L280 456v320Zm200 160q64 0 121.5-21T706 856H254q47 38 104.5 59T480 936Zm280-134q38-47 59-104t21-122q0-64-21-121t-59-104v451Z\" />\n</svg>`;\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport '@material/web/focus/md-focus-ring.js';\nimport '@material/web/icon/icon.js';\nimport '@material/web/iconbutton/icon-button.js';\n\nimport type {MdIconButton} from '@material/web/iconbutton/icon-button.js';\nimport {css, html, LitElement} from 'lit';\nimport {customElement, query, state} from 'lit/decorators.js';\nimport {live} from 'lit/directives/live.js';\n\nimport {drawerOpenSignal} from '../signals/drawer-open-state.js';\nimport {inertContentSignal, inertSidebarSignal} from '../signals/inert.js';\nimport {SignalElement} from '../signals/signal-element.js';\nimport {materialDesign} from '../svg/material-design-logo.js';\n\n/**\n * Top app bar of the catalog.\n */\n@customElement('top-app-bar')\nexport class TopAppBar extends SignalElement(LitElement) {\n  /**\n   * Whether or not the color picker menu is open.\n   */\n  @state() private menuOpen = false;\n  @query('theme-changer') private themeChanger!: HTMLElement;\n\n  render() {\n    return html`\n      <header>\n        <div class=\"default-content\">\n          <section class=\"start\">\n            <md-icon-button\n              toggle\n              class=\"menu-button\"\n              aria-label-selected=\"open navigation menu\"\n              aria-label=\"close navigation menu\"\n              aria-expanded=${drawerOpenSignal.value ? 'false' : 'true'}\n              title=\"${!drawerOpenSignal.value\n                ? 'Open'\n                : 'Close'} navigation menu\"\n              .selected=${live(!drawerOpenSignal.value)}\n              @input=${this.onMenuIconToggle}>\n              <md-icon slot=\"selected\">menu</md-icon>\n              <md-icon>menu_open</md-icon>\n            </md-icon-button>\n            <md-icon-button\n              href=\"/\"\n              class=\"home-button\"\n              title=\"Home\"\n              aria-label=\"Home\">\n              ${materialDesign}\n            </md-icon-button>\n          </section>\n\n          <a href=\"/\" id=\"home-link\">\n            Material Web\n            <md-focus-ring for=\"home-link\"></md-focus-ring>\n          </a>\n\n          <a id=\"skip-to-main\" href=\"#main-content\" tabindex=\"0\">\n            Skip to main content\n          </a>\n\n          <section class=\"end\">\n            <lit-island\n              on:interaction=\"pointerenter,focusin,pointerdown\"\n              import=\"/js/hydration-entrypoints/menu.js\"\n              id=\"menu-island\">\n              <md-icon-button\n                id=\"theme-button\"\n                @click=\"${this.onPaletteClick}\"\n                title=\"Page theme controls\"\n                aria-label=\"Page theme controls\"\n                aria-haspopup=\"dialog\"\n                aria-expanded=${this.menuOpen ? 'true' : 'false'}>\n                <md-icon>palette</md-icon>\n              </md-icon-button>\n              <md-menu\n                anchor=\"theme-button\"\n                menu-corner=\"start-end\"\n                anchor-corner=\"end-end\"\n                default-focus=\"none\"\n                role=\"dialog\"\n                aria-label=\"Page color theme controls\"\n                .open=${this.menuOpen}\n                @opened=${this.onMenuOpened}\n                @closed=${this.onMenuClosed}\n                @keydown=${this.onKeydown}>\n                <theme-changer></theme-changer>\n              </md-menu>\n            </lit-island>\n          </section>\n        </div>\n        <slot></slot>\n      </header>\n    `;\n  }\n\n  /**\n   * Opens the theme changer menu and inerts the rest of the page.\n   */\n  private onPaletteClick() {\n    this.menuOpen = true;\n    inertContentSignal.value = true;\n    inertSidebarSignal.value = true;\n    drawerOpenSignal.value = false;\n  }\n\n  /**\n   * Syncs current menu state with actual menu state and makes the rest of the\n   * page interactive again.\n   */\n  private onMenuClosed() {\n    this.menuOpen = false;\n    inertContentSignal.value = false;\n    inertSidebarSignal.value = false;\n  }\n\n  private onMenuOpened() {\n    this.themeChanger.focus();\n  }\n\n  private onKeydown(e: KeyboardEvent) {\n    if (!e.defaultPrevented && e.key === 'Escape') {\n      e.preventDefault();\n      this.menuOpen = false;\n    }\n  }\n\n  /**\n   * Toggles the sidebar's open state.\n   */\n  private onMenuIconToggle(e: InputEvent) {\n    drawerOpenSignal.value = !(e.target as MdIconButton).selected;\n  }\n\n  static styles = css`\n    :host,\n    header {\n      display: block;\n      height: var(--catalog-top-app-bar-height);\n    }\n\n    header {\n      position: fixed;\n      inset: 0 0 auto 0;\n      display: flex;\n      align-items: center;\n      box-sizing: border-box;\n      padding: var(--catalog-spacing-m) var(--catalog-spacing-l);\n      background-color: var(--md-sys-color-surface-container);\n      color: var(--md-sys-color-on-surface);\n      z-index: 12;\n    }\n\n    .default-content {\n      width: 100%;\n      display: flex;\n      align-items: center;\n    }\n\n    md-icon-button:not(:defined) {\n      width: 40px;\n      height: 40px;\n      display: flex;\n      visibility: hidden;\n    }\n\n    md-icon-button * {\n      display: block;\n    }\n\n    a {\n      color: var(--md-sys-color-primary);\n      font-size: max(var(--catalog-title-l-font-size), 22px);\n      text-decoration: none;\n      padding-inline: 12px;\n      position: relative;\n      outline: none;\n      vertical-align: middle;\n    }\n\n    .start .menu-button {\n      display: none;\n    }\n\n    .start .home-button * {\n      color: var(--md-sys-color-primary);\n    }\n\n    .end {\n      flex-grow: 1;\n      display: flex;\n      justify-content: flex-end;\n    }\n\n    #menu-island {\n      position: relative;\n    }\n\n    #skip-to-main {\n      padding: var(--catalog-spacing-s);\n      border-radius: var(--catalog-shape-m);\n      background-color: var(--md-sys-color-inverse-surface);\n      color: var(--md-sys-color-inverse-on-surface);\n      opacity: 0;\n      position: absolute;\n      pointer-events: none;\n    }\n\n    #skip-to-main:focus-visible {\n      opacity: 1;\n      pointer-events: auto;\n    }\n\n    @media (max-width: 1500px) {\n      .start .home-button {\n        display: none;\n      }\n\n      .start .menu-button {\n        display: flex;\n      }\n    }\n  `;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'top-app-bar': TopAppBar;\n  }\n}\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n\nimport { LitElement, css, html } from 'lit';\nimport { customElement, state, query } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { styleMap } from 'lit/directives/style-map.js';\nimport '@material/web/icon/icon.js';\n\n/**\n * A playground preview + editor with a draggable handle.\n */\n@customElement('drag-playground')\nexport class DragPlayground extends LitElement {\n  static styles = css`\n    :host {\n      display: block;\n      --_drag-bar-height: 24px;\n      --_drag-bar-border-width: 1px;\n      --_half-drag-bar-height: calc(\n        (var(--_drag-bar-height) / 2) + var(--_drag-bar-border-width)\n      );\n    }\n\n    #wrapper {\n      display: flex;\n      flex-direction: column;\n    }\n\n    :host,\n    #wrapper,\n    ::slotted(*) {\n      height: 100%;\n    }\n\n    slot {\n      display: block;\n      overflow: hidden;\n    }\n\n    [name='preview'] {\n      height: max(\n        calc(\n          100% - var(--editor-percentage, 0%) - var(--_half-drag-bar-height)\n        ),\n        0px\n      );\n    }\n\n    [name='editor'] {\n      height: max(\n        calc(var(--editor-percentage, 0px) - var(--_half-drag-bar-height)),\n        0px\n      );\n    }\n\n    #drag-bar {\n      touch-action: none;\n      background-color: var(--md-sys-color-surface-container);\n      color: var(--md-sys-color-on-surface);\n      border: var(--_drag-bar-border-width) solid var(--md-sys-color-outline);\n      border-radius: 12px;\n      height: var(--_drag-bar-height);\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      -webkit-user-select: none;\n      user-select: none;\n    }\n\n    #drag-bar:hover {\n      background-color: var(--md-sys-color-surface-container-high);\n      cursor: grab;\n    }\n\n    #drag-bar.isDragging {\n      background-color: var(--md-sys-color-inverse-surface);\n      color: var(--md-sys-color-inverse-on-surface);\n      cursor: grabbing;\n    }\n  `;\n\n  /**\n   * Whether or not we are in the \"dragging\" state.\n   */\n  @state() private isDragging = false;\n\n  /**\n   * The percentage of the editor height.\n   */\n  @state() private editorHeightPercent = 0;\n\n  @query('#wrapper') private wrapperEl!: HTMLElement;\n\n  /**\n   * A set of pointer IDs in the case that the user is dragging with multiple\n   * pointers.\n   */\n  private pointerIds = new Set<number>();\n\n  render() {\n    return html`<div\n      id=\"wrapper\"\n      style=${styleMap({\n        '--editor-percentage': `${this.editorHeightPercent}%`,\n      })}\n    >\n      <slot name=\"preview\"></slot>\n      <div\n        id=\"drag-bar\"\n        tabindex=\"0\"\n        role=\"slider\"\n        aria-orientation=\"vertical\"\n        aria-valuemax=\"100\"\n        aria-valuemin=\"0\"\n        aria-valuenow=\"${this.editorHeightPercent}\"\n        aria-valuetext=\"${this.editorHeightPercent} percent\"\n        aria-label=\"Editor height\"\n        @focus=${this.onFocus}\n        @blur=${this.onBlur}\n        @keydown=${this.onKeydown}\n        @pointerdown=${this.onPointerdown}\n        @pointerup=${this.onPointerup}\n        @pointermove=${this.onPointermove}\n        class=${classMap({\n          isDragging: this.isDragging,\n        })}\n      >\n        <md-icon>drag_handle</md-icon>\n      </div>\n      <slot name=\"editor\"></slot>\n    </div>`;\n  }\n\n  private onFocus() {\n    this.isDragging = true;\n  }\n\n  private onBlur() {\n    this.isDragging = false;\n  }\n\n  private onKeydown(event: KeyboardEvent) {\n    const { key } = event;\n    switch (key) {\n      case 'ArrowRight':\n      case 'ArrowUp':\n        this.editorHeightPercent = Math.min(this.editorHeightPercent + 1, 100);\n        break;\n      case 'ArrowLeft':\n      case 'ArrowDown':\n        this.editorHeightPercent = Math.max(this.editorHeightPercent - 1, 0);\n        break;\n      case 'PageUp':\n        this.editorHeightPercent = Math.min(this.editorHeightPercent + 10, 100);\n        break;\n      case 'PageDown':\n        this.editorHeightPercent = Math.max(this.editorHeightPercent - 10, 0);\n        break;\n      case 'Home':\n        this.editorHeightPercent = 0;\n        break;\n      case 'End':\n        this.editorHeightPercent = 100;\n        break;\n      default:\n        break;\n    }\n  }\n\n  private onPointerdown(event: PointerEvent) {\n    this.isDragging = true;\n\n    if (this.pointerIds.has(event.pointerId)) return;\n\n    this.pointerIds.add(event.pointerId);\n    (event.target as HTMLElement).setPointerCapture(event.pointerId);\n  }\n\n  private onPointerup(event: PointerEvent) {\n    this.pointerIds.delete(event.pointerId);\n    (event.target as HTMLElement).releasePointerCapture(event.pointerId);\n\n    if (this.pointerIds.size === 0) {\n      this.isDragging = false;\n    }\n  }\n\n  private onPointermove(event: PointerEvent) {\n    if (!this.isDragging) return;\n\n    const { clientY: mouseY } = event;\n    const { top: wrapperTop, bottom: wrapperBottom } =\n      this.wrapperEl.getBoundingClientRect();\n\n    // The height of the wrapper\n    const height = wrapperBottom - wrapperTop;\n\n    // Calculate the percentage of the editor height in which the pointer is\n    // located\n    const editorHeightPercent = 100 - ((mouseY - wrapperTop) / height) * 100;\n\n    // Clamp the percentage between 0 and 100\n    this.editorHeightPercent = Math.min(Math.max(editorHeightPercent, 0), 100);\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'drag-playground': DragPlayground;\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAeA,UAAIA;AACJ,UAAIC;AACJ,UAAIC;AACJ,UAAIC;AACJ,UAAIC;AACJ,UAAIC;AACJ,UAAIC;AACJ,UAAIC;AACJ,UAAIC;AACJ,UAAIC;AACJ,UAAIC;AACJ,UAAIC;AACJ,UAAIC;AACJ,UAAIC;AACJ,UAAIC;AACJ,UAAIC;AACJ,UAAIC;AACJ,UAAIC;AACJ,UAAIC;AACJ,UAAIC;AACJ,UAAIC;AACJ,UAAIC;AACJ,UAAIC;AACJ,UAAIC;AACJ,UAAIC;AACJ,UAAIC;AACJ,UAAIC;AACJ,UAAIC;AACJ,UAAIC;AACJ,OAAC,SAAU,SAAS;AAChB,YAAI,OAAO,OAAO,WAAW,WAAW,SAAS,OAAO,SAAS,WAAW,OAAO,OAAO,SAAS,WAAW,OAAO,CAAC;AACtH,YAAI,OAAO,WAAW,cAAc,OAAO,KAAK;AAC5C,iBAAO,SAAS,CAAC,SAAS,GAAG,SAAUC,UAAS;AAAE,oBAAQ,eAAe,MAAM,eAAeA,QAAO,CAAC,CAAC;AAAA,UAAG,CAAC;AAAA,QAC/G,WACS,OAAO,WAAW,YAAY,OAAO,OAAO,YAAY,UAAU;AACvE,kBAAQ,eAAe,MAAM,eAAe,OAAO,OAAO,CAAC,CAAC;AAAA,QAChE,OACK;AACD,kBAAQ,eAAe,IAAI,CAAC;AAAA,QAChC;AACA,iBAAS,eAAeA,UAAS,UAAU;AACvC,cAAIA,aAAY,MAAM;AAClB,gBAAI,OAAO,OAAO,WAAW,YAAY;AACrC,qBAAO,eAAeA,UAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAAA,YAChE,OACK;AACD,cAAAA,SAAQ,aAAa;AAAA,YACzB;AAAA,UACJ;AACA,iBAAO,SAAU,IAAIC,IAAG;AAAE,mBAAOD,SAAQ,EAAE,IAAI,WAAW,SAAS,IAAIC,EAAC,IAAIA;AAAA,UAAG;AAAA,QACnF;AAAA,MACJ,GACC,SAAU,UAAU;AACjB,YAAI,gBAAgB,OAAO,kBACtB,EAAE,WAAW,CAAC,EAAE,aAAa,SAAS,SAAUC,IAAGC,IAAG;AAAE,UAAAD,GAAE,YAAYC;AAAA,QAAG,KAC1E,SAAUD,IAAGC,IAAG;AAAE,mBAASC,MAAKD;AAAG,gBAAI,OAAO,UAAU,eAAe,KAAKA,IAAGC,EAAC;AAAG,cAAAF,GAAEE,EAAC,IAAID,GAAEC,EAAC;AAAA,QAAG;AAEpG,QAAAjC,aAAY,SAAU+B,IAAGC,IAAG;AACxB,cAAI,OAAOA,OAAM,cAAcA,OAAM;AACjC,kBAAM,IAAI,UAAU,yBAAyB,OAAOA,EAAC,IAAI,+BAA+B;AAC5F,wBAAcD,IAAGC,EAAC;AAClB,mBAAS,KAAK;AAAE,iBAAK,cAAcD;AAAA,UAAG;AACtC,UAAAA,GAAE,YAAYC,OAAM,OAAO,OAAO,OAAOA,EAAC,KAAK,GAAG,YAAYA,GAAE,WAAW,IAAI,GAAG;AAAA,QACtF;AAEA,QAAA/B,YAAW,OAAO,UAAU,SAAUiC,IAAG;AACrC,mBAASC,IAAGC,MAAI,GAAGC,MAAI,UAAU,QAAQD,MAAIC,KAAGD,OAAK;AACjD,YAAAD,KAAI,UAAUC,GAAC;AACf,qBAASH,MAAKE;AAAG,kBAAI,OAAO,UAAU,eAAe,KAAKA,IAAGF,EAAC;AAAG,gBAAAC,GAAED,EAAC,IAAIE,GAAEF,EAAC;AAAA,UAC/E;AACA,iBAAOC;AAAA,QACX;AAEA,QAAAhC,UAAS,SAAUiC,IAAGG,KAAG;AACrB,cAAIJ,KAAI,CAAC;AACT,mBAASD,MAAKE;AAAG,gBAAI,OAAO,UAAU,eAAe,KAAKA,IAAGF,EAAC,KAAKK,IAAE,QAAQL,EAAC,IAAI;AAC9E,cAAAC,GAAED,EAAC,IAAIE,GAAEF,EAAC;AACd,cAAIE,MAAK,QAAQ,OAAO,OAAO,0BAA0B;AACrD,qBAASC,MAAI,GAAGH,KAAI,OAAO,sBAAsBE,EAAC,GAAGC,MAAIH,GAAE,QAAQG,OAAK;AACpE,kBAAIE,IAAE,QAAQL,GAAEG,GAAC,CAAC,IAAI,KAAK,OAAO,UAAU,qBAAqB,KAAKD,IAAGF,GAAEG,GAAC,CAAC;AACzE,gBAAAF,GAAED,GAAEG,GAAC,CAAC,IAAID,GAAEF,GAAEG,GAAC,CAAC;AAAA,YACxB;AACJ,iBAAOF;AAAA,QACX;AAEA,QAAA/B,cAAa,SAAU,YAAY,QAAQ,KAAK,MAAM;AAClD,cAAIoC,KAAI,UAAU,QAAQC,KAAID,KAAI,IAAI,SAAS,SAAS,OAAO,OAAO,OAAO,yBAAyB,QAAQ,GAAG,IAAI,MAAMR;AAC3H,cAAI,OAAO,YAAY,YAAY,OAAO,QAAQ,aAAa;AAAY,YAAAS,KAAI,QAAQ,SAAS,YAAY,QAAQ,KAAK,IAAI;AAAA;AACxH,qBAASJ,MAAI,WAAW,SAAS,GAAGA,OAAK,GAAGA;AAAK,kBAAIL,KAAI,WAAWK,GAAC;AAAG,gBAAAI,MAAKD,KAAI,IAAIR,GAAES,EAAC,IAAID,KAAI,IAAIR,GAAE,QAAQ,KAAKS,EAAC,IAAIT,GAAE,QAAQ,GAAG,MAAMS;AAChJ,iBAAOD,KAAI,KAAKC,MAAK,OAAO,eAAe,QAAQ,KAAKA,EAAC,GAAGA;AAAA,QAChE;AAEA,QAAApC,WAAU,SAAU,YAAY,WAAW;AACvC,iBAAO,SAAU,QAAQ,KAAK;AAAE,sBAAU,QAAQ,KAAK,UAAU;AAAA,UAAG;AAAA,QACxE;AAEA,QAAAC,gBAAe,SAAU,MAAM,cAAc,YAAY,WAAW,cAAc,mBAAmB;AACjG,mBAAS,OAAOoC,IAAG;AAAE,gBAAIA,OAAM,UAAU,OAAOA,OAAM;AAAY,oBAAM,IAAI,UAAU,mBAAmB;AAAG,mBAAOA;AAAA,UAAG;AACtH,cAAI,OAAO,UAAU,MAAM,MAAM,SAAS,WAAW,QAAQ,SAAS,WAAW,QAAQ;AACzF,cAAI,SAAS,CAAC,gBAAgB,OAAO,UAAU,QAAQ,IAAI,OAAO,KAAK,YAAY;AACnF,cAAI,aAAa,iBAAiB,SAAS,OAAO,yBAAyB,QAAQ,UAAU,IAAI,IAAI,CAAC;AACtG,cAAIC,IAAG,OAAO;AACd,mBAASN,MAAI,WAAW,SAAS,GAAGA,OAAK,GAAGA,OAAK;AAC7C,gBAAI,UAAU,CAAC;AACf,qBAASH,MAAK;AAAW,sBAAQA,EAAC,IAAIA,OAAM,WAAW,CAAC,IAAI,UAAUA,EAAC;AACvE,qBAASA,MAAK,UAAU;AAAQ,sBAAQ,OAAOA,EAAC,IAAI,UAAU,OAAOA,EAAC;AACtE,oBAAQ,iBAAiB,SAAUQ,IAAG;AAAE,kBAAI;AAAM,sBAAM,IAAI,UAAU,wDAAwD;AAAG,gCAAkB,KAAK,OAAOA,MAAK,IAAI,CAAC;AAAA,YAAG;AAC5K,gBAAI,UAAU,GAAG,WAAWL,GAAC,GAAG,SAAS,aAAa,EAAE,KAAK,WAAW,KAAK,KAAK,WAAW,IAAI,IAAI,WAAW,GAAG,GAAG,OAAO;AAC7H,gBAAI,SAAS,YAAY;AACrB,kBAAI,WAAW;AAAQ;AACvB,kBAAI,WAAW,QAAQ,OAAO,WAAW;AAAU,sBAAM,IAAI,UAAU,iBAAiB;AACxF,kBAAIM,KAAI,OAAO,OAAO,GAAG;AAAG,2BAAW,MAAMA;AAC7C,kBAAIA,KAAI,OAAO,OAAO,GAAG;AAAG,2BAAW,MAAMA;AAC7C,kBAAIA,KAAI,OAAO,OAAO,IAAI;AAAG,6BAAa,QAAQA,EAAC;AAAA,YACvD,WACSA,KAAI,OAAO,MAAM,GAAG;AACzB,kBAAI,SAAS;AAAS,6BAAa,QAAQA,EAAC;AAAA;AACvC,2BAAW,GAAG,IAAIA;AAAA,YAC3B;AAAA,UACJ;AACA,cAAI;AAAQ,mBAAO,eAAe,QAAQ,UAAU,MAAM,UAAU;AACpE,iBAAO;AAAA,QACX;AAEA,QAAApC,qBAAoB,SAAU,SAAS,cAAc,OAAO;AACxD,cAAI,WAAW,UAAU,SAAS;AAClC,mBAAS8B,MAAI,GAAGA,MAAI,aAAa,QAAQA,OAAK;AAC1C,oBAAQ,WAAW,aAAaA,GAAC,EAAE,KAAK,SAAS,KAAK,IAAI,aAAaA,GAAC,EAAE,KAAK,OAAO;AAAA,UAC1F;AACA,iBAAO,WAAW,QAAQ;AAAA,QAC9B;AAEA,QAAA7B,aAAY,SAAUoC,IAAG;AACrB,iBAAO,OAAOA,OAAM,WAAWA,KAAI,GAAG,OAAOA,EAAC;AAAA,QAClD;AAEA,QAAAnC,qBAAoB,SAAUiC,IAAG,MAAM,QAAQ;AAC3C,cAAI,OAAO,SAAS;AAAU,mBAAO,KAAK,cAAc,IAAI,OAAO,KAAK,aAAa,GAAG,IAAI;AAC5F,iBAAO,OAAO,eAAeA,IAAG,QAAQ,EAAE,cAAc,MAAM,OAAO,SAAS,GAAG,OAAO,QAAQ,KAAK,IAAI,IAAI,KAAK,CAAC;AAAA,QACvH;AAEA,QAAAhC,cAAa,SAAU,aAAa,eAAe;AAC/C,cAAI,OAAO,YAAY,YAAY,OAAO,QAAQ,aAAa;AAAY,mBAAO,QAAQ,SAAS,aAAa,aAAa;AAAA,QACjI;AAEA,QAAAC,aAAY,SAAU,SAAS,YAAYkC,IAAG,WAAW;AACrD,mBAAS,MAAM,OAAO;AAAE,mBAAO,iBAAiBA,KAAI,QAAQ,IAAIA,GAAE,SAAU,SAAS;AAAE,sBAAQ,KAAK;AAAA,YAAG,CAAC;AAAA,UAAG;AAC3G,iBAAO,KAAKA,OAAMA,KAAI,UAAU,SAAU,SAAS,QAAQ;AACvD,qBAAS,UAAU,OAAO;AAAE,kBAAI;AAAE,qBAAK,UAAU,KAAK,KAAK,CAAC;AAAA,cAAG,SAASN,KAAP;AAAY,uBAAOA,GAAC;AAAA,cAAG;AAAA,YAAE;AAC1F,qBAAS,SAAS,OAAO;AAAE,kBAAI;AAAE,qBAAK,UAAU,OAAO,EAAE,KAAK,CAAC;AAAA,cAAG,SAASA,KAAP;AAAY,uBAAOA,GAAC;AAAA,cAAG;AAAA,YAAE;AAC7F,qBAAS,KAAK,QAAQ;AAAE,qBAAO,OAAO,QAAQ,OAAO,KAAK,IAAI,MAAM,OAAO,KAAK,EAAE,KAAK,WAAW,QAAQ;AAAA,YAAG;AAC7G,kBAAM,YAAY,UAAU,MAAM,SAAS,cAAc,CAAC,CAAC,GAAG,KAAK,CAAC;AAAA,UACxE,CAAC;AAAA,QACL;AAEA,QAAA3B,eAAc,SAAU,SAAS,MAAM;AACnC,cAAI+B,KAAI,EAAE,OAAO,GAAG,MAAM,WAAW;AAAE,gBAAIR,GAAE,CAAC,IAAI;AAAG,oBAAMA,GAAE,CAAC;AAAG,mBAAOA,GAAE,CAAC;AAAA,UAAG,GAAG,MAAM,CAAC,GAAG,KAAK,CAAC,EAAE,GAAGO,IAAGI,IAAGX,IAAGY;AAC/G,iBAAOA,KAAI,EAAE,MAAM,KAAK,CAAC,GAAG,SAAS,KAAK,CAAC,GAAG,UAAU,KAAK,CAAC,EAAE,GAAG,OAAO,WAAW,eAAeA,GAAE,OAAO,QAAQ,IAAI,WAAW;AAAE,mBAAO;AAAA,UAAM,IAAIA;AACvJ,mBAAS,KAAKT,KAAG;AAAE,mBAAO,SAAUP,IAAG;AAAE,qBAAO,KAAK,CAACO,KAAGP,EAAC,CAAC;AAAA,YAAG;AAAA,UAAG;AACjE,mBAAS,KAAK,IAAI;AACd,gBAAIW;AAAG,oBAAM,IAAI,UAAU,iCAAiC;AAC5D,mBAAOK,OAAMA,KAAI,GAAG,GAAG,CAAC,MAAMJ,KAAI,KAAKA;AAAG,kBAAI;AAC1C,oBAAID,KAAI,GAAGI,OAAMX,KAAI,GAAG,CAAC,IAAI,IAAIW,GAAE,QAAQ,IAAI,GAAG,CAAC,IAAIA,GAAE,OAAO,OAAOX,KAAIW,GAAE,QAAQ,MAAMX,GAAE,KAAKW,EAAC,GAAG,KAAKA,GAAE,SAAS,EAAEX,KAAIA,GAAE,KAAKW,IAAG,GAAG,CAAC,CAAC,GAAG;AAAM,yBAAOX;AAC3J,oBAAIW,KAAI,GAAGX;AAAG,uBAAK,CAAC,GAAG,CAAC,IAAI,GAAGA,GAAE,KAAK;AACtC,wBAAQ,GAAG,CAAC,GAAG;AAAA,kBACX,KAAK;AAAA,kBAAG,KAAK;AAAG,oBAAAA,KAAI;AAAI;AAAA,kBACxB,KAAK;AAAG,oBAAAQ,GAAE;AAAS,2BAAO,EAAE,OAAO,GAAG,CAAC,GAAG,MAAM,MAAM;AAAA,kBACtD,KAAK;AAAG,oBAAAA,GAAE;AAAS,oBAAAG,KAAI,GAAG,CAAC;AAAG,yBAAK,CAAC,CAAC;AAAG;AAAA,kBACxC,KAAK;AAAG,yBAAKH,GAAE,IAAI,IAAI;AAAG,oBAAAA,GAAE,KAAK,IAAI;AAAG;AAAA,kBACxC;AACI,wBAAI,EAAER,KAAIQ,GAAE,MAAMR,KAAIA,GAAE,SAAS,KAAKA,GAAEA,GAAE,SAAS,CAAC,OAAO,GAAG,CAAC,MAAM,KAAK,GAAG,CAAC,MAAM,IAAI;AAAE,sBAAAQ,KAAI;AAAG;AAAA,oBAAU;AAC3G,wBAAI,GAAG,CAAC,MAAM,MAAM,CAACR,MAAM,GAAG,CAAC,IAAIA,GAAE,CAAC,KAAK,GAAG,CAAC,IAAIA,GAAE,CAAC,IAAK;AAAE,sBAAAQ,GAAE,QAAQ,GAAG,CAAC;AAAG;AAAA,oBAAO;AACrF,wBAAI,GAAG,CAAC,MAAM,KAAKA,GAAE,QAAQR,GAAE,CAAC,GAAG;AAAE,sBAAAQ,GAAE,QAAQR,GAAE,CAAC;AAAG,sBAAAA,KAAI;AAAI;AAAA,oBAAO;AACpE,wBAAIA,MAAKQ,GAAE,QAAQR,GAAE,CAAC,GAAG;AAAE,sBAAAQ,GAAE,QAAQR,GAAE,CAAC;AAAG,sBAAAQ,GAAE,IAAI,KAAK,EAAE;AAAG;AAAA,oBAAO;AAClE,wBAAIR,GAAE,CAAC;AAAG,sBAAAQ,GAAE,IAAI,IAAI;AACpB,oBAAAA,GAAE,KAAK,IAAI;AAAG;AAAA,gBACtB;AACA,qBAAK,KAAK,KAAK,SAASA,EAAC;AAAA,cAC7B,SAASJ,KAAP;AAAY,qBAAK,CAAC,GAAGA,GAAC;AAAG,gBAAAO,KAAI;AAAA,cAAG,UAAE;AAAU,gBAAAJ,KAAIP,KAAI;AAAA,cAAG;AACzD,gBAAI,GAAG,CAAC,IAAI;AAAG,oBAAM,GAAG,CAAC;AAAG,mBAAO,EAAE,OAAO,GAAG,CAAC,IAAI,GAAG,CAAC,IAAI,QAAQ,MAAM,KAAK;AAAA,UACnF;AAAA,QACJ;AAEA,QAAAtB,gBAAe,SAASmC,IAAGC,KAAG;AAC1B,mBAASf,MAAKc;AAAG,gBAAId,OAAM,aAAa,CAAC,OAAO,UAAU,eAAe,KAAKe,KAAGf,EAAC;AAAG,cAAAL,iBAAgBoB,KAAGD,IAAGd,EAAC;AAAA,QAChH;AAEA,QAAAL,mBAAkB,OAAO,SAAU,SAASoB,KAAGD,IAAGE,IAAGC,KAAI;AACrD,cAAIA,QAAO;AAAW,YAAAA,MAAKD;AAC3B,cAAI,OAAO,OAAO,yBAAyBF,IAAGE,EAAC;AAC/C,cAAI,CAAC,SAAS,SAAS,OAAO,CAACF,GAAE,aAAa,KAAK,YAAY,KAAK,eAAe;AAC/E,mBAAO,EAAE,YAAY,MAAM,KAAK,WAAW;AAAE,qBAAOA,GAAEE,EAAC;AAAA,YAAG,EAAE;AAAA,UAChE;AACA,iBAAO,eAAeD,KAAGE,KAAI,IAAI;AAAA,QACrC,IAAM,SAASF,KAAGD,IAAGE,IAAGC,KAAI;AACxB,cAAIA,QAAO;AAAW,YAAAA,MAAKD;AAC3B,UAAAD,IAAEE,GAAE,IAAIH,GAAEE,EAAC;AAAA,QACf;AAEA,QAAApC,YAAW,SAAUmC,KAAG;AACpB,cAAIb,KAAI,OAAO,WAAW,cAAc,OAAO,UAAUY,KAAIZ,MAAKa,IAAEb,EAAC,GAAGC,MAAI;AAC5E,cAAIW;AAAG,mBAAOA,GAAE,KAAKC,GAAC;AACtB,cAAIA,OAAK,OAAOA,IAAE,WAAW;AAAU,mBAAO;AAAA,cAC1C,MAAM,WAAY;AACd,oBAAIA,OAAKZ,OAAKY,IAAE;AAAQ,kBAAAA,MAAI;AAC5B,uBAAO,EAAE,OAAOA,OAAKA,IAAEZ,KAAG,GAAG,MAAM,CAACY,IAAE;AAAA,cAC1C;AAAA,YACJ;AACA,gBAAM,IAAI,UAAUb,KAAI,4BAA4B,iCAAiC;AAAA,QACzF;AAEA,QAAArB,UAAS,SAAUkC,KAAGX,KAAG;AACrB,cAAIU,KAAI,OAAO,WAAW,cAAcC,IAAE,OAAO,QAAQ;AACzD,cAAI,CAACD;AAAG,mBAAOC;AACf,cAAIZ,MAAIW,GAAE,KAAKC,GAAC,GAAGR,IAAG,KAAK,CAAC,GAAGF;AAC/B,cAAI;AACA,oBAAQD,QAAM,UAAUA,QAAM,MAAM,EAAEG,KAAIJ,IAAE,KAAK,GAAG;AAAM,iBAAG,KAAKI,GAAE,KAAK;AAAA,UAC7E,SACO,OAAP;AAAgB,YAAAF,MAAI,EAAE,MAAa;AAAA,UAAG,UACtC;AACI,gBAAI;AACA,kBAAIE,MAAK,CAACA,GAAE,SAASO,KAAIX,IAAE,QAAQ;AAAI,gBAAAW,GAAE,KAAKX,GAAC;AAAA,YACnD,UACA;AAAU,kBAAIE;AAAG,sBAAMA,IAAE;AAAA,YAAO;AAAA,UACpC;AACA,iBAAO;AAAA,QACX;AAGA,QAAAvB,YAAW,WAAY;AACnB,mBAAS,KAAK,CAAC,GAAGqB,MAAI,GAAGA,MAAI,UAAU,QAAQA;AAC3C,iBAAK,GAAG,OAAOtB,QAAO,UAAUsB,GAAC,CAAC,CAAC;AACvC,iBAAO;AAAA,QACX;AAGA,QAAApB,kBAAiB,WAAY;AACzB,mBAASmB,KAAI,GAAGC,MAAI,GAAG,KAAK,UAAU,QAAQA,MAAI,IAAIA;AAAK,YAAAD,MAAK,UAAUC,GAAC,EAAE;AAC7E,mBAASI,KAAI,MAAML,EAAC,GAAGc,KAAI,GAAGb,MAAI,GAAGA,MAAI,IAAIA;AACzC,qBAASe,KAAI,UAAUf,GAAC,GAAGgB,KAAI,GAAG,KAAKD,GAAE,QAAQC,KAAI,IAAIA,MAAKH;AAC1D,cAAAT,GAAES,EAAC,IAAIE,GAAEC,EAAC;AAClB,iBAAOZ;AAAA,QACX;AAEA,QAAAvB,iBAAgB,SAAU,IAAI,MAAM,MAAM;AACtC,cAAI,QAAQ,UAAU,WAAW;AAAG,qBAASmB,MAAI,GAAGiB,MAAI,KAAK,QAAQ,IAAIjB,MAAIiB,KAAGjB,OAAK;AACjF,kBAAI,MAAM,EAAEA,OAAK,OAAO;AACpB,oBAAI,CAAC;AAAI,uBAAK,MAAM,UAAU,MAAM,KAAK,MAAM,GAAGA,GAAC;AACnD,mBAAGA,GAAC,IAAI,KAAKA,GAAC;AAAA,cAClB;AAAA,YACJ;AACA,iBAAO,GAAG,OAAO,MAAM,MAAM,UAAU,MAAM,KAAK,IAAI,CAAC;AAAA,QAC3D;AAEA,QAAAlB,WAAU,SAAUY,IAAG;AACnB,iBAAO,gBAAgBZ,YAAW,KAAK,IAAIY,IAAG,QAAQ,IAAIZ,SAAQY,EAAC;AAAA,QACvE;AAEA,QAAAX,oBAAmB,SAAU,SAAS,YAAY,WAAW;AACzD,cAAI,CAAC,OAAO;AAAe,kBAAM,IAAI,UAAU,sCAAsC;AACrF,cAAI2B,KAAI,UAAU,MAAM,SAAS,cAAc,CAAC,CAAC,GAAGV,KAAG,IAAI,CAAC;AAC5D,iBAAOA,MAAI,CAAC,GAAG,KAAK,MAAM,GAAG,KAAK,OAAO,GAAG,KAAK,QAAQ,GAAGA,IAAE,OAAO,aAAa,IAAI,WAAY;AAAE,mBAAO;AAAA,UAAM,GAAGA;AACpH,mBAAS,KAAKC,KAAG;AAAE,gBAAIS,GAAET,GAAC;AAAG,cAAAD,IAAEC,GAAC,IAAI,SAAUP,IAAG;AAAE,uBAAO,IAAI,QAAQ,SAAUqB,IAAGnB,IAAG;AAAE,oBAAE,KAAK,CAACK,KAAGP,IAAGqB,IAAGnB,EAAC,CAAC,IAAI,KAAK,OAAOK,KAAGP,EAAC;AAAA,gBAAG,CAAC;AAAA,cAAG;AAAA,UAAG;AACzI,mBAAS,OAAOO,KAAGP,IAAG;AAAE,gBAAI;AAAE,mBAAKgB,GAAET,GAAC,EAAEP,EAAC,CAAC;AAAA,YAAG,SAASQ,KAAP;AAAY,qBAAO,EAAE,CAAC,EAAE,CAAC,GAAGA,GAAC;AAAA,YAAG;AAAA,UAAE;AACjF,mBAAS,KAAKE,IAAG;AAAE,YAAAA,GAAE,iBAAiBtB,WAAU,QAAQ,QAAQsB,GAAE,MAAM,CAAC,EAAE,KAAK,SAAS,MAAM,IAAI,OAAO,EAAE,CAAC,EAAE,CAAC,GAAGA,EAAC;AAAA,UAAI;AACxH,mBAAS,QAAQ,OAAO;AAAE,mBAAO,QAAQ,KAAK;AAAA,UAAG;AACjD,mBAAS,OAAO,OAAO;AAAE,mBAAO,SAAS,KAAK;AAAA,UAAG;AACjD,mBAAS,OAAOC,IAAGX,IAAG;AAAE,gBAAIW,GAAEX,EAAC,GAAG,EAAE,MAAM,GAAG,EAAE;AAAQ,qBAAO,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;AAAA,UAAG;AAAA,QACrF;AAEA,QAAAV,oBAAmB,SAAU4B,KAAG;AAC5B,cAAIZ,KAAGH;AACP,iBAAOG,MAAI,CAAC,GAAG,KAAK,MAAM,GAAG,KAAK,SAAS,SAAUE,KAAG;AAAE,kBAAMA;AAAA,UAAG,CAAC,GAAG,KAAK,QAAQ,GAAGF,IAAE,OAAO,QAAQ,IAAI,WAAY;AAAE,mBAAO;AAAA,UAAM,GAAGA;AAC1I,mBAAS,KAAKC,KAAGI,IAAG;AAAE,YAAAL,IAAEC,GAAC,IAAIW,IAAEX,GAAC,IAAI,SAAUP,IAAG;AAAE,sBAAQG,KAAI,CAACA,MAAK,EAAE,OAAOf,SAAQ8B,IAAEX,GAAC,EAAEP,EAAC,CAAC,GAAG,MAAM,MAAM,IAAIW,KAAIA,GAAEX,EAAC,IAAIA;AAAA,YAAG,IAAIW;AAAA,UAAG;AAAA,QACzI;AAEA,QAAApB,iBAAgB,SAAU2B,KAAG;AACzB,cAAI,CAAC,OAAO;AAAe,kBAAM,IAAI,UAAU,sCAAsC;AACrF,cAAID,KAAIC,IAAE,OAAO,aAAa,GAAGZ;AACjC,iBAAOW,KAAIA,GAAE,KAAKC,GAAC,KAAKA,MAAI,OAAOnC,cAAa,aAAaA,UAASmC,GAAC,IAAIA,IAAE,OAAO,QAAQ,EAAE,GAAGZ,MAAI,CAAC,GAAG,KAAK,MAAM,GAAG,KAAK,OAAO,GAAG,KAAK,QAAQ,GAAGA,IAAE,OAAO,aAAa,IAAI,WAAY;AAAE,mBAAO;AAAA,UAAM,GAAGA;AAC9M,mBAAS,KAAKC,KAAG;AAAE,YAAAD,IAAEC,GAAC,IAAIW,IAAEX,GAAC,KAAK,SAAUP,IAAG;AAAE,qBAAO,IAAI,QAAQ,SAAU,SAAS,QAAQ;AAAE,gBAAAA,KAAIkB,IAAEX,GAAC,EAAEP,EAAC,GAAG,OAAO,SAAS,QAAQA,GAAE,MAAMA,GAAE,KAAK;AAAA,cAAG,CAAC;AAAA,YAAG;AAAA,UAAG;AAC/J,mBAAS,OAAO,SAAS,QAAQC,IAAGD,IAAG;AAAE,oBAAQ,QAAQA,EAAC,EAAE,KAAK,SAASA,IAAG;AAAE,sBAAQ,EAAE,OAAOA,IAAG,MAAMC,GAAE,CAAC;AAAA,YAAG,GAAG,MAAM;AAAA,UAAG;AAAA,QAC/H;AAEA,QAAAT,wBAAuB,SAAU,QAAQ,KAAK;AAC1C,cAAI,OAAO,gBAAgB;AAAE,mBAAO,eAAe,QAAQ,OAAO,EAAE,OAAO,IAAI,CAAC;AAAA,UAAG,OAAO;AAAE,mBAAO,MAAM;AAAA,UAAK;AAC9G,iBAAO;AAAA,QACX;AAEA,YAAI,qBAAqB,OAAO,SAAU,SAAS0B,KAAGlB,IAAG;AACrD,iBAAO,eAAekB,KAAG,WAAW,EAAE,YAAY,MAAM,OAAOlB,GAAE,CAAC;AAAA,QACtE,IAAK,SAASkB,KAAGlB,IAAG;AAChB,UAAAkB,IAAE,SAAS,IAAIlB;AAAA,QACnB;AAEA,QAAAP,gBAAe,SAAU,KAAK;AAC1B,cAAI,OAAO,IAAI;AAAY,mBAAO;AAClC,cAAI,SAAS,CAAC;AACd,cAAI,OAAO;AAAM,qBAAS0B,MAAK;AAAK,kBAAIA,OAAM,aAAa,OAAO,UAAU,eAAe,KAAK,KAAKA,EAAC;AAAG,gBAAArB,iBAAgB,QAAQ,KAAKqB,EAAC;AAAA;AACvI,6BAAmB,QAAQ,GAAG;AAC9B,iBAAO;AAAA,QACX;AAEA,QAAAzB,mBAAkB,SAAU,KAAK;AAC7B,iBAAQ,OAAO,IAAI,aAAc,MAAM,EAAE,WAAW,IAAI;AAAA,QAC5D;AAEA,QAAAC,0BAAyB,SAAU,UAAU,OAAO,MAAMgB,IAAG;AACzD,cAAI,SAAS,OAAO,CAACA;AAAG,kBAAM,IAAI,UAAU,+CAA+C;AAC3F,cAAI,OAAO,UAAU,aAAa,aAAa,SAAS,CAACA,KAAI,CAAC,MAAM,IAAI,QAAQ;AAAG,kBAAM,IAAI,UAAU,0EAA0E;AACjL,iBAAO,SAAS,MAAMA,KAAI,SAAS,MAAMA,GAAE,KAAK,QAAQ,IAAIA,KAAIA,GAAE,QAAQ,MAAM,IAAI,QAAQ;AAAA,QAChG;AAEA,QAAAf,0BAAyB,SAAU,UAAU,OAAO,OAAO,MAAMe,IAAG;AAChE,cAAI,SAAS;AAAK,kBAAM,IAAI,UAAU,gCAAgC;AACtE,cAAI,SAAS,OAAO,CAACA;AAAG,kBAAM,IAAI,UAAU,+CAA+C;AAC3F,cAAI,OAAO,UAAU,aAAa,aAAa,SAAS,CAACA,KAAI,CAAC,MAAM,IAAI,QAAQ;AAAG,kBAAM,IAAI,UAAU,yEAAyE;AAChL,iBAAQ,SAAS,MAAMA,GAAE,KAAK,UAAU,KAAK,IAAIA,KAAIA,GAAE,QAAQ,QAAQ,MAAM,IAAI,UAAU,KAAK,GAAI;AAAA,QACxG;AAEA,QAAAd,yBAAwB,SAAU,OAAO,UAAU;AAC/C,cAAI,aAAa,QAAS,OAAO,aAAa,YAAY,OAAO,aAAa;AAAa,kBAAM,IAAI,UAAU,wCAAwC;AACvJ,iBAAO,OAAO,UAAU,aAAa,aAAa,QAAQ,MAAM,IAAI,QAAQ;AAAA,QAChF;AAEA,iBAAS,aAAa3B,UAAS;AAC/B,iBAAS,YAAYC,SAAQ;AAC7B,iBAAS,UAAUC,OAAM;AACzB,iBAAS,cAAcC,WAAU;AACjC,iBAAS,WAAWC,QAAO;AAC3B,iBAAS,gBAAgBC,aAAY;AACrC,iBAAS,qBAAqBC,kBAAiB;AAC/C,iBAAS,aAAaC,UAAS;AAC/B,iBAAS,qBAAqBC,kBAAiB;AAC/C,iBAAS,cAAcC,WAAU;AACjC,iBAAS,aAAaC,UAAS;AAC/B,iBAAS,eAAeC,YAAW;AACnC,iBAAS,gBAAgBC,aAAY;AACrC,iBAAS,mBAAmBgB,gBAAe;AAC3C,iBAAS,YAAYf,SAAQ;AAC7B,iBAAS,UAAUC,OAAM;AACzB,iBAAS,YAAYC,SAAQ;AAC7B,iBAAS,kBAAkBC,eAAc;AACzC,iBAAS,iBAAiBC,cAAa;AACvC,iBAAS,WAAWC,QAAO;AAC3B,iBAAS,oBAAoBC,iBAAgB;AAC7C,iBAAS,oBAAoBC,iBAAgB;AAC7C,iBAAS,iBAAiBC,cAAa;AACvC,iBAAS,wBAAwBC,qBAAoB;AACrD,iBAAS,gBAAgBC,aAAY;AACrC,iBAAS,mBAAmBC,gBAAe;AAC3C,iBAAS,0BAA0BC,uBAAsB;AACzD,iBAAS,0BAA0BC,uBAAsB;AACzD,iBAAS,yBAAyBC,sBAAqB;AAAA,MAC3D,CAAC;AAAA;AAAA;;;ACjXD,qBAAkB;AAClB,MAAM;AAAA,IACF;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACJ,IAAI,aAAA2B;;;ACZJ,MAwCaC,IACVC,CAAAA,QACAC,CAAAA,QAC8B,cAAA,OAAtBA,OA3CiB,CAACD,KAAiBE,SAC5CC,eAAeC,OAAOJ,KAASE,GAAAA,GAOxBA,MAoCmBF,KAASC,GAAAA,KAjCP,CAC5BD,KACAK,QAAAA;AAEA,UAAA,EAAMC,MAACA,IAAIC,UAAEA,GAAAA,IAAYF;AACzB,WAAO,EACLC,MAAAA,IACAC,UAAAA,IAEAC,SAASN,KAAAA;AACPC,qBAAeC,OAAOJ,KAASE,GAAAA;IAChC,EAAA;EACF,GAsB2BF,KAASC,GAAAA;;;ACjDvC,MAAMQ,IAAmB,CACvBC,KACAC,QAMmB,aAAjBA,IAAQC,QACRD,IAAQE,cAAAA,EACN,WAAWF,IAAQE,cAEd,EAAA,GACFF,KACHG,SAASC,KAAAA;AACPA,IAAAA,IAAMC,eAAeL,IAAQM,KAAKP,GAAAA;EACnC,EAAA,IAMI,EACLE,MAAM,SACNK,KAAKC,OAAAA,GACLC,WAAW,OACXN,YAAY,CAAE,GAEdO,aAAaT,IAAQM,KAUrBI,cAAAA;AACqC,kBAAA,OAAxBV,IAAQU,gBACjBC,KAAKX,IAAQM,GAAAA,IAAiBN,IAAQU,YAAYE,KAAKD,IAAAA;EAE1D,GACDR,SAASC,KAAAA;AACPA,IAAAA,IAAMC,eAAeL,IAAQM,KAAKP,GAAAA;EACnC,EAAA;AA7CP,MAkDMc,KAAiB,CACrBd,KACAe,KACAC,QAAAA;AAECD,IAAAA,IAAME,YAAuCX,eAAeU,KAAMhB,GAAAA;EAAQ;AAmCvE,WAAUkB,EAASlB,KAAAA;AAEvB,WAAO,CAACmB,IAA0CH,QAAAA,WAChDA,MACIF,GAAed,KAAUmB,IAA6BH,GAAAA,IACtDjB,EAAiBC,KAAUmB,EAAAA;EACnC;;;AC7EM,WAAUC,EAAMC,IAAAA;AACpB,WAAOC,EAAS,EAAA,GACXD,IACHD,OAAAA,KAAO,CAAA;EAEX;;;ACCa,MA+BAG,IACX,CAAA,EACEC,UAAAA,KACAC,YAAAA,GAAAA,MAOF,CACEC,KACAC,QAAAA;AAAAA,QAAAA;AAKA,QAAA,WAAIA,KAQG;AAGL,YAAMC,MAAAA,UAEJC,KAACH,IAA0BI,gBAAAA,WAAAA,KAAAA,KAC1BJ,IAAmCE,KAChCG,MACUC,QAAdP,KACI,EACEQ,MAAM,UACNC,WAAW,aACXN,KAAAA,KACAH,YAAYA,GAAYC,IAAmCE,GAAAA,EAAAA,IAE7D,EAAA,GAAKF,KAAoCE,KAAAA,IAAAA;AAQ/C,aAPgBI,QAAZR,QACFO,IAAKP,WAAW,SACdW,IAAAA;AAEAX,QAAAA,IAASW,IAA2CP,GAAAA;MACtD,IAEKG;IACR;AAhCuB;AACtB,YAAMI,KAAQT,IACXU;AAAAA,iBACCX,MACFY,OAAOC,eAAeZ,KAAmBC,KAAMF,GAAWE,GAAAA,CAAAA,GAE5DH,QAAAA,OAAAA,IAAWW,IAAMR,GAAAA;IAElB;EAwBA;;;AC/EW,WAAAY,GAAMC,KAAkBC,KAAAA;AACtC,WAAOC,EAAiB,EACtBC,YAAaC,CAAAA,QAAAA;AACX,YAAMD,KAAa,EACjBE,MAAAA;AAAAA,YAAAA,KAAAA;AACE,eAAmD,UAA5CC,MAAe,UAAfC,MAAAC,KAAKC,eAAAA,WAAUF,MAAAA,SAAAA,IAAEG,cAAcV,GAAAA,MAAAA,WAAaM,MAAAA,MAAA;MACpD,GACDK,YAAAA,MACAC,cAAAA,KAAc;AAEhB,UAAIX,KAAO;AACT,cAAMY,MAAsB,YAAA,OAATT,MAAoBU,OAAAA,IAAW,OAAKV;AACvDD,QAAAA,GAAWE,MAAM,WAAA;AAAA,cAAAU,KAAAC;AAUf,iBAAA,WARGR,KACCK,GAAAA,MAGDL,KACCK,GAAAA,IAC0C,UAAxCP,KAAe,UAAAS,MAAfP,KAAKC,eAAAA,WAAUF,MAAAA,SAAAA,IAAEG,cAAcV,GAAAA,MAAAA,WAASM,KAAAA,KAAI,OAE1CE,KACNK,GAAAA;QAEJ;MACD;AACD,aAAOV;IAAU,EAAA,CAAA;EAGvB;;;AC/BM,WAAUc,GAASC,KAAAA;AACvB,WAAOC,EAAiB,EACtBC,YAAaC,CAAAA,QAAwB,EACnCC,MAAAA;AAAAA,UAAAA,IAAAA;AACE,aAAsD,UAA/CC,MAAe,UAAfC,KAAAC,KAAKC,eAAAA,WAAUF,KAAAA,SAAAA,GAAEG,iBAAiBT,GAAAA,MAAAA,WAAaK,MAAAA,MAAA,CAAA;IACvD,GACDK,YAAAA,MACAC,cAAAA,KAAc,GAAA,CAAA;EAGpB;;;ACGM,WAAUC,GAAWC,KAAAA;AACzB,WAAOC,EAAiB,EACtBC,YAAaC,CAAAA,QAAwB,EACnCC,MAAAA,MAAAA;AAAAA,UAAAA;AAEE,aAAA,MADMC,KAAKC,gBAAAA,UACJC,KAAAF,KAAKG,eAAAA,WAAAA,KAAAA,SAAAA,GAAYC,cAAcT,GAAAA;IACvC,GACDU,YAAAA,MACAC,cAAAA,KAAc,GAAA,CAAA;EAGpB;;;;AC7CA,MAKMC,KACkD,SAAhC,UAAtBC,IANyBC,WAMlBC,oBAAAA,WAAeF,IAAAA,SAAAA,EAAEG,UAAUC,oBAC9B,CAACC,KAAuBC,QACtBD,IAAKD,iBAAiBE,GAAAA,IACxB,CAACD,KAAuBC,QACtBD,IACGE,cAAcD,GAAAA,EACdE,OACEC,CAAAA,QAA0BA,IAAKC,aAAaC,KAAKC,YAAAA;AA8CxD,WAAUC,GAAsBC,KAAAA;AACpC,UAAA,EAAMT,MAACA,KAAIU,UAAEA,GAAAA,IAAYD,QAAAA,MAAAA,MAAW,CAAA;AACpC,WAAOE,EAAiB,EACtBC,YAAaC,CAAAA,SAAwB,EACnCC,MAAAA;AAAAA,UAAAA;AACE,YAAMC,KAAe,UAAOf,MAAO,SAASA,SAAU,iBAChDgB,KACW,UAAfrB,MAAAsB,KAAKC,eAAAA,WAAUvB,MAAAA,SAAAA,IAAEwB,cAA+BJ,EAAAA,GAC5CK,MACM,QAAVJ,KAAiBtB,GAAqBsB,IAAQP,GAAAA,IAAW,CAAA;AAC3D,aAAIC,KACKU,IAASjB,OAAQC,CAAAA,QAASA,IAAKiB,QAAQX,EAAAA,CAAAA,IAEzCU;IACR,GACDE,YAAAA,MACAC,cAAAA,KAAc,GAAA,CAAA;EAGpB;;;WCMgBC,GACdC,KACAC,KACAC,IAAAA;AAGA,QACIC,KADAC,KAAOJ;AAWX,WAT6B,YAAA,OAAlBA,OACTI,KAAOJ,IAAcI,MACrBD,MAAuBH,OAEvBG,MAAuB,EAACF,SAAAA,IAAAA,GAKtBC,KACKG,GAAsB,EAC3BD,MAAMA,IACNH,SAAAA,KACAC,UAAAA,GAAAA,CAAAA,IAIGI,EAAiB,EACtBC,YAAaC,CAAAA,SAAwB,EACnCC,MAAAA;AAAAA,UAAAA,KAAAA;AACE,YAAMC,MAAe,UAAON,KAAO,SAASA,QAAU,iBAChDO,MACW,UAAfC,MAAAC,KAAKC,eAAAA,WAAUF,MAAAA,SAAAA,IAAEG,cAA+BL,GAAAA;AAClD,aAAkD,UAA3CM,KAAAL,QAAAA,MAAAA,SAAAA,IAAQM,cAAcd,GAAAA,MAAAA,WAAqBa,KAAAA,KAAI,CAAA;IACvD,GACDE,YAAAA,MACAC,cAAAA,KAAc,GAAA,CAAA;EAGpB;;;ACpEO,MAAM,uBAAuB,MAAM,iBAAgB;IAoDxD,YAAY,OAAkB;AAjD9B,WAAA,aAAa;AACb,WAAA,mBAAmB;AACnB,WAAA,kBAAkB;AAClB,WAAA,4BAA4B;AAC5B,WAAA,WAAW;AACX,WAAA,cAAc;AACd,WAAA,eAAe;AACf,WAAA,eAAe;AACf,WAAA,cAAc;AACd,WAAA,cAAc;AACd,WAAA,kBAAkB;AAClB,WAAA,eAAe;AACf,WAAA,eAAe;AACf,WAAA,eAAe;AACf,WAAA,aAAa;AACb,WAAA,cAAc;AACd,WAAA,mBAAmB;AACnB,WAAA,YAAY;AACZ,WAAA,YAAY;AACZ,WAAA,WAAW;AACX,WAAA,YAAY;AACZ,WAAA,gBAAgB;AAChB,WAAA,sBAAsB;AACtB,WAAA,kBAAkB;AAClB,WAAA,kBAAkB;AAClB,WAAA,eAAe;AACf,WAAA,cAAc;AACd,WAAA,eAAe;AACf,WAAA,eAAe;AACf,WAAA,sBAAsB;AACtB,WAAA,eAAe;AACf,WAAA,eAAe;AACf,WAAA,cAAc;AACd,WAAA,eAAe;AACf,WAAA,cAAc;AACd,WAAA,WAAW;AACX,WAAA,eAAe;AACf,WAAA,eAAe;AACf,WAAA,eAAe;AACf,WAAA,gBAAgB;AAChB,WAAA,OAAO;AAqBP,WAAA,OAAO;AACP,WAAA,SAAS,CAAA;AAMT,WAAA,SAAS,oBAAI,IAAG;AAChB,WAAA,oBAAoB;AACpB,WAAA,WAAW,CAAA;AACX,WAAA,eAAe;AArBb,WAAK,SAAS;IAChB;IATA,IAAI,aAAU;AAIZ,aAAQ,KAAK,OACV;IACL;IAIA,gBAAa;AAGX,cAAQ,KACN,8FACoC;AAEtC,aAAO;IACT;IAGA,iBAAc;AACZ,aAAO;IACT;IACA,eAAY;IAAU;IACtB,cAAW;IAAU;;;;ACjIvB,MAAM,aAGF,oBAAI,QAAO;AACf,MAAM,uBAAuB,CAC3B,YACE;AACF,QAAI,QAAQ,WAAW,IAAI,OAAO;AAClC,QAAI,UAAU,QAAW;AACvB,iBAAW,IAAI,SAAU,QAAQ,oBAAI,IAAG,CAAG;;AAE7C,WAAO;EACT;AAaA,MAAM,cAAc,MAAM,QAAO;IAAb,cAAA;AAOV,WAAA,mBAA0C;AACxC,WAAA,eAAkC;AAClC,WAAA,cAAuC;IA0CnD;IAlDE,IAAI,aAAU;AACZ,aAAO,MAAM,KAAK,qBAAqB,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC,MAAM,KAAK,OAAO;QACpE;QACA;QACA;IACJ;IAKA,IAAI,aAAU;AACZ,UAAI,KAAK,qBAAqB,UAAU;AACtC,eAAO;;AAET,aAAO,KAAK;IACd;IACA,aAAa,MAAc,OAAc;AAGvC,2BAAqB,IAAI,EAAE,IAAI,MAAM,OAAO,KAAK,CAAC;IACpD;IACA,gBAAgB,MAAY;AAC1B,2BAAqB,IAAI,EAAE,OAAO,IAAI;IACxC;IACA,aAAa,MAAY;AACvB,aAAO,qBAAqB,IAAI,EAAE,IAAI,IAAI;IAC5C;IACA,aAAa,MAAoB;AAC/B,YAAM,aAAa,EAAC,MAAM,KAAI;AAC9B,WAAK,mBAAmB,KAAK;AAC7B,UAAI,QAAQ,KAAK,SAAS,QAAQ;AAChC,aAAK,eAAe;;AAEtB,aAAO;IACT;IACA,kBAAe;AACb,UAAI,KAAK,gBAAgB,MAAM;AAC7B,cAAM,IAAI,MACR,wHACoE;;AAGxE,YAAMC,aAAY,IAAI,qBAAqB,IAA8B;AACzE,WAAK,cAAcA;AACnB,aAAOA;IACT;IACA,aAAa,MAAY;AACvB,YAAM,QAAQ,qBAAqB,IAAI,EAAE,IAAI,IAAI;AACjD,aAAO,SAAS;IAClB;;AAKF,MAAM,kBAAkB,MAAMC,qBAAoB,YAAW;;AAC7D,MAAM,8BACJ;AAaF,MAAM,4BAA4B,MAAM,sBAAqB;IAA3B,cAAA;AACxB,WAAA,gBAAgB,oBAAI,IAAG;IAsCjC;IApCE,OAAO,MAAc,MAAkC;AACrD,UAAI,KAAK,cAAc,IAAI,IAAI,GAAG;AAChC,YAAI,MAAwC;AAC1C,kBAAQ,KACN,wCAAwC;6GAIU;eAE/C;AACL,gBAAM,IAAI,MACR,oEACe,gDAAgD;;;AAIrE,WAAK,cAAc,IAAI,MAAM;QAC3B;;;;;;;;;;QAUA,oBAAoB,KAAK,sBAAsB,CAAA;OAChD;IACH;IAEA,IAAI,MAAY;AACd,YAAM,aAAa,KAAK,cAAc,IAAI,IAAI;AAC9C,aAAO,YAAY;IACrB;;AAEF,MAAM,wCACJ;AAGK,MAAMC,kBAAiB,IAAI,sCAAqC;;;ACjJvE,MAAMC,KAAqBC;AAA3B,MAKaC,KACXF,GAAOG,eAAAA,WACNH,GAAOI,YAA0BJ,GAAOI,SAASC,iBAClD,wBAAwBC,SAASC,aACjC,aAAaC,cAAcD;AAT7B,MA2BME,IAAoBC,OAAAA;AA3B1B,MA6BMC,KAAc,oBAAIC;AAAAA,MASXC,KATWD,MASXC;IAOXC,YACEC,IACAC,KACAC,KAAAA;AAEA,UAVFC,KAAe,eAAA,MAUTD,QAAcR;AAChB,cAAUU,MACR,mEAAA;AAGJD,WAAKH,UAAUA,IACfG,KAAKE,IAAWJ;IACjB;IAIGK,IAAAA,aAAAA;AAGF,UAAIA,KAAaH,KAAKI;AACtB,YAAMN,KAAUE,KAAKE;AACrB,UAAIlB,MAAAA,WAA+BmB,IAA0B;AAC3D,cAAME,MAAAA,WAAYP,MAA4C,MAAnBA,GAAQQ;AAC/CD,QAAAA,QACFF,KAAaV,GAAYc,IAAIT,EAAAA,IAAAA,WAE3BK,QACDH,KAAKI,IAAcD,KAAa,IAAIb,iBAAiBkB,YACpDR,KAAKH,OAAAA,GAEHQ,OACFZ,GAAYgB,IAAIX,IAASK,EAAAA;MAG9B;AACD,aAAOA;IACR;IAEDO,WAAAA;AACE,aAAOV,KAAKH;IACb;EAAA;AAWH,MAsBac,IAAaC,CAAAA,OACxB,IAAKjB,GACc,YAAA,OAAViB,KAAqBA,KAAeA,KAAPC,IAAAA,QAEpCtB,CAAAA;AA1BJ,MAqCauB,KAAM,CACjBhB,OACGiB,QAAAA;AAEH,UAAMlB,MACe,MAAnBC,GAAQQ,SACJR,GAAQ,CAAA,IACRiB,IAAOC,OACL,CAACC,KAAKC,IAAGC,QAAQF,OA7CAL,CAAAA,OAAAA;AAEzB,UAAA,SAAKA,GAAkC;AACrC,eAAQA,GAAoBf;AACvB,UAAqB,YAAA,OAAVe;AAChB,eAAOA;AAEP,YAAUX,MACR,qEACKW,KADL,sFAAA;IAIH,GAiCgDM,EAAAA,IAAKpB,GAAQqB,MAAM,CAAA,GAC5DrB,GAAQ,CAAA,CAAA;AAEhB,WAAO,IAAKH,GACVE,KACAC,IACAP,CAAAA;EACD;AApDH,MAgEa6B,IAAc,CACzBC,IACAC,QAAAA;AAEItC,IAAAA,KACDqC,GAA0BE,qBAAqBD,IAAOE,IAAKC,CAAAA,OAC1DA,cAAanC,gBAAgBmC,KAAIA,GAAEtB,UAAAA,IAGrCmB,IAAOI,QAASD,CAAAA,QAAAA;AACd,YAAME,MAAQC,SAASC,cAAc,OAAA,GAE/BC,MAAShD,GAAyB;AAAA,iBACpCgD,OACFH,IAAMI,aAAa,SAASD,GAAAA,GAE9BH,IAAMK,cAAeP,IAAgB5B,SACrCwB,GAAWY,YAAYN,GAAAA;IAAM,CAAA;EAEhC;AAnFH,MA8FaO,IACXlD,MAAAA,WACcF,GAAOQ,gBAChBmC,CAAAA,OAAyBA,KACzBA,CAAAA,OACCA,cAAanC,iBAbY6C,CAAAA,OAAAA;AAC/B,QAAItC,MAAU;AACd,eAAWuC,MAAQD,GAAME;AACvBxC,MAAAA,OAAWuC,GAAKvC;AAElB,WAAOc,EAAUd,GAAAA;EAAQ,GAQkC4B,EAAAA,IAAKA;;;;;ACzKlE,MAAMa,KAAqBC;AAGJ,YAArBC,KAAAF,GAAOG,mBAAAA,WAAcD,OAArBF,GAAOG,iBAAmBA;AAc5B,MAAMC,KAAgBJ,GACnBI;AADH,MAOMC,KAAiCD,KAClCA,GAAaE,cACd;AATJ,MAWMC,IAEFP,GAAOQ;AAbX,MA2QaC,IAA8C,EACzDC,YAAYC,IAAgBC,KAAAA;AAC1B,YAAQA,KAAAA;MACN,KAAKC;AACHF,QAAAA,KAAQA,KAAQN,KAAiC;AACjD;MACF,KAAKS;MACL,KAAKC;AAGHJ,QAAAA,KAAiB,QAATA,KAAgBA,KAAQK,KAAKC,UAAUN,EAAAA;IAAAA;AAGnD,WAAOA;EACR,GAEDO,cAAcP,IAAsBC,KAAAA;AAClC,QAAIO,KAAqBR;AACzB,YAAQC,KAAAA;MACN,KAAKC;AACHM,QAAAA,KAAsB,SAAVR;AACZ;MACF,KAAKS;AACHD,QAAAA,KAAsB,SAAVR,KAAiB,OAAOS,OAAOT,EAAAA;AAC3C;MACF,KAAKG;MACL,KAAKC;AAIH,YAAA;AAEEI,UAAAA,KAAYH,KAAKK,MAAMV,EAAAA;QACxB,SAAQW,IAAP;AACAH,UAAAA,KAAY;QACb;IAAA;AAGL,WAAOA;EACR,EAAA;AAlTH,MA6TaI,IAAuB,CAACZ,IAAgBa,QAE5CA,QAAQb,OAAUa,OAAQA,OAAOb,MAAUA;AA/TpD,MAkUMc,KAAkD,EACtDC,WAAAA,MACAd,MAAMe,QACNC,WAAWnB,GACXoB,SAAAA,OACAC,YAAYP,EAAAA;AAvUd,MAgVMQ,IAAY;AAAA,MAeIC,IAfJ,eAwBhB/B,WAAAgC,eAAAA,6BAAAA;IAsgBAC,cAAAA;AACEC,YAAAA,GA3CMC,KAAAC,OAAwC,oBAAIC,OAUpDF,KAAeG,kBAAAA,OAOfH,KAAUI,aAAAA,OAkBFJ,KAAoBK,OAAuB,MASjDL,KAAKM,EAAAA;IACN;IApbDC,OAAAA,eAAsBC,IAAAA;AAAAA,UAAAA;AACpBR,WAAKS,SAAAA,IACc,UAAnB3C,MAACkC,KAAKU,MAAAA,WAAa5C,MAAAA,MAAlBkC,KAAKU,IAAkB,CAAA,GAAIC,KAAKH,EAAAA;IAClC;IA0GUI,WAAAA,qBAAAA;AAETZ,WAAKS,SAAAA;AACL,YAAMI,KAAuB,CAAA;AAU7B,aAPAb,KAAKc,kBAAkBC,QAAQ,CAACC,KAAGC,OAAAA;AACjC,cAAMC,MAAOlB,KAAKmB,KAA2BF,IAAGD,GAAAA;AAAAA,mBAC5CE,QACFlB,KAAKoB,KAAyBC,IAAIH,KAAMD,EAAAA,GACxCJ,GAAWF,KAAKO,GAAAA;MACjB,CAAA,GAEIL;IACR;IA2BDN,OAAAA,eACEe,IACAC,MAA+BlC,IAAAA;AAiB/B,UAdIkC,IAAQC,UAGTD,IAAgBjC,YAAAA,QAInBU,KAAKS,SAAAA,GACLT,KAAKc,kBAAkBO,IAAIC,IAAMC,GAAAA,GAAAA,CAM5BA,IAAQE,cAAAA,CAAezB,KAAK0B,UAAUC,eAAeL,EAAAA,GAAO;AAC/D,cAAMM,KAAsB,YAAA,OAATN,KAAoBO,OAAAA,IAAW,OAAKP,IACjDQ,MAAa9B,KAAK+B,sBAAsBT,IAAMM,IAAKL,GAAAA;AAAAA,mBACrDO,OACFpD,OAAOsD,eAAehC,KAAK0B,WAAWJ,IAAMQ,GAAAA;MAY/C;IACF;IA6BSvB,OAAAA,sBACRe,IACAM,KACAL,IAAAA;AAEA,aAAO,EAELU,MAAAA;AACE,eAAQjC,KAAkC4B,GAAAA;MAC3C,GACDP,IAA2B9C,KAAAA;AACzB,cAAM2D,KAAYlC,KAChBsB,EAAAA;AAEDtB,aAAwC4B,GAAAA,IAAiBrD,KACzDyB,KAAoCmC,cACnCb,IACAY,IACAX,EAAAA;MAEH,GACDa,cAAAA,MACAC,YAAAA,KAAY;IAEf;IAgBD9B,OAAAA,mBAA0Be,IAAAA;AACxB,aAAOtB,KAAKc,kBAAkBmB,IAAIX,EAAAA,KAASjC;IAC5C;IAQSkB,OAAAA,WAAAA;AACR,UAAIP,KAAK2B,eAAehC,CAAAA;AACtB,eAAA;AAEFK,WAAKL,CAAAA,IAAAA;AAEL,YAAM2C,KAAY5D,OAAO6D,eAAevC,IAAAA;AAexC,UAdAsC,GAAU7B,SAAAA,GAAAA,WAIN6B,GAAU5B,MACZV,KAAKU,IAAgB,CAAA,GAAI4B,GAAU5B,CAAAA,IAErCV,KAAKc,oBAAoB,IAAIZ,IAAIoC,GAAUxB,iBAAAA,GAE3Cd,KAAKoB,OAA2B,oBAAIlB,OAKhCF,KAAK2B,eAAyC,YAAA,GAAsB;AACtE,cAAMa,KAAQxC,KAAKyC,YAEbC,MAAW,CAAA,GACZhE,OAAOiE,oBAAoBH,EAAAA,GAAAA,GAC3B9D,OAAOkE,sBAAsBJ,EAAAA,CAAAA;AAGlC,mBAAWvB,MAAKyB;AAId1C,eAAK6C,eAAe5B,IAAIuB,GAAcvB,EAAAA,CAAAA;MAEzC;AAkBD,aAjBAjB,KAAK8C,gBAAgB9C,KAAK+C,eAAe/C,KAAKgD,MAAAA,GAAAA;IAkB/C;IA4BSzC,OAAAA,eACRyC,IAAAA;AAEA,YAAMF,MAAgB,CAAA;AACtB,UAAInE,MAAMsE,QAAQD,EAAAA,GAAS;AAIzB,cAAM3B,MAAM,IAAI6B,IAAKF,GAA0BG,KAAKC,IAAAA,CAAAA,EAAUC,QAAAA,CAAAA;AAE9D,mBAAWC,MAAKjC;AACdyB,UAAAA,IAAcS,QAAQC,EAAmBF,EAAAA,CAAAA;MAE5C;AAAA,mBAAUN,MACTF,IAAcnC,KAAK6C,EAAmBR,EAAAA,CAAAA;AAExC,aAAOF;IACR;IAaOvC,OAAAA,KACNe,IACAC,KAAAA;AAEA,YAAMjC,KAAYiC,IAAQjC;AAC1B,aAAA,UAAOA,KAAAA,SAEkB,YAAA,OAAdA,KACPA,KACgB,YAAA,OAATgC,KACPA,GAAKmC,YAAAA,IAAAA;IAEV;IAuDDnD,IAAAA;AAAAA,UAAAA;AACEN,WAAK0D,OAAkB,IAAIC,QACxBC,CAAAA,OAAS5D,KAAK6D,iBAAiBD,EAAAA,GAElC5D,KAAK8D,OAAsB,oBAAI5D,OAC/BF,KAAK+D,KAAAA,GAGL/D,KAAKmC,cAAAA,GACqD,UAA1DrE,KAACkC,KAAKF,YAAuCY,MAAAA,WAAa5C,MAAAA,GAAEiD,QAASiD,CAAAA,OACnEA,GAAEhE,IAAAA,CAAAA;IAEL;IAWDiE,cAAcC,IAAAA;AAAAA,UAAAA,KAAAA;AAAAA,OACO,UAAnBpG,MAACkC,KAAKmE,SAAAA,WAAarG,MAAAA,MAAlBkC,KAAKmE,OAAkB,CAAA,GAAIxD,KAAKuD,EAAAA,GAAAA,WAK7BlE,KAAKoE,cAA4BpE,KAAKqE,gBAChB,UAAxBC,KAAAJ,GAAWK,kBAAAA,WAAaD,MAAAA,GAAAE,KAAAN,EAAAA;IAE3B;IAMDO,iBAAiBP,IAAAA;AAAAA,UAAAA;AAAAA,gBAGfpG,MAAAkC,KAAKmE,SAAAA,WAAAA,OAAAA,IAAeO,OAAO1E,KAAKmE,KAAcQ,QAAQT,EAAAA,MAAgB,GAAG,CAAA;IAC1E;IAcOH,OAAAA;AAGL/D,WAAKF,YAAuCgB,kBAAkBC,QAC7D,CAAC6D,IAAI3D,QAAAA;AACCjB,aAAK2B,eAAeV,GAAAA,MACtBjB,KAAKC,KAAsBoB,IAAIJ,KAAGjB,KAAKiB,GAAAA,CAAAA,GAAAA,OAChCjB,KAAKiB,GAAAA;MACb,CAAA;IAGN;IAWS4D,mBAAAA;AAAAA,UAAAA;AACR,YAAMT,MAEJ,UADAtG,KAAAkC,KAAK8E,eAAAA,WACLhH,KAAAA,KAAAkC,KAAK+E,aACF/E,KAAKF,YAAuCkF,iBAAAA;AAMjD,aAJAC,EACEb,KACCpE,KAAKF,YAAuCgD,aAAAA,GAExCsB;IACR;IAODc,oBAAAA;AAAAA,UAAAA;AAAAA,iBAEMlF,KAAKoE,eAELpE,KAGAoE,aAAapE,KAAK6E,iBAAAA,IAEtB7E,KAAK6D,eAAAA,IAAe,GACF,UAAlB/F,KAAAkC,KAAKmE,SAAAA,WAAarG,MAAAA,GAAEiD,QAASoE,CAAAA,OAAAA;AAAAA,YAAAA;AAAM,eAAA,UAAArH,MAAAqH,GAAEZ,kBAAAA,WAAAA,MAAAA,SAAAA,IAAAA,KAAAA,EAAAA;MAAiB,CAAA;IACvD;IAQSV,eAAeuB,IAAAA;IAA6B;IAQtDC,uBAAAA;AAAAA,UAAAA;AACoB,gBAAlBvH,KAAAkC,KAAKmE,SAAAA,WAAarG,MAAAA,GAAEiD,QAASoE,CAAAA,OAAAA;AAAAA,YAAAA;AAAM,eAAA,UAAArH,MAAAqH,GAAEG,qBAAAA,WAAAA,MAAAA,SAAAA,IAAAA,KAAAA,EAAAA;MAAoB,CAAA;IAC1D;IAcDC,yBACEjE,IACAkE,KACAjH,IAAAA;AAEAyB,WAAKyF,KAAsBnE,IAAM/C,EAAAA;IAClC;IAEOmH,KACNpE,IACA/C,KACAgD,KAA+BlC,IAAAA;AAAAA,UAAAA;AAE/B,YAAM6B,KACJlB,KAAKF,YACLqB,KAA2BG,IAAMC,EAAAA;AACnC,UAAA,WAAIL,MAAAA,SAAsBK,GAAQ9B,SAAkB;AAClD,cAKMkG,MAAAA,YAHJC,UADA9H,MAACyD,GAAQ/B,cAAAA,WAAAA,MAAAA,SAAAA,IAAyClB,eAE7CiD,GAAQ/B,YACTnB,GACsBC,YAAaC,KAAOgD,GAAQ/C,IAAAA;AAwBxDwB,aAAKK,OAAuBiB,IACX,QAAbqE,KACF3F,KAAK6F,gBAAgB3E,EAAAA,IAErBlB,KAAK8F,aAAa5E,IAAMyE,EAAAA,GAG1B3F,KAAKK,OAAuB;MAC7B;IACF;IAGDoF,KAAsBnE,IAAc/C,KAAAA;AAAAA,UAAAA;AAClC,YAAMwH,MAAO/F,KAAKF,aAGZkG,KAAYD,IAAK3E,KAA0Ca,IAAIX,EAAAA;AAGrE,UAAA,WAAI0E,MAA0BhG,KAAKK,SAAyB2F,IAAU;AACpE,cAAMzE,KAAUwE,IAAKE,mBAAmBD,EAAAA,GAClCxG,KACyB,cAAA,OAAtB+B,GAAQ/B,YACX,EAACV,eAAeyC,GAAQ/B,UAAAA,IAAAA,YACP,UAAjB1B,KAAAyD,GAAQ/B,cAAAA,WAAS1B,KAAAA,SAAAA,GAAEgB,iBACnByC,GAAQ/B,YACRnB;AAEN2B,aAAKK,OAAuB2F,IAC5BhG,KAAKgG,EAAAA,IAA0BxG,GAAUV,cACvCP,KACAgD,GAAQ/C,IAAAA,GAIVwB,KAAKK,OAAuB;MAC7B;IACF;IAgBD8B,cACEb,IACAY,KACAX,IAAAA;AAEA,UAAI2E,MAAAA;AAAsB,iBAEtB5E,SACFC,KACEA,MACCvB,KAAKF,YAAuCmG,mBAAmB3E,EAAAA,GACvC5B,cAAcP,GAC1Ba,KAAKsB,EAAAA,GAAqBY,GAAAA,KAClClC,KAAK8D,KAAoBqC,IAAI7E,EAAAA,KAChCtB,KAAK8D,KAAoBzC,IAAIC,IAAMY,GAAAA,GAAAA,SAMjCX,GAAQ9B,WAAoBO,KAAKK,SAAyBiB,OAAAA,WACxDtB,KAAKoG,SACPpG,KAAKoG,OAAyB,oBAAIlG,QAEpCF,KAAKoG,KAAuB/E,IAAIC,IAAMC,EAAAA,MAIxC2E,MAAAA,QAAsB,CAGrBlG,KAAKG,mBAAmB+F,QAC3BlG,KAAK0D,OAAkB1D,KAAKqG,KAAAA;IAO/B;IAKOC,MAAAA,OAAAA;AACNtG,WAAKG,kBAAAA;AACL,UAAA;AAAA,cAGQH,KAAK0D;MACZ,SAAQxE,IAAP;AAKAyE,gBAAQ4C,OAAOrH,EAAAA;MAChB;AACD,YAAMsH,KAASxG,KAAKyG,eAAAA;AAOpB,aAHc,QAAVD,MAAAA,MACIA,IAAAA,CAEAxG,KAAKG;IACd;IAmBSsG,iBAAAA;AACR,aAAOzG,KAAK0G,cAAAA;IACb;IAmBSA,gBAAAA;AAAAA,UAAAA;AAIR,UAAA,CAAK1G,KAAKG;AACR;AAIGH,WAAKI,YAyBNJ,KAAKC,SAIPD,KAAKC,KAAsBc,QAAQ,CAACC,IAAGC,QAAQjB,KAAaiB,GAAAA,IAAKD,EAAAA,GACjEhB,KAAKC,OAAAA;AAEP,UAAI0G,MAAAA;AACJ,YAAMC,KAAoB5G,KAAK8D;AAC/B,UAAA;AACE6C,QAAAA,MAAe3G,KAAK2G,aAAaC,EAAAA,GAC7BD,OACF3G,KAAK6G,WAAWD,EAAAA,GACE,UAAlBtC,KAAAtE,KAAKmE,SAAAA,WAAaG,MAAAA,GAAEvD,QAASoE,CAAAA,OAAAA;AAAAA,cAAAA;AAAM,iBAAA,UAAArH,MAAAqH,GAAE2B,eAAAA,WAAAA,MAAAA,SAAAA,IAAAA,KAAAA,EAAAA;QAAc,CAAA,GACnD9G,KAAK+G,OAAOH,EAAAA,KAEZ5G,KAAKgH,KAAAA;MAER,SAAQ9H,IAAP;AAMA,cAHAyH,MAAAA,OAEA3G,KAAKgH,KAAAA,GACC9H;MACP;AAEGyH,MAAAA,OACF3G,KAAKiH,KAAYL,EAAAA;IAEpB;IAuBSC,WAAWK,IAAAA;IAA4C;IAIjED,KAAYL,IAAAA;AAAAA,UAAAA;AACQ,gBAAlB9I,MAAAkC,KAAKmE,SAAAA,WAAarG,OAAAA,IAAEiD,QAASoE,CAAAA,OAAAA;AAAAA,YAAAA;AAAM,eAAA,UAAArH,MAAAqH,GAAEgC,gBAAAA,WAAAA,MAAAA,SAAAA,IAAAA,KAAAA,EAAAA;MAAe,CAAA,GAC/CnH,KAAKI,eACRJ,KAAKI,aAAAA,MACLJ,KAAKoH,aAAaR,EAAAA,IAEpB5G,KAAKqH,QAAQT,EAAAA;IAiBd;IAEOI,OAAAA;AACNhH,WAAK8D,OAAsB,oBAAI5D,OAC/BF,KAAKG,kBAAAA;IACN;IAkBGmH,IAAAA,iBAAAA;AACF,aAAOtH,KAAKuH,kBAAAA;IACb;IAyBSA,oBAAAA;AACR,aAAOvH,KAAK0D;IACb;IAUSiD,aAAaO,IAAAA;AACrB,aAAA;IACD;IAWSH,OAAOG,IAAAA;AAAAA,iBACXlH,KAAKoG,SAGPpG,KAAKoG,KAAuBrF,QAAQ,CAACC,IAAGwG,QACtCxH,KAAK0F,KAAsB8B,KAAGxH,KAAKwH,GAAAA,GAAkBxG,EAAAA,CAAAA,GAEvDhB,KAAKoG,OAAAA,SAEPpG,KAAKgH,KAAAA;IACN;IAYSK,QAAQH,IAAAA;IAAsC;IAkB9CE,aAAaF,IAAAA;IAAsC;EAAA;AAh+B5CtH,IAACD,CAAAA,IAAAA,MAQXC,EAAAkB,oBAA4C,oBAAIZ,OAmChDN,EAAakD,gBAA6B,CAAA,GAwQ1ClD,EAAAoF,oBAAoC,EAACyC,MAAM,OAAA,GAirBpDtJ,QAAAA,KAAAA,EAAkB,EAACyB,iBAAAA,EAAAA,CAAAA,IAoCY,UAA/B8H,IAAC9J,GAAO+J,4BAAAA,WAAuBD,IAAAA,IAA9B9J,GAAO+J,0BAA4B,CAAA,GAAIhH,KAAK,OAAA;;;;ACjgD7C,MAAMiH,KAAqBC;AAA3B,MAmOMC,KAAgBF,GAAsCE;AAnO5D,MA6OMC,KAASD,KACXA,GAAaE,aAAa,YAAY,EACpCC,YAAaC,CAAAA,OAAMA,GAAAA,CAAAA,IAAAA;AA/OzB,MA6TMC,KAAuB;AA7T7B,MAmUMC,KAAS,QAAcC,KAAKC,OAAAA,IAAZC,IAAsBC,MAAM,CAAA;AAnUlD,MAsUMC,KAAc,MAAML;AAtU1B,MA0UMM,KAAa,IAAID;AA1UvB,MA4UME,KAAAA,WACSf,GAAOgB,WACf,EACCC,kBAAgB,OACP,CAAA,GAAA,IAGXD;AAnVN,MAsVME,KAAe,MAAMH,GAAEI,cAAc,EAAA;AAtV3C,MA0VMC,KAAeC,CAAAA,OACT,SAAVA,MAAmC,YAAA,OAATA,MAAqC,cAAA,OAATA;AA3VxD,MA4VMC,KAAUC,MAAMD;AA5VtB,MA6VME,KAAcH,CAAAA,OAClBC,GAAQD,EAAAA,KAEqC,cAAA,QAArCA,QAAAA,KAAAA,SAAAA,GAAgBI,OAAOC,QAAAA;AAhWjC,MAkWMC,KAAa;AAlWnB,MAoXMC,IAAe;AApXrB,MAyXMC,IAAkB;AAzXxB,MA6XMC,IAAmB;AA7XzB,MAqZMC,KAAkBC,OACtB,KAAKL,uBAAgCA,OAAeA;2BACpD,GAAA;AAvZF,MA8ZMM,IAA0B;AA9ZhC,MA+ZMC,IAA0B;AA/ZhC,MAsaMC,IAAiB;AAtavB,MAoeMC,IACmBC,CAAAA,OACvB,CAACC,QAAkCC,QAU1B,EAELC,YAAgBH,IAChBC,SAAAA,KACAC,QAAAA,GAAAA;AApfN,MAqgBaE,IAAOL,EA5FA,CAAA;AAzapB,MA8hBaM,IAAMN,EApHA,CAAA;AA1anB,MAoiBaO,IAAWlB,OAAOmB,IAAI,cAAA;AApiBnC,MAyjBaC,IAAUpB,OAAOmB,IAAI,aAAA;AAzjBlC,MAkkBME,IAAgB,oBAAIC;AAlkB1B,MAumBMC,IAASjC,GAAEE,iBACfF,IACA,KACA,MAAA,KACA;AA3mBF,MA4oBMkC,IAAkB,CACtBX,IACAD,QAAAA;AAQA,UAAMa,KAAIZ,GAAQa,SAAS,GAIrBC,MAAuC,CAAA;AAC7C,QAKIC,IALAZ,KAjPa,MAiPNJ,MAAsB,UAAU,IASvCiB,KAAQ1B;AAEZ,aAAS2B,MAAI,GAAGA,MAAIL,IAAGK,OAAK;AAC1B,YAAMjD,KAAIgC,GAAQiB,GAAAA;AAMlB,UACIC,KAEAC,IAHAC,KAAAA,IAEAC,KAAY;AAKhB,aAAOA,KAAYrD,GAAE6C,WAEnBG,GAAMK,YAAYA,IAClBF,KAAQH,GAAMM,KAAKtD,EAAAA,GACL,SAAVmD;AAGJE,QAAAA,KAAYL,GAAMK,WACdL,OAAU1B,IACiB,UAAzB6B,GAxUU,CAAA,IAyUZH,KAAQzB,IAAAA,WACC4B,GA1UG,CAAA,IA4UZH,KAAQxB,IAAAA,WACC2B,GA5UF,CAAA,KA6UHtB,EAAe0B,KAAKJ,GA7UjB,CAAA,CAAA,MAgVLJ,KAAsBrB,OAAO,OAAKyB,GAhV7B,CAAA,GAgVgD,GAAA,IAEvDH,KAAQvB,MAAAA,WACC0B,GAlVM,CAAA,MAyVfH,KAAQvB,MAEDuB,OAAUvB,KACS,QAAxB0B,GA1TS,CAAA,KA6TXH,KAAQD,QAAAA,KAAAA,KAAmBzB,GAG3B8B,KAAAA,MAAoB,WACXD,GAhUI,CAAA,IAkUbC,KAAAA,MAEAA,KAAmBJ,GAAMK,YAAYF,GAnUrB,CAAA,EAmU8CN,QAC9DK,MAAWC,GArUE,CAAA,GAsUbH,KAAAA,WACEG,GArUO,CAAA,IAsUH1B,KACsB,QAAtB0B,GAvUG,CAAA,IAwUHvB,IACAD,KAGRqB,OAAUpB,KACVoB,OAAUrB,IAEVqB,KAAQvB,KACCuB,OAAUzB,KAAmByB,OAAUxB,IAChDwB,KAAQ1B,KAIR0B,KAAQvB,IACRsB,KAAAA;AA8BJ,YAAMS,KACJR,OAAUvB,MAAeO,GAAQiB,MAAI,CAAA,EAAGQ,WAAW,IAAA,IAAQ,MAAM;AACnEtB,MAAAA,MACEa,OAAU1B,IACNtB,KAAIQ,KACJ4C,MAAoB,KACnBN,IAAUY,KAAKR,GAAAA,GAChBlD,GAAEM,MAAM,GAAG8C,EAAAA,IACTnD,KACAD,GAAEM,MAAM8C,EAAAA,IACVlD,KACAsD,MACAxD,KACAE,MAAAA,OACCkD,MAA2BN,IAAUY,KAAAA,MAAKC,GAAYV,OAAKO;IACnE;AAED,UAAMI,KACJzB,MAAQH,GAAQY,EAAAA,KAAM,UAxXP,MAwXiBb,MAAsB,WAAW;AAOnE,QAAA,CAAKd,MAAMD,QAAQgB,EAAAA,KAAAA,CAAaA,GAAQ6B,eAAe,KAAA;AAkBrD,YAAUC,MAjBI,gCAAA;AAoBhB,WAAO,CAAA,WACLjE,KACIA,GAAOE,WAAW6D,EAAAA,IACjBA,IACLd,GAAAA;EACD;AAKH,MAAMiB,IAAN,MAAMA;IAMJC,YAAAA,EAEEhC,SAACA,IAASE,YAAgBH,IAAAA,GAC1BkC,KAAAA;AAEA,UAAIC;AAPNC,WAAKC,QAAwB,CAAA;AAQ3B,UAAIC,KAAY,GACZC,KAAgB;AACpB,YAAMC,KAAYvC,GAAQa,SAAS,GAC7BuB,KAAQD,KAAKC,OAAAA,CAGZjC,IAAMW,EAAAA,IAAaH,EAAgBX,IAASD,GAAAA;AAKnD,UAJAoC,KAAKK,KAAKT,EAASU,cAActC,IAAM8B,GAAAA,GACvCvB,EAAOgC,cAAcP,KAAKK,GAAGG,SAlbd,MAqbX5C,KAAqB;AACvB,cAAM4C,KAAUR,KAAKK,GAAGG,SAClBC,MAAaD,GAAQE;AAC3BD,QAAAA,IAAWE,OAAAA,GACXH,GAAQI,OAAAA,GAAUH,IAAWI,UAAAA;MAC9B;AAGD,aAAsC,UAA9Bd,KAAOxB,EAAOuC,SAAAA,MAAwBb,GAAMvB,SAAS0B,MAAW;AACtE,YAAsB,MAAlBL,GAAKgB,UAAgB;AAuBvB,cAAKhB,GAAiBiB,cAAAA,GAAiB;AAIrC,kBAAMC,KAAgB,CAAA;AACtB,uBAAWC,OAASnB,GAAiBoB,kBAAAA;AAQnC,kBACED,IAAKE,SAAStF,EAAAA,KACdoF,IAAK5B,WAAWvD,EAAAA,GAChB;AACA,sBAAMsF,KAAW1C,GAAUwB,IAAAA;AAE3B,oBADAc,GAAc1B,KAAK2B,GAAAA,GAAAA,WACfG,IAAwB;AAE1B,wBAGMC,KAHSvB,GAAiBwB,aAC9BF,GAASG,YAAAA,IAAgB1F,EAAAA,EAEL2F,MAAM1F,EAAAA,GACtB2F,MAAI,eAAevC,KAAKkC,EAAAA;AAC9BpB,kBAAAA,GAAMV,KAAK,EACT3B,MA1eK,GA2eL+D,OAAOzB,IACPgB,MAAMQ,IAAE,CAAA,GACR7D,SAASyD,IACTM,MACW,QAATF,IAAE,CAAA,IACEG,IACS,QAATH,IAAE,CAAA,IACFI,IACS,QAATJ,IAAE,CAAA,IACFK,IACAC,EAAAA,CAAAA;gBAET;AACC/B,kBAAAA,GAAMV,KAAK,EACT3B,MApfG,GAqfH+D,OAAOzB,GAAAA,CAAAA;cAGZ;AAEH,uBAAWgB,OAAQD;AAChBlB,cAAAA,GAAiBkC,gBAAgBf,GAAAA;UAErC;AAGD,cAAIxD,EAAe0B,KAAMW,GAAiBmC,OAAAA,GAAU;AAIlD,kBAAMrE,KAAWkC,GAAiBoC,YAAaV,MAAM1F,EAAAA,GAC/CmD,MAAYrB,GAAQa,SAAS;AACnC,gBAAIQ,MAAY,GAAG;AAChBa,cAAAA,GAAiBoC,cAAc1G,KAC3BA,GAAa2G,cACd;AAMJ,uBAAStD,KAAI,GAAGA,KAAII,KAAWJ;AAC5BiB,gBAAAA,GAAiBa,OAAO/C,GAAQiB,EAAAA,GAAIrC,GAAAA,CAAAA,GAErC8B,EAAOuC,SAAAA,GACPb,GAAMV,KAAK,EAAC3B,MAvhBP,GAuhByB+D,OAAAA,EAASzB,GAAAA,CAAAA;AAKxCH,cAAAA,GAAiBa,OAAO/C,GAAQqB,GAAAA,GAAYzC,GAAAA,CAAAA;YAC9C;UACF;QACF,WAA4B,MAAlBsD,GAAKgB;AAEd,cADchB,GAAiBsC,SAClBjG;AACX6D,YAAAA,GAAMV,KAAK,EAAC3B,MAliBH,GAkiBqB+D,OAAOzB,GAAAA,CAAAA;eAChC;AACL,gBAAIpB,KAAAA;AACJ,mBAAA,QAAQA,KAAKiB,GAAiBsC,KAAKC,QAAQvG,IAAQ+C,KAAI,CAAA;AAGrDmB,cAAAA,GAAMV,KAAK,EAAC3B,MAniBH,GAmiBuB+D,OAAOzB,GAAAA,CAAAA,GAEvCpB,MAAK/C,GAAO2C,SAAS;UAExB;AAEHwB,QAAAA;MACD;IAWF;IAIDqC,OAAAA,cAAqBvE,IAAmBwE,KAAAA;AACtC,YAAMnC,KAAK/D,GAAEgE,cAAc,UAAA;AAE3B,aADAD,GAAGoC,YAAYzE,IACRqC;IACR;EAAA;AAgBH,WAASqC,EACPC,IACA/F,KACAgG,KAA0BD,IAC1BE,KAAAA;AAAAA,QAAAA,KAAAA,KAAAA,KAAAA;AAIA,QAAIjG,QAAUsB;AACZ,aAAOtB;AAET,QAAIkG,KAAAA,WACFD,MAC0C,UAArCE,MAAAH,GAAyBI,SAAAA,WAAYD,MAAAA,SAAAA,IAAGF,GAAAA,IACxCD,GAA+CK;AACtD,UAAMC,KAA2BvG,GAAYC,GAAAA,IAAAA,SAGxCA,IAA2C;AAyBhD,YAxBIkG,QAAAA,KAAAA,SAAAA,GAAkBjD,iBAAgBqD,OAEoB,UAAxDC,MAAAL,QAAAA,KAAAA,SAAAA,GAAuD,SAAA,WAACK,OAAAA,IAAAC,KAAAN,IAAAA,KAAG,GAAA,WACvDI,KACFJ,KAAAA,UAEAA,KAAmB,IAAII,GAAyBP,EAAAA,GAChDG,GAAiBO,KAAaV,IAAMC,IAAQC,GAAAA,IAAAA,WAE1CA,OACyB,UAAzBS,OAAAC,KAAAX,IAAyBI,SAAAA,WAAAM,MAAAA,MAAAC,GAAAP,OAAiB,CAAA,GAAIH,GAAAA,IAC9CC,KAEDF,GAAiCK,OAAcH,KAAAA,WAGhDA,OACFlG,MAAQ8F,EACNC,IACAG,GAAiBU,KAAUb,IAAO/F,IAA0BkB,MAAAA,GAC5DgF,IACAD,GAAAA,IAGGjG;EACT;AAOA,MAAM6G,KAAN,MAAMA;IASJ5D,YAAY6D,IAAoBd,KAAAA;AAPhC5C,WAAO2D,OAA4B,CAAA,GAKnC3D,KAAwB4D,OAAAA,QAGtB5D,KAAK6D,OAAaH,IAClB1D,KAAK8D,OAAWlB;IACjB;IAGGmB,IAAAA,aAAAA;AACF,aAAO/D,KAAK8D,KAASC;IACtB;IAGGC,IAAAA,OAAAA;AACF,aAAOhE,KAAK8D,KAASE;IACtB;IAIDC,EAAOnE,IAAAA;AAAAA,UAAAA;AACL,YAAA,EACEO,IAAAA,EAAIG,SAACA,GAAAA,GACLP,OAAOA,IAAAA,IACLD,KAAK6D,MACHK,OAAsC,UAA1BnB,MAAAjD,QAAAA,KAAAA,SAAAA,GAASqE,kBAAAA,WAAiBpB,MAAAA,MAAAzG,IAAG8H,WAAW5D,IAAAA,IAAS;AACnEjC,QAAOgC,cAAc2D;AAErB,UAAInE,MAAOxB,EAAOuC,SAAAA,GACdZ,MAAY,GACZmE,KAAY,GACZC,KAAerE,IAAM,CAAA;AAEzB,aAAA,WAAOqE,MAA4B;AACjC,YAAIpE,QAAcoE,GAAa3C,OAAO;AACpC,cAAIgB;AA9qBO,gBA+qBP2B,GAAa1G,OACf+E,MAAO,IAAI4B,EACTxE,KACAA,IAAKyE,aACLxE,MACAF,EAAAA,IArrBW,MAurBJwE,GAAa1G,OACtB+E,MAAO,IAAI2B,GAAa1C,KACtB7B,KACAuE,GAAapD,MACboD,GAAazG,SACbmC,MACAF,EAAAA,IAxrBS,MA0rBFwE,GAAa1G,SACtB+E,MAAO,IAAI8B,EAAY1E,KAAqBC,MAAMF,EAAAA,IAEpDE,KAAK2D,KAAQpE,KAAKoD,GAAAA,GAClB2B,KAAerE,IAAAA,EAAQoE,EAAAA;QACxB;AACGnE,QAAAA,SAAcoE,QAAAA,KAAAA,SAAAA,GAAc3C,WAC9B5B,MAAOxB,EAAOuC,SAAAA,GACdZ;MAEH;AAKD,aADA3B,EAAOgC,cAAcjE,IACd4H;IACR;IAEDQ,EAAQ5G,IAAAA;AACN,UAAIgB,MAAI;AACR,iBAAW6D,MAAQ3C,KAAK2D;AAAAA,mBAClBhB,OAAAA,WASGA,GAAuB9E,WACzB8E,GAAuBgC,KAAW7G,IAAQ6E,IAAuB7D,GAAAA,GAIlEA,OAAM6D,GAAuB9E,QAASa,SAAS,KAE/CiE,GAAKgC,KAAW7G,GAAOgB,GAAAA,CAAAA,IAG3BA;IAEH;EAAA;AA8CH,MAAMyF,IAAN,MAAMA;IA4CJ1E,YACE+E,IACAC,KACAjC,IACA9C,KAAAA;AAAAA,UAAAA;AA/COE,WAAIpC,OAvxBI,GAyxBjBoC,KAAgB8E,OAAY1G,GA+B5B4B,KAAwB4D,OAAAA,QAgBtB5D,KAAK+E,OAAcH,IACnB5E,KAAKgF,OAAYH,KACjB7E,KAAK8D,OAAWlB,IAChB5C,KAAKF,UAAUA,KAIfE,KAAKiF,OAAoC,UAApBlC,MAAAjD,QAAAA,MAAAA,SAAAA,IAASoF,gBAAAA,WAAWnC,OAAAA;IAK1C;IAtCGiB,IAAAA,OAAAA;AAAAA,UAAAA,IAAAA;AAIF,aAAuC,UAAhCb,MAAe,UAAfJ,KAAA/C,KAAK8D,SAAAA,WAAUf,KAAAA,SAAAA,GAAAiB,SAAAA,WAAiBb,MAAAA,MAAAnD,KAAKiF;IAC7C;IAqDGlB,IAAAA,aAAAA;AACF,UAAIA,KAAwB/D,KAAK+E,KAAahB;AAC9C,YAAMnB,MAAS5C,KAAK8D;AAUpB,aAAA,WARElB,OACyB,QAAzBmB,QAAAA,KAAAA,SAAAA,GAAYhD,cAKZgD,KAAcnB,IAAwCmB,aAEjDA;IACR;IAMGa,IAAAA,YAAAA;AACF,aAAO5E,KAAK+E;IACb;IAMGF,IAAAA,UAAAA;AACF,aAAO7E,KAAKgF;IACb;IAEDL,KAAW/H,IAAgBuI,MAAmCnF,MAAAA;AAM5DpD,MAAAA,KAAQ8F,EAAiB1C,MAAMpD,IAAOuI,GAAAA,GAClCxI,GAAYC,EAAAA,IAIVA,OAAUwB,KAAoB,QAATxB,MAA2B,OAAVA,MACpCoD,KAAK8E,SAAqB1G,KAQ5B4B,KAAKoF,KAAAA,GAEPpF,KAAK8E,OAAmB1G,KACfxB,OAAUoD,KAAK8E,QAAoBlI,OAAUsB,KACtD8B,KAAKqF,EAAYzI,EAAAA,IAAAA,WAGTA,GAAqC,aAC/CoD,KAAKsF,EAAsB1I,EAAAA,IAAAA,WACjBA,GAAemE,WAgBzBf,KAAKuF,EAAY3I,EAAAA,IACRG,GAAWH,EAAAA,IACpBoD,KAAKwF,EAAgB5I,EAAAA,IAGrBoD,KAAKqF,EAAYzI,EAAAA;IAEpB;IAEO6I,EAAwB1F,IAAAA;AAC9B,aAAiBC,KAAK+E,KAAahB,WAAa2B,aAC9C3F,IACAC,KAAKgF,IAAAA;IAER;IAEOO,EAAY3I,IAAAA;AACdoD,WAAK8E,SAAqBlI,OAC5BoD,KAAKoF,KAAAA,GAmCLpF,KAAK8E,OAAmB9E,KAAKyF,EAAQ7I,EAAAA;IAExC;IAEOyI,EAAYzI,IAAAA;AAKhBoD,WAAK8E,SAAqB1G,KAC1BzB,GAAYqD,KAAK8E,IAAAA,IAEC9E,KAAK+E,KAAaP,YAarBnC,OAAOzF,KAqBpBoD,KAAKuF,EAAYjJ,GAAEqJ,eAAe/I,EAAAA,CAAAA,GAStCoD,KAAK8E,OAAmBlI;IACzB;IAEO0I,EACNM,IAAAA;AAAAA,UAAAA;AAGA,YAAA,EAAM9H,QAACA,IAAQC,YAAgBH,IAAAA,IAAQgI,IAKjClC,MACY,YAAA,OAAT9F,MACHoC,KAAK6F,KAAcD,EAAAA,KAAAA,WAClBhI,IAAKyC,OACHzC,IAAKyC,KAAKT,EAASU,cAAc1C,IAAKkI,GAAG9F,KAAKF,OAAAA,IACjDlC;AAEN,WAAiD,UAAAkB,MAA5CkB,KAAK8E,SAAAA,WAAuC/B,MAAAA,SAAAA,IAAAc,UAAeH;AAS7D1D,aAAK8E,KAAsCJ,EAAQ5G,EAAAA;WAC/C;AACL,cAAMiI,KAAW,IAAItC,GAAiBC,KAAsB1D,IAAAA,GACtDkE,MAAW6B,GAAS9B,EAAOjE,KAAKF,OAAAA;AAUtCiG,QAAAA,GAASrB,EAAQ5G,EAAAA,GAUjBkC,KAAKuF,EAAYrB,GAAAA,GACjBlE,KAAK8E,OAAmBiB;MACzB;IACF;IAIDF,KAAcD,IAAAA;AACZ,UAAIlC,MAAWrF,EAAc2H,IAAIJ,GAAO/H,OAAAA;AAIxC,aAAA,WAHI6F,OACFrF,EAAc4H,IAAIL,GAAO/H,SAAU6F,MAAW,IAAI9D,EAASgG,EAAAA,CAAAA,GAEtDlC;IACR;IAEO8B,EAAgB5I,IAAAA;AAWjBC,MAAAA,GAAQmD,KAAK8E,IAAAA,MAChB9E,KAAK8E,OAAmB,CAAA,GACxB9E,KAAKoF,KAAAA;AAKP,YAAMc,MAAYlG,KAAK8E;AACvB,UACIqB,IADA9B,MAAY;AAGhB,iBAAW+B,OAAQxJ;AACbyH,QAAAA,QAAc6B,IAAUxH,SAK1BwH,IAAU3G,KACP4G,KAAW,IAAI5B,EACdvE,KAAKyF,EAAQhJ,GAAAA,CAAAA,GACbuD,KAAKyF,EAAQhJ,GAAAA,CAAAA,GACbuD,MACAA,KAAKF,OAAAA,CAAAA,IAKTqG,KAAWD,IAAU7B,GAAAA,GAEvB8B,GAASxB,KAAWyB,GAAAA,GACpB/B;AAGEA,MAAAA,MAAY6B,IAAUxH,WAExBsB,KAAKoF,KACHe,MAAiBA,GAASnB,KAAYR,aACtCH,GAAAA,GAGF6B,IAAUxH,SAAS2F;IAEtB;IAaDe,KACEiB,KAA+BrG,KAAK+E,KAAaP,aACjD8B,KAAAA;AAAAA,UAAAA;AAGA,WADiC,UAAjCvD,KAAA/C,KAAKuG,SAAAA,WAA4BxD,MAAAA,GAAAK,KAAApD,MAAAA,OAAA,MAAasG,GAAAA,GACvCD,MAASA,OAAUrG,KAAKgF,QAAW;AACxC,cAAMwB,MAASH,GAAQ7B;AACjB6B,QAAAA,GAAoB1F,OAAAA,GAC1B0F,KAAQG;MACT;IACF;IAQDC,aAAavB,IAAAA;AAAAA,UAAAA;AAAAA,iBACPlF,KAAK8D,SACP9D,KAAKiF,OAAgBC,IACY,UAAjCnC,MAAA/C,KAAKuG,SAAAA,WAA4BxD,OAAAA,IAAAK,KAAApD,MAAAkF,EAAAA;IAOpC;EAAA;AA2BH,MAAMlD,IAAN,MAAMA;IAoCJnC,YACE6G,IACAxF,KACArD,IACA+E,KACA9C,KAAAA;AAxCOE,WAAIpC,OA7tCQ,GA6uCrBoC,KAAgB8E,OAA6B1G,GAM7C4B,KAAwB4D,OAAAA,QAoBtB5D,KAAK0G,UAAUA,IACf1G,KAAKkB,OAAOA,KACZlB,KAAK8D,OAAWlB,KAChB5C,KAAKF,UAAUA,KACXjC,GAAQa,SAAS,KAAoB,OAAfb,GAAQ,CAAA,KAA4B,OAAfA,GAAQ,CAAA,KACrDmC,KAAK8E,OAAuBhI,MAAMe,GAAQa,SAAS,CAAA,EAAGiI,KAAK,IAAIzK,QAAAA,GAC/D8D,KAAKnC,UAAUA,MAEfmC,KAAK8E,OAAmB1G;IAK3B;IA7BG8D,IAAAA,UAAAA;AACF,aAAOlC,KAAK0G,QAAQxE;IACrB;IAGG8B,IAAAA,OAAAA;AACF,aAAOhE,KAAK8D,KAASE;IACtB;IA8CDW,KACE/H,IACAuI,MAAmCnF,MACnC4G,IACAC,KAAAA;AAEA,YAAMhJ,MAAUmC,KAAKnC;AAGrB,UAAIiJ,MAAAA;AAEJ,UAAA,WAAIjJ;AAEFjB,QAAAA,KAAQ8F,EAAiB1C,MAAMpD,IAAOuI,KAAiB,CAAA,GACvD2B,MAAAA,CACGnK,GAAYC,EAAAA,KACZA,OAAUoD,KAAK8E,QAAoBlI,OAAUsB,GAC5C4I,QACF9G,KAAK8E,OAAmBlI;WAErB;AAEL,cAAMkB,MAASlB;AAGf,YAAIkC,KAAGiI;AACP,aAHAnK,KAAQiB,IAAQ,CAAA,GAGXiB,MAAI,GAAGA,MAAIjB,IAAQa,SAAS,GAAGI;AAClCiI,UAAAA,KAAIrE,EAAiB1C,MAAMlC,IAAO8I,KAAc9H,GAAAA,GAAIqG,KAAiBrG,GAAAA,GAEjEiI,OAAM7I,MAER6I,KAAK/G,KAAK8E,KAAoChG,GAAAA,IAEhDgI,QAAAA,MAAAA,CACGnK,GAAYoK,EAAAA,KAAMA,OAAO/G,KAAK8E,KAAoChG,GAAAA,IACjEiI,OAAM3I,IACRxB,KAAQwB,IACCxB,OAAUwB,MACnBxB,OAAUmK,QAAAA,KAAAA,KAAK,MAAMlJ,IAAQiB,MAAI,CAAA,IAIlCkB,KAAK8E,KAAoChG,GAAAA,IAAKiI;MAElD;AACGD,MAAAA,OAAAA,CAAWD,OACb7G,KAAKgH,EAAapK,EAAAA;IAErB;IAGDoK,EAAapK,IAAAA;AACPA,MAAAA,OAAUwB,IACN4B,KAAK0G,QAAqBzE,gBAAgBjC,KAAKkB,IAAAA,IAmB/ClB,KAAK0G,QAAqBO,aAC9BjH,KAAKkB,MACJtE,QAAAA,KAAAA,KAAS,EAAA;IAGf;EAAA;AAIH,MAAMiF,IAAN,cAA2BG,EAAAA;IAA3BnC,cAAAA;AAAAA,YAAAA,GAAAA,SAAAA,GACoBG,KAAIpC,OA53CF;IAo5CrB;IArBUoJ,EAAapK,IAAAA;AAmBnBoD,WAAK0G,QAAgB1G,KAAKkB,IAAAA,IAAQtE,OAAUwB,IAAAA,SAAsBxB;IACpE;EAAA;AAOH,MAAMsK,IAAiCzL,KAClCA,GAAa2G,cACd;AAGJ,MAAMN,IAAN,cAAmCE,EAAAA;IAAnCnC,cAAAA;AAAAA,YAAAA,GAAAA,SAAAA,GACoBG,KAAIpC,OA/5CO;IAm7C9B;IAjBUoJ,EAAapK,IAAAA;AAQhBA,MAAAA,MAASA,OAAUwB,IACf4B,KAAK0G,QAAqBO,aAC9BjH,KAAKkB,MACLgG,CAAAA,IAGIlH,KAAK0G,QAAqBzE,gBAAgBjC,KAAKkB,IAAAA;IAExD;EAAA;AAkBH,MAAMa,IAAN,cAAwBC,EAAAA;IAGtBnC,YACE6G,IACAxF,KACArD,IACA+E,KACA9C,KAAAA;AAEAqH,YAAMT,IAASxF,KAAMrD,IAAS+E,KAAQ9C,GAAAA,GATtBE,KAAIpC,OAp8CL;IAs9ChB;IAKQ+G,KACPyC,IACAjC,MAAmCnF,MAAAA;AAAAA,UAAAA;AAInC,WAFAoH,KAC6D,UAA3DrE,KAAAL,EAAiB1C,MAAMoH,IAAajC,KAAiB,CAAA,MAAA,WAAMpC,KAAAA,KAAA3E,OACzCF;AAClB;AAEF,YAAMmJ,MAAcrH,KAAK8E,MAInBwC,MACHF,OAAgBhJ,KAAWiJ,QAAgBjJ,KAC3CgJ,GAAyCG,YACvCF,IAAyCE,WAC3CH,GAAyCI,SACvCH,IAAyCG,QAC3CJ,GAAyCK,YACvCJ,IAAyCI,SAIxCC,MACJN,OAAgBhJ,MACfiJ,QAAgBjJ,KAAWkJ;AAY1BA,MAAAA,OACFtH,KAAK0G,QAAQiB,oBACX3H,KAAKkB,MACLlB,MACAqH,GAAAA,GAGAK,OAIF1H,KAAK0G,QAAQkB,iBACX5H,KAAKkB,MACLlB,MACAoH,EAAAA,GAGJpH,KAAK8E,OAAmBsC;IACzB;IAEDS,YAAYC,IAAAA;AAAAA,UAAAA,KAAAA;AAC2B,oBAAA,OAA1B9H,KAAK8E,OACd9E,KAAK8E,KAAiB1B,KAAAA,UAAKD,KAAc,UAAArE,MAAdkB,KAAKF,YAAAA,WAASiD,MAAAA,SAAAA,IAAAgF,SAAAA,WAAAA,KAAAA,KAAQ/H,KAAK0G,SAASoB,EAAAA,IAE9D9H,KAAK8E,KAAyC+C,YAAYC,EAAAA;IAE9D;EAAA;AAIH,MAAMrD,IAAN,MAAMA;IAiBJ5E,YACS6G,IACP9D,KACA9C,IAAAA;AAFOE,WAAO0G,UAAPA,IAjBA1G,KAAIpC,OA/hDM,GA2iDnBoC,KAAwB4D,OAAAA,QAStB5D,KAAK8D,OAAWlB,KAChB5C,KAAKF,UAAUA;IAChB;IAGGkE,IAAAA,OAAAA;AACF,aAAOhE,KAAK8D,KAASE;IACtB;IAEDW,KAAW/H,IAAAA;AAOT8F,QAAiB1C,MAAMpD,EAAAA;IACxB;EAAA;AAqBU,MAAAoL,IAAO,EAElBC,GAAuBnM,IACvBoM,GAASnM,IACToM,GAAc/L,IACdgM,GA3mDkB,GA4mDlBC,GAAkB7J,GAElB8J,GAAmB7E,IACnB8E,GAAaxL,IACbyL,GAAmB9F,GACnB+F,GAAYlE,GACZmE,GAAgB1G,GAChB2G,GAAuB7G,GACvB8G,GAAY7G,GACZ8G,GAAehH,GACfiH,GAAcrE,EAAAA;AAhBH,MAoBPsE,IAEFxN,GAAOyN;AACXD,UAAAA,KAAAA,EAAkBnJ,GAAU2E,CAAAA,IAIL,UAAvBhB,KAAChI,GAAO0N,oBAAAA,WAAe1F,KAAAA,KAAtBhI,GAAO0N,kBAAoB,CAAA,GAAI1J,KAAK,OAAA;AAkCxB,MAAA2J,IAAS,CACpBtM,IACAuM,KACArJ,OAAAA;AAAAA,QAAAA,KAAAA;AAUA,UAAMsJ,MAAyC,UAAzBrG,MAAAjD,QAAAA,KAAAA,SAAAA,GAASuJ,iBAAAA,WAAgBtG,MAAAA,MAAAoG;AAG/C,QAAIxG,MAAmByG,IAAkC;AASzD,QAAA,WAAIzG,KAAoB;AACtB,YAAMkC,KAAmC,UAAzB1B,MAAArD,QAAAA,KAAAA,SAAAA,GAASuJ,iBAAAA,WAAgBlG,MAAAA,MAAA;AAGxCiG,MAAAA,IAAkC,aAAIzG,MAAO,IAAI4B,EAChD4E,IAAUzD,aAAajJ,GAAAA,GAAgBoI,EAAAA,GACvCA,IAAAA,QAEA/E,QAAAA,KAAAA,KAAW,CAAA,CAAA;IAEd;AAUD,WATA6C,IAAKgC,KAAW/H,EAAAA,GAST+F;EAAgB;;;;;ACrhEnB,MAAO2G,KAAP,cAA0BC,EAAAA;IAAhCC,cAAAA;AAAAA,YAAAA,GAAAA,SAAAA,GAgBWC,KAAAC,gBAA+B,EAACC,MAAMF,KAAAA,GAEvCA,KAAWG,OAAAA;IA8FpB;IAzFoBC,mBAAAA;AAAAA,UAAAA,IAAAA;AACjB,YAAMC,MAAaC,MAAMF,iBAAAA;AAOzB,aADmB,UAAnBG,MAAAC,MAAAR,KAAKC,eAAcQ,iBAAAA,WAAAF,OAAAC,IAAAC,eAAiBJ,IAAYK,aACzCL;IACR;IASkBM,OAAOC,IAAAA;AAIxB,YAAMC,MAAQb,KAAKc,OAAAA;AACdd,WAAKe,eACRf,KAAKC,cAAce,cAAchB,KAAKgB,cAExCV,MAAMK,OAAOC,EAAAA,GACbZ,KAAKG,OAAcW,EAAOD,KAAOb,KAAKK,YAAYL,KAAKC,aAAAA;IACxD;IAsBQgB,oBAAAA;AAAAA,UAAAA;AACPX,YAAMW,kBAAAA,GACU,UAAhBV,KAAAP,KAAKG,SAAAA,WAAWI,MAAAA,GAAEW,aAAAA,IAAa;IAChC;IAqBQC,uBAAAA;AAAAA,UAAAA;AACPb,YAAMa,qBAAAA,GACU,UAAhBZ,KAAAP,KAAKG,SAAAA,WAAWI,MAAAA,GAAEW,aAAAA,KAAa;IAChC;IASSJ,SAAAA;AACR,aAAOM;IACR;EAAA;AAvGyBvB,EAAAA,GAAY,YAAA,MAG/BA,GAAgB,gBAAA,MAwGU,UAAnCW,KAAAa,WAAWC,6BAAAA,WAAwBd,MAAAA,GAAAe,KAAAF,YAAG,EAACxB,YAAAA,GAAAA,CAAAA;AAGvC,MAAM2B,KAEFH,WAAWI;AACfD,UAAAA,MAAAA,GAAkB,EAAC3B,YAAAA,GAAAA,CAAAA;AA4DoC6B,GAKzB,UAA9BC,KAACC,WAAWC,uBAAAA,WAAkBF,KAAAA,KAA7BC,WAAWC,qBAAuB,CAAA,GAAIC,KAAK,OAAA;;;AC/R5C,MAUaC,KAAAA;;;ACZP,MAAO,YAAP,cAAyBC,GAAU;IAC9B,oBAAiB;AACxB,YAAM,kBAAiB;AAGvB,WAAK,aAAa,eAAe,MAAM;IACzC;IAEmB,SAAM;AACvB,aAAO;IACT;;;;ACdK,MAAM,SAASC;;;;ACoBf,MAAM,cAAN,MAAMC,qBAAoB,UAAS;;AACxB,cAAA,SAA8B,CAAC,MAAM;AAD1C,gBAAW,WAAA;IADvB,EAAc,cAAc;KAChB,WAAW;;;ACsCxB,MAAM,wBAAwB,OAAO,sBAAsB;AAU3D,MAAI;AAEJ,MAAI,CAACC,IAAU;AAMb,6BAAyB,IAAI,iBAAiB,CAAC,YAAW;AACxD,iBAAW,UAAU,SAAS;AAG3B,eAAO,OACN,qBAAqB,GACpB,cAAa;;IAEpB,CAAC;;AAwBG,MAAO,uBAAP,MAA2B;IAC/B,IAAI,UAAO;AACT,aAAO,KAAK,KAAK,aAAa,KAAK;IACrC;IAEA,IAAI,QAAQ,SAAsB;AAChC,UAAI,YAAY,MAAM;AACpB,aAAK,KAAK,gBAAgB,KAAK;aAC1B;AACL,aAAK,KAAK,aAAa,OAAO,OAAO;;IAEzC;IAEA,IAAI,UAAO;AACT,UAAI,KAAK,KAAK,aAAa,KAAK,GAAG;AACjC,YAAI,CAAC,KAAK,WAAW,CAAC,KAAK,KAAK,aAAa;AAC3C,iBAAO;;AAGT,eACE,KAAK,KAAK,YAAW,EACrB,cAA2B,IAAI,KAAK,SAAS;;AAGjD,aAAO,KAAK,kBAAkB,KAAK,KAAK;IAC1C;IACA,IAAI,QAAQ,SAA2B;AACrC,UAAI,SAAS;AACX,aAAK,OAAO,OAAO;aACd;AACL,aAAK,OAAM;;IAEf;;;;;;;;;IAYA,YACmB,MACA,iBAGR;AAJQ,WAAA,OAAA;AACA,WAAA,kBAAA;AAZX,WAAA,iBAAqC;AAiB3C,WAAK,cAAc,IAAI;AACvB,WAAK,qBAAqB,IAAI;AAC9B,8BAAwB,QAAQ,MAAM,EAAC,iBAAiB,CAAC,KAAK,EAAC,CAAC;IAClE;IAEA,OAAO,SAAoB;AACzB,UAAI,YAAY,KAAK,gBAAgB;AACnC;;AAGF,WAAK,kBAAkB,OAAO;AAG9B,WAAK,KAAK,gBAAgB,KAAK;IACjC;IAEA,SAAM;AACJ,WAAK,kBAAkB,IAAI;AAG3B,WAAK,KAAK,aAAa,OAAO,EAAE;IAClC;;IAGA,gBAAa;AACX,WAAK,kBAAkB,KAAK,OAAO;IACrC;;IAGA,mBAAgB;AACd,WAAK,kBAAkB,IAAI;IAC7B;IAEQ,kBAAkB,SAA2B;AACnD,WAAK,gBAAgB,KAAK,gBAAgB,OAAO;AACjD,WAAK,iBAAiB;IACxB;;;;ACzLF,MAAM,SAAS,CAAC,WAAW,YAAY,aAAa;AAO9C,MAAO,YAAP,cAAyBC,GAAU;IAAzC,cAAA;;AAI4C,WAAA,UAAU;AAKV,WAAA,SAAS;AAiBlC,WAAA,uBAAuB,IAAI,qBAC1C,MACA,KAAK,gBAAgB,KAAK,IAAI,CAAC;IA0DnC;IA3EE,IAAI,UAAO;AACT,aAAO,KAAK,qBAAqB;IACnC;IAEA,IAAI,QAAQ,SAAsB;AAChC,WAAK,qBAAqB,UAAU;IACtC;IAEA,IAAI,UAAO;AACT,aAAO,KAAK,qBAAqB;IACnC;IACA,IAAI,QAAQ,SAA2B;AACrC,WAAK,qBAAqB,UAAU;IACtC;IAOA,OAAO,SAAoB;AACzB,WAAK,qBAAqB,OAAO,OAAO;IAC1C;IAEA,SAAM;AACJ,WAAK,qBAAqB,OAAM;IAClC;IAES,oBAAiB;AACxB,YAAM,kBAAiB;AAGvB,WAAK,aAAa,eAAe,MAAM;IACzC;;IAGA,YAAY,OAAqB;AAC/B,UAAI,MAAM,qBAAqB,GAAG;AAGhC;;AAGF,cAAQ,MAAM,MAAM;QAClB;AACE;QACF,KAAK;AACH,eAAK,UAAU,KAAK,SAAS,QAAQ,gBAAgB,KAAK;AAC1D;QACF,KAAK;QACL,KAAK;AACH,eAAK,UAAU;AACf;;AAGJ,YAAM,qBAAqB,IAAI;IACjC;IAEQ,gBAAgB,MAA0B,MAAwB;AACxE,UAAIC;AAAU;AAEd,iBAAW,SAAS,QAAQ;AAC1B,cAAM,oBAAoB,OAAO,IAAI;AACrC,cAAM,iBAAiB,OAAO,IAAI;;IAEtC;IAES,OAAO,SAAkC;AAChD,UAAI,QAAQ,IAAI,SAAS,GAAG;AAG1B,aAAK,cAAc,IAAI,MAAM,oBAAoB,CAAC;;AAEpD,YAAM,OAAO,OAAO;IACtB;;AAjF0C,aAAA;IAAzC,EAAS,EAAC,MAAM,SAAS,SAAS,KAAI,CAAC;;AAKE,aAAA;IAAzC,EAAS,EAAC,MAAM,SAAS,SAAS,KAAI,CAAC;;AA+E1C,MAAM,wBAAwB,OAAO,oBAAoB;;;ACzGlD,MAAMC,UAASC;;;;ACkBf,MAAM,cAAN,MAAMC,qBAAoB,UAAS;;AACxB,cAAA,SAA8B,CAACC,OAAM;AAD1C,gBAAW,WAAA;IADvB,EAAc,eAAe;KACjB,WAAW;;;ACgBX,MAAAC,KAAW,EACtBC,WAAW,GACXC,OAAO,GACPC,UAAU,GACVC,mBAAmB,GACnBC,OAAO,GACPC,SAAS,EAAA;AANE,MA0CAC,KACgBC,CAAAA,OAC3B,IAAIC,SAAsE,EAExEC,iBAAqBF,IACrBC,QAAAA,IAAAA;AAAAA,MAQkBE,KARlBF,MAQkBE;IAkBpBC,YAAYC,IAAAA;IAAuB;IAG/BC,IAAAA,OAAAA;AACF,aAAOC,KAAKC,KAASF;IACtB;IAGDG,KACEC,IACAC,KACAC,KAAAA;AAEAL,WAAKM,OAASH,IACdH,KAAKC,OAAWG,KAChBJ,KAAKO,OAAmBF;IACzB;IAEDG,KAAUL,IAAYM,KAAAA;AACpB,aAAOT,KAAKU,OAAOP,IAAMM,GAAAA;IAC1B;IAIDC,OAAOC,IAAaF,KAAAA;AAClB,aAAOT,KAAKY,OAAAA,GAAUH,GAAAA;IACvB;EAAA;;;MCjBUI,KAAWC,GArGxB,cAAgCC,GAAAA;IAQ9BC,YAAYC,IAAAA;AAAAA,UAAAA;AAEV,UADAC,MAAMD,EAAAA,GAEJA,GAASE,SAASC,GAASC,aACT,YAAlBJ,GAASK,SAAAA,UACRC,MAAAN,GAASO,YAAAA,WAAAA,MAAAA,SAAAA,IAASC,UAAoB;AAEvC,cAAUC,MACR,oGAAA;IAIL;IAEDC,OAAOC,IAAAA;AAEL,aACE,MACAC,OAAOC,KAAKF,EAAAA,EACTG,OAAQC,CAAAA,QAAQJ,GAAUI,GAAAA,CAAAA,EAC1BC,KAAK,GAAA,IACR;IAEH;IAEQC,OAAOC,KAAAA,CAAsBP,EAAAA,GAAAA;AAAAA,UAAAA,IAAAA;AAEpC,UAAA,WAAIQ,KAAKC,IAAgC;AACvCD,aAAKC,KAAmB,oBAAIC,OAAAA,WACxBH,IAAKX,YACPY,KAAKG,KAAiB,IAAID,IACxBH,IAAKX,QACFS,KAAK,GAAA,EACLO,MAAM,IAAA,EACNT,OAAQU,CAAAA,OAAY,OAANA,EAAAA,CAAAA;AAGrB,mBAAWnB,MAAQM;AACbA,UAAAA,GAAUN,EAAAA,KAAAA,EAA+B,UAArBC,KAAAa,KAAKG,OAAAA,WAAgBhB,KAAAA,SAAAA,GAAAmB,IAAIpB,EAAAA,MAC/Cc,KAAKC,GAAiBM,IAAIrB,EAAAA;AAG9B,eAAOc,KAAKT,OAAOC,EAAAA;MACpB;AAED,YAAMgB,MAAYT,IAAKU,QAAQD;AAK/BR,WAAKC,GAAiBS,QAASxB,CAAAA,OAAAA;AACvBA,QAAAA,MAAQM,OACZgB,IAAUG,OAAOzB,EAAAA,GACjBc,KAAKC,GAAkBW,OAAO1B,EAAAA;MAC/B,CAAA;AAIH,iBAAWA,MAAQM,IAAW;AAG5B,cAAMqB,MAAAA,CAAAA,CAAUrB,GAAUN,EAAAA;AAExB2B,QAAAA,QAAUb,KAAKC,GAAiBK,IAAIpB,EAAAA,MACd,UAArB4B,MAAAd,KAAKG,OAAAA,WAAgBW,MAAAA,SAAAA,IAAAR,IAAIpB,EAAAA,OAEtB2B,OACFL,IAAUD,IAAIrB,EAAAA,GACdc,KAAKC,GAAiBM,IAAIrB,EAAAA,MAE1BsB,IAAUG,OAAOzB,EAAAA,GACjBc,KAAKC,GAAiBW,OAAO1B,EAAAA;MAGlC;AACD,aAAO6B;IACR;EAAA,CAAA;;;AC7FI,MAAM,SAAS;IACpB,UAAU;IACV,qBAAqB;IACrB,qBAAqB;IACrB,YAAY;IACZ,uBAAuB;IACvB,uBAAuB;;AAqDnB,WAAU,wBAAqB;AAEnC,QAAI,2BAAmD;AAEvD,WAAO;MACL,QAAK;AAEH,kCAA0B,MAAK;AAE/B,mCAA2B,IAAI,gBAAe;AAG9C,eAAO,yBAAyB;MAClC;MACA,SAAM;AACJ,mCAA2B;MAC7B;;EAEJ;;;AC1EA,MAAM,gBAAgB;AACtB,MAAM,mBAAmB;AACzB,MAAM,uBAAuB;AAC7B,MAAM,UAAU;AAChB,MAAM,yBAAyB;AAC/B,MAAM,4BAA4B;AAClC,MAAM,eAAe;AACrB,MAAM,iBAAiB;AAYvB,MAAK;AAAL,GAAA,SAAKC,QAAK;AAQR,IAAAA,OAAAA,OAAA,UAAA,IAAA,CAAA,IAAA;AAUA,IAAAA,OAAAA,OAAA,aAAA,IAAA,CAAA,IAAA;AAOA,IAAAA,OAAAA,OAAA,SAAA,IAAA,CAAA,IAAA;AAOA,IAAAA,OAAAA,OAAA,mBAAA,IAAA,CAAA,IAAA;EACF,GAjCK,UAAA,QAAK,CAAA,EAAA;AAsCV,MAAMC,UAAS;IACb;IACA;IACA;IACA;IACA;IACA;IACA;;AAOF,MAAM,iBAAiB;AAMvB,MAAM,gBAAgBC,KAClB,OACA,OAAO,WAAW,yBAAyB;AAKzC,MAAO,SAAP,cAAsBC,GAAU;IAAtC,cAAA;;AAI4C,WAAA,WAAW;AAiBpC,WAAA,UAAU;AACV,WAAA,UAAU;AAGnB,WAAA,aAAa;AACb,WAAA,cAAc;AACd,WAAA,cAAc;AAEd,WAAA,QAAQ,MAAM;AAEd,WAAA,8BAA8B;AACrB,WAAA,uBAAuB,IAAI,qBAC1C,MACA,KAAK,gBAAgB,KAAK,IAAI,CAAC;IAmWnC;IA/XE,IAAI,UAAO;AACT,aAAO,KAAK,qBAAqB;IACnC;IAEA,IAAI,QAAQ,SAAsB;AAChC,WAAK,qBAAqB,UAAU;IACtC;IAEA,IAAI,UAAO;AACT,aAAO,KAAK,qBAAqB;IACnC;IACA,IAAI,QAAQ,SAA2B;AACrC,WAAK,qBAAqB,UAAU;IACtC;IAkBA,OAAO,SAAoB;AACzB,WAAK,qBAAqB,OAAO,OAAO;IAC1C;IAEA,SAAM;AACJ,WAAK,qBAAqB,OAAM;IAClC;IAES,oBAAiB;AACxB,YAAM,kBAAiB;AAGvB,WAAK,aAAa,eAAe,MAAM;IACzC;IAEmB,SAAM;AACvB,YAAM,UAAU;QACd,WAAW,KAAK;QAChB,WAAW,KAAK;;AAGlB,aAAO,wBAA2BD,GAAS,OAAO;IACpD;IAEmB,OAAO,cAAoC;AAC5D,UAAI,aAAa,IAAI,UAAU,KAAK,KAAK,UAAU;AACjD,aAAK,UAAU;AACf,aAAK,UAAU;;AAEjB,YAAM,OAAO,YAAY;IAC3B;;;;;IAMA,mBAAmB,OAAmB;AACpC,UAAI,CAAC,KAAK,mBAAmB,KAAK,GAAG;AACnC;;AAGF,WAAK,UAAU;IACjB;;;;;IAMA,mBAAmB,OAAmB;AACpC,UAAI,CAAC,KAAK,mBAAmB,KAAK,GAAG;AACnC;;AAGF,WAAK,UAAU;AAGf,UAAI,KAAK,UAAU,MAAM,UAAU;AACjC,aAAK,kBAAiB;;IAE1B;IAEQ,gBAAgB,OAAmB;AACzC,UAAI,CAAC,KAAK,mBAAmB,KAAK,GAAG;AACnC;;AAGF,UAAI,KAAK,UAAU,MAAM,SAAS;AAChC,aAAK,QAAQ,MAAM;AACnB;;AAGF,UAAI,KAAK,UAAU,MAAM,aAAa;AACpC,aAAK,QAAQ,MAAM;AACnB,aAAK,oBAAoB,KAAK,gBAAgB;AAC9C;;IAEJ;IAEQ,MAAM,kBAAkB,OAAmB;AACjD,UAAI,CAAC,KAAK,mBAAmB,KAAK,GAAG;AACnC;;AAGF,WAAK,mBAAmB;AACxB,UAAI,CAAC,KAAK,QAAQ,KAAK,GAAG;AACxB,aAAK,QAAQ,MAAM;AACnB,aAAK,oBAAoB,KAAK;AAC9B;;AAMF,UAAI,KAAK,+BAA+B,CAAC,KAAK,SAAS,KAAK,GAAG;AAC7D;;AAGF,WAAK,8BAA8B;AAGnC,WAAK,QAAQ,MAAM;AACnB,YAAM,IAAI,QAAQ,CAAC,YAAW;AAC5B,mBAAW,SAAS,cAAc;MACpC,CAAC;AAED,UAAI,KAAK,UAAU,MAAM,aAAa;AACpC;;AAGF,WAAK,QAAQ,MAAM;AACnB,WAAK,oBAAoB,KAAK;IAChC;IAEQ,cAAW;AAGjB,UAAI,KAAK,UAAU;AACjB;;AAGF,UAAI,KAAK,UAAU,MAAM,mBAAmB;AAC1C,aAAK,kBAAiB;AACtB;;AAGF,UAAI,KAAK,UAAU,MAAM,UAAU;AAEjC,aAAK,oBAAmB;AACxB,aAAK,kBAAiB;;IAE1B;IAEQ,oBAAoB,OAAmB;AAC7C,UAAI,CAAC,KAAK,mBAAmB,KAAK,GAAG;AACnC;;AAGF,WAAK,kBAAiB;IACxB;IAEQ,oBAAiB;AACvB,UAAI,KAAK,UAAU;AACjB;;AAGF,WAAK,8BAA8B;AACnC,WAAK,kBAAiB;IACxB;IAEQ,sBAAmB;AACzB,YAAM,EAAC,QAAQ,MAAK,IAAI,KAAK,sBAAqB;AAClD,YAAM,SAAS,KAAK,IAAI,QAAQ,KAAK;AACrC,YAAM,eAAe,KAAK,IACxB,4BAA4B,QAC5B,sBAAsB;AAGxB,YAAM,cAAc,KAAK,MAAM,SAAS,oBAAoB;AAC5D,YAAM,aAAa,KAAK,KAAK,SAAS,IAAI,UAAU,CAAC;AACrD,YAAM,YAAY,aAAa;AAE/B,WAAK,cAAc;AACnB,WAAK,cAAc,IAAI,YAAY,gBAAgB;AACnD,WAAK,aAAa,GAAG;IACvB;IAEQ,gCAAgC,cAA0B;AAIhE,YAAM,EAAC,SAAS,QAAO,IAAI;AAC3B,YAAM,EAAC,MAAM,IAAG,IAAI,KAAK,sBAAqB;AAC9C,YAAM,YAAY,UAAU;AAC5B,YAAM,YAAY,UAAU;AAC5B,YAAM,EAAC,OAAO,MAAK,IAAI;AACvB,aAAO,EAAC,GAAG,QAAQ,WAAW,GAAG,QAAQ,UAAS;IACpD;IAEQ,0BAA0B,eAAqB;AACrD,YAAM,EAAC,QAAQ,MAAK,IAAI,KAAK,sBAAqB;AAElD,YAAM,WAAW;QACf,IAAI,QAAQ,KAAK,eAAe;QAChC,IAAI,SAAS,KAAK,eAAe;;AAGnC,UAAI;AACJ,UAAI,yBAAyB,cAAc;AACzC,qBAAa,KAAK,gCAAgC,aAAa;aAC1D;AACL,qBAAa;UACX,GAAG,QAAQ;UACX,GAAG,SAAS;;;AAKhB,mBAAa;QACX,GAAG,WAAW,IAAI,KAAK,cAAc;QACrC,GAAG,WAAW,IAAI,KAAK,cAAc;;AAGvC,aAAO,EAAC,YAAY,SAAQ;IAC9B;IAEQ,oBAAoB,eAAqB;AAC/C,UAAI,CAAC,KAAK,QAAQ;AAChB;;AAGF,WAAK,UAAU;AACf,WAAK,eAAe,OAAM;AAC1B,WAAK,oBAAmB;AACxB,YAAM,EAAC,YAAY,SAAQ,IACzB,KAAK,0BAA0B,aAAa;AAC9C,YAAM,iBAAiB,GAAG,WAAW,QAAQ,WAAW;AACxD,YAAM,eAAe,GAAG,SAAS,QAAQ,SAAS;AAElD,WAAK,gBAAgB,KAAK,OAAO,QAC/B;QACE,KAAK,CAAC,GAAG,CAAC;QACV,MAAM,CAAC,GAAG,CAAC;QACX,QAAQ,CAAC,KAAK,YAAY,KAAK,UAAU;QACzC,OAAO,CAAC,KAAK,YAAY,KAAK,UAAU;QACxC,WAAW;UACT,aAAa;UACb,aAAa,uBAAuB,KAAK;;SAG7C;QACE,eAAe;QACf,UAAU;QACV,QAAQ,OAAO;QACf,MAAM;OACP;IAEL;IAEQ,MAAM,oBAAiB;AAC7B,WAAK,mBAAmB;AACxB,WAAK,QAAQ,MAAM;AACnB,YAAM,YAAY,KAAK;AACvB,UAAI,0BAA0B;AAC9B,UAAI,OAAO,WAAW,gBAAgB,UAAU;AAC9C,kCAA0B,UAAU;iBAC3B,WAAW,aAAa;AACjC,kCAA0B,UAAU,YAAY,GAAG,IAAI,EAAE;;AAG3D,UAAI,2BAA2B,kBAAkB;AAC/C,aAAK,UAAU;AACf;;AAGF,YAAM,IAAI,QAAQ,CAAC,YAAW;AAC5B,mBAAW,SAAS,mBAAmB,uBAAuB;MAChE,CAAC;AAED,UAAI,KAAK,kBAAkB,WAAW;AAGpC;;AAGF,WAAK,UAAU;IACjB;;;;;;;;;;IAWQ,mBAAmB,OAAmB;AAC5C,UAAI,KAAK,YAAY,CAAC,MAAM,WAAW;AACrC,eAAO;;AAGT,UACE,KAAK,oBACL,KAAK,iBAAiB,cAAc,MAAM,WAC1C;AACA,eAAO;;AAGT,UAAI,MAAM,SAAS,kBAAkB,MAAM,SAAS,gBAAgB;AAClE,eAAO,CAAC,KAAK,QAAQ,KAAK;;AAG5B,YAAM,kBAAkB,MAAM,YAAY;AAC1C,aAAO,KAAK,QAAQ,KAAK,KAAK;IAChC;;;;;;IAOQ,SAAS,EAAC,GAAAE,IAAG,GAAAC,GAAC,GAAe;AACnC,YAAM,EAAC,KAAK,MAAM,QAAQ,MAAK,IAAI,KAAK,sBAAqB;AAC7D,aAAOD,MAAK,QAAQA,MAAK,SAASC,MAAK,OAAOA,MAAK;IACrD;IAEQ,QAAQ,EAAC,YAAW,GAAe;AACzC,aAAO,gBAAgB;IACzB;;IAGA,MAAM,YAAY,OAAY;AAC5B,UAAI,eAAe,SAAS;AAE1B;;AAGF,cAAQ,MAAM,MAAM;QAClB,KAAK;AACH,eAAK,YAAW;AAChB;QACF,KAAK;AACH,eAAK,kBAAiB;AACtB;QACF,KAAK;AACH,eAAK,oBAAoB,KAAqB;AAC9C;QACF,KAAK;AACH,gBAAM,KAAK,kBAAkB,KAAqB;AAClD;QACF,KAAK;AACH,eAAK,mBAAmB,KAAqB;AAC7C;QACF,KAAK;AACH,eAAK,mBAAmB,KAAqB;AAC7C;QACF,KAAK;AACH,eAAK,gBAAgB,KAAqB;AAC1C;QACF;AACE;;IAEN;IAEQ,gBAAgB,MAA0B,MAAwB;AACxE,UAAIH;AAAU;AAEd,iBAAW,SAASD,SAAQ;AAC1B,cAAM,oBAAoB,OAAO,IAAI;AACrC,cAAM,iBAAiB,OAAO,IAAI;;IAEtC;;AAhY0C,aAAA;IAAzC,EAAS,EAAC,MAAM,SAAS,SAAS,KAAI,CAAC;;AAiBvB,aAAA;IAAhB,EAAK;;AACW,aAAA;IAAhB,EAAK;;AAE8B,aAAA;IAAnCK,GAAM,UAAU;;;;ACrHZ,MAAMC,UAASC;;;;ACyBf,MAAM,WAAN,MAAMC,kBAAiB,OAAM;;AAClB,WAAA,SAA8B,CAACC,OAAM;AAD1C,aAAQ,WAAA;IADpB,EAAc,WAAW;KACb,QAAQ;;;AClBd,MAAM,kBAAkC;IAC7C;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;AAWK,MAAM,kBAAkB,gBAAgB,IAAI,uBAAuB;AAwBpE,WAAU,wBACd,UAAW;AAEX,WACE,SACG,QAAQ,QAAQ,OAAO,EAEvB,QAAQ,cAAc,EAAE,EACxB,YAAW;EAElB;;;ACxDM,WAAU,0BAA0B,MAA4B;AACpE,eAAW,gBAAgB,iBAAiB;AAC1C,WAAK,eAAe,cAAc;QAChC,WAAW,wBAAwB,YAAY;QAC/C,SAAS;OACV;;AAGH,SAAK,eAAe,CAAC,YAAW;AAC9B,YAAM,aAAa;QACjB,gBAAa;AACX,kBAAQ,aAAa,QAAQ,cAAc;QAC7C;;AAGF,cAAQ,cAAc,UAAU;IAClC,CAAC;EACH;;;ACjCO,MAAM,YAAY,OAAO,WAAW;AAiB3C,MAAM,mBAAmB,OAAO,kBAAkB;AAW5C,WAAU,sBACd,MAAO;AAEP,UAAe,oCACL,KAAI;MAGZ,KAAK,SAAS,IAAC;AAGb,YAAI,CAAC,KAAK,gBAAgB,GAAG;AAE3B,eAAK,gBAAgB,IAAK,KAAqB,gBAAe;;AAGhE,eAAO,KAAK,gBAAgB;MAC9B;;AAKF,WAAO;EACT;;;ACOM,WAAU,mBAAmB,MAA8B;AAC/D,QAAIC,IAAU;AACZ;;AAGD,SAA2C,eAAe,CAAC,aAAY;AACtE,YAAM,YAAY;AAClB,gBAAU,iBAAiB,SAAS,OAAO,UAAS;AAClD,cAAM,EAAC,MAAM,CAAC,SAAS,GAAG,iBAAgB,IAAI;AAC9C,cAAM,EAAC,KAAI,IAAI;AACf,YAAI,CAAC,QAAQ,SAAS,UAAU;AAC9B;;AAIF,cAAM,IAAI,QAAc,CAAC,YAAW;AAClC,qBAAW,OAAO;QACpB,CAAC;AAED,YAAI,MAAM,kBAAkB;AAC1B;;AAGF,YAAI,SAAS,SAAS;AACpB,eAAK,MAAK;AACV;;AAOF,aAAK,iBACH,UACA,CAAC,gBAAe;AACd,iBAAO,eAAe,aAAa,aAAa;YAC9C,cAAc;YACd,YAAY;YACZ,KAAK,MAAM;WACZ;QACH,GACA,EAAC,SAAS,MAAM,MAAM,KAAI,CAAC;AAG7B,yBAAiB,aAAa,UAAU,KAAK;AAC7C,aAAK,cAAa;MACpB,CAAC;IACH,CAAC;EACH;;;ACvGM,WAAU,wBAAwB,SAAoB;AAC1D,UAAM,QAAQ,IAAI,WAAW,SAAS,EAAC,SAAS,KAAI,CAAC;AACrD,YAAQ,cAAc,KAAK;AAC3B,WAAO;EACT;AA8BM,WAAU,kBAAkB,OAAY;AAE5C,QAAI,MAAM,kBAAkB,MAAM,QAAQ;AACxC,aAAO;;AAGT,QAAI,MAAM,aAAY,EAAG,CAAC,MAAM,MAAM,QAAQ;AAC5C,aAAO;;AAIT,QAAK,MAAM,OAA6C,UAAU;AAChE,aAAO;;AAGT,WAAO,CAAC,aAAa,KAAK;EAC5B;AAIA,WAAS,aAAa,OAAY;AAChC,UAAM,YAAY;AAClB,QAAI,WAAW;AACb,YAAM,eAAc;AACpB,YAAM,yBAAwB;;AAEhC,8BAAyB;AACzB,WAAO;EACT;AAGA,MAAI,qBAAqB;AACzB,iBAAe,4BAAyB;AACtC,yBAAqB;AAGrB,UAAM;AACN,yBAAqB;EACvB;;;ACrEA,MAAM,kBAAkB,sBAAsBC,EAAU;AAKlD,MAAgB,SAAhB,cAA+B,gBAAe;IA0DlD,IAAI,OAAI;AACN,aAAO,KAAK,aAAa,MAAM,KAAK;IACtC;IACA,IAAI,KAAK,MAAY;AACnB,WAAK,aAAa,QAAQ,IAAI;IAChC;;;;IAKA,IAAI,OAAI;AACN,aAAO,KAAK,SAAS,EAAE;IACzB;IAOA,cAAA;AACE,YAAK;AA5DmC,WAAA,WAAW;AAKzC,WAAA,OAAO;AAMP,WAAA,SAAuD;AASnE,WAAA,eAAe;AAKkD,WAAA,UAC/D;AAMU,WAAA,OAA0B;AAMX,WAAA,QAAQ;AAoGlB,WAAA,wBAAwB,CAAC,UAAqB;AAC7D,YAAI,CAAC,kBAAkB,KAAK,KAAK,CAAC,KAAK,eAAe;AACpD;;AAEF,aAAK,MAAK;AACV,gCAAwB,KAAK,aAAa;MAC5C;AAnFE,UAAI,CAACC,IAAU;AACb,aAAK,iBAAiB,SAAS,KAAK,qBAAqB;;IAE7D;IAES,QAAK;AACZ,WAAK,eAAe,MAAK;IAC3B;IAES,OAAI;AACX,WAAK,eAAe,KAAI;IAC1B;IAEmB,SAAM;AAEvB,YAAM,aAAa,KAAK,YAAY,CAAC,KAAK;AAC1C,YAAM,eAAe,KAAK,OAAO,KAAK,WAAU,IAAK,KAAK,aAAY;AAGtE,YAAM,WAAW,KAAK,OAAO,SAAS;AACtC,aAAO;QACH,KAAK,2BAA0B;;6CAEM;uBACtB,uBAAuB;QACtC;;IAEN;IAQQ,eAAY;AAElB,YAAM,EAAC,WAAW,cAAc,aAAY,IAAI;AAChD,aAAO;;;kBAGO,KAAK;oBACH,aAAa;uBACV,gBAAgB;uBAChB,gBAAgB;QAC/B,KAAK,cAAa;;IAExB;IAEQ,aAAU;AAEhB,YAAM,EAAC,WAAW,cAAc,aAAY,IAAI;AAChD,aAAO;;;oBAGS,aAAa;uBACV,gBAAgB;uBAChB,gBAAgB;aAC1B,KAAK;eACH,KAAK,UAAU;SACrB,KAAK,cAAa;;IAEzB;IAEQ,gBAAa;AACnB,YAAM,OAAO;;qBAEI,KAAK;AAEtB,aAAO;;QAEH,KAAK,eAAe,IAAU;;QAE9B,KAAK,eAAe,OAAO;;IAEjC;IAUQ,mBAAgB;AACtB,WAAK,UAAU,KAAK,cAAc,SAAS;IAC7C;;AArKA,GAAA,MAAA;AACE,8BAA0B,MAAM;AAChC,uBAAmB,MAAM;EAC3B,GAAC;AAGe,SAAA,iBAAiB;AAGjB,SAAA,oBAAoC;IAClD,MAAM;IACN,gBAAgB;;AAMwB,aAAA;IAAzC,EAAS,EAAC,MAAM,SAAS,SAAS,KAAI,CAAC;;AAK5B,aAAA;IAAX,EAAQ;;AAMG,aAAA;IAAX,EAAQ;;AAST,aAAA;IADC,EAAS,EAAC,MAAM,SAAS,WAAW,iBAAiB,SAAS,KAAI,CAAC;;AAMH,aAAA;IAAhE,EAAS,EAAC,MAAM,SAAS,WAAW,YAAY,SAAS,KAAI,CAAC;;AAOnD,aAAA;IAAX,EAAQ;;AAMkB,aAAA;IAA1B,EAAS,EAAC,SAAS,KAAI,CAAC;;AAgBU,aAAA;IAAlCC,GAAM,SAAS;;AAGC,aAAA;IADhBC,GAAsB,EAAC,MAAM,QAAQ,SAAS,KAAI,CAAC;;;;AC7FhD,MAAO,iBAAP,cAA8B,OAAM;IACrB,2BAAwB;AACzC,aAAO;IACT;;;;ACXK,MAAMC,UAASC;;;;ACAf,MAAMC,UAASC;;;;ACAf,MAAMC,UAASC;;;;ACoCf,MAAM,mBAAN,MAAMC,0BAAyB,eAAc;;AAClC,mBAAA,SAA8B;IAC5CC;IACAA;IACAA;;AAJS,qBAAgB,WAAA;IAD5B,EAAc,oBAAoB;KACtB,gBAAgB;;;AC5BvB,MAAO,eAAP,cAA4B,OAAM;IACnB,2BAAwB;AACzC,aAAO;IACT;;;;ACXK,MAAMC,UAASC;;;;ACkCf,MAAM,iBAAN,MAAMC,wBAAuB,aAAY;;AAC9B,iBAAA,SAA8B;IAC5CC;IACAA;IACAA;;AAJS,mBAAc,WAAA;IAD1B,EAAc,kBAAkB;KACpB,cAAc;;;AC1BrB,MAAO,oBAAP,cAAiC,OAAM;IACxB,2BAAwB;AACzC,aAAO;IACT;;;;ACXK,MAAMC,UAASC;;;;ACmCf,MAAM,sBAAN,MAAMC,6BAA4B,kBAAiB;;AACxC,sBAAA,SAA8B;IAC5CC;IACAA;IACAA;;AAJS,wBAAmB,WAAA;IAD/B,EAAc,wBAAwB;KAC1B,mBAAmB;;;AC7B1B,MAAO,iBAAP,cAA8B,OAAM;IACrB,2BAAwB;AACzC,aAAO;IACT;;;;ACTK,MAAMC,UAASC;;;;ACmCf,MAAM,mBAAN,MAAMC,0BAAyB,eAAc;;AAClC,mBAAA,SAA8B,CAACC,SAAcA,OAAc;AADhE,qBAAgB,WAAA;IAD5B,EAAc,oBAAoB;KACtB,gBAAgB;;;AC/BvB,MAAO,aAAP,cAA0B,OAAM;;;;ACJ/B,MAAMC,WAASC;;;;ACiCf,MAAM,eAAN,MAAMC,sBAAqB,WAAU;;AAC1B,eAAA,SAA8B,CAACC,SAAcA,QAAU;AAD5D,iBAAY,WAAA;IADxB,EAAc,gBAAgB;KAClB,YAAY;;;ACbnB,WAAU,gBAAgB,SAAkB,OAAY;AAG5D,QAAI,MAAM,YAAY,CAAC,QAAQ,cAAc,MAAM,WAAW;AAC5D,YAAM,gBAAe;;AAGvB,UAAM,OAAO,QAAQ,UAAU,MAAM,aAAa,CAAC,MAAM,MAAM,KAAK,CAAC;AACrE,UAAM,aAAa,QAAQ,cAAc,IAAI;AAC7C,QAAI,CAAC,YAAY;AACf,YAAM,eAAc;;AAGtB,WAAO;EACT;;;ACgEO,MAAM,kBAAkB,OAAO,iBAAiB;AAMhD,MAAM,oBAAoB,OAAO,mBAAmB;AAG3D,MAAM,mBAAmB,OAAO,kBAAkB;AAClD,MAAM,sBAAsB,OAAO,qBAAqB;AACxD,MAAM,iCAAiC,OAAO,gCAAgC;AAkCxE,WAAU,0BAEd,MAAO;;AACP,UAAe,oCACL,KAAI;MADd,cAAA;;AA4BE,aAAAC,GAAA,IAAmC;MA0ErC;MAlGE,IAAI,WAAQ;AACV,aAAK,mBAAmB,EAAC;AACzB,eAAO,KAAK,SAAS,EAAE;MACzB;MAEA,IAAI,oBAAiB;AACnB,aAAK,mBAAmB,EAAC;AACzB,eAAO,KAAK,SAAS,EAAE;MACzB;MAEA,IAAI,eAAY;AACd,aAAK,mBAAmB,EAAC;AACzB,eAAO,KAAK,SAAS,EAAE;MACzB;MAaA,gBAAa;AACX,aAAK,mBAAmB,EAAC;AACzB,eAAO,KAAK,SAAS,EAAE,cAAa;MACtC;MAEA,iBAAc;AACZ,aAAK,mBAAmB,EAAC;AACzB,eAAO,KAAK,SAAS,EAAE,eAAc;MACvC;MAEA,kBAAkB,OAAa;AAC7B,aAAK,8BAA8B,IAAI;AACvC,aAAK,mBAAmB,EAAC;MAC3B;MAES,cACP,MACA,UACA,SAA6B;AAE7B,cAAM,cAAc,MAAM,UAAU,OAAO;AAC3C,aAAK,mBAAmB,EAAC;MAC3B;MAES,aAAa,SAAuB;AAC3C,cAAM,aAAa,OAAO;AAc1B,aAAK,mBAAmB,EAAC;MAC3B;MAEA,EAAAA,MA5CC,gCA4CA,oBAAmB,IAAC;AACnB,YAAIC,IAAU;AACZ;;AAGF,YAAI,CAAC,KAAK,gBAAgB,GAAG;AAC3B,eAAK,gBAAgB,IAAI,KAAK,eAAe,EAAC;;AAGhD,cAAM,EAAC,UAAU,mBAAmB,2BAA0B,IAC5D,KAAK,gBAAgB,EAAE,YAAW;AAEpC,cAAM,cAAc,CAAC,CAAC,KAAK,8BAA8B;AACzD,cAAM,oBACJ,KAAK,8BAA8B,KAAK;AAE1C,aAAK,SAAS,EAAE,YACd,EAAC,GAAG,UAAU,YAAW,GACzB,mBACA,KAAK,iBAAiB,EAAC,KAAM,MAAS;MAE1C;MAEA,CAAC,eAAe,IAAC;AACf,cAAM,IAAI,MAAM,6BAA6B;MAC/C;MAEA,CAAC,iBAAiB,IAAC;AACjB,cAAM,IAAI,MAAM,+BAA+B;MACjD;;AAGF,WAAO;EACT;;;AC5IO,MAAM,eAAe,OAAO,cAAc;AAK1C,MAAM,eAAe,OAAO,cAAc;AAgF3C,WAAU,oBAEd,MAAO;AACP,UAAe,8BAA8B,KAAI;MAI/C,IAAI,OAAI;AACN,eAAO,KAAK,SAAS,EAAE;MACzB;MAEA,IAAI,SAAM;AACR,eAAO,KAAK,SAAS,EAAE;MACzB;;;;;;;MASA,IAAI,OAAI;AACN,eAAO,KAAK,aAAa,MAAM,KAAK;MACtC;MACA,IAAI,KAAK,MAAY;AAEnB,aAAK,aAAa,QAAQ,IAAI;MAGhC;MAGA,IAAI,WAAQ;AACV,eAAO,KAAK,aAAa,UAAU;MACrC;MACA,IAAI,SAAS,UAAiB;AAC5B,aAAK,gBAAgB,YAAY,QAAQ;MAG3C;MAES,yBACP,MACA,KACA,OAAoB;AAUpB,YAAI,SAAS,UAAU,SAAS,YAAY;AAE1C,gBAAM,WAAW,SAAS,aAAa,QAAQ,OAAO;AAEtD,eAAK,cAAc,MAAM,QAAQ;AACjC;;AAGF,cAAM,yBAAyB,MAAM,KAAK,KAAK;MACjD;MAES,cACP,MACA,UACA,SAA6B;AAE7B,cAAM,cAAc,MAAM,UAAU,OAAO;AAM3C,aAAK,SAAS,EAAE,aAAa,KAAK,YAAY,EAAC,GAAI,KAAK,YAAY,EAAC,CAAE;MACzE;MAEA,CAAC,YAAY,IAAC;AAGZ,cAAM,IAAI,MAAM,0BAA0B;MAC5C;MAEA,CAAC,YAAY,IAAC;AACZ,eAAO,KAAK,YAAY,EAAC;MAC3B;MAEA,qBAAqB,UAAiB;AACpC,aAAK,WAAW;MAClB;;AAvFgB,0BAAA,iBAAiB;AAiBjC,eAAA;MADC,EAAS,EAAC,YAAY,KAAI,CAAC;;AAY5B,eAAA;MADC,EAAS,EAAC,MAAM,SAAS,YAAY,KAAI,CAAC;;AAsE7C,WAAO;EACT;;;ACjSM,MAAgB,YAAhB,MAAyB;;;;;;;IAsB7B,YAA6B,iBAA4B;AAA5B,WAAA,kBAAA;AAXrB,WAAA,kBAAsC;QAC5C,UAAU,CAAA;QACV,mBAAmB;;IASuC;;;;;;;;;;;IAY5D,cAAW;AACT,YAAM,QAAQ,KAAK,gBAAe;AAClC,YAAM,kBACJ,CAAC,KAAK,aAAa,CAAC,KAAK,OAAO,KAAK,WAAW,KAAK;AACvD,UAAI,CAAC,iBAAiB;AACpB,eAAO,KAAK;;AAGd,YAAM,EAAC,UAAU,kBAAiB,IAAI,KAAK,gBAAgB,KAAK;AAChE,WAAK,YAAY,KAAK,KAAK,KAAK;AAChC,WAAK,kBAAkB;QACrB;QACA,UAAU;;;UAGR,UAAU,SAAS;UACnB,aAAa,SAAS;UACtB,iBAAiB,SAAS;UAC1B,eAAe,SAAS;UACxB,gBAAgB,SAAS;UACzB,cAAc,SAAS;UACvB,SAAS,SAAS;UAClB,UAAU,SAAS;UACnB,cAAc,SAAS;UACvB,cAAc,SAAS;;;AAI3B,aAAO,KAAK;IACd;;;;ACrDI,MAAO,oBAAP,cAAiC,UAAwB;IAG1C,gBAAgB,OAAoB;AACrD,UAAI,CAAC,KAAK,iBAAiB;AAEzB,aAAK,kBAAkB,SAAS,cAAc,OAAO;AACrD,aAAK,gBAAgB,OAAO;;AAG9B,WAAK,gBAAgB,UAAU,MAAM;AACrC,WAAK,gBAAgB,WAAW,MAAM;AACtC,aAAO;QACL,UAAU,KAAK,gBAAgB;QAC/B,mBAAmB,KAAK,gBAAgB;;IAE5C;IAEmB,OAAO,MAAqB,MAAmB;AAChE,aAAO,KAAK,YAAY,KAAK,WAAW,KAAK,aAAa,KAAK;IACjE;IAEmB,KAAK,EAAC,SAAS,SAAQ,GAAgB;AACxD,aAAO,EAAC,SAAS,SAAQ;IAC3B;;;;ACjBF,MAAM,oBAAoB,0BACxB,oBAAoB,sBAAsBC,EAAU,CAAC,CAAC;AAclD,MAAO,WAAP,cAAwB,kBAAiB;IA2C7C,cAAA;AACE,YAAK;AA9BoB,WAAA,UAAU;AAOV,WAAA,gBAAgB;AAQhB,WAAA,WAAW;AAO1B,WAAA,QAAQ;AAEH,WAAA,cAAc;AACd,WAAA,eAAe;AACf,WAAA,oBAAoB;AAKnC,UAAI,CAACC,IAAU;AACb,aAAK,iBAAiB,SAAS,CAAC,UAAqB;AACnD,cAAI,CAAC,kBAAkB,KAAK,KAAK,CAAC,KAAK,OAAO;AAC5C;;AAEF,eAAK,MAAK;AACV,kCAAwB,KAAK,KAAK;QACpC,CAAC;;IAEL;IAEmB,OAAO,SAAiC;AACzD,UACE,QAAQ,IAAI,SAAS,KACrB,QAAQ,IAAI,UAAU,KACtB,QAAQ,IAAI,eAAe,GAC3B;AACA,aAAK,cAAc,QAAQ,IAAI,SAAS,KAAK,KAAK;AAClD,aAAK,eAAe,QAAQ,IAAI,UAAU,KAAK,KAAK;AACpD,aAAK,oBACH,QAAQ,IAAI,eAAe,KAAK,KAAK;;AAGzC,YAAM,OAAO,OAAO;IACtB;IAEmB,SAAM;AACvB,YAAM,WAAW,CAAC,KAAK,eAAe,CAAC,KAAK;AAC5C,YAAM,cAAc,KAAK,eAAe,CAAC,KAAK;AAC9C,YAAM,oBAAoB,KAAK;AAC/B,YAAM,YAAY,KAAK,WAAW,CAAC,KAAK;AACxC,YAAM,kBAAkB,KAAK;AAE7B,YAAM,mBAAmBA,GAAS;QAChC,YAAY,KAAK;QACjB,YAAY,aAAa;QACzB,cAAc,CAAC,aAAa,CAAC;QAC7B,WAAW;QACX,iBAAiB;QACjB,mBAAmB;QACnB,gBAAgB;QAChB,sBAAsB;QACtB,iBAAiB,KAAK;OACvB;AAGD,YAAM,EAAC,WAAW,YAAW,IAAI;AAGjC,aAAO;8BACmB;;;;yBAIL,kBAAkB,UAAU;uBAC9B,aAAa;yBACX,eAAe;sBAClB,KAAK;sBACL,KAAK;2BACA,KAAK;qBACX,KAAK;mBACP,KAAK;oBACJ,KAAK;;;;;2CAKkB,KAAK;;;;;;;IAO9C;IAEQ,YAAY,OAAY;AAC9B,YAAM,SAAS,MAAM;AACrB,WAAK,UAAU,OAAO;AACtB,WAAK,gBAAgB,OAAO;IAE9B;IAEQ,aAAa,OAAY;AAE/B,sBAAgB,MAAM,KAAK;IAC7B;IAMS,CAAC,YAAY,IAAC;AACrB,UAAI,CAAC,KAAK,WAAW,KAAK,eAAe;AACvC,eAAO;;AAGT,aAAO,KAAK;IACd;IAES,CAAC,YAAY,IAAC;AACrB,aAAO,OAAO,KAAK,OAAO;IAC5B;IAES,oBAAiB;AAGxB,WAAK,UAAU,KAAK,aAAa,SAAS;IAC5C;IAES,yBAAyB,OAAa;AAC7C,WAAK,UAAU,UAAU;IAC3B;IAEA,CAAC,eAAe,IAAC;AACf,aAAO,IAAI,kBAAkB,MAAM,IAAI;IACzC;IAEA,CAAC,iBAAiB,IAAC;AACjB,aAAO,KAAK;IACd;;AApKA,GAAA,MAAA;AACE,8BAA0B,QAAQ;EACpC,GAAC;AAGe,WAAA,oBAAoB;IAClC,GAAGD,GAAW;IACd,gBAAgB;;AAMS,aAAA;IAA1B,EAAS,EAAC,MAAM,QAAO,CAAC;;AAOE,aAAA;IAA1B,EAAS,EAAC,MAAM,QAAO,CAAC;;AAQE,aAAA;IAA1B,EAAS,EAAC,MAAM,QAAO,CAAC;;AAOb,aAAA;IAAX,EAAQ;;AAEQ,aAAA;IAAhB,EAAK;;AACW,aAAA;IAAhB,EAAK;;AACW,aAAA;IAAhB,EAAK;;AAC2B,aAAA;IAAhCE,GAAM,OAAO;;;;ACnFT,MAAMC,WAASC;;;;ACyBf,MAAM,aAAN,MAAMC,oBAAmB,SAAQ;;AACtB,aAAA,SAA8B,CAACC,QAAM;AAD1C,eAAU,WAAA;IADtB,EAAc,aAAa;KACf,UAAU;;;ACZjB,MAAgB,OAAhB,cAA6BC,GAAU;IAA7C,cAAA;;AAgB4C,WAAA,WAAW;AAUrD,WAAA,kBAAkB;AAKN,WAAA,QAAQ;AAQ6C,WAAA,UAC/D;IAgFJ;;;;;IApEE,IAAc,iBAAc;AAC1B,aAAO,KAAK;IACd;IAES,MAAM,SAAsB;AACnC,UAAI,KAAK,YAAY,CAAC,KAAK,iBAAiB;AAC1C;;AAGF,YAAM,MAAM,OAAO;IACrB;IAEmB,SAAM;AACvB,aAAO;8BACmBC,GAAS,KAAK,oBAAmB,CAAE;UACvD,KAAK,uBAAsB;;;IAGnC;IAEmB,QAAQ,SAA6B;AACtD,UAAI,QAAQ,IAAI,UAAU,KAAK,QAAQ,IAAI,UAAU,MAAM,QAAW;AACpE,aAAK,cAAc,IAAI,MAAM,gBAAgB,EAAC,SAAS,KAAI,CAAC,CAAC;;IAEjE;IAEU,sBAAmB;AAC3B,aAAO;QACL,YAAY,KAAK;QACjB,YAAY,KAAK;;IAErB;IAEU,yBAAsB;AAC9B,aAAO;QACH,KAAK,cAAa;6CACmB,KAAK;;cAEpC,KAAK;oBACC,KAAK;QACjB,KAAK,oBAAoB,KAAK,qBAAoB,CAAE;;IAE1D;IAEU,gBAAa;AACrB,aAAO;IACT;IAEU,oBAAiB;AACzB,aAAO,kCAAqC,KAAK;IACnD;IAIQ,uBAAoB;AAC1B,aAAO;;UAED,KAAK,kBAAiB;;4BAEJ,KAAK;;;IAG/B;IAEQ,iBAAiB,OAAY;AACnC,YAAM,OAAO,MAAM;AACnB,WAAK,UAAU,KAAK,iBAAiB,EAAC,SAAS,KAAI,CAAC,EAAE,SAAS;IACjE;;AAtHA,GAAA,MAAA;AACE,8BAA0B,IAAI;EAChC,GAAC;AAGe,OAAA,oBAAoB;IAClC,GAAGD,GAAW;IACd,gBAAgB;;AAQwB,aAAA;IAAzC,EAAS,EAAC,MAAM,SAAS,SAAS,KAAI,CAAC;;AAUxC,aAAA;IADC,EAAS,EAAC,MAAM,SAAS,WAAW,mBAAkB,CAAC;;AAM5C,aAAA;IAAX,EAAQ;;AAQwD,aAAA;IAAhE,EAAS,EAAC,MAAM,SAAS,SAAS,MAAM,WAAW,WAAU,CAAC;;;;ACzC3D,MAAO,aAAP,cAA0B,KAAI;IAApC,cAAA;;AAC6B,WAAA,WAAW;AAC1B,WAAA,OAAO;AACP,WAAA,SAAuD;IAuDrE;IArDE,IAAc,YAAS;AACrB,aAAO,KAAK,OAAO,SAAS;IAC9B;IAEA,IAAuB,iBAAc;AAEnC,aAAO,CAAC,KAAK,QAAQ,KAAK;IAC5B;IAEmB,sBAAmB;AACpC,aAAO;QACL,GAAG,MAAM,oBAAmB;;QAE5B,UAAU,CAAC,KAAK,QAAQ,KAAK;QAC7B,UAAU,KAAK;QACf,MAAM,CAAC,CAAC,KAAK;;IAEjB;IAEmB,oBAAoB,SAAgB;AACrD,YAAM,EAAC,UAAS,IAAI;AACpB,UAAI,KAAK,MAAM;AACb,eAAO;;;;uBAIU,aAAa;iBACnB,KAAK;mBACH,KAAK,UAAU;aACrB;;;;AAKT,aAAO;;;;qBAIU,aAAa;oBACd,KAAK,YAAY,CAAC,KAAK;;WAEhC;;;IAGT;IAEmB,gBAAa;AAC9B,UAAI,KAAK,UAAU;AACjB,eAAO;;AAGT,aAAO,MAAM,cAAa;IAC5B;;AAxD2B,aAAA;IAA1B,EAAS,EAAC,MAAM,QAAO,CAAC;;AACb,aAAA;IAAX,EAAQ;;AACG,aAAA;IAAX,EAAQ;;;;ACdJ,MAAME,WAASC;;;;ACAf,MAAMC,WAASC;;;;ACAf,MAAMC,WAASC;;;;ACoBf,MAAM,eAAN,MAAMC,sBAAqB,WAAU;;AAC1B,eAAA,SAA8B,CAACC,UAAcA,UAAgBA,QAAM;AADxE,iBAAY,WAAA;IADxB,EAAc,gBAAgB;KAClB,YAAY;;;ACbnB,MAAO,UAAP,cAAuBC,GAAU;IACrC,IAAI,QAAK;AACP,aAAO,KAAK,cAAc,OACxB,CAAC,UAAyB,iBAAiB,IAAI;IAEnD;IAOA,cAAA;AACE,YAAK;AALU,WAAA;MAEd,KAAqB,gBAAe;AAIrC,UAAI,CAACC,IAAU;AACb,aAAK,iBAAiB,WAAW,KAAK,iBAAiB,KAAK,IAAI,CAAC;AACjE,aAAK,iBAAiB,gBAAgB,KAAK,iBAAiB,KAAK,IAAI,CAAC;AACtE,aAAK,iBAAiB,WAAW,KAAK,cAAc,KAAK,IAAI,CAAC;AAC9D,aAAK,UAAU,OAAO;;IAE1B;IAEmB,SAAM;AACvB,aAAO,sBAAyB,KAAK;IACvC;IAEQ,cAAc,OAAoB;AACxC,YAAM,SAAS,MAAM,QAAQ;AAC7B,YAAM,UAAU,MAAM,QAAQ;AAC9B,YAAM,SAAS,MAAM,QAAQ;AAC7B,YAAM,QAAQ,MAAM,QAAQ;AAE5B,UAAI,CAAC,UAAU,CAAC,WAAW,CAAC,UAAU,CAAC,OAAO;AAC5C;;AAGF,YAAM,EAAC,MAAK,IAAI;AAEhB,UAAI,MAAM,SAAS,GAAG;AACpB;;AAIF,YAAM,eAAc;AAEpB,UAAI,UAAU,OAAO;AACnB,cAAM,QAAQ,SAAS,IAAI,MAAM,SAAS;AAC1C,cAAM,KAAK,EAAE,MAAM,EAAC,UAAU,MAAK,CAAC;AACpC,aAAK,iBAAgB;AACrB;;AAIF,YAAMC,SAAQ,iBAAiB,IAAI,EAAE,cAAc;AACnD,YAAM,WAAWA,SAAQ,SAAS;AAClC,YAAM,cAAc,MAAM,KAAK,CAAC,SAAS,KAAK,QAAQ,eAAe,CAAC;AACtE,UAAI,CAAC,aAAa;AAGhB,cAAM,WAAW,WAAW,MAAM,CAAC,IAAI,MAAM,MAAM,SAAS,CAAC;AAC7D,iBAAS,MAAM,EAAC,UAAU,CAAC,SAAQ,CAAC;AACpC,aAAK,iBAAgB;AACrB;;AAGF,YAAM,eAAe,MAAM,QAAQ,WAAW;AAC9C,UAAI,YAAY,WAAW,eAAe,IAAI,eAAe;AAG7D,aAAO,cAAc,cAAc;AACjC,YAAI,aAAa,MAAM,QAAQ;AAE7B,sBAAY;mBACH,YAAY,GAAG;AAExB,sBAAY,MAAM,SAAS;;AAQ7B,cAAM,WAAW,MAAM,SAAS;AAChC,YAAI,SAAS,YAAY,CAAC,SAAS,iBAAiB;AAClD,cAAI,UAAU;AACZ;iBACK;AACL;;AAGF;;AAGF,iBAAS,MAAM,EAAC,UAAU,CAAC,SAAQ,CAAC;AACpC,aAAK,iBAAgB;AACrB;;IAEJ;IAEQ,mBAAgB;AAGtB,YAAM,EAAC,MAAK,IAAI;AAChB,UAAI;AACJ,iBAAW,QAAQ,OAAO;AACxB,cAAM,kBAAkB,KAAK,mBAAmB,CAAC,KAAK;AACtD,cAAM,gBAAgB,KAAK,QAAQ,eAAe;AAClD,YAAI,iBAAiB,iBAAiB;AAGpC,wBAAc;AACd;;AAGF,YAAI,mBAAmB,CAAC,aAAa;AACnC,wBAAc;;AAKhB,aAAK,WAAW;;AAGlB,UAAI,aAAa;AACf,oBAAY,WAAW;;IAE3B;;AAxH0C,aAAA;IAAzCC,GAAqB;;;;ACdjB,MAAMC,WAASC;;;;ACkBf,MAAM,YAAN,MAAMC,mBAAkB,QAAO;;AACpB,YAAA,SAA8B,CAACC,QAAM;AAD1C,cAAS,WAAA;IADrB,EAAc,aAAa;KACf,SAAS;;;ACbtB,MAAM,oBAAoB;AAKpB,MAAgB,kBAAhB,cAAwC,KAAI;IAChD,IAAI,kBAAe;AACjB,UAAI,KAAK,aAAa,iBAAiB,GAAG;AACxC,eAAO,KAAK,aAAa,iBAAiB;;AAG5C,YAAM,EAAC,UAAS,IAAI;AACpB,aAAO,UAAU,aAAa,KAAK;IACrC;IACA,IAAI,gBAAgB,WAAwB;AAC1C,YAAM,OAAO,KAAK;AAClB,UAAI,cAAc,MAAM;AACtB;;AAGF,UAAI,cAAc,MAAM;AACtB,aAAK,gBAAgB,iBAAiB;aACjC;AACL,aAAK,aAAa,mBAAmB,SAAS;;AAGhD,WAAK,cAAa;IACpB;IAKA,cAAA;AACE,YAAK;AACL,WAAK,4BAA4B,KAAK,0BAA0B,KAAK,IAAI;AACzE,UAAI,CAACC,IAAU;AACb,aAAK,iBAAiB,WAAW,KAAK,cAAc,KAAK,IAAI,CAAC;;IAElE;IAES,MAAM,SAA6C;AAC1D,YAAMC,eAAc,KAAK,mBAAmB,CAAC,KAAK;AAClD,UAAIA,gBAAe,SAAS,YAAY,KAAK,gBAAgB;AAC3D,aAAK,eAAe,MAAM,OAAO;AACjC;;AAGF,YAAM,MAAM,OAAuB;IACrC;IAEmB,yBAAsB;AACvC,aAAO;QACH,MAAM,uBAAsB;QAC5B,KAAK,qBAAqB,KAAK,yBAAyB;;IAE9D;IAMQ,cAAc,OAAoB;AACxC,YAAM,SAAS,MAAM,QAAQ;AAC7B,YAAM,UAAU,MAAM,QAAQ;AAE9B,UAAI,CAAC,UAAU,CAAC,SAAS;AACvB;;AAGF,UAAI,CAAC,KAAK,iBAAiB,CAAC,KAAK,gBAAgB;AAE/C;;AAIF,YAAMC,SAAQ,iBAAiB,IAAI,EAAE,cAAc;AACnD,YAAM,WAAWA,SAAQ,SAAS;AAClC,YAAM,mBAAmB,KAAK,eAAe,QAAQ,eAAe;AACpE,YAAM,oBAAoB,KAAK,gBAAgB,QAAQ,eAAe;AAEtE,UAAK,YAAY,qBAAuB,CAAC,YAAY,kBAAmB;AAEtE;;AAIF,YAAM,eAAc;AAEpB,YAAM,gBAAe;AACrB,YAAM,gBAAgB,WAAW,KAAK,iBAAiB,KAAK;AAC5D,oBAAc,MAAK;IACrB;IAEQ,4BAAyB;AAC/B,YAAM,EAAC,eAAe,eAAc,IAAI;AACxC,UAAI,CAAC,iBAAiB,CAAC,gBAAgB;AACrC;;AAMF,oBAAc,WAAW;AACzB,qBAAe,iBACb,YACA,MAAK;AACH,sBAAc,WAAW;MAC3B,GACA,EAAC,MAAM,KAAI,CAAC;IAEhB;;;;ACrGI,WAAU,mBAAmB,EACjC,WACA,UACA,eACA,WAAW,MAAK,GACO;AACvB,WAAO;;;mBAGU;iBACF,CAAC,WAAW,KAAK;eACnB;eACA;;6BAEc;;;;;;;;;;;;EAY7B;AAEA,WAAS,kBAA8B,OAAY;AACjD,QAAI,KAAK,UAAU;AACjB;;AAGF,UAAM,gBAAe;AACrB,UAAM,iBAAiB,CAAC,KAAK,cAC3B,IAAI,MAAM,UAAU,EAAC,YAAY,KAAI,CAAC,CAAC;AAEzC,QAAI,gBAAgB;AAClB;;AAGF,SAAK,OAAM;EACb;;;ACzCM,MAAO,aAAP,cAA0B,gBAAe;IAA/C,cAAA;;AAC6B,WAAA,WAAW;AACX,WAAA,YAAY;AACG,WAAA,WAAW;AASrD,WAAA,kBAAkB;IA0FpB;IAxFE,IAAc,YAAS;AACrB,aAAO;IACT;IAOmB,sBAAmB;AACpC,aAAO;QACL,GAAG,MAAM,oBAAmB;QAC5B,UAAU,KAAK;QACf,UAAU,KAAK;QACf,gBAAgB,KAAK;QACrB,YAAY,KAAK,WAAW,KAAK;;IAErC;IAEmB,oBAAoB,SAAgB;AACrD,YAAM,EAAC,UAAS,IAAI;AACpB,aAAO;;;;qBAIU,aAAa;uBACX,KAAK;oBACR,KAAK,YAAY,CAAC,KAAK;iBAC1B,KAAK;WACX;;;IAGT;IAEmB,oBAAiB;AAClC,UAAI,CAAC,KAAK,UAAU;AAClB,eAAO,MAAM,kBAAiB;;AAGhC,aAAO;;;;;;;;IAQT;IAEmB,qBAAqB,eAA4B;AAClE,UAAI,KAAK,WAAW;AAClB,eAAO,mBAAmB;UACxB;UACA,WAAW,KAAK;UAChB,UAAU,KAAK;SAChB;;AAGH,aAAO;IACT;IAEmB,gBAAa;AAC9B,UAAI,KAAK,UAAU;AACjB,eAAO;;AAGT,aAAO,MAAM,cAAa;IAC5B;IAEQ,YAAY,OAAiB;AACnC,UAAI,KAAK,UAAU;AACjB;;AAKF,YAAM,YAAY,KAAK;AACvB,WAAK,WAAW,CAAC,KAAK;AAEtB,YAAM,iBAAiB,CAAC,gBAAgB,MAAM,KAAK;AACnD,UAAI,gBAAgB;AAIlB,aAAK,WAAW;AAChB;;IAEJ;;AApG2B,aAAA;IAA1B,EAAS,EAAC,MAAM,QAAO,CAAC;;AACE,aAAA;IAA1B,EAAS,EAAC,MAAM,QAAO,CAAC;;AACiB,aAAA;IAAzC,EAAS,EAAC,MAAM,SAAS,SAAS,KAAI,CAAC;;AASxC,aAAA;IADC,EAAS,EAAC,MAAM,SAAS,SAAS,MAAM,WAAW,oBAAmB,CAAC;;AAQrD,aAAA;IADlBC,GAAM,iBAAiB;;AAGL,aAAA;IADlBA,GAAM,kBAAkB;;;;ACnCpB,MAAMC,WAASC;;;;ACAf,MAAMC,WAASC;;;;ACAf,MAAMC,WAASC;;;;ACsBf,MAAM,eAAN,MAAMC,sBAAqB,WAAU;;AAC1B,eAAA,SAA8B;IAC5CC;IACAA;IACAA;IACAA;IACAA;;AANS,iBAAY,WAAA;IADxB,EAAc,gBAAgB;KAClB,YAAY;;;ACVnB,MAAO,YAAP,cAAyB,gBAAe;IAA9C,cAAA;;AAC6B,WAAA,SAAS;AACxB,WAAA,OAAO;AACP,WAAA,SAAuD;AACd,WAAA,aAAa;AACxB,WAAA,WAAW;IAuFvD;IArFE,IAAc,YAAS;AACrB,UAAI,KAAK,MAAM;AACb,eAAO;;AAGT,UAAI,KAAK,YAAY;AACnB,eAAO;;AAGT,aAAO;IACT;IAEA,IAAuB,iBAAc;AAEnC,aAAO,CAAC,KAAK,QAAQ,KAAK;IAC5B;IAEA,IAAc,gBAAa;AAGzB,UAAI,KAAK,YAAY;AACnB,eAAO;;AAGT,aAAO,KAAK,WAAW,cAA2B,iBAAiB;IACrE;IAKmB,sBAAmB;AACpC,aAAO;QACL,GAAG,MAAM,oBAAmB;QAC5B,QAAQ,KAAK;;QAEb,UAAU,CAAC,KAAK,QAAQ,KAAK;QAC7B,MAAM,CAAC,CAAC,KAAK;QACb,UAAU,KAAK;QACf,gBAAgB;;IAEpB;IAEmB,oBAAoB,SAAgB;AACrD,YAAM,EAAC,UAAS,IAAI;AACpB,UAAI,KAAK,MAAM;AACb,eAAO;;;;uBAIU,aAAa;iBACnB,KAAK;mBACH,KAAK,UAAU;aACrB;;;;AAKT,UAAI,KAAK,YAAY;AACnB,eAAO;kDACqC,aAAa;YACnD;;;;AAKR,aAAO;;;;qBAIU,aAAa;oBACd,KAAK,YAAY,CAAC,KAAK;;WAEhC;;;IAGT;IAEmB,qBAAqB,eAA4B;AAClE,aAAO,mBAAmB;QACxB;QACA,WAAW,KAAK;QAChB,UAAU,CAAC,KAAK,QAAQ,KAAK;QAC7B,UAAU,KAAK;OAChB;IACH;;AA1F2B,aAAA;IAA1B,EAAS,EAAC,MAAM,QAAO,CAAC;;AACb,aAAA;IAAX,EAAQ;;AACG,aAAA;IAAX,EAAQ;;AAC4C,aAAA;IAApD,EAAS,EAAC,MAAM,SAAS,WAAW,cAAa,CAAC;;AACT,aAAA;IAAzC,EAAS,EAAC,MAAM,SAAS,SAAS,KAAI,CAAC;;AA8BrB,aAAA;IADlBC,GAAM,kBAAkB;;;;AC9CpB,MAAMC,WAASC;;;;ACqBf,MAAM,cAAN,MAAMC,qBAAoB,UAAS;;AACxB,cAAA,SAA8B;IAC5CC;IACAA;IACAA;IACAA;;AALS,gBAAW,WAAA;IADvB,EAAc,eAAe;KACjB,WAAW;;;ACjBlB,MAAO,iBAAP,cAA8B,WAAU;;;;ACJvC,MAAMC,WAASC;;;;ACoBf,MAAM,mBAAN,MAAMC,0BAAyB,eAAc;;AAClC,mBAAA,SAA8B,CAACC,UAAcA,UAAgBA,QAAM;AADxE,qBAAgB,WAAA;IAD5B,EAAc,oBAAoB;KACtB,gBAAgB;;;ACfvB,MAAO,UAAP,cAAuBC,GAAU;IAAvC,cAAA;;AAI4C,WAAA,QAAQ;AAMlD,WAAA,aAAa;AAMb,WAAA,WAAW;IACb;;AAb4C,aAAA;IAAzC,EAAS,EAAC,MAAM,SAAS,SAAS,KAAI,CAAC;;AAMxC,aAAA;IADC,EAAS,EAAC,MAAM,SAAS,SAAS,MAAM,WAAW,cAAa,CAAC;;AAOlE,aAAA;IADC,EAAS,EAAC,MAAM,SAAS,SAAS,MAAM,WAAW,YAAW,CAAC;;;;ACpB3D,MAAMC,WAASC;;;;ACsBf,MAAM,YAAN,MAAMC,mBAAkB,QAAO;;AACpB,YAAA,SAA8B,CAACC,QAAM;AAD1C,cAAS,WAAA;IADrB,EAAc,YAAY;KACd,SAAS;;;ACsBf,MAAM,gCAAiD;IAC5D,QAAQ;MACN;;QAEE,CAAC,EAAC,aAAa,oBAAmB,GAAG,EAAC,aAAa,gBAAe,CAAC;QACnE,EAAC,UAAU,KAAK,QAAQ,OAAO,WAAU;;;IAG7C,OAAO;MACL;;QAEE,CAAC,EAAC,WAAW,EAAC,GAAG,EAAC,WAAW,KAAI,CAAC;QAClC,EAAC,UAAU,KAAK,QAAQ,SAAQ;;;IAGpC,WAAW;MACT;;QAEE,CAAC,EAAC,WAAW,EAAC,GAAG,EAAC,WAAW,EAAC,CAAC;QAC/B,EAAC,UAAU,IAAI,QAAQ,UAAU,eAAe,WAAU;;MAE5D;;;;;;QAME,CAAC,EAAC,UAAU,MAAK,GAAG,EAAC,UAAU,OAAM,CAAC;QACtC,EAAC,UAAU,KAAK,QAAQ,OAAO,YAAY,eAAe,WAAU;;;IAGxE,UAAU;MACR;;QAEE,CAAC,EAAC,WAAW,EAAC,GAAG,EAAC,WAAW,GAAG,QAAQ,IAAG,GAAG,EAAC,WAAW,EAAC,CAAC;QAC5D,EAAC,UAAU,KAAK,QAAQ,UAAU,MAAM,WAAU;;;IAGtD,SAAS;MACP;;QAEE,CAAC,EAAC,WAAW,EAAC,GAAG,EAAC,WAAW,GAAG,QAAQ,IAAG,GAAG,EAAC,WAAW,EAAC,CAAC;QAC5D,EAAC,UAAU,KAAK,QAAQ,UAAU,MAAM,WAAU;;;IAGtD,SAAS;MACP;;QAEE,CAAC,EAAC,WAAW,EAAC,GAAG,EAAC,WAAW,GAAG,QAAQ,IAAG,GAAG,EAAC,WAAW,EAAC,CAAC;QAC5D,EAAC,UAAU,KAAK,QAAQ,UAAU,MAAM,WAAU;;;;AAQjD,MAAM,iCAAkD;IAC7D,QAAQ;MACN;;QAEE,CAAC,EAAC,aAAa,gBAAe,GAAG,EAAC,aAAa,oBAAmB,CAAC;QACnE,EAAC,UAAU,KAAK,QAAQ,OAAO,sBAAqB;;;IAGxD,OAAO;MACL;;QAEE,CAAC,EAAC,WAAW,KAAI,GAAG,EAAC,WAAW,EAAC,CAAC;QAClC,EAAC,UAAU,KAAK,QAAQ,SAAQ;;;IAGpC,WAAW;MACT;;QAEE,CAAC,EAAC,UAAU,OAAM,GAAG,EAAC,UAAU,MAAK,CAAC;QACtC;UACE,UAAU;UACV,QAAQ,OAAO;UACf,eAAe;;;MAGnB;;QAEE,CAAC,EAAC,WAAW,IAAG,GAAG,EAAC,WAAW,IAAG,CAAC;QACnC,EAAC,OAAO,KAAK,UAAU,IAAI,QAAQ,UAAU,eAAe,WAAU;;;IAG1E,UAAU;MACR;;QAEE,CAAC,EAAC,WAAW,EAAC,GAAG,EAAC,WAAW,EAAC,CAAC;QAC/B,EAAC,UAAU,KAAK,QAAQ,UAAU,MAAM,WAAU;;;IAGtD,SAAS;MACP;;QAEE,CAAC,EAAC,WAAW,EAAC,GAAG,EAAC,WAAW,EAAC,CAAC;QAC/B,EAAC,UAAU,KAAK,QAAQ,UAAU,MAAM,WAAU;;;IAGtD,SAAS;MACP;;QAEE,CAAC,EAAC,WAAW,EAAC,GAAG,EAAC,WAAW,EAAC,CAAC;QAC/B,EAAC,UAAU,KAAK,QAAQ,UAAU,MAAM,WAAU;;;;;;AC5HlD,MAAO,SAAP,cAAsBC,GAAU;;;;IASpC,IAAI,OAAI;AACN,aAAO,KAAK;IACd;IAEA,IAAI,KAAK,MAAa;AACpB,UAAI,SAAS,KAAK,QAAQ;AACxB;;AAGF,WAAK,SAAS;AACd,UAAI,MAAM;AACR,aAAK,aAAa,QAAQ,EAAE;AAC5B,aAAK,KAAI;aACJ;AACL,aAAK,gBAAgB,MAAM;AAC3B,aAAK,MAAK;;IAEd;IAwEA,cAAA;AACE,YAAK;AApEoB,WAAA,QAAQ;AAQL,WAAA,cAAc;AAY5C,WAAA,mBAAmB,MAAM;AAMzB,WAAA,oBAAoB,MAAM;AAElB,WAAA,SAAS;AACT,WAAA,YAAY;AAGZ,WAAA,qBAAqB,KAAK,sBAAqB;AAOtC,WAAA,gBAAgB;AAChB,WAAA,mBAAmB;AAI5B,WAAA,yBAAyB;AAGhB,WAAA,cAAc;AACd,WAAA,aAAa;AACb,WAAA,UAAU;AAgBnB,WAAA,6BAA6B;AAInC,UAAI,CAACC,IAAU;AACb,aAAK,iBAAiB,UAAU,KAAK,YAAY;AAejD,aAAK,iBAAiB,SAAS,MAAK;AAClC,eAAK,QAAQ,MAAK;QACpB,CAAC;AACD,aAAK,iBAAiB,QAAQ,MAAK;AACjC,eAAK,QAAQ,KAAI;QACnB,CAAC;;IAEL;;;;;;;;;;;IAYA,MAAM,OAAI;AACR,WAAK,YAAY;AAGjB,YAAM,KAAK;AACX,YAAM,KAAK;AACX,YAAM,SAAS,KAAK;AAEpB,UAAI,OAAO,QAAQ,CAAC,KAAK,WAAW;AAClC,aAAK,YAAY;AACjB;;AAGF,YAAM,cAAc,CAAC,KAAK,cACxB,IAAI,MAAM,QAAQ,EAAC,YAAY,KAAI,CAAC,CAAC;AAEvC,UAAI,aAAa;AACf,aAAK,OAAO;AACZ;;AAIF,aAAO,UAAS;AAChB,WAAK,OAAO;AAEZ,UAAI,KAAK,UAAU;AACjB,aAAK,SAAS,YAAY;;AAK5B,WAAK,cAA2B,aAAa,GAAG,MAAK;AAErD,YAAM,KAAK,cAAc,KAAK,iBAAgB,CAAE;AAChD,WAAK,cAAc,IAAI,MAAM,QAAQ,CAAC;AACtC,WAAK,YAAY;IACnB;;;;;;;;;;;IAYA,MAAM,MAAM,cAAc,KAAK,aAAW;AACxC,WAAK,YAAY;AACjB,UAAI,CAAC,KAAK,aAAa;AAErB,aAAK,OAAO;AACZ;;AAGF,YAAM,KAAK;AACX,YAAM,SAAS,KAAK;AAEpB,UAAI,CAAC,OAAO,QAAQ,KAAK,WAAW;AAClC,aAAK,OAAO;AACZ;;AAGF,YAAM,kBAAkB,KAAK;AAC7B,WAAK,cAAc;AACnB,YAAM,eAAe,CAAC,KAAK,cACzB,IAAI,MAAM,SAAS,EAAC,YAAY,KAAI,CAAC,CAAC;AAExC,UAAI,cAAc;AAChB,aAAK,cAAc;AACnB;;AAGF,YAAM,KAAK,cAAc,KAAK,kBAAiB,CAAE;AACjD,aAAO,MAAM,WAAW;AACxB,WAAK,OAAO;AACZ,WAAK,cAAc,IAAI,MAAM,QAAQ,CAAC;IACxC;IAES,oBAAiB;AACxB,YAAM,kBAAiB;AACvB,WAAK,0BAAyB;IAChC;IAES,uBAAoB;AAC3B,YAAM,qBAAoB;AAC1B,WAAK,qBAAqB,KAAK,sBAAqB;IACtD;IAEmB,SAAM;AACvB,YAAM,aACJ,KAAK,QAAQ,EAAE,KAAK,iBAAiB,KAAK;AAC5C,YAAM,UAAU;QACd,gBAAgB,KAAK;QACrB,eAAe,KAAK;QACpB,YAAY,KAAK;QACjB,cAAc;QACd,oBAAoB,cAAc,CAAC,KAAK;QACxC,uBAAuB,cAAc,CAAC,KAAK;;AAG7C,YAAM,EAAC,UAAS,IAAI;AACpB,aAAO;;;gBAGKA,GAAS,OAAO;qBACX,aAAa;0BACR,KAAK,cAAc,aAAa;eAC3C,KAAK,SAAS,UAAU,gBAAgB;kBACrC,KAAK;iBACN,KAAK;iBACL,KAAK;mBACH,KAAK;uBACD,KAAK,eAAe;wCACH,KAAK;;;8CAGC,KAAK;;4CAEP,CAAC,KAAK,eAAe;;;8BAGnC,KAAK;;;;;;;;;;;;;+CAaY,KAAK;;;;;IAKlD;IAEmB,eAAY;AAC7B,WAAK,uBAAuB,IAAI,qBAC9B,CAAC,YAAW;AACV,mBAAW,SAAS,SAAS;AAC3B,eAAK,yBAAyB,KAAK;;MAEvC,GACA,EAAC,MAAM,KAAK,SAAS,CAAC;AAGxB,WAAK,qBAAqB,QAAQ,KAAK,SAAU;AACjD,WAAK,qBAAqB,QAAQ,KAAK,YAAa;IACtD;IAEQ,oBAAiB;AACvB,UAAI,KAAK,wBAAwB;AAG/B,aAAK,yBAAyB;AAC9B;;AAKF,YAAM,iBAAiB,CAAC,KAAK,cAC3B,IAAI,MAAM,UAAU,EAAC,YAAY,KAAI,CAAC,CAAC;AAEzC,UAAI,gBAAgB;AAClB;;AAGF,WAAK,MAAK;IACZ;IAEQ,qBAAkB;AACxB,WAAK,yBAAyB;IAChC;IAEQ,aAAa,OAAkB;AACrC,YAAM,OAAO,MAAM;AACnB,YAAM,EAAC,UAAS,IAAI;AACpB,UAAI,KAAK,WAAW,YAAY,CAAC,WAAW;AAC1C;;AAKF,WAAK,MAAM,UAAU,aAAa,OAAO,KAAK,KAAK,WAAW;IAChE;IAEQ,aAAa,OAAY;AAC/B,UAAI,MAAM,WAAW,KAAK,QAAQ;AAEhC;;AAGF,WAAK,6BAA6B;AAClC,YAAM,iBAAiB,CAAC,gBAAgB,MAAM,KAAK;AAGnD,YAAM,eAAc;AACpB,UAAI,gBAAgB;AAClB;;AAGF,WAAK,MAAK;IACZ;IAEQ,cAAW;AACjB,UAAI,CAAC,KAAK,4BAA4B;AACpC;;AAGF,WAAK,6BAA6B;AAClC,WAAK,QAAQ,cAAc,IAAI,MAAM,UAAU,EAAC,YAAY,KAAI,CAAC,CAAC;IACpE;IAEQ,cAAc,OAAoB;AACxC,UAAI,MAAM,QAAQ,UAAU;AAC1B;;AAKF,WAAK,6BAA6B;AAGlC,iBAAW,MAAK;AACd,aAAK,6BAA6B;MACpC,CAAC;IACH;IAEQ,MAAM,cAAc,WAA0B;AAKpD,WAAK,kBAAkB,MAAK;AAC5B,WAAK,mBAAmB,IAAI,gBAAe;AAC3C,UAAI,KAAK,OAAO;AACd;;AAGF,YAAM,EAAC,QAAQ,OAAO,WAAW,UAAU,SAAS,QAAO,IAAI;AAC/D,UAAI,CAAC,UAAU,CAAC,SAAS,CAAC,aAAa,CAAC,YAAY,CAAC,WAAW,CAAC,SAAS;AACxE;;AAGF,YAAM,EACJ,WAAW,kBACX,QAAQ,eACR,OAAO,cACP,UAAU,iBACV,SAAS,gBACT,SAAS,eAAc,IACrB;AAEJ,YAAM,sBAA+D;QACnE,CAAC,QAAQ,iBAAiB,CAAA,CAAE;QAC5B,CAAC,OAAO,gBAAgB,CAAA,CAAE;QAC1B,CAAC,WAAW,oBAAoB,CAAA,CAAE;QAClC,CAAC,UAAU,mBAAmB,CAAA,CAAE;QAChC,CAAC,SAAS,kBAAkB,CAAA,CAAE;QAC9B,CAAC,SAAS,kBAAkB,CAAA,CAAE;;AAGhC,YAAM,aAA0B,CAAA;AAChC,iBAAW,CAAC,SAASC,UAAS,KAAK,qBAAqB;AACtD,mBAAW,eAAeA,YAAW;AACnC,gBAAMA,aAAY,QAAQ,QAAQ,GAAG,WAAW;AAChD,eAAK,iBAAiB,OAAO,iBAAiB,SAAS,MAAK;AAC1D,YAAAA,WAAU,OAAM;UAClB,CAAC;AAED,qBAAW,KAAKA,UAAS;;;AAI7B,YAAM,QAAQ,IACZ,WAAW,IAAI,CAACA,eACdA,WAAU,SAAS,MAAM,MAAK;MAE9B,CAAC,CAAC,CACH;IAEL;IAEQ,qBAAqB,OAAY;AACvC,YAAM,OAAO,MAAM;AACnB,WAAK,cAAc,KAAK,iBAAgB,EAAG,SAAS;IACtD;IAEQ,oBAAoB,OAAY;AACtC,YAAM,OAAO,MAAM;AACnB,WAAK,aAAa,KAAK,iBAAgB,EAAG,SAAS;IACrD;IAEQ,iBAAiB,OAAY;AACnC,YAAM,OAAO,MAAM;AACnB,WAAK,UAAU,KAAK,iBAAgB,EAAG,SAAS;IAClD;IAEQ,yBAAyB,OAAgC;AAC/D,YAAM,EAAC,QAAQ,eAAc,IAAI;AACjC,UAAI,WAAW,KAAK,WAAW;AAC7B,aAAK,gBAAgB;;AAGvB,UAAI,WAAW,KAAK,cAAc;AAChC,aAAK,mBAAmB;;IAE5B;IAEQ,wBAAqB;AAC3B,aAAO,IAAI,QAAc,CAAC,YAAW;AACnC,aAAK,4BAA4B;MACnC,CAAC;IACH;;AAtcA,GAAA,MAAA;AACE,8BAA0B,MAAM;EAClC,GAAC;AAMD,aAAA;IADC,EAAS,EAAC,MAAM,QAAO,CAAC;;AAuBE,aAAA;IAA1B,EAAS,EAAC,MAAM,QAAO,CAAC;;AAQK,aAAA;IAA7B,EAAS,EAAC,WAAW,MAAK,CAAC;;AAMhB,aAAA;IAAX,EAAQ;;AAmByB,aAAA;IAAjCC,GAAM,QAAQ;;AACmB,aAAA;IAAjCA,GAAM,QAAQ;;AACuB,aAAA;IAArCA,GAAM,YAAY;;AACkB,aAAA;IAApCA,GAAM,WAAW;;AACkB,aAAA;IAAnCA,GAAM,UAAU;;AACmB,aAAA;IAAnCA,GAAM,UAAU;;AACA,aAAA;IAAhB,EAAK;;AACW,aAAA;IAAhB,EAAK;;AAC+B,aAAA;IAApCA,GAAM,WAAW;;AACqB,aAAA;IAAtCA,GAAM,aAAa;;AACsB,aAAA;IAAzCA,GAAM,gBAAgB;;AAIN,aAAA;IAAhB,EAAK;;AACW,aAAA;IAAhB,EAAK;;AACW,aAAA;IAAhB,EAAK;;;;AC1GD,MAAMC,WAASC;;;;ACuCf,MAAM,WAAN,MAAMC,kBAAiB,OAAM;;AAClB,WAAA,SAA8B,CAACC,QAAM;AAD1C,aAAQ,WAAA;IADpB,EAAc,WAAW;KACb,QAAQ;;;ACvBf,MAAgB,YAAhB,cAAkCC,GAAU;IAAlD,cAAA;;AAiB6B,WAAA,OAAgB;AAK/B,WAAA,QAAQ;AAKO,WAAA,UAAU;IA+CvC;IA7CqB,SAAM;AAEvB,YAAM,EAAC,UAAS,IAAI;AACpB,aAAO;;qBAEUC,GAAS,KAAK,iBAAgB,CAAE;qBAChC,aAAa;;;;UAIxB,KAAK,kBAAiB,KAAM,KAAK,WAAU,KAAM,KAAK,YAAW;;;IAGzE;IAEU,mBAAgB;AACxB,YAAM,aAAa,CAAC,CAAC,KAAK;AAC1B,aAAO;QACL,WAAW,KAAK;QAChB,SAAS,KAAK,SAAS,WAAW,CAAC;QACnC,SAAS,KAAK,SAAS,WAAW,CAAC;QACnC,YAAY;;IAEhB;IAEQ,oBAAiB;AACvB,aAAO;IACT;IAEQ,cAAW;AACjB,aAAO,KAAK,QAAQ,wBAA2B,KAAK,iBAAiB;IACvE;IAEQ,aAAU;AAChB,YAAM,EAAC,UAAS,IAAI;AACpB,aAAO;;;sBAGW,aAAa,KAAK,QAC5B,SACC;;;;IAIX;;AAxEA,GAAA,MAAA;AACE,8BAA0B,SAAS;EACrC,GAAC;AAGe,YAAA,oBAAoC;IAClD,MAAM;IACN,gBAAgB;;AASS,aAAA;IAA1B,EAAS,EAAC,SAAS,KAAI,CAAC;;AAKb,aAAA;IAAX,EAAQ;;AAKkB,aAAA;IAA1B,EAAS,EAAC,MAAM,QAAO,CAAC;;;;AClCrB,MAAO,MAAP,cAAmB,UAAS;IAAlC,cAAA;;AAIc,WAAA,UAAsB;IAUpC;IARqB,mBAAgB;AACjC,aAAO;QACL,GAAG,MAAM,iBAAgB;QACzB,WAAW,KAAK,YAAY;QAC5B,aAAa,KAAK,YAAY;QAC9B,YAAY,KAAK,YAAY;;IAEjC;;AATY,aAAA;IAAX,EAAQ;;;;ACbJ,MAAMC,WAASC;;;;ACAf,MAAMC,WAASC;;;;ACAf,MAAMC,WAASC;;;;AC4Cf,MAAM,eAAN,MAAMC,sBAAqB,IAAG;IAM1B,mBAAgB;AACvB,aAAO;QACL,GAAG,MAAM,iBAAgB;QACzB,WAAW;QACX,aAAa;QACb,YAAY;QACZ,SAAS;;IAEb;;AACgB,eAAA,SAA8B,CAACC,UAAcA,UAAQA,QAAY;AAftE,iBAAY,WAAA;IADxB,EAAc,gBAAgB;KAClB,YAAY;;;AC5ClB,MAAMC,WAASC;;;;AC4Cf,MAAM,QAAN,MAAMC,eAAc,IAAG;;AACZ,QAAA,SAA8B,CAACC,UAAcA,UAAQA,QAAY;AADtE,UAAK,WAAA;IADjB,EAAc,QAAQ;KACV,KAAK;;;AC7BZ,MAAO,QAAP,cAAqBC,GAAU;IAArC,cAAA;;AAC6B,WAAA,WAAW;AACX,WAAA,QAAQ;AACR,WAAA,UAAU;AACzB,WAAA,QAAQ;AACO,WAAA,YAAY;AACZ,WAAA,WAAW;AACX,WAAA,YAAY;AACG,WAAA,iBAAiB;AACtB,WAAA,YAAY;AACvB,WAAA,QAAQ;AACR,WAAA,MAAM;AAKmB,WAAA,WAAW;AAKb,WAAA,SAAS;AAsBzC,WAAA,cAAc;AAOd,WAAA,oBAAoB;AACpB,WAAA,qBAAqB;IA8RxC;IAvTE,IAAY,cAAW;AAGrB,YAAM,gBAAgB,KAAK,SAAS;AACpC,YAAM,cAAc,KAAK,OAAO;AAEhC,UAAI,gBAAgB,KAAK,eAAe,GAAG;AACzC,eAAO;;AAGT,aAAO,GAAG,mBAAmB;IAC/B;IAEA,IAAY,wBAAqB;AAC/B,aAAO,KAAK,SAAS,KAAK,YAAY,KAAK,YAAY,KAAK;IAC9D;;;;;;;;IAuBA,kBAAe;AACb,WAAK,oBAAoB;IAC3B;IAEmB,OAAO,OAA4B;AAEpD,YAAM,qBACJ,MAAM,IAAI,UAAU,KAAK,MAAM,IAAI,UAAU,MAAM;AACrD,UAAI,oBAAoB;AACtB,aAAK,qBAAqB;;AAI5B,UAAI,KAAK,YAAY,KAAK,SAAS;AACjC,cAAM,IAAI,WAAW,IAAI;AACzB,aAAK,UAAU;;AAIjB,WAAK,qBAAqB;QACxB,YAAY,MAAM,IAAI,SAAS;QAC/B,cAAc,MAAM,IAAI,WAAW;OACpC;AAED,YAAM,OAAO,KAAK;IACpB;IAEmB,SAAM;AACvB,YAAM,gBAAgB,KAAK;;QAA2B;MAAI;AAC1D,YAAM,eAAe,KAAK;;QAA2B;MAAK;AAC1D,YAAM,UAAU,KAAK,gBAAgB,aAAa;AAClD,YAAM,UAAU;QACd,YAAY,KAAK;QACjB,uBAAuB,KAAK;QAC5B,SAAS,KAAK,SAAS,CAAC,KAAK;QAC7B,WAAW,KAAK;QAChB,cAAc,KAAK;QACnB,YAAY,KAAK;QACjB,aAAa,KAAK;QAClB,aAAa,KAAK;QAClB,YAAY,KAAK;QACjB,YAAY,CAAC,KAAK;;AAGpB,aAAO;0BACeC,GAAS,OAAO;;YAE9B,KAAK,mBAAkB,KAAM,KAAK,kBAAiB,KAAM;;;;;;;kBAOnD,gBAAgB,UAAU,IAAU;;;;;;;;;;;UAW5C,KAAK,qBAAoB;;;IAGjC;IAEmB,QAAQ,SAA8B;AACvD,UACE,QAAQ,IAAI,gBAAgB,KAC5B,QAAQ,IAAI,WAAW,KACvB,QAAQ,IAAI,OAAO,KACnB,QAAQ,IAAI,KAAK,GACjB;AACA,aAAK,6BAA4B;;AAGnC,UAAI,KAAK,mBAAmB;AAG1B,8BAAsB,MAAK;AACzB,eAAK,oBAAoB;QAC3B,CAAC;;AAGH,UAAI,KAAK,oBAAoB;AAC3B,8BAAsB,MAAK;AACzB,eAAK,qBAAqB;QAC5B,CAAC;;IAEL;IAMQ,uBAAoB;AAC1B,YAAM,EAAC,uBAAuB,YAAW,IAAI;AAC7C,UAAI,CAAC,yBAAyB,CAAC,aAAa;AAC1C,eAAO;;AAKT,YAAM,QAAQ,UAAa;AAG3B,YAAM,MAAM,cACR,0BAA6B,uBAC7B;AAMJ,YAAM,sBACJ,KAAK,SAAS,KAAK,aAAa,CAAC,KAAK;AACxC,YAAM,OAAO,sBAAsB,UAAU;AAC7C,aAAO;0CAC+B,QAAQ,QAAQ;;;sBAGpC,KAAK;;IAEzB;IAEQ,+BAA4B;AAClC,iBAAW,WAAW,KAAK,wBAAwB;AACjD,UAAO,IAAO,KAAK,yBAAyB,KAAK,eAAe,OAAO;AACvE,gBAAQ,aAAa,UAAU,EAAE;;IAErC;IAEQ,YAAY,YAAmB;AACrC,UAAI,CAAC,KAAK,OAAO;AACf,eAAO;;AAGT,UAAI;AACJ,UAAI,YAAY;AAEd,kBAAU,KAAK,WAAW,KAAK,aAAa,KAAK;aAC5C;AAGL,kBAAU,CAAC,KAAK,WAAW,CAAC,KAAK,aAAa,CAAC,KAAK;;AAGtD,YAAM,UAAU;QACd,UAAU,CAAC;QACX,YAAY;QACZ,WAAW,CAAC;;AAId,YAAM,YAAY,GAAG,KAAK,QAAQ,KAAK,WAAW,MAAM;AAExD,aAAO;2BACgBA,GAAS,OAAO,kBAAkB,CAAC;WACnD;;;IAGT;IAEQ,qBAAqB,EAC3B,YACA,aAAY,GAIb;AACC,UAAI,CAAC,KAAK,OAAO;AACf;;AAGF,qBAAA,aAAe,KAAK;AACpB,uBAAA,eAAiB,KAAK;AACtB,YAAM,cAAc,cAAc;AAClC,YAAM,mBAAmB,KAAK,WAAW,KAAK;AAC9C,UAAI,gBAAgB,kBAAkB;AACpC;;AAGF,WAAK,cAAc;AACnB,WAAK,gBAAgB,OAAM;AAc3B,WAAK,iBAAiB,KAAK,iBAAiB,QAC1C,KAAK,kBAAiB,GACtB,EAAC,UAAU,KAAK,QAAQ,OAAO,SAAQ,CAAC;AAG1C,WAAK,gBAAgB,iBAAiB,UAAU,MAAK;AAEnD,aAAK,cAAc;MACrB,CAAC;IACH;IAEQ,oBAAiB;AACvB,YAAM,EAAC,iBAAiB,eAAc,IAAI;AAC1C,UAAI,CAAC,mBAAmB,CAAC,gBAAgB;AACvC,eAAO,CAAA;;AAGT,YAAM,EACJ,GAAG,WACH,GAAG,WACH,QAAQ,eAAc,IACpB,gBAAgB,sBAAqB;AACzC,YAAM,EACJ,GAAG,UACH,GAAG,UACH,QAAQ,cAAa,IACnB,eAAe,sBAAqB;AACxC,YAAM,sBAAsB,gBAAgB;AAC5C,YAAM,qBAAqB,eAAe;AAK1C,YAAM,QAAQ,qBAAqB;AACnC,YAAM,SAAS,WAAW;AAK1B,YAAM,SACJ,WACA,YACA,KAAK,OAAO,gBAAgB,iBAAiB,SAAS,CAAC;AAKzD,YAAM,gBAAgB,cAAc,wBAAwB,mBAAmB;AAC/E,YAAM,iBAAiB;AAKvB,YAAM,qBAAqB,eAAe;AAC1C,YAAM,mBAAmB,qBAAqB;AAC9C,YAAM,QAAQ,mBAAmB,GAAG,qBAAqB,YAAY;AACrE,UAAI,KAAK,WAAW,KAAK,WAAW;AAClC,eAAO;UACL,EAAC,WAAW,eAAe,MAAK;UAChC,EAAC,WAAW,gBAAgB,MAAK;;;AAIrC,aAAO;QACL,EAAC,WAAW,gBAAgB,MAAK;QACjC,EAAC,WAAW,eAAe,MAAK;;IAEpC;IAEA,+BAA4B;AAC1B,aAAO,KAAK,YAAa,sBAAqB;IAChD;;AA/U2B,aAAA;IAA1B,EAAS,EAAC,MAAM,QAAO,CAAC;;AACE,aAAA;IAA1B,EAAS,EAAC,MAAM,QAAO,CAAC;;AACE,aAAA;IAA1B,EAAS,EAAC,MAAM,QAAO,CAAC;;AACb,aAAA;IAAX,EAAQ;;AACkB,aAAA;IAA1B,EAAS,EAAC,MAAM,QAAO,CAAC;;AACE,aAAA;IAA1B,EAAS,EAAC,MAAM,QAAO,CAAC;;AACE,aAAA;IAA1B,EAAS,EAAC,MAAM,QAAO,CAAC;;AACiB,aAAA;IAAzC,EAAS,EAAC,WAAW,kBAAiB,CAAC;;AACH,aAAA;IAApC,EAAS,EAAC,WAAW,aAAY,CAAC;;AACT,aAAA;IAAzB,EAAS,EAAC,MAAM,OAAM,CAAC;;AACE,aAAA;IAAzB,EAAS,EAAC,MAAM,OAAM,CAAC;;AAK2B,aAAA;IAAlD,EAAS,EAAC,MAAM,SAAS,WAAW,YAAW,CAAC;;AAKA,aAAA;IAAhD,EAAS,EAAC,MAAM,SAAS,WAAW,UAAS,CAAC;;AAG9B,aAAA;IADhBC,GAAsB,EAAC,MAAM,mBAAkB,CAAC;;AAoBhC,aAAA;IAAhB,EAAK;;AAOW,aAAA;IAAhB,EAAK;;AACW,aAAA;IAAhB,EAAK;;AAEW,aAAA;IADhBC,GAAM,iBAAiB;;AAEkB,aAAA;IAAzCA,GAAM,gBAAgB;;AACe,aAAA;IAArCA,GAAM,YAAY;;;;AChEf,MAAO,cAAP,cAA2B,MAAK;IACjB,mBAAgB;AACjC,aAAO;;;;IAIT;IAEmB,kBAAe;AAChC,aAAO;IACT;;;;AChBK,MAAMC,WAASC;;;;ACAf,MAAMC,WAASC;;;;ACkBf,MAAM,gBAAN,MAAMC,uBAAsB,YAAW;;AAC5B,gBAAA,SAA8B,CAACC,UAAcA,QAAY;AAD9D,kBAAa,WAAA;IADzB,EAAc,iBAAiB;KACnB,aAAa;;;ACZpB,MAAO,gBAAP,cAA6B,MAAK;IACnB,cAAc,eAAsB;AACrD,aAAO;;;;;;uCAM4B;;;;;IAKrC;;;;ACnBK,MAAMC,WAASC;;;;ACkBf,MAAM,kBAAN,MAAMC,yBAAwB,cAAa;;AAChC,kBAAA,SAA8B,CAACC,UAAcA,QAAc;AADhE,oBAAe,WAAA;IAD3B,EAAc,mBAAmB;KACrB,eAAe;;;ACdtB,MAAO,OAAP,cAAoBC,GAAU;IACf,SAAM;AACvB,aAAO;IACT;IAES,oBAAiB;AACxB,YAAM,kBAAiB;AACvB,YAAM,aAAa,KAAK,aAAa,aAAa;AAClD,UAAI,eAAe,SAAS;AAG1B,aAAK,gBAAgB,aAAa;AAClC;;AAKF,WAAK,aAAa,eAAe,MAAM;IACzC;;;;ACtBK,MAAMC,WAASC;;;;ACgBf,MAAM,SAAN,MAAMC,gBAAe,KAAI;;AAEd,SAAA,SAA8B,CAACC,QAAM;AAF1C,WAAM,WAAA;IADlB,EAAc,SAAS;KACX,MAAM;;;AChBZ,MAAMC,WAASC;;;;AC+BtB,MAAMC,KAAQC,OAAOC,IAAI,EAAA;AAAzB,MAGMC,KAAqBC,CAAAA,OAAAA;AACzB,SAAKA,QAAAA,KAAAA,SAAAA,GAAgCC,OAAML;AAG3C,aAAQI,QAAAA,KAAAA,SAAAA,GAA+C;EAAC;AAP1D,MAsDaE,KAAU,CACrBC,OACGC,QACc,EACjBC,cAAkBD,GAAOE,OACvB,CAACC,IAAKC,KAAGC,QAAQF,MA9BGG,CAAAA,OAAAA;AACtB,QAAA,WAAIA,GAAoB;AACtB,aAAOA,GAAoB;AAE3B,UAAUC,MACR,kEAAkED;+CAAAA;EAGrE,GAsBuCF,GAAAA,IAAoBL,GAAQM,MAAM,CAAA,GACxEN,GAAQ,CAAA,CAAA,GAEVS,GAAGC,GAAAA;AA9DL,MAiEMC,KAAe,oBAAIC;AAjEzB,MAsEaC,KACVC,CAAAA,OACD,CAACd,OAAkCC,QAAAA;AACjC,UAAMc,MAAId,IAAOe;AACjB,QAAIC,KACAC;AACJ,UAAMC,MAA+B,CAAA,GAC/BC,KAAgC,CAAA;AACtC,QAEIC,IAFAC,KAAI,GACJC,KAAAA;AAGJ,WAAOD,KAAIP,OAAG;AAKZ,WAJAM,KAAIrB,GAAQsB,EAAAA,GAKVA,KAAIP,OAAAA,YACFG,KAAejB,IAAOqB,EAAAA,GACvBL,MAAcO,GAAkBN,EAAAA;AAEjCG,QAAAA,MAAKJ,MAAcjB,GAAAA,EAAUsB,EAAAA,GAC7BC,KAAAA;AAGED,MAAAA,OAAMP,OACRK,GAAcK,KAAKP,EAAAA,GAErBC,IAAcM,KAAKJ,EAAAA,GACnBC;IACD;AAOD,QAJIA,OAAMP,OACRI,IAAcM,KAAKzB,GAAQe,GAAAA,CAAAA,GAGzBQ,IAAY;AACd,YAAMG,KAAMP,IAAcQ,KAAK,SAAA;AAAA,kBAC/B3B,KAAUW,GAAaiB,IAAIF,EAAAA,OAMxBP,IAAsBU,MAAMV,KAC7BR,GAAamB,IACXJ,IACC1B,KAAUmB,GAAAA,IAGflB,MAASmB;IACV;AACD,WAAON,GAAQd,IAAAA,GAAYC,GAAAA;EAAO;AA5HtC,MAqIa8B,KAAOlB,GAAWmB,CAAAA;AArI/B,MA6IaC,KAAMpB,GAAWqB,CAAAA;;;ACrKxB,WAAU,MAAM,IAAiB,cAAc,MAAI;AACvD,WACE,eACA,iBAAiB,EAAE,EAAE,iBAAiB,WAAW,EAAE,KAAI,MAAO;EAElE;;;ACWA,MAAM,sBAAsB,sBAAsBC,EAAU;AAStD,MAAO,aAAP,cAA0B,oBAAmB;IAAnD,cAAA;;AAkB4C,WAAA,WAAW;AAMrD,WAAA,gBAAgB;AAKJ,WAAA,OAAO;AAKP,WAAA,SAA0B;AAKQ,WAAA,oBAAoB;AAMvC,WAAA,SAAS;AAOM,WAAA,WAAW;AAMzC,WAAA,OAA0B;AAMX,WAAA,QAAQ;AAuBlB,WAAA,WAAW,MAAM,MAAM,KAAK,aAAa;IA+G5D;IApIE,IAAI,OAAI;AACN,aAAO,KAAK,aAAa,MAAM,KAAK;IACtC;IACA,IAAI,KAAK,MAAY;AACnB,WAAK,aAAa,QAAQ,IAAI;IAChC;;;;IAKA,IAAI,OAAI;AACN,aAAO,KAAK,SAAS,EAAE;IACzB;;;;IAKA,IAAI,SAAM;AACR,aAAO,KAAK,SAAS,EAAE;IACzB;;;;IAOmB,aAAU;AAC3B,UAAI,KAAK,MAAM;AACb,aAAK,WAAW;;IAEpB;IAEmB,SAAM;AACvB,YAAM,MAAM,KAAK,OAAOC,UAAeA;AAEvC,YAAM,EAAC,WAAW,cAAc,aAAY,IAAI;AAChD,YAAM,sBAAsB,aAAa,KAAK;AAC9C,YAAM,mBAAmB,CAAC,KAAK,SAAS,IAAU,KAAK;AACvD,UAAI,iBAAiD;AACrD,UAAI,CAAC,KAAK,MAAM;AACd,yBACE,uBAAuB,KAAK,WACxB,KAAK,oBACL;;AAER,aAAOC,MAAc;6BACIC,GAAS,KAAK,iBAAgB,CAAE;;sBAEvC,kBAAkB;yBACd,CAAC,KAAK,QAAQ,gBAAiB;yBAC/B,CAAC,KAAK,QAAQ,gBAAiB;wBACjC;qBACH,CAAC,KAAK,QAAQ,KAAK;kBACtB,KAAK;UACb,KAAK,gBAAe;UACpB,KAAK,aAAY;UACjB,CAAC,KAAK,WAAW,KAAK,WAAU,IAAK;UACrC,KAAK,WAAW,KAAK,mBAAkB,IAAK;UAC5C,KAAK,kBAAiB;UACtB,KAAK,QAAQ,KAAK,WAAU;MAChC;IACJ;IAEQ,aAAU;AAEhB,YAAM,EAAC,UAAS,IAAI;AACpB,aAAO;;;;gBAIK,KAAK;kBACH,KAAK,UAAU;sBACX,aAAa;;IAEjC;IAEU,mBAAgB;AACxB,aAAO;QACL,aAAa,KAAK;QAClB,YAAY,KAAK,UAAU,KAAK;;IAEpC;IAEQ,aAAU;AAChB,aAAO;IACT;IAEQ,qBAAkB;AAExB,aAAO;;;IAGT;IAEQ,oBAAiB;AACvB,aAAO;IACT;IAEQ,kBAAe;AAErB,aAAO;;YAEC,KAAK,OAAO,SAAS;IAC/B;IAEQ,eAAY;AAElB,aAAO;YACC,KAAK,OAAO,SAAS;mBACd,CAAC,KAAK,QAAQ,KAAK;IACpC;IAES,oBAAiB;AACxB,WAAK,WAAW,MAAM,MAAM,KAAK,aAAa;AAC9C,YAAM,kBAAiB;IACzB;IAEQ,MAAM,YAAY,OAAY;AAEpC,YAAM;AACN,UAAI,CAAC,KAAK,UAAU,KAAK,YAAY,MAAM,kBAAkB;AAC3D;;AAGF,WAAK,WAAW,CAAC,KAAK;AACtB,WAAK,cACH,IAAI,WAAW,SAAS,EAAC,SAAS,MAAM,UAAU,KAAI,CAAC,CAAC;AAI1D,WAAK,cAAc,IAAI,MAAM,UAAU,EAAC,SAAS,KAAI,CAAC,CAAC;IACzD;;AApMA,GAAA,MAAA;AACE,8BAA0B,UAAU;AACpC,uBAAmB,UAAU;EAC/B,GAAC;AAGe,aAAA,iBAAiB;AAGjB,aAAA,oBAAoC;IAClD,MAAM;IACN,gBAAgB;;AAMwB,aAAA;IAAzC,EAAS,EAAC,MAAM,SAAS,SAAS,KAAI,CAAC;;AAMxC,aAAA;IADC,EAAS,EAAC,MAAM,SAAS,WAAW,mBAAkB,CAAC;;AAM5C,aAAA;IAAX,EAAQ;;AAKG,aAAA;IAAX,EAAQ;;AAKqC,aAAA;IAA7C,EAAS,EAAC,WAAW,sBAAqB,CAAC;;AAMjB,aAAA;IAA1B,EAAS,EAAC,MAAM,QAAO,CAAC;;AAOiB,aAAA;IAAzC,EAAS,EAAC,MAAM,SAAS,SAAS,KAAI,CAAC;;AAM5B,aAAA;IAAX,EAAQ;;AAMkB,aAAA;IAA1B,EAAS,EAAC,SAAS,KAAI,CAAC;;AAuBR,aAAA;IAAhB,EAAK;;;;ACvHD,MAAMC,WAASC;;;;AC+Bf,MAAM,qBAAN,MAAMC,4BAA2B,WAAU;IAG7B,mBAAgB;AACjC,aAAO;QACL,GAAG,MAAM,iBAAgB;QACzB,UAAU;QACV,iBAAiB,KAAK;;IAE1B;;AARgB,qBAAA,SAA8B,CAACC,UAAcA,QAAM;AADxD,uBAAkB,WAAA;IAD9B,EAAc,uBAAuB;KACzB,kBAAkB;;;AC/BxB,MAAMC,WAASC;;;;AC+Bf,MAAM,0BAAN,MAAMC,iCAAgC,WAAU;IAGlC,mBAAgB;AACjC,aAAO;QACL,GAAG,MAAM,iBAAgB;QACzB,gBAAgB;QAChB,uBAAuB,KAAK;;IAEhC;;AARgB,0BAAA,SAA8B,CAACC,UAAcA,QAAM;AADxD,4BAAuB,WAAA;IADnC,EAAc,6BAA6B;KAC/B,uBAAuB;;;AC/B7B,MAAMC,WAASC;;;;AC+Bf,MAAM,eAAN,MAAMC,sBAAqB,WAAU;IAGvB,mBAAgB;AACjC,aAAO;QACL,GAAG,MAAM,iBAAgB;QACzB,YAAY;;IAEhB;;AAPgB,eAAA,SAA8B,CAACC,UAAcA,QAAM;AADxD,iBAAY,WAAA;IADxB,EAAc,gBAAgB;KAClB,YAAY;;;AC/BlB,MAAMC,WAASC;;;;AC+Bf,MAAM,uBAAN,MAAMC,8BAA6B,WAAU;IAG/B,mBAAgB;AACjC,aAAO;QACL,GAAG,MAAM,iBAAgB;QACzB,YAAY;;IAEhB;;AAPgB,uBAAA,SAA8B,CAACC,UAAcA,QAAM;AADxD,yBAAoB,WAAA;IADhC,EAAc,yBAAyB;KAC3B,oBAAoB;;;ACX3B,WAAU,kBACd,OACA,gBAAgB,mBAAuB;AAKvC,UAAM,YAAY,wBAAwB,OAAO,aAAa;AAC9D,QAAI,WAAW;AACb,gBAAU,WAAW;AACrB,gBAAU,MAAK;;AAEjB,WAAO;EACT;AAWM,WAAU,iBACd,OACA,gBAAgB,mBAAuB;AAEvC,UAAM,WAAW,uBAAuB,OAAO,aAAa;AAC5D,QAAI,UAAU;AACZ,eAAS,WAAW;AACpB,eAAS,MAAK;;AAEhB,WAAO;EACT;AAaM,WAAU,qBACd,OACA,gBAAgB,mBAAuB;AAEvC,UAAM,aAAa,cAAc,OAAO,aAAa;AACrD,QAAI,YAAY;AACd,iBAAW,KAAK,WAAW;;AAE7B,WAAO;EACT;AAYM,WAAU,cACd,OACA,gBAAgB,mBAAuB;AAEvC,aAASC,MAAI,GAAGA,MAAI,MAAM,QAAQA,OAAK;AACrC,YAAM,OAAO,MAAMA,GAAC;AACpB,UAAI,KAAK,aAAa,KAAK,cAAc,IAAI,GAAG;AAC9C,eAAO;UACL;UACA,OAAOA;;;;AAIb,WAAO;EACT;AAYM,WAAU,wBACd,OACA,gBAAgB,mBAAuB;AAEvC,eAAW,QAAQ,OAAO;AACxB,UAAI,cAAc,IAAI,GAAG;AACvB,eAAO;;;AAIX,WAAO;EACT;AAWM,WAAU,uBACd,OACA,gBAAgB,mBAAuB;AAEvC,aAASA,MAAI,MAAM,SAAS,GAAGA,OAAK,GAAGA,OAAK;AAC1C,YAAM,OAAO,MAAMA,GAAC;AACpB,UAAI,cAAc,IAAI,GAAG;AACvB,eAAO;;;AAIX,WAAO;EACT;AAaM,WAAU,YACd,OACA,OACA,gBAAgB,mBAChB,OAAO,MAAI;AAEX,aAASA,MAAI,GAAGA,MAAI,MAAM,QAAQA,OAAK;AACrC,YAAM,aAAaA,MAAI,SAAS,MAAM;AACtC,UAAI,YAAY,SAAS,CAAC,MAAM;AAE9B,eAAO;;AAGT,YAAM,OAAO,MAAM,SAAS;AAC5B,UAAI,cAAc,IAAI,GAAG;AACvB,eAAO;;;AAIX,WAAO,MAAM,KAAK,IAAI,MAAM,KAAK,IAAI;EACvC;AAaM,WAAU,YACd,OACA,OACA,gBAAgB,mBAChB,OAAO,MAAI;AAEX,aAASA,MAAI,GAAGA,MAAI,MAAM,QAAQA,OAAK;AACrC,YAAM,aAAa,QAAQA,MAAI,MAAM,UAAU,MAAM;AACrD,UAAI,YAAY,SAAS,CAAC,MAAM;AAE9B,eAAO;;AAGT,YAAM,OAAO,MAAM,SAAS;AAE5B,UAAI,cAAc,IAAI,GAAG;AACvB,eAAO;;;AAIX,WAAO,MAAM,KAAK,IAAI,MAAM,KAAK,IAAI;EACvC;AAMM,WAAU,iBACd,OACA,kBACA,gBAAgB,mBAChB,OAAO,MAAI;AAEX,QAAI,kBAAkB;AACpB,YAAM,OAAO,YACX,OACA,iBAAiB,OACjB,eACA,IAAI;AAGN,UAAI,MAAM;AACR,aAAK,WAAW;AAChB,aAAK,MAAK;;AAGZ,aAAO;WACF;AACL,aAAO,kBAAkB,OAAO,aAAa;;EAEjD;AAMM,WAAU,qBACd,OACA,kBACA,gBAAgB,mBAChB,OAAO,MAAI;AAEX,QAAI,kBAAkB;AACpB,YAAM,OAAO,YACX,OACA,iBAAiB,OACjB,eACA,IAAI;AAEN,UAAI,MAAM;AACR,aAAK,WAAW;AAChB,aAAK,MAAK;;AAEZ,aAAO;WACF;AACL,aAAO,iBAAiB,OAAO,aAAa;;EAEhD;AAMM,WAAU,6BAA0B;AACxC,WAAO,IAAI,MAAM,oBAAoB,EAAC,SAAS,MAAM,UAAU,KAAI,CAAC;EACtE;AAkBM,WAAU,+BAA4B;AAC1C,WAAO,IAAI,MAAM,sBAAsB,EAAC,SAAS,MAAM,UAAU,KAAI,CAAC;EACxE;AAgBA,WAAS,kBAAyC,MAAU;AAC1D,WAAO,CAAC,KAAK;EACf;;;AC9SO,MAAM,gBAAgB;IAC3B,WAAW;IACX,WAAW;IACX,SAAS;IACT,YAAY;IACZ,MAAM;IACN,KAAK;;AAuDD,MAAO,iBAAP,MAAqB;IAUzB,YAAY,QAAkC;AAmD9C,WAAA,gBAAgB,CAAC,UAAwB;AACvC,cAAM,MAAM,MAAM;AAClB,YAAI,MAAM,oBAAoB,CAAC,KAAK,eAAe,GAAG,GAAG;AACvD;;AAIF,cAAM,QAAQ,KAAK;AAEnB,YAAI,CAAC,MAAM,QAAQ;AACjB;;AAGF,cAAM,mBAAmB,cAAc,OAAO,KAAK,aAAa;AAEhE,cAAM,eAAc;AAEpB,cAAMC,SAAQ,KAAK,MAAK;AACxB,cAAM,iBAAiBA,SACnB,cAAc,aACd,cAAc;AAClB,cAAM,aAAaA,SACf,cAAc,YACd,cAAc;AAElB,YAAI,iBAA8B;AAClC,gBAAQ,KAAK;UAEX,KAAK,cAAc;UACnB,KAAK;AACH,6BAAiB,iBACf,OACA,kBACA,KAAK,eACL,KAAK,eAAc,CAAE;AAEvB;UAGF,KAAK,cAAc;UACnB,KAAK;AACH,6BAAiB,qBACf,OACA,kBACA,KAAK,eACL,KAAK,eAAc,CAAE;AAEvB;UAGF,KAAK,cAAc;AACjB,6BAAiB,kBAAkB,OAAO,KAAK,aAAa;AAC5D;UAGF,KAAK,cAAc;AACjB,6BAAiB,iBAAiB,OAAO,KAAK,aAAa;AAC3D;UAEF;AACE;;AAGJ,YACE,kBACA,oBACA,iBAAiB,SAAS,gBAC1B;AAGA,2BAAiB,KAAK,WAAW;;MAErC;AA6CA,WAAA,oBAAoB,MAAK;AACvB,cAAM,QAAQ,KAAK;AAEnB,mBAAW,QAAQ,OAAO;AACxB,eAAK,eAAe,IAAI;;MAE5B;AAKA,WAAA,sBAAsB,CAAC,UAAgB;AACrC,aAAK,kBAAiB;AACtB,cAAM,SAAS,MAAM;AACrB,aAAK,aAAa,MAAM;AACxB,eAAO,MAAK;MACd;AAMA,WAAA,eAAe,MAAK;AAClB,cAAM,QAAQ,KAAK;AAEnB,YAAI,uBAAuB;AAE3B,mBAAW,QAAQ,OAAO;AACxB,gBAAM,cAAc,CAAC,KAAK,YAAY,KAAK,WAAW;AAEtD,cAAI,eAAe,CAAC,sBAAsB;AACxC,mCAAuB;AACvB,iBAAK,WAAW;AAChB;;AAIF,eAAK,WAAW;;AAGlB,YAAI,sBAAsB;AACxB;;AAGF,cAAM,uBAAuB,wBAC3B,OACA,KAAK,aAAa;AAGpB,YAAI,CAAC,sBAAsB;AACzB;;AAGF,6BAAqB,WAAW;MAClC;AA7NE,YAAM,EACJ,QACA,kBACA,OAAAA,QACA,gBACA,cACA,gBACA,eACA,eAAc,IACZ;AACJ,WAAK,SAAS;AACd,WAAK,mBAAmB;AACxB,WAAK,QAAQA;AACb,WAAK,iBAAiB;AACtB,WAAK,eAAe;AACpB,WAAK,iBAAiB;AACtB,WAAK,gBAAgB;AACrB,WAAK,iBAAiB,mBAAmB,MAAM;IACjD;;;;;IAMA,IAAI,QAAK;AACP,YAAM,aAAa,KAAK,iBAAgB;AACxC,YAAM,QAAgB,CAAA;AAEtB,iBAAW,gBAAgB,YAAY;AACrC,cAAM,SAAS,KAAK,OAAO,YAAY;AAEvC,YAAI,QAAQ;AACV,gBAAM,KAAK,YAAY;AACvB;;AAIF,cAAM,UAAW,aAA6C;AAC9D,YAAI,WAAW,KAAK,OAAO,OAAO,GAAG;AACnC,gBAAM,KAAK,OAAO;;;AAItB,aAAO;IACT;;;;;;;IAsFA,mBAAgB;AACd,YAAM,QAAQ,KAAK;AACnB,YAAM,mBAAmB,cAAc,OAAO,KAAK,aAAa;AAChE,UAAI,kBAAkB;AACpB,yBAAiB,KAAK,WAAW;;AAEnC,aAAO,iBACL,OACA,kBACA,KAAK,eACL,KAAK,eAAc,CAAE;IAEzB;;;;;;;IAQA,uBAAoB;AAClB,YAAM,QAAQ,KAAK;AACnB,YAAM,mBAAmB,cAAc,OAAO,KAAK,aAAa;AAChE,UAAI,kBAAkB;AACpB,yBAAiB,KAAK,WAAW;;AAEnC,aAAO,qBACL,OACA,kBACA,KAAK,eACL,KAAK,eAAc,CAAE;IAEzB;;;;ACpPF,MAAM,oBAAoB,IAAI,IAAY,OAAO,OAAO,aAAa,CAAC;AAOhE,MAAO,OAAP,cAAoBC,GAAU;;IAalC,IAAI,QAAK;AACP,aAAO,KAAK,eAAe;IAC7B;IAqBA,cAAA;AACE,YAAK;AApBU,WAAA,iBAAiB,IAAI,eAAyB;QAC7D,QAAQ,CAAC,SACP,KAAK,aAAa,cAAc;QAClC,kBAAkB,MAAM,KAAK;QAC7B,OAAO,MAAM,iBAAiB,IAAI,EAAE,cAAc;QAClD,gBAAgB,CAAC,SAAQ;AACvB,eAAK,WAAW;QAClB;QACA,cAAc,CAAC,SAAQ;AACrB,eAAK,WAAW;QAClB;QACA,gBAAgB,CAAC,QAAQ,kBAAkB,IAAI,GAAG;QAClD,eAAe,CAAC,SAAS,CAAC,KAAK,YAAY,KAAK,SAAS;OAC1D;AAEgB,WAAA;MAEd,KAAqB,gBAAe;AAIrC,UAAI,CAACC,IAAU;AACb,aAAK,UAAU,OAAO;AACtB,aAAK,iBAAiB,WAAW,KAAK,eAAe,aAAa;;IAEtE;IAEmB,SAAM;AACvB,aAAO;;4BAEiB,KAAK,eAAe;8BAClB,KAAK,eAAe;sBAC5B,KAAK,eAAe;;;IAGxC;;;;;;;IAQA,mBAAgB;AACd,aAAO,KAAK,eAAe,iBAAgB;IAC7C;;;;;;;IAQA,uBAAoB;AAClB,aAAO,KAAK,eAAe,qBAAoB;IACjD;;AA9DU,aAAA;IADTC,GAAsB,EAAC,SAAS,KAAI,CAAC;;;;ACrBjC,MAAMC,WAASC;;;;AC+Bf,MAAM,SAAN,MAAMC,gBAAe,KAAI;;AACd,SAAA,SAA8B,CAACC,QAAM;AAD1C,WAAM,WAAA;IADlB,EAAc,SAAS;KACX,MAAM;;;AC1Bb,MAAO,OAAP,cAAoBC,GAAU;IAApC,cAAA;;AAQ4C,WAAA,YAAY;IAyCxD;IArCW,SAAM;AACb,aAAO;;;;4CAIiC,KAAK;;;wBAGzB,KAAK;4CACe,KAAK;;;wBAGzB,KAAK;;;;;IAK3B;IAEQ,uBAAoB;AAG1B,UAAI,cAAc;AAClB,UAAI,mBAAmB;AACvB,iBAAW,QAAQ,KAAK,WAAW;AACjC,YAAI,eAAe,IAAI,GAAG;AACxB,8BAAoB;;AAGtB,YAAI,mBAAmB,GAAG;AACxB,wBAAc;AACd;;;AAIJ,WAAK,YAAY;IACnB;;AAxC0C,aAAA;IAAzC,EAAS,EAAC,MAAM,SAAS,SAAS,KAAI,CAAC;;AAEC,aAAA;IAAxCC,GAAS,YAAY;;AAyCxB,WAAS,eAAe,MAAqB;AAC3C,eAAW,QAAQ,KAAK,cAAc,EAAC,SAAS,KAAI,CAAC,GAAG;AAEtD,YAAM,YAAY,KAAK,aAAa,KAAK;AAGzC,YAAM,oBACJ,KAAK,aAAa,KAAK,aAAa,KAAK,aAAa,MAAM,IAAI;AAClE,UAAI,aAAa,mBAAmB;AAClC,eAAO;;;AAIX,WAAO;EACT;;;ACtEO,MAAMC,WAASC;;;;ACuEf,MAAM,SAAN,MAAMC,gBAAe,KAAI;;AACd,SAAA,SAA8B,CAACC,QAAM;AAD1C,WAAM,WAAA;IADlB,EAAc,SAAS;KACX,MAAM;;;AC/Cb,MAAO,aAAP,cAA0BC,GAAU;IAA1C,cAAA;;AAc4C,WAAA,WAAW;AAM1B,WAAA,OAAqB;AAMhD,WAAA,aAAa;AAKD,WAAA,OAAO;AAMP,WAAA,SAAuD;IA0IrE;IAtIE,IAAY,aAAU;AACpB,aAAO,KAAK,YAAY,KAAK,SAAS;IACxC;IAEmB,WAAW,SAAmC;AAC/D,UAAI,KAAK,MAAM;AACb,aAAK,OAAO;;AAGd,YAAM,WAAW,OAAO;IAC1B;IAEmB,SAAM;AACvB,aAAO,KAAK,eAAe;;;YAGnB,KAAK,aAAY,KAAM,KAAK,gBAAe;;;;UAI7C,KAAK,WAAU;;KAEpB;IACH;;;;;;IAOU,eAAe,SAAgB;AACvC,YAAM,WAAW,KAAK,SAAS;AAC/B,UAAI;AACJ,cAAQ,KAAK,MAAM;QACjB,KAAK;AACH,gBAAMC;AACN;QACF,KAAK;AACH,gBAAMA;AACN;QACF;QACA,KAAK;AACH,gBAAMA;AACN;;AAGJ,YAAM,gBAAgB,KAAK,SAAS;AAGpC,YAAM,SAAS,YAAY,CAAC,CAAC,KAAK,SAAS,KAAK,SAAS;AACzD,aAAOC;SACF;;oBAEW,KAAK,cAAc,CAAC,gBAAgB,KAAK;oBACzC,KAAK;;wBAEA,KAAyB,gBAAgB;uBAC1C,KAAyB,eAAe;wBACvC,KAAyB,gBAAgB;wBACzC,KAAyB,gBAAgB;2BACvCC,GAAS,KAAK,iBAAgB,CAAE;eAC5C,KAAK,QAAQ;iBACX;iBACA,KAAK;SACb,YAAY;;IAEnB;;;;IAKU,eAAY;AACpB,UAAI,KAAK,SAAS,QAAQ;AACxB,eAAO;;AAGT,aAAO;;;kBAGO,KAAK;IACrB;;;;IAKU,kBAAe;AACvB,UAAI,KAAK,SAAS,QAAQ;AACxB,eAAO;;AAGT,aAAO;4BACiB,KAAK;;;;IAI/B;IAEU,6BAA6BC,KAAQ;IAAG;;;;IAKxC,mBAAgB;AACxB,aAAO,EAAC,YAAY,KAAK,WAAU;IACrC;;;;IAKU,aAAU;AAClB,aAAO;;;;;;;;;IAST;IAEU,UAAO;AACf,UAAI,KAAK,aAAa,IAAI;AACxB;;AAGF,WAAK,cAAc,6BAA4B,CAAE;IACnD;IAES,QAAK;AAGZ,WAAK,cAAc,MAAK;IAC1B;;AA7KA,GAAA,MAAA;AACE,8BAA0B,UAAU;EACtC,GAAC;AAGe,aAAA,oBAAoB;IAClC,GAAGJ,GAAW;IACd,gBAAgB;;AAMwB,aAAA;IAAzC,EAAS,EAAC,MAAM,SAAS,SAAS,KAAI,CAAC;;AAMb,aAAA;IAA1B,EAAS,EAAC,SAAS,KAAI,CAAC;;AAMzB,aAAA;IADC,EAAS,EAAC,MAAM,SAAS,WAAW,gBAAgB,SAAS,KAAI,CAAC;;AAMvD,aAAA;IAAX,EAAQ;;AAMG,aAAA;IAAX,EAAQ;;AAE+B,aAAA;IAAvCC,GAAM,YAAY;;;;AC/Dd,MAAMI,WAASC;;;;ACoDf,MAAM,aAAN,MAAMC,oBAAmB,WAAQ;;AACtB,aAAA,SAA8B,CAACC,QAAM;AAD1C,eAAU,WAAA;IADtB,EAAc,cAAc;KAChB,UAAU;;;ACjCvB,MAAMC,KAAY;AAAlB,MAEMC,KAAgB,OAAOD;AAF7B,MAuHaE,KAAWC,GAjHxB,cAAgCC,GAAAA;IAG9BC,YAAYC,IAAAA;AAAAA,UAAAA;AAEV,UADAC,MAAMD,EAAAA,GAEJA,GAASE,SAASC,GAASC,aACT,YAAlBJ,GAASK,SAAAA,UACRC,MAAAN,GAASO,YAAAA,WAAAA,MAAAA,SAAAA,IAASC,UAAoB;AAEvC,cAAUC,MACR,4GAAA;IAIL;IAEDC,OAAOC,IAAAA;AACL,aAAOC,OAAOC,KAAKF,EAAAA,EAAWG,OAAO,CAACC,KAAOC,OAAAA;AAC3C,cAAMC,KAAQN,GAAUK,EAAAA;AACxB,eAAa,QAATC,KACKF,MAcFA,MAAQ,GALfC,KAAOA,GAAKE,SAAS,GAAA,IACjBF,KACAA,GACGG,QAAQ,qCAAqC,KAAA,EAC7CC,YAAAA,KACmBH;MAAQ,GACjC,EAAA;IACJ;IAEQI,OAAOC,KAAAA,CAAsBX,EAAAA,GAAAA;AACpC,YAAA,EAAMI,OAACA,GAAAA,IAASO,IAAKC;AAErB,UAAA,WAAIC,KAAKC,IAAwC;AAC/CD,aAAKC,KAA2B,oBAAIC;AACpC,mBAAWrB,MAAQM;AACjBa,eAAKC,GAAyBE,IAAItB,EAAAA;AAEpC,eAAOmB,KAAKd,OAAOC,EAAAA;MACpB;AAKDa,WAAKC,GAA0BG,QAASvB,CAAAA,OAAAA;AAEf,gBAAnBM,GAAUN,EAAAA,MACZmB,KAAKC,GAA0BI,OAAOxB,EAAAA,GAClCA,GAAKa,SAAS,GAAA,IAChBH,GAAMe,eAAezB,EAAAA,IAKpBU,GAAcV,EAAAA,IAAQ;MAE1B,CAAA;AAIH,iBAAWA,MAAQM,IAAW;AAC5B,cAAMM,MAAQN,GAAUN,EAAAA;AACxB,YAAa,QAATY,KAAe;AACjBO,eAAKC,GAAyBE,IAAItB,EAAAA;AAClC,gBAAM0B,KACa,YAAA,OAAVd,OAAsBA,IAAMe,SAASrC,EAAAA;AAC1CU,UAAAA,GAAKa,SAAS,GAAA,KAAQa,KACxBhB,GAAMkB,YACJ5B,IACA0B,KACKd,IAAiBiB,MAAM,GAAA,GAjFvB,IAkFAjB,KACLc,KAAcrC,KAAY,EAAA,IAI3BqB,GAAcV,EAAAA,IAAQY;QAE1B;MACF;AACD,aAAOkB;IACR;EAAA,CAAA;;;ACJG,WAAU,qBACd,WACA,QAAS;AAET,WAAO,IAAI,YAIR,cAAc;MACf,SAAS;MACT,UAAU;MACV,QAAQ,EAAC,WAAW,QAAQ,UAAU,CAAC,SAAS,EAAC;KAClD;EACH;AAqBO,MAAM,8BAA8B;AAarC,WAAU,iCAA8B;AAC5C,WAAO,IAAI,MAAM,wBAAwB,EAAC,SAAS,MAAM,UAAU,KAAI,CAAC;EAC1E;AAcM,WAAU,+BAA4B;AAC1C,WAAO,IAAI,MAAM,sBAAsB,EAAC,SAAS,MAAM,UAAU,KAAI,CAAC;EACxE;AAcO,MAAM,eAAe;IAC1B,IAAI;IACJ,MAAM;IACN,OAAO;IACP,MAAM;;AAOD,MAAM,eAAe;IAC1B,OAAO;IACP,OAAO;;AAOF,MAAM,cAAc;IACzB,iBAAiB;IACjB,SAAS;;AAOJ,MAAM,kBAAkB;IAC7B,QAAQ;IACR,OAAO,aAAa;IACpB,OAAO,aAAa;;AAahB,WAAU,cACd,MAAY;AAEZ,WAAO,OAAO,OAAO,eAAe,EAAE,KAAK,CAAC,UAAU,UAAU,IAAI;EACtE;AAUM,WAAU,gBACd,MAAY;AAEZ,WAAO,OAAO,OAAO,YAAY,EAAE,KAAK,CAAC,UAAU,UAAU,IAAI;EACnE;AAWM,WAAU,mBACd,QACA,WAAsB;AAItB,UAAM,UAAU,IAAI,MAAM,eAAe,EAAC,SAAS,MAAM,UAAU,KAAI,CAAC;AACxE,QAAI,eAA8B,CAAA;AAClC,UAAM,WAAW,CAAC,OAAa;AAC7B,qBAAe,GAAG,aAAY;IAChC;AAEA,cAAU,iBAAiB,eAAe,QAAQ;AAClD,WAAO,cAAc,OAAO;AAC5B,cAAU,oBAAoB,eAAe,QAAQ;AAErD,UAAM,cAAc,aAAa,SAAS;AAC1C,WAAO;EACT;AAMO,MAAM,aAAa;IACxB,MAAM;IACN,WAAW;IACX,YAAY;IACZ,WAAW;;;;AC/QN,MAAM,SAAS;IACpB,WAAW;IACX,SAAS;IACT,aAAa;IACb,WAAW;;AAiGP,MAAO,4BAAP,MAAgC;;;;;;IAgBpC,YACmB,MACA,eAAwD;AADxD,WAAA,OAAA;AACA,WAAA,gBAAA;AAhBX,WAAA,wBAAmC;QACzC,WAAW;;AAIL,WAAA,aAAkD;QACxD,QAAQ;;AAYR,WAAK,KAAK,cAAc,IAAI;IAC9B;;;;IAKA,IAAI,gBAAa;AACf,aAAO,KAAK;IACd;;;;;;;IAQA,MAAM,WAAQ;AACZ,YAAM,EACJ,WACA,UACA,cAAc,iBACd,eAAe,kBACf,aACA,SACA,SACA,mBAAkB,IAChB,KAAK,cAAa;AACtB,YAAM,eAAe,gBAAgB,YAAW,EAAG,KAAI;AACvD,YAAM,gBAAgB,iBAAiB,YAAW,EAAG,KAAI;AAEzD,UAAI,CAAC,aAAa,CAAC,UAAU;AAC3B;;AAKF,YAAM,mBAAmB,OAAO;AAChC,YAAM,oBAAoB,OAAO;AAEjC,YAAM,MAAM,SAAS,cAAc,KAAK;AACxC,UAAI,MAAM,UAAU;AACpB,UAAI,MAAM,WAAW;AACrB,UAAI,MAAM,UAAU;AACpB,UAAI,MAAM,QAAQ;AAClB,eAAS,KAAK,YAAY,GAAG;AAC7B,YAAM,oBAAoB,IAAI,sBAAqB;AACnD,UAAI,OAAM;AAIV,YAAM,uBAAuB,OAAO,cAAc,kBAAkB;AACpE,YAAM,uBAAuB,OAAO,aAAa,kBAAkB;AAInE,WAAK,wBAAwB;QAC3B,WAAW;QACX,WAAW;;AAIb,WAAK,KAAK,cAAa;AACvB,YAAM,KAAK,KAAK;AAMhB,UACG,UAA2C,WAC5C,UAAU,aACV;AACC,kBAAmD,YAAW;;AAGjE,YAAM,cAAc,UAAU,+BAC1B,UAAU,6BAA4B,IACtC,UAAU,sBAAqB;AACnC,YAAM,aAAa,SAAS,+BACxB,SAAS,6BAA4B,IACrC,SAAS,sBAAqB;AAClC,YAAM,CAAC,cAAc,aAAa,IAAI,cAAc,MAAM,GAAG;AAG7D,YAAM,CAAC,aAAa,YAAY,IAAI,aAAa,MAAM,GAAG;AAK1D,YAAM,QACJ,iBAAiB,SAAwB,EAAE,cAAc;AA0C3D,UAAI,EAAC,YAAY,4BAA4B,qBAAoB,IAC/D,KAAK,eAAe;QAClB;QACA;QACA;QACA;QACA;QACA;QACA;QACA;OACD;AAIH,UAAI,4BAA4B;AAC9B,cAAM,sBAAsB,iBAAiB,UAAU,QAAQ;AAC/D,cAAM,qBAAqB,gBAAgB,UAAU,QAAQ;AAE7D,cAAM,eAAe,KAAK,eAAe;UACvC;UACA;UACA,aAAa;UACb,cAAc;UACd;UACA;UACA;UACA;SACD;AAID,YACE,6BAA6B,aAAa,4BAC1C;AACA,uBAAa,aAAa;AAC1B,uCAA6B,aAAa;AAC1C,iCAAuB,aAAa;;;AAKxC,UAAI,EAAC,aAAa,6BAA6B,sBAAqB,IAClE,KAAK,gBAAgB;QACnB;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;OACD;AAIH,UAAI,6BAA6B;AAC/B,cAAM,uBAAuB,kBAAkB,UAAU,QAAQ;AACjE,cAAM,sBAAsB,iBAAiB,UAAU,QAAQ;AAE/D,cAAM,gBAAgB,KAAK,gBAAgB;UACzC;UACA;UACA,cAAc;UACd,eAAe;UACf;UACA;UACA;UACA;UACA;SACD;AAID,YACE,KAAK,IAAI,2BAA2B,IACpC,KAAK,IAAI,cAAc,2BAA2B,GAClD;AACA,wBAAc,cAAc;AAC5B,wCAA8B,cAAc;AAC5C,kCAAwB,cAAc;;;AAM1C,UAAI,uBAAuB,QAAQ;AACjC,qBAAa,aAAa;AAC1B,sBAAc,cAAc;;AAG9B,WAAK,wBAAwB;QAC3B,WAAW;QACX,WAAW;QACX,CAAC,oBAAoB,GAAG,GAAG;QAC3B,CAAC,qBAAqB,GAAG,GAAG;;AAK9B,UAAI,uBAAuB,UAAU;AAEnC,YAAI,4BAA4B;AAC9B,eAAK,sBAAsB,QAAQ,IAAI,GACrC,YAAY,SAAS;;AAKzB,YAAI,6BAA6B;AAC/B,eAAK,sBAAsB,OAAO,IAAI,GACpC,YAAY,QAAQ;;;AAK1B,WAAK,KAAK,cAAa;IACzB;;;;;IAMQ,eAAe,QAStB;AACC,YAAM,EACJ,aACA,YACA,aACA,cACA,SACA,aACA,mBACA,qBAAoB,IAClB;AAGJ,YAAM,mBACJ,gBAAgB,WAAW,gBAAgB,aAAa,IAAI;AAC9D,YAAM,qBAAqB,gBAAgB,aAAa,IAAI;AAC5D,YAAM,sBAAsB,iBAAiB,UAAU,IAAI;AAC3D,YAAM,oBAAoB,iBAAiB,QAAQ,IAAI;AACvD,YAAM,gBAAgB,gBAAgB,eAAe,IAAI;AAGzD,YAAM,oBAAoB,gBAAgB,WAAW,SAAS;AAE9D,YAAM,sBACJ,sBAAsB,WAAW,MACjC,qBACG,oBAAoB,WAAW,SAAS;AAC7C,YAAM,sBACJ,sBAAsB,OAAO,UAAU,oBAAoB,OAAO;AAIpE,YAAM,6BAA6B,KAAK,IACtC,KAAK,IACH,GACA,oBACE,sBACA,oBACA,YAAY,MAAM,CACrB;AAIH,YAAM,aACJ,mBAAmB,sBACnB,qBAAqB,sBACrB;AAEF,YAAM,uBACJ,iBAAiB,UAAU,sBAAsB;AAEnD,aAAO,EAAC,YAAY,4BAA4B,qBAAoB;IACtE;;;;;IAMQ,gBAAgB,QAUvB;AACC,YAAM,EACJ,OAAO,WACP,eACA,cACA,YACA,aACA,SACA,aACA,kBACA,qBAAoB,IAClB;AAGJ,YAAM,mBACJ,gBAAgB,WAAW,gBAAgB,aAAa,IAAI;AAC9D,YAAM,qBAAqB,gBAAgB,aAAa,IAAI;AAC5D,YAAM,QAAQ,YAAY,IAAI;AAC9B,YAAM,QAAQ,YAAY,IAAI;AAC9B,YAAM,uBAAuB,kBAAkB,UAAU,IAAI;AAC7D,YAAM,qBAAqB,kBAAkB,QAAQ,IAAI;AACzD,YAAM,iBAAiB,iBAAiB,gBAAgB,IAAI;AAG5D,YAAM,qBAAqB,iBAAiB,WAAW,QAAQ;AAE/D,YAAM,0BACJ,uBAAuB,WAAW,OAClC,sBACG,mBAAmB,WAAW,QAAQ;AAE3C,YAAM,0BACJ,wBACG,mBAAmB,WAAW,QAAQ,wBACzC,qBAAqB,WAAW;AAElC,YAAM,uBACJ,QAAQ,0BAA0B,QAAQ;AAG5C,YAAM,0BACJ,uBAAuB,OAAO,UAC9B,qBAAqB,OAAO;AAE9B,YAAM,0BACJ,qBAAqB,OAAO,UAC5B,uBAAuB,OAAO;AAEhC,YAAM,uBACJ,QAAQ,0BAA0B,QAAQ;AAI5C,YAAM,8BAA8B,KAAK,IACvC,KAAK,IACH,GACA,mBACE,uBACA,qBACA,YAAY,KAAK,CACpB;AAIH,YAAM,cACJ,mBAAmB,uBACnB,qBACA,qBAAqB;AAEvB,UAAI,wBACF,kBAAkB,UAAU,uBAAuB;AAIrD,UAAI,gBAAgB,cAAc,gBAAgB,SAAS;AACzD,YACG,kBAAkB,WAAW,aAC7B,kBAAkB,SAAS,CAAC,WAC7B;AACA,kCAAwB;eACnB;AACL,kCAAwB;;;AAI5B,aAAO;QACL;QACA;QACA;;IAEJ;IAEA,aAAU;AACR,WAAK,SAAQ;IACf;IAEA,cAAW;AACT,WAAK,SAAQ;IACf;;;;;;IAOQ,MAAM,WAAQ;AACpB,YAAM,QAAQ,KAAK,cAAa;AAChC,UAAI,aAAa;AACjB,iBAAW,CAAC,KAAK,KAAK,KAAK,OAAO,QAAQ,KAAK,GAAG;AAEhD,qBAAa,cAAc,UAAW,KAAK,WAAmB,GAAG;AACjE,YAAI;AAAY;;AAGlB,YAAM,cAAc,KAAK,WAAW,WAAW,MAAM;AACrD,YAAM,YAAY,CAAC,CAAC,MAAM;AAC1B,YAAM,aAAa,CAAC,CAAC,MAAM;AAE3B,UAAI,cAAc,aAAa,YAAY;AAIzC,aAAK,WAAW,SAAS,MAAM;AAE/B,YAAI,MAAM,QAAQ;AAGhB,eAAK,aAAa;AAElB,gBAAM,KAAK,SAAQ;AACnB,gBAAM,OAAM;mBACH,aAAa;AACtB,gBAAM,MAAM,YAAW;AACvB,eAAK,MAAK;AACV,gBAAM,QAAO;;;IAGnB;;;;IAKQ,QAAK;AACX,WAAK,wBAAwB;QAC3B,WAAW;;AAEb,WAAK,KAAK,cAAa;AACvB,YAAM,YAAY,KAAK,cAAa,EAAG;AAIvC,UACG,WAA6C,WAC9C,WAAW,aACX;AACC,kBAAmD,YAAW;;IAEnE;;;;ACzlBK,MAAM,mBAAmB;IAC9B,OAAO;IACP,MAAM;IACN,MAAM;;AAgCF,MAAO,sBAAP,MAA0B;;;;;;;;;;;IAgC9B,YACmB,eAAkD;AAAlD,WAAA,gBAAA;AA7BX,WAAA,mBAAsC,CAAA;AAItC,WAAA,iBAAiB;AAIjB,WAAA,yBAAyB;AAIjC,WAAA,gBAAgB;AAIhB,WAAA,mBAA2C;AA8BlC,WAAA,YAAY,CAAC,UAAwB;AAC5C,YAAI,KAAK,eAAe;AACtB,eAAK,UAAU,KAAK;eACf;AACL,eAAK,eAAe,KAAK;;MAE7B;AAyLiB,WAAA,eAAe,MAAK;AACnC,aAAK,gBAAgB;AACrB,aAAK,iBAAiB;AACtB,aAAK,mBAAmB,CAAA;MAC1B;IAnNG;IAEH,IAAY,QAAK;AACf,aAAO,KAAK,cAAa,EAAG,SAAQ;IACtC;IAEA,IAAY,SAAM;AAChB,aAAO,KAAK,cAAa,EAAG;IAC9B;;;;IAmBQ,eAAe,OAAoB;AACzC,UAAI,CAAC,KAAK,QAAQ;AAChB;;AAMF,UACE,MAAM,SAAS,WACf,MAAM,SAAS,WACf,MAAM,KAAK,WAAW,OAAO,KAC7B,MAAM,SAAS,UACf;AACA;;AAGF,WAAK,gBAAgB;AAGrB,WAAK,mBAAmB,KAAK,MAAM,IAAI,CAAC,IAAI,UAAU;QACpD;QACA;QACA,GAAG,cAAc,KAAI,EAAG,YAAW;OACpC;AACD,WAAK,mBACH,KAAK,iBAAiB,KACpB,CAAC,WAAW,OAAO,iBAAiB,IAAI,EAAE,aAAa,CAAC,KACrD;AACP,UAAI,KAAK,kBAAkB;AACzB,aAAK,iBAAiB,iBAAiB,IAAI,EAAE,WAAW;;AAE1D,WAAK,UAAU,KAAK;IACtB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAsCQ,UAAU,OAAoB;AACpC,UAAI,MAAM;AAAkB;AAC5B,mBAAa,KAAK,sBAAsB;AAGxC,UACE,MAAM,SAAS,WACf,MAAM,KAAK,WAAW,OAAO,KAC7B,MAAM,SAAS,UACf;AACA,aAAK,aAAY;AACjB,YAAI,KAAK,kBAAkB;AACzB,eAAK,iBAAiB,iBAAiB,IAAI,EAAE,WAAW;;AAE1D;;AAIF,UAAI,MAAM,SAAS,SAAS;AAC1B,cAAM,eAAc;;AAItB,WAAK,yBAAyB,WAC5B,KAAK,cACL,KAAK,cAAa,EAAG,mBAAmB;AAG1C,WAAK,kBAAkB,MAAM,IAAI,YAAW;AAE5C,YAAM,kBAAkB,KAAK,mBACzB,KAAK,iBAAiB,iBAAiB,KAAK,IAC5C;AACJ,YAAM,aAAa,KAAK,iBAAiB;AAwBzC,YAAM,sBAAsB,CAAC,WAA2B;AACtD,gBACG,OAAO,iBAAiB,KAAK,IAAI,aAAa,mBAC/C;MAEJ;AAGA,YAAM,kBAAkB,KAAK,iBAC1B,OACC,CAAC,WACC,CAAC,OAAO,iBAAiB,IAAI,EAAE,YAC/B,OAAO,iBAAiB,IAAI,EAAE,WAAW,KAAK,cAAc,CAAC,EAEhE,KAAK,CAACC,IAAGC,OAAM,oBAAoBD,EAAC,IAAI,oBAAoBC,EAAC,CAAC;AAKjE,UAAI,gBAAgB,WAAW,GAAG;AAChC,qBAAa,KAAK,sBAAsB;AACxC,YAAI,KAAK,kBAAkB;AACzB,eAAK,iBAAiB,iBAAiB,IAAI,EAAE,WAAW;;AAE1D,aAAK,aAAY;AACjB;;AAGF,YAAM,aAAa,KAAK,eAAe,WAAW;AAClD,UAAI;AAIJ,UAAI,KAAK,qBAAqB,gBAAgB,CAAC,KAAK,YAAY;AAC9D,qBAAa,gBAAgB,CAAC,KAAK,gBAAgB,CAAC;aAC/C;AACL,qBAAa,gBAAgB,CAAC;;AAGhC,UAAI,KAAK,kBAAkB;AACzB,aAAK,iBAAiB,iBAAiB,IAAI,EAAE,WAAW;;AAG1D,WAAK,mBAAmB;AACxB,iBAAW,iBAAiB,IAAI,EAAE,WAAW;AAC7C,iBAAW,iBAAiB,IAAI,EAAE,MAAK;AACvC;IACF;;;;ACvQK,MAAM,gCAAgC;AAE7C,MAAM,iBAAiB,oBAAI,IAAY;IACrC,cAAc;IACd,cAAc;IACd,cAAc;IACd,cAAc;GACf;AAED,MAAM,cAAc,oBAAI,IAAY;IAClC,cAAc;IACd,cAAc;IACd,GAAG;GACJ;AASD,WAAS,kBACP,YAAmC,UAAQ;AAE3C,QAAI,WAAW,UAAU;AAIzB,WAAO,YAAY,UAAU,YAAY,eAAe;AACtD,iBAAW,SAAS,WAAW;;AAGjC,WAAO;EACT;AAQM,MAAgB,OAAhB,cAA6BC,GAAU;;;;;IAoN3C,IAAY,gBAAa;AACvB,YAAM,kBAAkB,KAAK,WAAW,MAAM,GAAG,EAAE,CAAC;AACpD,aAAO,oBAAoB,UAAU,SAAS;IAChD;;;;;;IAyBA,IAAI,gBAAa;AACf,UAAI,KAAK,QAAQ;AACf,eAAQ,KAAK,YAAW,EAA6B,cACnD,IAAI,KAAK,QAAQ;;AAIrB,aAAO,KAAK;IACd;IAEA,IAAI,cACF,SAA8D;AAE9D,WAAK,uBAAuB;AAC5B,WAAK,cAAc,eAAe;IACpC;IAMA,cAAA;AACE,YAAK;AA3PK,WAAA,SAAS;AAuCT,WAAA,cACV;AAIyB,WAAA,QAAQ;AASmB,WAAA,cAAc;AAK1B,WAAA,OAAO;AASA,WAAA,UAAU;AAOV,WAAA,UAAU;AAM3D,WAAA,iBAAiB;AASjB,WAAA,eAAuB,OAAO;AAQQ,WAAA,aAAqB,OAAO;AAQlE,WAAA,yBAAyB;AAQzB,WAAA,qBAAqB;AAMrB,WAAA,mBAAmB;AASnB,WAAA,eAA2B,WAAW;AAQtC,WAAA,mBAAmB;AAGF,WAAA,kBAAkB;AAQnC,WAAA,YAAY;AAKJ,WAAA,cAA6B,CAAA;AAK7B,WAAA,kBAAkB;AACT,WAAA,2BAA2B,sBAAqB;AAEhD,WAAA,iBAAiB,IAAI,eAAyB;QAC7D,QAAQ,CAAC,cAAiD;AACxD,iBAAO,UAAU,aAAa,cAAc;QAC9C;QACA,kBAAkB,MAAM,KAAK;QAC7B,OAAO,MAAM,iBAAiB,IAAI,EAAE,cAAc;QAClD,gBAAgB,CAAC,SAAkB;AACjC,eAAK,WAAW;AAChB,eAAK,WAAW;QAClB;QACA,cAAc,CAAC,SAAkB;AAC/B,eAAK,WAAW;AAChB,eAAK,WAAW;QAClB;QACA,gBAAgB,CAAC,QAAe;AAC9B,cAAI,CAAC,KAAK,WAAW;AACnB,mBAAO,YAAY,IAAI,GAAG;;AAG5B,gBAAMC,SAAQ,iBAAiB,IAAI,EAAE,cAAc;AAKnD,gBAAM,YAAYA,SACd,cAAc,YACd,cAAc;AAElB,cAAI,QAAQ,WAAW;AACrB,mBAAO;;AAGT,iBAAO,eAAe,IAAI,GAAG;QAC/B;QACA,gBAAgB,MAAM,CAAC,KAAK;OAC7B;AAcO,WAAA,qBAAyC;AAKjD,WAAA,sBAAsB,IAAI,oBAAoB,MAAK;AACjD,eAAO;UACL,UAAU,MAAM,KAAK;UACrB,qBAAqB,KAAK;UAC1B,QAAQ,KAAK;;MAEjB,CAAC;AAEO,WAAA,uBAA2C;AAwBlC,WAAA;MAEd,KAAqB,gBAAe;AAmBtB,WAAA,yBAAyB,IAAI,0BAC5C,MACA,MAAK;AACH,eAAO;UACL,cAAc,KAAK;UACnB,eAAe,KAAK;UACpB,WAAW,KAAK;UAChB,UAAU,KAAK;UACf,aACE,KAAK,gBAAgB,YAAY,aAAa,KAAK;UACrD,QAAQ,KAAK;UACb,SAAS,KAAK;UACd,SAAS,KAAK;UACd,QAAQ,KAAK;UACb,aAAa,KAAK;UAClB,SAAS,KAAK;;;;;;UAMd,oBACE,KAAK,eAAe,KAAK,gBAAgB,YACrC,SACA;;MAEV,CAAC;AA8Cc,WAAA,iBAAiB,MAAK;AACrC,YACE,KAAK,mBACJ,KAAK,gBAAgB,cACpB,KAAK,gBAAgB,WACrB,KAAK,gBAAgB,WACvB;AACA;;AAEF,aAAK,kBAAkB;AACvB,aAAK,WAAU;AACf,aAAK,kBAAkB;MACzB;AAiEiB,WAAA,iBAAiB,OAAO,UAAqB;AAC5D,cAAM,WAAW,KAAK;AAItB,YACE,KAAK,sBACL,CAAC,KAAK,QACN,KAAK,YAAY,SAAS,QAAQ,GAClC;AACA;;AAGF,YAAI,MAAM,eAAe;AAKvB,cACE,mBAAmB,MAAM,eAAe,IAAI,KAC3C,KAAK,YAAY,WAAW,KAC3B,mBAAmB,MAAM,eAAe,QAAQ,GAClD;AACA;;mBAEO,KAAK,YAAY,SAAS,IAAI,GAAG;AAG1C;;AAGF,cAAM,kBAAkB,KAAK;AAE7B,aAAK,mBAAmB;AACxB,aAAK,MAAK;AAEV,cAAM,KAAK;AAEX,aAAK,mBAAmB;MAC1B;AAmBiB,WAAA,WAAW,YAAW;AACrC,aAAK,qBAAqB,kBAAiB;AAE3C,cAAM,QAAQ,KAAK;AACnB,cAAM,mBAAmB,cAAc,KAAK;AAE5C,YAAI,oBAAoB,KAAK,iBAAiB,WAAW,MAAM;AAC7D,2BAAiB,KAAK,WAAW;;AAGnC,YAAI,mBAAmB,CAAC,KAAK;AAE7B,YAAI,KAAK,OAAO;AACd,eAAK,cAAc,IAAI,MAAM,SAAS,CAAC;eAClC;AACL,6BAAmB,CAAC,CAAE,MAAM,KAAK,YAAW;;AAM9C,gBAAQ,KAAK,cAAc;UACzB,KAAK,WAAW;AACd,kBAAM,QAAQ,wBAAwB,KAAK;AAC3C,gBAAI,OAAO;AACT,oBAAM,WAAW;AACjB,oBAAM,MAAK;AACX,oBAAO,MAAgC;;AAEzC;UACF,KAAK,WAAW;AACd,kBAAM,OAAO,uBAAuB,KAAK;AACzC,gBAAI,MAAM;AACR,mBAAK,WAAW;AAChB,mBAAK,MAAK;AACV,oBAAO,KAA+B;;AAExC;UACF,KAAK,WAAW;AACd,iBAAK,MAAK;AACV;UACF;UACA,KAAK,WAAW;AAEd;;AAGJ,YAAI,CAAC,kBAAkB;AACrB,eAAK,cAAc,IAAI,MAAM,QAAQ,CAAC;;MAE1C;AAKiB,WAAA,cAAc,YAAW;AACxC,aAAK,OAAO;AAEZ,YAAI,CAAC,KAAK,kBAAkB;AAC1B,eAAK,oBAAoB,QAAO;;AAGlC,YAAI,CAAC,KAAK,OAAO;AACf,gBAAM,KAAK,aAAY;;MAE3B;AAKiB,WAAA,WAAW,MAAK;AAC/B,YAAI,KAAK,OAAO;AACd,eAAK,cAAc,IAAI,MAAM,SAAS,CAAC;AACvC,eAAK,cAAc,IAAI,MAAM,QAAQ,CAAC;;MAE1C;AA2PiB,WAAA,sBAAsB,CAAC,UAAuB;AAC7D,aAAK,cAAc,MAAM,aAAY;MACvC;AAOiB,WAAA,kBAAkB,CAAC,UAAgB;AAClD,YAAI,CAAC,KAAK,MAAM;AACd;;AAGF,cAAM,OAAO,MAAM,aAAY;AAE/B,YACE,CAAC,KAAK,0BACN,CAAC,KAAK,SAAS,IAAI,KACnB,CAAC,KAAK,SAAS,KAAK,aAAc,GAClC;AACA,eAAK,OAAO;;MAEhB;AA3jBE,UAAI,CAACC,IAAU;AACb,aAAK,UAAU,OAAO;AACtB,aAAK,iBAAiB,WAAW,KAAK,aAAa;AAInD,aAAK,iBAAiB,WAAW,KAAK,gBAAgB,EAAC,SAAS,KAAI,CAAC;AACrE,aAAK,iBAAiB,YAAY,KAAK,cAAc;;IAEzD;;;;;IAuCA,IAAI,QAAK;AACP,aAAO,KAAK,eAAe;IAC7B;IAEmB,WAAW,SAA6B;AACzD,UAAI,CAAC,QAAQ,IAAI,MAAM,GAAG;AACxB;;AAGF,UAAI,KAAK,MAAM;AACb,aAAK,gBAAgB,aAAa;AAClC;;AAGF,WAAK,aAAa,eAAe,MAAM;IACzC;IAES,OAAO,SAA6B;AAC3C,UAAI,QAAQ,IAAI,MAAM,GAAG;AACvB,YAAI,KAAK,MAAM;AACb,eAAK,0BAAyB;eACzB;AACL,eAAK,4BAA2B;;;AAKpC,UACE,QAAQ,IAAI,aAAa,KACzB,KAAK,gBAAgB;MAErB,CAAE,KAA+C,aACjD;AACA,aAAK,cAAc;;AAGrB,YAAM,OAAO,OAAO;IACtB;IAgBS,oBAAiB;AACxB,YAAM,kBAAiB;AACvB,UAAI,KAAK,MAAM;AACb,aAAK,0BAAyB;;IAElC;IAES,uBAAoB;AAC3B,YAAM,qBAAoB;AAC1B,WAAK,4BAA2B;IAClC;IAEmB,SAAM;AACvB,aAAO,KAAK,cAAa;IAC3B;;;;IAKQ,gBAAa;AACnB,aAAO;;sBAEWA,GAAS,KAAK,kBAAiB,CAAE;gBACvCA,GAAS,KAAK,uBAAuB,aAAa;kBAChD,KAAK,gBAAgB,YAAY,WAAW;UACpD,KAAK,gBAAe;;uCAES,KAAK,gBAAe;;;;IAIzD;;;;IAKQ,kBAAe;AACrB,aAAO;oBACS,KAAK;0BACC,KAAK;4BACH,KAAK;8BACH,KAAK;4BACP,KAAK;+BACF,KAAK;2BACT,KAAK;oBACZ,KAAK,eAAe;IACtC;;;;IAKQ,kBAAe;AACrB,aAAO;IACT;IAEQ,oBAAiB;AACvB,aAAO;QACL,MAAM,KAAK;QACX,OAAO,KAAK,gBAAgB;QAC5B,gBAAgB,KAAK;;IAEzB;IA2CQ,eAAe,OAAoB;AACzC,UACE,MAAM,WAAW,QACjB,CAAC,MAAM,oBACP,cAAc,MAAM,IAAI,GACxB;AACA,cAAM,eAAc;AACpB,aAAK,MAAK;;AAGZ,WAAK,oBAAoB,UAAU,KAAK;IAC1C;;;;;;;;;IA2FQ,MAAM,cAAW;AACvB,YAAM,YAAY,KAAK;AACvB,YAAM,SAAS,KAAK;AAEpB,UAAI,CAAC,aAAa,CAAC;AAAQ,eAAO;AAElC,YAAM,gBAAgB,KAAK;AAC3B,WAAK,cAAc,IAAI,MAAM,SAAS,CAAC;AAGvC,gBAAU,UAAU,OAAO,aAAa,IAAI;AAE5C,YAAM,SAAS,KAAK,yBAAyB,MAAK;AAClD,YAAM,SAAS,UAAU;AACzB,YAAM,iBAAiB,kBAAkB;AACzC,YAAM,WAAW,KAAK;AACtB,YAAM,gBAAgB;AACtB,YAAM,2BAA2B;AACjC,YAAM,wBAAwB;AAG9B,YAAM,uBACH,gBAAgB,yBAAyB,SAAS;AAErD,YAAM,yBAAyB,UAAU,QACvC,CAAC,EAAC,QAAQ,MAAK,GAAG,EAAC,QAAQ,GAAG,WAAU,CAAC,GACzC;QACE,UAAU;QACV,QAAQ,OAAO;OAChB;AAKH,YAAM,gCAAgC,OAAO,QAC3C;QACE,EAAC,WAAW,iBAAiB,eAAe,cAAc,GAAE;QAC5D,EAAC,WAAW,GAAE;SAEhB,EAAC,UAAU,eAAe,QAAQ,OAAO,WAAU,CAAC;AAGtD,YAAM,0BAA0B,UAAU,QACxC,CAAC,EAAC,SAAS,EAAC,GAAG,EAAC,SAAS,EAAC,CAAC,GAC3B,wBAAwB;AAG1B,YAAM,qBAAsD,CAAA;AAE5D,eAASC,MAAI,GAAGA,MAAI,SAAS,QAAQA,OAAK;AAExC,cAAM,mBAAmB,iBAAiB,SAAS,SAAS,IAAIA,MAAIA;AACpE,cAAM,QAAQ,SAAS,gBAAgB;AACvC,cAAM,YAAY,MAAM,QAAQ,CAAC,EAAC,SAAS,EAAC,GAAG,EAAC,SAAS,EAAC,CAAC,GAAG;UAC5D,UAAU;UACV,OAAO,sBAAsBA;SAC9B;AAID,cAAM,UAAU,OAAO,kBAAkB,IAAI;AAC7C,kBAAU,iBAAiB,UAAU,MAAK;AACxC,gBAAM,UAAU,OAAO,kBAAkB,KAAK;QAChD,CAAC;AAED,2BAAmB,KAAK,CAAC,OAAO,SAAS,CAAC;;AAG5C,UAAI,mBAAmB,CAAC,UAAkB;MAAE;AAC5C,YAAM,oBAAoB,IAAI,QAAiB,CAAC,YAAW;AACzD,2BAAmB;MACrB,CAAC;AAED,aAAO,iBAAiB,SAAS,MAAK;AACpC,+BAAuB,OAAM;AAC7B,sCAA8B,OAAM;AACpC,gCAAwB,OAAM;AAC9B,2BAAmB,QAAQ,CAAC,CAAC,OAAO,SAAS,MAAK;AAChD,gBAAM,UAAU,OAAO,kBAAkB,KAAK;AAC9C,oBAAU,OAAM;QAClB,CAAC;AAED,yBAAiB,IAAI;MACvB,CAAC;AAED,6BAAuB,iBAAiB,UAAU,MAAK;AACrD,kBAAU,UAAU,OAAO,aAAa,KAAK;AAC7C,aAAK,yBAAyB,OAAM;AACpC,yBAAiB,KAAK;MACxB,CAAC;AAED,aAAO,MAAM;IACf;;;;;;IAOQ,eAAY;AAClB,UAAI;AACJ,UAAI;AAIJ,YAAM,iBAAiB,IAAI,QAAQ,CAAC,KAAK,QAAO;AAC9C,kBAAU;AACV,iBAAS;MACX,CAAC;AAED,YAAM,YAAY,KAAK;AACvB,YAAM,SAAS,KAAK;AAEpB,UAAI,CAAC,aAAa,CAAC,QAAQ;AACzB,eAAM;AACN,eAAO;;AAGT,YAAM,gBAAgB,KAAK;AAC3B,YAAM,mBAAmB,kBAAkB;AAC3C,WAAK,cAAc,IAAI,MAAM,SAAS,CAAC;AAGvC,gBAAU,UAAU,OAAO,aAAa,IAAI;AAC5C,YAAM,SAAS,KAAK,yBAAyB,MAAK;AAClD,YAAM,SAAS,UAAU;AACzB,YAAM,WAAW,KAAK;AACtB,YAAM,gBAAgB;AACtB,YAAM,2BAA2B;AAEjC,YAAM,wBAAwB,gBAAgB;AAC9C,YAAM,wBAAwB;AAC9B,YAAM,6BAA6B;AACnC,YAAM,wBAAwB;AAI9B,YAAM,uBACH,gBAAgB,6BAA6B,yBAC9C,SAAS;AAGX,YAAM,yBAAyB,UAAU,QACvC;QACE,EAAC,QAAQ,GAAG,WAAU;QACtB,EAAC,QAAQ,GAAG,SAAS,0BAAyB;SAEhD;QACE,UAAU;QACV,QAAQ,OAAO;OAChB;AAMH,YAAM,kCAAkC,OAAO,QAC7C;QACE,EAAC,WAAW,GAAE;QACd;UACE,WAAW,mBACP,eAAe,UAAU,IAAI,8BAC7B;;SAGR,EAAC,UAAU,eAAe,QAAQ,OAAO,sBAAqB,CAAC;AAGjE,YAAM,0BAA0B,UAAU,QACxC,CAAC,EAAC,SAAS,EAAC,GAAG,EAAC,SAAS,EAAC,CAAC,GAC3B,EAAC,UAAU,0BAA0B,OAAO,sBAAqB,CAAC;AAGpE,YAAM,qBAAsD,CAAA;AAE5D,eAASA,MAAI,GAAGA,MAAI,SAAS,QAAQA,OAAK;AAGxC,cAAM,mBAAmB,mBAAmBA,MAAI,SAAS,SAAS,IAAIA;AACtE,cAAM,QAAQ,SAAS,gBAAgB;AACvC,cAAM,YAAY,MAAM,QAAQ,CAAC,EAAC,SAAS,EAAC,GAAG,EAAC,SAAS,EAAC,CAAC,GAAG;UAC5D,UAAU;UACV,OAAO,6BAA6B,sBAAsBA;SAC3D;AAID,kBAAU,iBAAiB,UAAU,MAAK;AACxC,gBAAM,UAAU,OAAO,kBAAkB,IAAI;QAC/C,CAAC;AACD,2BAAmB,KAAK,CAAC,OAAO,SAAS,CAAC;;AAG5C,aAAO,iBAAiB,SAAS,MAAK;AACpC,+BAAuB,OAAM;AAC7B,wCAAgC,OAAM;AACtC,gCAAwB,OAAM;AAC9B,2BAAmB,QAAQ,CAAC,CAAC,OAAO,SAAS,MAAK;AAChD,oBAAU,OAAM;AAChB,gBAAM,UAAU,OAAO,kBAAkB,KAAK;QAChD,CAAC;AACD,eAAM;MACR,CAAC;AAED,6BAAuB,iBAAiB,UAAU,MAAK;AACrD,kBAAU,UAAU,OAAO,aAAa,KAAK;AAC7C,2BAAmB,QAAQ,CAAC,CAAC,KAAK,MAAK;AACrC,gBAAM,UAAU,OAAO,kBAAkB,KAAK;QAChD,CAAC;AACD,aAAK,yBAAyB,OAAM;AACpC,aAAK,cAAc,IAAI,MAAM,QAAQ,CAAC;AACtC,gBAAQ,IAAI;MACd,CAAC;AAED,aAAO;IACT;IAEQ,cAAc,OAAoB;AAIxC,WAAK,cAAc,CAAA;AACnB,WAAK,eAAe,cAAc,KAAK;IACzC;IAEQ,4BAAyB;AAC/B,eAAS,iBAAiB,SAAS,KAAK,iBAAiB,EAAC,SAAS,KAAI,CAAC;AACxE,aAAO,iBAAiB,eAAe,KAAK,mBAAmB;AAC/D,eAAS,iBAAiB,UAAU,KAAK,gBAAgB,EAAC,SAAS,KAAI,CAAC;AACxE,aAAO,iBAAiB,UAAU,KAAK,gBAAgB,EAAC,SAAS,KAAI,CAAC;IACxE;IAEQ,8BAA2B;AACjC,eAAS,oBAAoB,SAAS,KAAK,iBAAiB;QAC1D,SAAS;OACV;AACD,aAAO,oBAAoB,eAAe,KAAK,mBAAmB;AAClE,eAAS,oBAAoB,UAAU,KAAK,cAAc;AAC1D,aAAO,oBAAoB,UAAU,KAAK,cAAc;IAC1D;IA2BQ,cAAW;AACjB,WAAK,MAAK;IACZ;IAEQ,kBAAkB,OAAY;AACpC,YAAM,gBAAe;AACrB,WAAK,eAAe,kBAAiB;IACvC;IAEQ,oBAAoB,OAAY;AACtC,YAAM,gBAAe;AACrB,WAAK,eAAe,oBAAoB,KAAK;IAC/C;IAEQ,0BAA0B,OAA+B;AAG/D,YAAM,gBAAe;AACrB,WAAK,kBAAkB;IACzB;IAEQ,wBAAwB,OAA6B;AAG3D,YAAM,gBAAe;AACrB,WAAK,kBAAkB;IACzB;IAEQ,yBAAyB,OAAY;AAC3C,YAAM,gBAAe;AACrB,WAAK,qBAAqB;IAC5B;IAEQ,sBAAsB,OAAY;AACxC,YAAM,gBAAe;AACrB,WAAK,qBAAqB;IAC5B;IAEA,QAAK;AACH,WAAK,OAAO;AACZ,YAAM,eAAe,KAAK;AAG1B,mBAAa,QAAQ,CAAC,SAAQ;AAC5B,aAAK,QAAO;MACd,CAAC;IACH;IAEA,OAAI;AACF,WAAK,OAAO;IACd;;;;;;;IAQA,mBAAgB;AACd,aAAO,KAAK,eAAe,iBAAgB,KAAM;IACnD;;;;;;;IAQA,uBAAoB;AAClB,aAAO,KAAK,eAAe,qBAAoB,KAAM;IACvD;;;;;;;IAQA,aAAU;AACR,UAAI,KAAK,MAAM;AACb,aAAK,uBAAuB,SAAQ;;IAExC;;AAr5BiC,aAAA;IAAhCA,GAAM,OAAO;;AACkB,aAAA;IAA/BA,GAAM,MAAM;;AASD,aAAA;IAAX,EAAQ;;AAuCG,aAAA;IAAX,EAAQ;;AAKkB,aAAA;IAA1B,EAAS,EAAC,MAAM,QAAO,CAAC;;AAS6B,aAAA;IAArD,EAAS,EAAC,MAAM,SAAS,WAAW,eAAc,CAAC;;AAKV,aAAA;IAAzC,EAAS,EAAC,MAAM,SAAS,SAAS,KAAI,CAAC;;AASS,aAAA;IAAhD,EAAS,EAAC,MAAM,QAAQ,WAAW,WAAU,CAAC;;AAOE,aAAA;IAAhD,EAAS,EAAC,MAAM,QAAQ,WAAW,WAAU,CAAC;;AAM/C,aAAA;IADC,EAAS,EAAC,MAAM,QAAQ,WAAW,kBAAiB,CAAC;;AAUtD,aAAA;IADC,EAAS,EAAC,WAAW,gBAAe,CAAC;;AASA,aAAA;IAArC,EAAS,EAAC,WAAW,cAAa,CAAC;;AAQpC,aAAA;IADC,EAAS,EAAC,MAAM,SAAS,WAAW,6BAA4B,CAAC;;AASlE,aAAA;IADC,EAAS,EAAC,MAAM,SAAS,WAAW,wBAAuB,CAAC;;AAO7D,aAAA;IADC,EAAS,EAAC,MAAM,SAAS,WAAW,qBAAoB,CAAC;;AAU1D,aAAA;IADC,EAAS,EAAC,WAAW,gBAAe,CAAC;;AAStC,aAAA;IADC,EAAS,EAAC,MAAM,SAAS,WAAW,qBAAoB,CAAC;;AAGR,aAAA;IAAjDC,GAAsB,EAAC,SAAS,KAAI,CAAC;;AACrB,aAAA;IAAhB,EAAK;;;;ACtOD,MAAMC,WAASC;;;;ACsEf,MAAM,SAAN,MAAMC,gBAAe,KAAI;;AACd,SAAA,SAA8B,CAACC,QAAM;AAD1C,WAAM,WAAA;IADlB,EAAc,SAAS;KACX,MAAM;;;ACmBb,MAAO,qBAAP,MAAyB;;;;;IAW7B,YACmB,MACjB,QAAgC;AADf,WAAA,OAAA;AAXX,WAAA,wBAAuC;AAyG/C,WAAA,UAAU,MAAK;AACb,YAAI,KAAK,KAAK;AAAU;AAExB,aAAK,KAAK,cACR,4BAA4B,KAAK,MAAM;UACrC,MAAM,YAAY;SACnB,CAAC;MAEN;AAMA,WAAA,YAAY,CAAC,UAAwB;AAEnC,YAAI,KAAK,KAAK,QAAQ,MAAM,SAAS,SAAS;AAC5C,gBAAM,qBAAqB,KAAK,sBAAqB;AACrD,cAAI,8BAA8B,mBAAmB;AACnD,+BAAmB,MAAK;;;AAI5B,YAAI,MAAM;AAAkB;AAK5B,cAAM,UAAU,MAAM;AACtB,YAAI,KAAK,KAAK,YAAY,YAAY;AAAU;AAEhD,YAAI,cAAc,OAAO,GAAG;AAC1B,gBAAM,eAAc;AACpB,eAAK,KAAK,cACR,4BAA4B,KAAK,MAAM;YACrC,MAAM,YAAY;YAClB,KAAK;WACN,CAAC;;MAGR;AAnIE,WAAK,sBAAsB,OAAO;AAClC,WAAK,4BAA4B,OAAO;AACxC,WAAK,qBAAqB,OAAO;AACjC,WAAK,wBAAwB,OAAO;AACpC,WAAK,KAAK,cAAc,IAAI;IAC9B;;;;;;;IAQA,IAAI,gBAAa;AACf,UAAI,KAAK,0BAA0B,MAAM;AACvC,eAAO,KAAK;;AAGd,YAAM,mBAAmB,KAAK,oBAAmB;AAEjD,YAAM,YAAsB,CAAA;AAC5B,uBAAiB,QAAQ,CAAC,oBAAmB;AAC3C,YAAI,gBAAgB,eAAe,gBAAgB,YAAY,KAAI,GAAI;AACrE,oBAAU,KAAK,gBAAgB,YAAY,KAAI,CAAE;;MAErD,CAAC;AAGD,UAAI,UAAU,WAAW,GAAG;AAC1B,aAAK,mBAAkB,EAAG,QAAQ,CAAC,mBAAkB;AACnD,cAAI,eAAe,eAAe,eAAe,YAAY,KAAI,GAAI;AACnE,sBAAU,KAAK,eAAe,YAAY,KAAI,CAAE;;QAEpD,CAAC;;AAKH,UAAI,UAAU,WAAW,GAAG;AAC1B,aAAK,0BAAyB,EAAG,QAAQ,CAAC,0BAAyB;AACjE,cACE,sBAAsB,eACtB,sBAAsB,YAAY,KAAI,GACtC;AACA,sBAAU,KAAK,sBAAsB,YAAY,KAAI,CAAE;;QAE3D,CAAC;;AAGH,aAAO,UAAU,KAAK,GAAG;IAC3B;;;;IAKA,IAAI,UAAO;AACT,YAAM,OAAO,KAAK,KAAK;AAEvB,cAAQ,MAAM;QACZ,KAAK;AACH,iBAAO;QACT,KAAK;AACH,iBAAO;QACT;QACA,KAAK;QACL,KAAK;AACH,iBAAO;;IAEb;;;;IAKA,IAAI,OAAI;AACN,aAAO,KAAK,KAAK,SAAS,WAAW,WAAW;IAClD;IAEA,gBAAa;AACX,WAAK,KAAK,gBAAgB,gBAAgB,IAAI;IAChD;IAEA,aAAU;AACR,UAAI,KAAK,KAAK,MAAM;AAClB,aAAK,KAAK,OAAO;;IAErB;;;;IAmDA,iBAAiB,MAAY;AAC3B,WAAK,wBAAwB;IAC/B;;;;ACzNI,MAAO,aAAP,cAA0BC,GAAU;IAA1C,cAAA;;AAc4C,WAAA,WAAW;AAKzC,WAAA,OAAqB;AAKrB,WAAA,OAAO;AAMP,WAAA,SAAuD;AAKhB,WAAA,WAAW;AAKnC,WAAA,WAAW;AAwBrB,WAAA,qBAAqB,IAAI,mBAAmB,MAAM;QACjE,qBAAqB,MAAK;AACxB,iBAAO,KAAK;QACd;QACA,2BAA2B,MAAK;AAC9B,iBAAO,KAAK;QACd;QACA,oBAAoB,MAAK;AACvB,iBAAO,KAAK;QACd;QACA,uBAAuB,MAAM,KAAK;OACnC;IA4GH;;;;;IAhIE,IAAI,gBAAa;AACf,aAAO,KAAK,mBAAmB;IACjC;IAGA,IAAI,cAAc,MAAY;AAC5B,WAAK,mBAAmB,iBAAiB,IAAI;IAC/C;IAemB,SAAM;AACvB,aAAO,KAAK,eAAe;;;YAGnB,KAAK,aAAY,KAAM,KAAK,gBAAe;;;;UAI7C,KAAK,WAAU;;KAEpB;IACH;;;;;;IAOU,eAAe,SAAgB;AACvC,YAAM,WAAW,KAAK,SAAS;AAC/B,UAAI;AACJ,cAAQ,KAAK,mBAAmB,SAAS;QACvC,KAAK;AACH,gBAAMC;AACN;QACF,KAAK;AACH,gBAAMA;AACN;QACF;QACA,KAAK;AACH,gBAAMA;AACN;;AAKJ,YAAM,SAAS,YAAY,CAAC,CAAC,KAAK,SAAS,KAAK,SAAS;AACzD,aAAOC;SACF;;mBAEU,KAAK,YAAY,CAAC,WAAW,KAAK;eACtC,KAAK,mBAAmB;qBACjB,KAAyB,aAAa;wBACnC,KAAyB,gBAAgB;uBAC1C,KAAyB,eAAe;wBACvC,KAAyB,gBAAgB;wBACzC,KAAyB,gBAAgB;2BACvCC,GAAS,KAAK,iBAAgB,CAAE;eAC5C,KAAK,QAAQ;iBACX;iBACA,KAAK,mBAAmB;mBACtB,KAAK,mBAAmB;SAClC,YAAY;;IAEnB;;;;IAKU,eAAY;AACpB,aAAO;;;kBAGO,KAAK;IACrB;;;;IAKU,kBAAe;AACvB,aAAO;;;;IAIT;;;;IAKU,mBAAgB;AACxB,aAAO;QACL,YAAY,KAAK;QACjB,YAAY,KAAK;;IAErB;;;;IAKU,aAAU;AAClB,aAAO;;;;;;;;;IAST;IAES,QAAK;AAGZ,WAAK,cAAc,MAAK;IAC1B;;AArLA,GAAA,MAAA;AACE,8BAA0B,UAAU;EACtC,GAAC;AAGe,aAAA,oBAAoB;IAClC,GAAGH,GAAW;IACd,gBAAgB;;AAMwB,aAAA;IAAzC,EAAS,EAAC,MAAM,SAAS,SAAS,KAAI,CAAC;;AAK5B,aAAA;IAAX,EAAQ;;AAKG,aAAA;IAAX,EAAQ;;AAMG,aAAA;IAAX,EAAQ;;AAK0C,aAAA;IAAlD,EAAS,EAAC,MAAM,SAAS,WAAW,YAAW,CAAC;;AAKtB,aAAA;IAA1B,EAAS,EAAC,MAAM,QAAO,CAAC;;AAEe,aAAA;IAAvCC,GAAM,YAAY;;AAGA,aAAA;IADlBG,GAAsB,EAAC,MAAM,WAAU,CAAC;;AAGtB,aAAA;IADlBA,GAAsB,EAAC,MAAM,kBAAiB,CAAC;;AAG7B,aAAA;IADlBD,GAAmB,EAAC,MAAM,GAAE,CAAC;;AAY9B,aAAA;IADC,EAAS,EAAC,WAAW,iBAAgB,CAAC;;;;ACpFlC,MAAME,WAASC;;;;AC8Bf,MAAM,aAAN,MAAMC,oBAAmB,WAAU;;AACxB,aAAA,SAA8B,CAACC,QAAM;AAD1C,eAAU,WAAA;IADtB,EAAc,cAAc;KAChB,UAAU;;;ACCjB,MAAO,UAAP,cAAuBC,GAAU;IA0BrC,IAAI,OAAI;AACN,aAAO,KAAK,MAAM,CAAC,KAAK;IAC1B;IAEA,IAAI,OAAI;AACN,aAAO,KAAK,MAAM,CAAC,KAAK;IAC1B;IAWA,cAAA;AACE,YAAK;AAvCP,WAAA,eAAuB,OAAO;AAIQ,WAAA,aAAqB,OAAO;AAIT,WAAA,iBAAiB;AAK1E,WAAA,kBAAkB;AAMlB,WAAA,YAAY;AAgBJ,WAAA,sBAAsB;AACtB,WAAA,uBAAuB;AAqKrB,WAAA,eAAe,MAAK;AAC5B,qBAAa,KAAK,mBAAmB;AACrC,qBAAa,KAAK,oBAAoB;AACtC,YAAI,KAAK,MAAM;AAAM;AAIrB,YAAI,CAAC,KAAK,gBAAgB;AACxB,eAAK,KAAI;eACJ;AACL,eAAK,sBAAsB,WAAW,MAAK;AACzC,iBAAK,KAAI;UACX,GAAG,KAAK,cAAc;;MAE1B;AAWU,WAAA,eAAe,MAAK;AAC5B,qBAAa,KAAK,oBAAoB;AACtC,qBAAa,KAAK,mBAAmB;AAIrC,YAAI,CAAC,KAAK,iBAAiB;AACzB,eAAK,MAAK;eACL;AACL,eAAK,uBAAuB,WAAW,MAAK;AAC1C,iBAAK,MAAK;UACZ,GAAG,KAAK,eAAe;;MAE3B;AAtME,UAAI,CAACC,IAAU;AACb,aAAK,iBAAiB,cAAc,KAAK,YAAY;AACrD,aAAK,iBAAiB,cAAc,KAAK,YAAY;;IAEzD;IAES,SAAM;AACb,aAAO;;;iBAGM,KAAK;mBACH,KAAK;sBACF,KAAK;;;;mBAIR,KAAK;sBACF,KAAK;sBACL,KAAK;;;IAGzB;IAEmB,eAAY;AAE7B,WAAK,aAAY;IACnB;;;;IAKA,MAAM,OAAI;AACR,YAAM,OAAO,KAAK;AAClB,UAAI,CAAC,QAAQ,KAAK;AAAM;AAUxB,WAAK,iBACH,UACA,MAAK;AACH,aAAK,KAAK,eAAe;AACzB,aAAK,cAAc,6BAA4B,CAAE;AACjD,aAAK,cAAc,2BAA0B,CAAE;AAE/C,aAAK,aAAa;MACpB,GACA,EAAC,MAAM,KAAI,CAAC;AASd,UAAI,KAAK,gBAAgB,YAAY;AACnC,aAAK,cAAc;;AAErB,WAAK,QAAQ;AAGb,WAAK,cAAc;AACnB,WAAK,eAAe,KAAK;AACzB,WAAK,aAAa,KAAK;AACvB,WAAK,gBAAgB,KAAK;AAC1B,WAAK,eAAe;AAGpB,WAAK,gBAAgB,aAAa;AAQlC,WAAK,mBAAmB;AAGxB,YAAM,kBAAkB,KAAK;AAC7B,WAAK,KAAI;AACT,WAAK,KAAK,eAAe;AACzB,WAAK,KAAK,eAAe;AACzB,UAAI,KAAK,IAAI;AACX,aAAK,KAAK,aAAa,iBAAiB,KAAK,EAAE;;AAKjD,WAAK,cAAc,2BAA0B,CAAE;AAC/C,WAAK,cAAc,+BAA8B,CAAE;AACnD,WAAK,KAAK,WAAW;AAIrB,UAAI,CAAC,iBAAiB;AACpB,YAAI,OAAO,CAAC,UAAkB;QAAE;AAChC,cAAM,SAAS,IAAI,QAAQ,CAAC,YAAW;AACrC,iBAAO;QACT,CAAC;AACD,aAAK,iBAAiB,UAAU,MAAM,EAAC,MAAM,KAAI,CAAC;AAClD,cAAM;;IAEV;;;;IAKA,MAAM,QAAK;AACT,YAAM,OAAO,KAAK;AAClB,UAAI,CAAC,QAAQ,CAAC,KAAK;AAAM;AAEzB,WAAK,cAAc,6BAA4B,CAAE;AACjD,WAAK,QAAQ;AACb,WAAK,MAAK;AACV,WAAK,cAAc,2BAA0B,CAAE;AAC/C,UAAI,QAAQ,CAAC,UAAkB;MAAE;AACjC,YAAM,SAAS,IAAI,QAAQ,CAAC,YAAW;AACrC,gBAAQ;MACV,CAAC;AACD,WAAK,iBAAiB,UAAU,OAAO,EAAC,MAAM,KAAI,CAAC;AACnD,YAAM;IACR;IAEU,eAAY;AACpB,UAAI,CAAC,KAAK,MAAM;AACd;;AAIF,WAAK,KAAK,eAAe;AACzB,WAAK,KAAK,eAAe;AACzB,UAAI,KAAK,MAAM,IAAI;AACjB,aAAK,KAAK,aAAa,iBAAiB,KAAK,KAAK,EAAE;;AAEtD,WAAK,KAAK,WAAW;AAErB,YAAM,OAAO,KAAK;AAClB,UAAI,CAAC;AAAM;AAEX,WAAK,YAAY;AAEjB,WAAK,aAAa;IACpB;IAmDU,UAAO;AACf,WAAK,KAAI;IACX;;;;IAKU,MAAM,UAAU,OAAoB;AAC5C,YAAM,oBAAoB,KAAK,iBAAiB,MAAM,IAAI;AAE1D,UAAI,MAAM;AAAkB;AAE5B,YAAM,eACJ,sBACC,aAAa,SAAS,MAAM,QAAQ,aAAa,UAAU,MAAM;AAEpE,UAAI,MAAM,SAAS,aAAa,SAAS,cAAc;AAGrD,cAAM,eAAc;AAEpB,YAAI,cAAc;AAChB,gBAAM,gBAAe;;;AAIzB,UAAI,CAAC,mBAAmB;AACtB;;AAGF,YAAM,UAAU,KAAK;AACrB,UAAI,CAAC;AAAS;AAEd,YAAM,eAAe,QAAQ;AAC7B,YAAM,uBAAuB,wBAAwB,YAAY;AAEjE,UAAI,sBAAsB;AACxB,cAAM,KAAK,KAAI;AAEf,6BAAqB,WAAW;AAChC,6BAAqB,MAAK;AAE1B;;IAEJ;IAEQ,eAAe,OAAqB;AAC1C,YAAM,EAAC,UAAU,OAAM,IAAI,MAAM;AACjC,eAAS,KAAK,KAAK,IAAI;AAEvB,WAAK,cAAc,6BAA4B,CAAE;AAGjD,UACE,OAAO,SAAS,YAAY,WAC5B,OAAO,QAAQ,gBAAgB,QAC/B;AACA,cAAM,gBAAe;AACrB,aAAK,KAAK,cAAc,6BAA4B,CAAE;AACtD;;AAGF,WAAK,cAAc,2BAA0B,CAAE;IACjD;IAEQ,MAAM,iBAAiB,OAAoB;AACjD,UAAI,MAAM;AAAkB;AAC5B,YAAM,EAAC,OAAO,aAAa,QAAO,IAAI,KAAK,kBAAkB,MAAM,IAAI;AACvE,UAAI,CAAC;AAAa;AAKlB,YAAM,eAAc;AAEpB,UAAI,YAAY,aAAa,QAAQ,YAAY,aAAa,OAAO;AAEnE,cAAM,gBAAe;;AAGvB,YAAM,KAAK,MAAK;AAEhB,2BAAqB,KAAK,KAAK,KAAK;AACpC,WAAK,MAAM,MAAK;AAChB,WAAK,KAAK,WAAW;AACrB,WAAK,KAAK,MAAK;IACjB;;;;;;;;IASQ,iBAAiB,MAAY;AACnC,YAAMC,SAAQ,iBAAiB,IAAI,EAAE,cAAc;AACnD,YAAM,gBAAgBA,SAAQ,aAAa,OAAO,aAAa;AAC/D,cAAQ,MAAM;QACZ,KAAK;QACL,KAAK,aAAa;QAClB,KAAK,aAAa;AAChB,iBAAO;QACT;AACE,iBAAO;;IAEb;;;;;;;;IASQ,kBAAkB,MAAY;AACpC,YAAMA,SAAQ,iBAAiB,IAAI,EAAE,cAAc;AACnD,YAAM,gBAAgBA,SAAQ,aAAa,QAAQ,aAAa;AAChE,cAAQ,MAAM;QACZ,KAAK;QACL,KAAK,gBAAgB;AACnB,iBAAO,EAAC,OAAO,MAAM,SAAS,KAAI;QACpC;AACE,iBAAO,EAAC,OAAO,MAAK;;IAE1B;;AA9WA,aAAA;IADC,EAAS,EAAC,WAAW,gBAAe,CAAC;;AAKA,aAAA;IAArC,EAAS,EAAC,WAAW,cAAa,CAAC;;AAIqB,aAAA;IAAxD,EAAS,EAAC,MAAM,QAAQ,WAAW,mBAAkB,CAAC;;AAKvD,aAAA;IADC,EAAS,EAAC,MAAM,QAAQ,WAAW,oBAAmB,CAAC;;AAOxD,aAAA;IADC,EAAS,EAAC,MAAM,SAAS,SAAS,MAAM,WAAW,cAAa,CAAC;;AAYjD,aAAA;IADhBC,GAAsB,EAAC,MAAM,QAAQ,SAAS,KAAI,CAAC;;AAInC,aAAA;IADhBA,GAAsB,EAAC,MAAM,QAAQ,SAAS,KAAI,CAAC;;;;ACpE/C,MAAMC,WAASC;;;;AC4Df,MAAM,YAAN,MAAMC,mBAAkB,QAAO;;AACpB,YAAA,SAA8B,CAACC,QAAM;AAD1C,cAAS,WAAA;IADrB,EAAc,aAAa;KACf,SAAS;;;ACnDhB,MAAgB,WAAhB,cAAiCC,GAAU;IAAjD,cAAA;;AAQ4B,WAAA,QAAQ;AAKR,WAAA,MAAM;AAML,WAAA,gBAAgB;AAKS,WAAA,YAAY;IA0BlE;IAxBqB,SAAM;AAEvB,YAAM,EAAC,UAAS,IAAI;AACpB,aAAO;;0BAEeC,GAAS,KAAK,iBAAgB,CAAE;;sBAEpC,aAAa;;wBAEX,KAAK;wBACL,KAAK,gBAAgB,IAAU,KAAK;WACjD,KAAK,gBAAe;;;IAG7B;IAEU,mBAAgB;AACxB,aAAO;QACL,iBAAiB,KAAK;QACtB,cAAc,KAAK;;IAEvB;;AA9CA,GAAA,MAAA;AACE,8BAA0B,QAAQ;EACpC,GAAC;AAKyB,aAAA;IAAzB,EAAS,EAAC,MAAM,OAAM,CAAC;;AAKE,aAAA;IAAzB,EAAS,EAAC,MAAM,OAAM,CAAC;;AAMG,aAAA;IAA1B,EAAS,EAAC,MAAM,QAAO,CAAC;;AAK2B,aAAA;IAAnD,EAAS,EAAC,MAAM,SAAS,WAAW,aAAY,CAAC;;;;AC3B9C,MAAO,mBAAP,cAAgC,SAAQ;IACzB,kBAAe;AAChC,UAAI,KAAK,eAAe;AACtB,eAAO,KAAK,6BAA4B;;AAG1C,aAAO,KAAK,2BAA0B;IACxC;;;IAIQ,6BAA0B;AAChC,YAAM,cAAc,IAAI,KAAK,QAAQ,KAAK,OAAO;AAGjD,aAAO;;;;;;8BAMmB;;;IAG5B;;;;;;IAOQ,+BAA4B;AAClC,aAAO;;;;;;;;IAQT;;;;AC9CK,MAAMC,WAASC;;;;ACyBf,MAAM,qBAAN,MAAMC,4BAA2B,iBAAgB;;AACtC,qBAAA,SAA8B,CAACC,QAAM;AAD1C,uBAAkB,WAAA;IAD9B,EAAc,sBAAsB;KACxB,kBAAkB;;;ACjBzB,MAAO,iBAAP,cAA8B,SAAQ;IAA5C,cAAA;;AAK4B,WAAA,SAAS;IAoCrC;;;;IA/BqB,kBAAe;AAChC,YAAM,iBAAiB;QACrB,WAAW,WACR,KAAK,gBAAgB,IAAI,KAAK,QAAQ,KAAK,OAAO;;AAIvD,YAAM,cAAc,KAAK,UAAU;AACnC,YAAM,YAAY,cAAc;AAEhC,YAAM,UAAU,KAAK,iBAAiB,CAAC,YAAY,IAAI,cAAc,KAAK;AAE1E,YAAM,YAAY;QAChB,WAAW,UAAU,UAAU;;AAKjC,YAAM,WACJ,KAAK,iBAAiB,CAAC,aAAa,eAAe,KAAK,OAAO,KAAK,SAAS,KAAK;AACpF,aAAO;kCACuB;0CACQC,GAAS,SAAS;2CACjBA,GAAS,cAAc;;;;;;;IAOhE;;AAnC0B,aAAA;IAAzB,EAAS,EAAC,MAAM,OAAM,CAAC;;;;ACbnB,MAAMC,WAASC;;;;ACwBf,MAAM,mBAAN,MAAMC,0BAAyB,eAAc;;AAClC,mBAAA,SAA8B,CAACC,QAAM;AAD1C,qBAAgB,WAAA;IAD5B,EAAc,oBAAoB;KACtB,gBAAgB;;;ACLtB,MAAM,cAAc,OAAO,aAAa;AAE/C,MAAM,qBAAqB,OAAO,oBAAoB;AACtD,MAAM,mBAAmB,OAAO,kBAAkB;AAClD,MAAM,qBAAqB,OAAO,oBAAoB;AACtD,MAAM,iBAAiB,OAAO,gBAAgB;AAkBxC,WAAU,eACd,MAAO;;AAEP,UAAe,yBAAyB,KAAI;MAA5C,cAAA;;AAiBE,aAAAC,GAAA,IAAuB;AACvB,aAAA,EAAA,IAAoC;AACpC,aAAA,EAAA,IAAuB;MAyCzB;MAxDE,KAAK,WAAW,IAAC;AACf,eAAO,KAAK,kBAAkB;MAChC;MAEA,KAAK,WAAW,EAAE,OAAc;AAC9B,YAAI,KAAK,WAAW,MAAM,OAAO;AAC/B;;AAGF,aAAK,kBAAkB,IAAI;AAC3B,aAAK,cAAc,EAAC;MACtB;MAMS,oBAAiB;AACxB,cAAM,kBAAiB;AACvB,aAAK,cAAc,EAAC;MACtB;MAES,yBACP,MACA,KACA,OAAoB;AAEpB,YAAI,SAAS,YAAY;AACvB,gBAAM,yBAAyB,MAAM,KAAK,KAAK;AAC/C;;AAGF,aAAK,cAAc,YAAY,OAAO,OAAO,EAAE,CAAC;AAChD,YAAI,KAAK,kBAAkB,GAAG;AAE5B;;AAGF,YAAI,CAAC,KAAK,aAAa,UAAU,GAAG;AAElC,eAAK,gBAAgB,IAAI;AACzB,eAAK,cAAc,EAAC;AACpB;;AAGF,aAAK,gBAAgB,IAAI,KAAK;MAChC;MAEA,EAAAA,MAnCC,oBAAkB,KAClB,kBAAgB,KAChB,oBAiCA,eAAc,IAAC;AACd,cAAM,mBAAmB,KAAK,WAAW,IAAI,IAAI;AACjD,cAAM,mBAAmB,KAAK,gBAAgB,KAAK;AAEnD,aAAK,kBAAkB,IAAI;AAC3B,aAAK,WAAW;AAChB,aAAK,kBAAkB,IAAI;MAC7B;;AAzDQ,eAAA;MADP,EAAS,EAAC,YAAY,KAAI,CAAC;;AA6D9B,WAAO;EACT;;;ACnFM,MAAO,iBAAP,cAA8B,UAA0B;IAGzC,gBAAgB,QAAuB;AACxD,UAAI,CAAC,KAAK,cAAc;AAEtB,aAAK,eAAe,SAAS,cAAc,OAAO;AAClD,aAAK,aAAa,OAAO;AAEzB,aAAK,aAAa,OAAO;;AAG3B,UAAI,aAAa;AACjB,UAAI,YAAY;AAChB,iBAAW,EAAC,SAAS,SAAQ,KAAK,QAAQ;AACxC,YAAI,UAAU;AACZ,uBAAa;;AAGf,YAAI,SAAS;AACX,sBAAY;;;AAQhB,WAAK,aAAa,UAAU;AAC5B,WAAK,aAAa,WAAW;AAC7B,aAAO;QACL,UAAU;UACR,cAAc,cAAc,CAAC;;QAE/B,mBAAmB,KAAK,aAAa;;IAEzC;IAEmB,OACjB,WACA,WAA0B;AAE1B,UAAI,UAAU,WAAW,UAAU,QAAQ;AACzC,eAAO;;AAGT,eAASC,MAAI,GAAGA,MAAI,UAAU,QAAQA,OAAK;AACzC,cAAM,OAAO,UAAUA,GAAC;AACxB,cAAM,OAAO,UAAUA,GAAC;AACxB,YAAI,KAAK,YAAY,KAAK,WAAW,KAAK,aAAa,KAAK,UAAU;AACpE,iBAAO;;;AAIX,aAAO;IACT;IAEmB,KAAK,QAAuB;AAG7C,aAAO,OAAO,IAAI,CAAC,EAAC,SAAS,SAAQ,OAAO;QAC1C;QACA;QACA;IACJ;;;;AC5CI,MAAO,4BAAP,MAAgC;;;;;IAKpC,IAAI,WAAQ;AACV,YAAM,OAAO,KAAK,KAAK,aAAa,MAAM;AAC1C,UAAI,CAAC,QAAQ,CAAC,KAAK,QAAQ,CAAC,KAAK,KAAK,aAAa;AACjD,eAAO,CAAC,KAAK,IAAI;;AAKnB,aAAO,MAAM,KACX,KAAK,KAAK,iBAAyC,UAAU,QAAQ,CAAC;IAE1E;IAKA,YAA6B,MAA4B;AAA5B,WAAA,OAAA;AAHrB,WAAA,UAAU;AACV,WAAA,OAA0B;AAyCjB,WAAA,gBAAgB,MAAK;AACpC,aAAK,UAAU;AACf,aAAK,iBAAgB;MACvB;AAEiB,WAAA,iBAAiB,MAAK;AACrC,aAAK,UAAU;AACf,aAAK,iBAAgB;MACvB;AA0CiB,WAAA,gBAAgB,CAAC,UAAwB;AACxD,cAAM,SAAS,MAAM,QAAQ;AAC7B,cAAM,OAAO,MAAM,QAAQ;AAC3B,cAAM,SAAS,MAAM,QAAQ;AAC7B,cAAM,UAAU,MAAM,QAAQ;AAE9B,YAAI,CAAC,UAAU,CAAC,WAAW,CAAC,UAAU,CAAC,MAAM;AAC3C;;AAIF,cAAM,WAAW,KAAK;AACtB,YAAI,CAAC,SAAS,QAAQ;AACpB;;AAKF,cAAM,eAAc;AAGpB,cAAMC,SAAQ,iBAAiB,KAAK,IAAI,EAAE,cAAc;AACxD,cAAM,WAAWA,SAAQ,UAAU,SAAS,WAAW;AAEvD,cAAM,YAAY,SAAS,QAAQ,KAAK,IAAI;AAC5C,YAAI,YAAY,WAAW,YAAY,IAAI,YAAY;AAGvD,eAAO,cAAc,WAAW;AAC9B,cAAI,aAAa,SAAS,QAAQ;AAEhC,wBAAY;qBACH,YAAY,GAAG;AAExB,wBAAY,SAAS,SAAS;;AAKhC,gBAAM,cAAc,SAAS,SAAS;AACtC,cAAI,YAAY,aAAa,UAAU,GAAG;AACxC,gBAAI,UAAU;AACZ;mBACK;AACL;;AAGF;;AAIF,qBAAW,WAAW,UAAU;AAC9B,gBAAI,YAAY,aAAa;AAC3B,sBAAQ,UAAU;AAClB,sBAAQ,WAAW;AACnB,sBAAQ,KAAI;;;AAKhB,sBAAY,UAAU;AACtB,sBAAY,WAAW;AACvB,sBAAY,MAAK;AAGjB,sBAAY,cAAc,IAAI,MAAM,UAAU,EAAC,SAAS,KAAI,CAAC,CAAC;AAE9D;;MAEJ;IA9J4D;IAE5D,gBAAa;AACX,WAAK,OAAO,KAAK,KAAK,YAAW;AACjC,WAAK,KAAK,iBAAiB,WAAW,KAAK,aAAa;AACxD,WAAK,KAAK,iBAAiB,WAAW,KAAK,aAAa;AACxD,WAAK,KAAK,iBAAiB,YAAY,KAAK,cAAc;AAC1D,UAAI,KAAK,KAAK,SAAS;AAGrB,aAAK,gBAAe;;AAItB,WAAK,iBAAgB;IACvB;IAEA,mBAAgB;AACd,WAAK,KAAK,oBAAoB,WAAW,KAAK,aAAa;AAC3D,WAAK,KAAK,oBAAoB,WAAW,KAAK,aAAa;AAC3D,WAAK,KAAK,oBAAoB,YAAY,KAAK,cAAc;AAE7D,WAAK,iBAAgB;AACrB,WAAK,OAAO;IACd;;;;;IAMA,sBAAmB;AACjB,UAAI,CAAC,KAAK,KAAK,SAAS;AACtB;;AAGF,WAAK,gBAAe;AACpB,WAAK,iBAAgB;IACvB;IAYQ,kBAAe;AACrB,iBAAW,WAAW,KAAK,UAAU;AACnC,YAAI,YAAY,KAAK,MAAM;AACzB,kBAAQ,UAAU;;;IAGxB;;;;IAKQ,mBAAgB;AAGtB,YAAM,WAAW,KAAK;AACtB,YAAM,iBAAiB,SAAS,KAAK,CAAC,YAAY,QAAQ,OAAO;AAEjE,UAAI,kBAAkB,KAAK,SAAS;AAClC,cAAM,YAAY,kBAAkB,KAAK;AACzC,kBAAU,WAAW;AAErB,mBAAW,WAAW,UAAU;AAC9B,cAAI,YAAY,WAAW;AACzB,oBAAQ,WAAW;;;AAGvB;;AAIF,iBAAW,WAAW,UAAU;AAC9B,gBAAQ,WAAW;;IAEvB;;;;;AC1HF,MAAM,UAAU,OAAO,SAAS;AAChC,MAAI,SAAS;AAGb,MAAM,iBAAiB,0BACrB,oBAAoB,sBAAsB,eAAeC,EAAU,CAAC,CAAC,CAAC;AAWlE,MAAO,QAAP,cAAqB,eAAc;;;;IASvC,IAAI,UAAO;AACT,aAAO,KAAK,OAAO;IACrB;IACA,IAAI,QAAQ,SAAgB;AAC1B,YAAM,aAAa,KAAK;AACxB,UAAI,eAAe,SAAS;AAC1B;;AAGF,WAAK,OAAO,IAAI;AAChB,WAAK,cAAc,WAAW,UAAU;AACxC,WAAK,oBAAoB,oBAAmB;IAC9C;IAkBA,cAAA;AACE,YAAK;AArCU,WAAA,SAAS,SAAS,EAAE;AAoBrC,WAAA,EAAA,IAAY;AAMe,WAAA,WAAW;AAK1B,WAAA,QAAQ;AAGH,WAAA,sBAAsB,IAAI,0BAA0B,IAAI;AAIvE,WAAK,cAAc,KAAK,mBAAmB;AAC3C,UAAI,CAACC,IAAU;AACb,aAAK,SAAS,EAAE,OAAO;AACvB,aAAK,iBAAiB,SAAS,KAAK,YAAY,KAAK,IAAI,CAAC;AAC1D,aAAK,iBAAiB,WAAW,KAAK,cAAc,KAAK,IAAI,CAAC;;IAElE;IAEmB,SAAM;AACvB,YAAM,UAAU,EAAC,WAAW,KAAK,QAAO;AACxC,aAAO;8BACmBA,GAAS,OAAO;;;qBAGzB;sBACC,KAAK;oDACyB;;sBAE9B,KAAK;;;;;;;;;yBASF,KAAK;;;;;;;;qBAQT,KAAK;mBACP,KAAK;sBACF,KAAK;;;IAGzB;IAEmB,UAAO;AACxB,WAAK,SAAS,EAAE,cAAc,OAAO,KAAK,OAAO;IACnD;IAEQ,MAAM,YAAY,OAAY;AACpC,UAAI,KAAK,UAAU;AACjB;;AAIF,YAAM;AACN,UAAI,MAAM,kBAAkB;AAC1B;;AAGF,UAAI,kBAAkB,KAAK,GAAG;AAC5B,aAAK,MAAK;;AAIZ,WAAK,UAAU;AACf,WAAK,cAAc,IAAI,MAAM,UAAU,EAAC,SAAS,KAAI,CAAC,CAAC;AACvD,WAAK,cACH,IAAI,WAAW,SAAS,EAAC,SAAS,MAAM,UAAU,KAAI,CAAC,CAAC;IAE5D;IAEQ,MAAM,cAAc,OAAoB;AAE9C,YAAM;AACN,UAAI,MAAM,QAAQ,OAAO,MAAM,kBAAkB;AAC/C;;AAGF,WAAK,MAAK;IACZ;IAMS,EAAA,KArGR,SAqGS,aAAY,IAAC;AACrB,aAAO,KAAK,UAAU,KAAK,QAAQ;IACrC;IAES,CAAC,YAAY,IAAC;AACrB,aAAO,OAAO,KAAK,OAAO;IAC5B;IAES,oBAAiB;AAGxB,WAAK,UAAU,KAAK,aAAa,SAAS;IAC5C;IAES,yBAAyB,OAAa;AAC7C,WAAK,UAAU,UAAU;IAC3B;IAEA,CAAC,eAAe,IAAC;AACf,aAAO,IAAI,eAAe,MAAK;AAC7B,YAAI,CAAC,KAAK,qBAAqB;AAG7B,iBAAO,CAAC,IAAI;;AAGd,eAAO,KAAK,oBAAoB;MAClC,CAAC;IACH;IAEA,CAAC,iBAAiB,IAAC;AACjB,aAAO,KAAK;IACd;;AAnJA,aAAA;IADC,EAAS,EAAC,MAAM,QAAO,CAAC;;AAqBE,aAAA;IAA1B,EAAS,EAAC,MAAM,QAAO,CAAC;;AAKb,aAAA;IAAX,EAAQ;;AAE6B,aAAA;IAArCC,GAAM,YAAY;;;;AC9Ed,MAAMC,WAASC;;;;AC4Bf,MAAM,UAAN,MAAMC,iBAAgB,MAAK;;AAChB,UAAA,SAA8B,CAACC,QAAM;AAD1C,YAAO,WAAA;IADnB,EAAc,UAAU;KACZ,OAAO;;;ACUb,MAAM,mBAAmB,OAAO,kBAAkB;AAGzD,MAAM,8BAA8B,OAAO,6BAA6B;AACxE,MAAM,4BAA4B,OAAO,2BAA2B;AACpE,MAAM,iCAAiC,OAAO,gCAAgC;AAC9E,MAAM,8BAA8B,OAAO,6BAA6B;AAkClE,WAAU,sBAEd,MAAO;;AACP,UAAe,gCACL,KAAI;;;MAuBZ,eAAe,MAAW;AACxB,cAAM,GAAG,IAAI;AAlBf,aAAAC,GAAA,IAAgC,IAAI,gBAAe;AAMnD,aAAA,EAAA,IAA8B;AAO9B,aAAA,EAAA,IAAmC;AAMjC,YAAIC,IAAU;AACZ;;AAGF,aAAK,iBACH,WACA,CAAC,iBAAgB;AAMf,cAAI,KAAK,yBAAyB,KAAK,CAAC,aAAa,WAAW;AAC9D;;AAGF,eAAK,iBACH,WACA,MAAK;AAIH,iBAAK,2BAA2B,EAAE,YAAY;UAChD,GACA,EAAC,MAAM,KAAI,CAAC;QAEhB,GACA;;;;;UAKE,SAAS;SACV;MAEL;MAES,gBAAa;AACpB,aAAK,yBAAyB,IAAI;AAClC,cAAM,QAAQ,MAAM,cAAa;AACjC,aAAK,yBAAyB,IAAI;AAClC,eAAO;MACT;MAES,iBAAc;AACrB,aAAK,8BAA8B,IAAI;AACvC,cAAM,QAAQ,MAAM,eAAc;AAElC,YAAI,OAAO;AACT,eAAK,2BAA2B,EAAE,IAAI;;AAGxC,aAAK,8BAA8B,IAAI;AACvC,eAAO;MACT;MAEA,EAAAD,MA3EC,6BAA2B,KAM3B,2BAAyB,KAOzB,gCA8DA,4BAA2B,EAAE,cAA0B;AAKtD,cAAM,cAAc,cAAc;AAClC,YAAI,aAAa;AACf;;AAGF,aAAK,gBAAgB,EAAE,YAAY;AAKnC,cAAM,8BACJ,CAAC,eAAe,cAAc;AAChC,YAAI,CAAC,6BAA6B;AAChC;;AAOF,YACE,KAAK,8BAA8B,KACnC,4BAA4B,KAAK,SAAS,EAAE,MAAM,IAAI,GACtD;AACA,eAAK,MAAK;;MAEd;MAEA,CAAC,gBAAgB,EAAE,cAA0B;AAC3C,cAAM,IAAI,MAAM,8BAA8B;MAChD;MAES,uBAAuB,MAA4B;AAE1D,YAAI,MAAM,wBAAwB;AAChC,gBAAM,uBAAuB,IAAI;;AAInC,aAAK,2BAA2B,EAAE,MAAK;AACvC,YAAI,CAAC,MAAM;AACT;;AAGF,aAAK,2BAA2B,IAAI,IAAI,gBAAe;AAOvD,mCACE,MACA,MACA,MAAK;AACH,eAAK,2BAA2B,EAAE,IAAI;QACxC,GACA,KAAK,2BAA2B,EAAE,MAAM;MAE5C;;AAGF,WAAO;EACT;AAYA,WAAS,2BACP,SACA,MACA,gBACA,SAAoB;AAEpB,UAAM,gBAAgB,qBAAqB,IAAI;AAK/C,QAAI,sBAAsB;AAC1B,QAAI;AACJ,QAAI,uBAAuB;AAC3B,kBAAc,iBACZ,UACA,MAAK;AACH,6BAAuB;AACvB,+BAAyB,IAAI,gBAAe;AAC5C,4BAAsB;AACtB,cAAQ,iBACN,WACA,MAAK;AACH,8BAAsB;MACxB,GACA;QACE,QAAQ,uBAAuB;OAChC;IAEL,GACA,EAAC,QAAQ,QAAO,CAAC;AAGnB,kBAAc,iBACZ,SACA,MAAK;AACH,6BAAuB;AACvB,8BAAwB,MAAK;AAC7B,UAAI,qBAAqB;AACvB;;AAGF,qBAAc;IAChB,GACA,EAAC,QAAQ,QAAO,CAAC;AAOnB,SAAK,iBACH,UACA,MAAK;AAGH,UAAI,sBAAsB;AACxB;;AAGF,qBAAc;IAChB,GACA;MACE,QAAQ;KACT;EAaL;AAEA,MAAM,sBAAsB,oBAAI,QAAO;AAYvC,WAAS,qBAAqB,MAAqB;AACjD,QAAI,CAAC,oBAAoB,IAAI,IAAI,GAAG;AAYlC,YAAM,QAAQ,IAAI,YAAW;AAC7B,0BAAoB,IAAI,MAAM,KAAK;AAKnC,iBAAW,cAAc,CAAC,kBAAkB,eAAe,GAAY;AACrE,cAAM,cAAc,KAAK,UAAU;AACnC,aAAK,UAAU,IAAI,WAAA;AACjB,gBAAM,cAAc,IAAI,MAAM,QAAQ,CAAC;AACvC,gBAAM,SAAS,QAAQ,MAAM,aAAa,MAAM,SAAS;AACzD,gBAAM,cAAc,IAAI,MAAM,OAAO,CAAC;AACtC,iBAAO;QACT;;;AAIJ,WAAO,oBAAoB,IAAI,IAAI;EACrC;AAWA,WAAS,4BACP,MACA,SAAoB;AAEpB,QAAI,CAAC,MAAM;AACT,aAAO;;AAGT,QAAI;AACJ,eAAW,WAAW,KAAK,UAAU;AACnC,UAAI,QAAQ,QAAQ,UAAU,GAAG;AAC/B,8BAAsB;AACtB;;;AAIJ,WAAO,wBAAwB;EACjC;;;ACnXM,MAAO,kBAAP,cAA+B,UAAsB;IAGtC,gBAAgB,OAAkB;AACnD,UAAI,CAAC,KAAK,eAAe;AAEvB,aAAK,gBAAgB,SAAS,cAAc,QAAQ;;AAGtD,QAAO,kBAAqB,MAAM,mBAAmB,KAAK,aAAa;AAEvE,WAAK,cAAc,QAAQ,MAAM;AACjC,WAAK,cAAc,WAAW,MAAM;AACpC,aAAO;QACL,UAAU,KAAK,cAAc;QAC7B,mBAAmB,KAAK,cAAc;;IAE1C;IAEmB,OAAO,MAAmB,MAAiB;AAC5D,aAAO,KAAK,UAAU,KAAK,SAAS,KAAK,aAAa,KAAK;IAC7D;IAEmB,KAAK,EAAC,OAAO,SAAQ,GAAc;AACpD,aAAO,EAAC,OAAO,SAAQ;IACzB;;;;AClCI,WAAU,iBAAiB,OAAqB;AACpD,UAAM,sBAA4C,CAAA;AAElD,aAASE,MAAI,GAAGA,MAAI,MAAM,QAAQA,OAAK;AACrC,YAAM,OAAO,MAAMA,GAAC;AACpB,UAAI,KAAK,UAAU;AACjB,4BAAoB,KAAK,CAAC,MAAMA,GAAC,CAAC;;;AAItC,WAAO;EACT;;;;ACkBA,MAAM,QAAQ,OAAO,OAAO;AAG5B,MAAM,kBAAkB,sBACtB,0BACE,oBAAoB,sBAAsBC,EAAU,CAAC,CAAC,CACvD;AAiBG,MAAgB,SAAhB,cAA+B,gBAAe;;;;;;;IAiGlD,IAAI,QAAK;AACP,aAAO,KAAK,KAAK;IACnB;IAEA,IAAI,MAAM,OAAa;AACrB,UAAIC;AAAU;AACd,WAAK,mBAAmB;AACxB,WAAK,OAAO,KAAK;IACnB;IAIA,IAAI,UAAO;AAET,aAAQ,KAAK,MAAM,SAAS,CAAA;IAC9B;;;;;;;;IAUA,IAAI,gBAAa;AAEf,YAAM,CAAC,SAAS,KAAK,KAAK,KAAK,mBAAkB,KAAM,CAAA,GAAI,CAAC,KAAK,CAAA;AACjE,aAAO,SAAS;IAClB;IAEA,IAAI,cAAc,OAAa;AAC7B,WAAK,2BAA2B;AAChC,WAAK,YAAY,KAAK;IACxB;;;;;;IAOA,IAAI,kBAAe;AACjB,cAAQ,KAAK,mBAAkB,KAAM,CAAA,GAAI,IAAI,CAAC,CAAC,MAAM,MAAM,MAAM;IACnE;IAiCA,IAAY,WAAQ;AAClB,aAAO,KAAK,SAAS,KAAK;IAC5B;IAeA,cAAA;AACE,YAAK;AAjLoB,WAAA,QAAQ;AAKR,WAAA,WAAW;AAUa,WAAA,YAAY;AAKnD,WAAA,QAAQ;AAMoC,WAAA,iBAAiB;AAQ/B,WAAA,QAAQ;AAUlD,WAAA,kBAAoD;AAMpD,WAAA,iBAAiB;AAOjB,WAAA,iBAAiB;AAMjB,WAAA,iBAAiB;AAKsB,WAAA,cAAc;AAMhB,WAAA,YAA6B;AAmBlE,WAAAC,GAAA,IAAU;AAwCF,WAAA,mBAAkC;AAMlC,WAAA,2BAA0C;AAK1C,WAAA,qBAA0C;AAG1C,WAAA,4BAAkD,CAAA;AAKzC,WAAA,cAAc;AAMd,WAAA,kBAAkB;AAKlB,WAAA,UAAU;AACV,WAAA,OAAO;AACP,WAAA,eAA2B,WAAW;AAQ/C,WAAA,WAAW,KAAK;AAChB,WAAA,cAAc;AAIpB,UAAID,IAAU;AACZ;;AAGF,WAAK,iBAAiB,SAAS,KAAK,YAAY,KAAK,IAAI,CAAC;AAC1D,WAAK,iBAAiB,QAAQ,KAAK,WAAW,KAAK,IAAI,CAAC;IAC1D;;;;;IAMA,OAAO,OAAa;AAClB,YAAM,iBAAiB,KAAK,QAAQ,KAClC,CAAC,WAAW,OAAO,UAAU,KAAK;AAEpC,UAAI,gBAAgB;AAClB,aAAK,WAAW,cAAc;;IAElC;;;;;IAMA,YAAY,OAAa;AACvB,YAAM,iBAAiB,KAAK,QAAQ,KAAK;AACzC,UAAI,gBAAgB;AAClB,aAAK,WAAW,cAAc;;IAElC;;;;IAKA,QAAK;AACH,iBAAW,UAAU,KAAK,SAAS;AACjC,eAAO,WAAW,OAAO,aAAa,UAAU;;AAGlD,WAAK,0BAAyB;AAC9B,WAAK,cAAc;AACnB,WAAK,kBAAkB;IACzB;IAEA,EAAAC,MAlIC,OAkIA,iBAAgB,EAAE,cAA0B;AAE3C,oBAAc,eAAc;AAE5B,YAAM,cAAc,KAAK,aAAY;AACrC,WAAK,cAAc,CAAC,CAAC;AACrB,WAAK,kBAAkB,KAAK;AAE5B,UAAI,gBAAgB,KAAK,aAAY,GAAI;AACvC,aAAK,OAAO,gBAAe;;IAE/B;IAEmB,OAAO,SAA+B;AAGvD,UAAI,CAAC,KAAK,YAAY;AACpB,aAAK,kBAAiB;;AAQxB,UAAI,KAAK,aAAa,KAAK,QAAQ,KAAK,MAAM;AAC5C,cAAM,aAAa,KAAK,sBAAqB;AAC7C,aAAK,cAAc,WAAW;;AAGhC,WAAK,WAAW,KAAK;AACrB,YAAM,OAAO,OAAO;IACtB;IAEmB,SAAM;AACvB,aAAO;;wBAEaD,GAAS,KAAK,iBAAgB,CAAE;oBACpC,KAAK;UACf,KAAK,YAAW,KAAM,KAAK,WAAU;;;IAG7C;IAEmB,MAAM,aAAa,SAA+B;AACnE,YAAM,KAAK,MAAM;AAEjB,UAAI,CAAC,KAAK,0BAA0B,QAAQ;AAC1C,aAAK,kBAAiB;;AAKxB,UACE,CAAC,KAAK,0BAA0B,UAChC,CAACA,MACD,CAAC,KAAK,QAAQ,QACd;AACA,mBAAW,MAAK;AACd,eAAK,0BAAyB;QAChC,CAAC;;AAGH,YAAM,aAAa,OAAO;IAC5B;IAEQ,mBAAgB;AACtB,aAAO;QACL,YAAY,KAAK;QACjB,SAAS,KAAK;QACd,QAAQ,KAAK;;IAEjB;IAEQ,cAAW;AACjB,aAAOE;SACF,KAAK;;;;;qBAKO,KAAK,WAAW,OAAO;uBACpB,KAAyB,aAAa;;0BAEpC,KAAK,OAAO,SAAS;;;kBAG7B,KAAK;qBACF,KAAK,WAAW,KAAK;uBACnB,CAAC,CAAC,KAAK;sBACR,KAAK;sBACL,KAAK;mBACR,KAAK;uBACD,KAAK;;4BAEA,KAAK;uBACV,KAAK,aAAY;qBACnB,KAAK;mBACP,KAAK;WACb,KAAK,mBAAkB;;UAExB,KAAK;IACb;IAEQ,qBAAkB;AACxB,aAAO;QACL,KAAK,kBAAiB;QACtB,KAAK,YAAW;QAChB,KAAK,mBAAkB;;IAE3B;IAEQ,oBAAiB;AACvB,aAAO;;gDAEqC,KAAK;;;IAGnD;IAEQ,qBAAkB;AACxB,aAAO;;iDAEsC,KAAK;;;;;;;;;;;;;;;;IAgBpD;IAEQ,cAAW;AAGjB,aAAO,oBAAuB,KAAK,eAAe;IACpD;IAEQ,aAAU;AAChB,YAAM,YAAY,KAAK,SAAU,KAAyB;AAC1D,aAAO;;;wBAGa,KAAK;;;qBAGR,aAAa;;;;;gBAKlBF,GAAS;QACf,sBAAsB,GAAG,KAAK;QAC9B,sBAAsB,KAAK,iBACvB,GAAG,KAAK,kBACR;OACL;;gBAEO,KAAK;iBACJ,KAAK;uBACC,KAAK;0BACF,KAAK;wBACP,KAAK,cAAc,UAAU,cAAc;sBAC7C,KAAK,cAAc,UAAU,gBAAgB;mBAChD,KAAK;kBACN,KAAK;mBACJ,KAAK;kBACN,KAAK;sBACD,KAAK;6BACE,KAAK;+BACH,KAAK;UAC1B,KAAK,kBAAiB;;;IAG9B;IAEQ,oBAAiB;AACvB,aAAO;IACT;;;;;IAMQ,cAAc,OAAoB;AACxC,UAAI,KAAK,QAAQ,KAAK,YAAY,CAAC,KAAK,MAAM;AAC5C;;AAGF,YAAM,sBAAsB,KAAK,KAAK;AACtC,YAAM,YACJ,MAAM,SAAS,WACf,MAAM,SAAS,eACf,MAAM,SAAS,aACf,MAAM,SAAS,SACf,MAAM,SAAS,UACf,MAAM,SAAS;AAIjB,UAAI,CAAC,oBAAoB,iBAAiB,WAAW;AACnD,cAAM,eAAc;AACpB,aAAK,OAAO;AAGZ,gBAAQ,MAAM,MAAM;UAClB,KAAK;UACL,KAAK;UACL,KAAK;AAEH,iBAAK,eAAe,WAAW;AAC/B;UACF,KAAK;AACH,iBAAK,eAAe,WAAW;AAC/B;UACF,KAAK;UACL,KAAK;AACH,iBAAK,eAAe,WAAW;AAC/B;UACF;AACE;;AAEJ;;AAGF,YAAM,iBAAiB,MAAM,IAAI,WAAW;AAI5C,UAAI,gBAAgB;AAClB,4BAAoB,UAAU,KAAK;AACnC,cAAM,eAAc;AAEpB,cAAM,EAAC,iBAAgB,IAAI;AAE3B,YAAI,CAAC,kBAAkB;AACrB;;AAGF,aAAK,SAAS,eAAe,aAAa,QAAQ;AAClD,cAAM,aAAa,KAAK,WACtB,iBAAiB,iBAAiB,IAAI,CAAiB;AAGzD,YAAI,YAAY;AACd,eAAK,0BAAyB;;;IAGpC;IAEQ,cAAW;AACjB,WAAK,OAAO,CAAC,KAAK;IACpB;IAEQ,cAAW;AACjB,WAAK,UAAU;IACjB;IAEQ,aAAU;AAChB,WAAK,UAAU;IACjB;;;;IAKQ,eAAe,OAAiB;AAGtC,UAAI,MAAM,iBAAiB,mBAAmB,MAAM,eAAe,IAAI,GAAG;AACxE;;AAGF,WAAK,OAAO;IACd;;;;;;IAOQ,qBAAkB;AACxB,UAAI,CAAC,KAAK,MAAM;AACd,aAAK,4BAA4B,CAAA;AACjC,eAAO;;AAGT,YAAM,QAAQ,KAAK,KAAK;AACxB,WAAK,4BAA4B,iBAAiB,KAAK;AACvD,aAAO,KAAK;IACd;IAES,MAAM,oBAAiB;AAC9B,YAAM,KAAK,MAAM;AACjB,aAAO,MAAM,kBAAiB;IAChC;;;;;;;IAQQ,4BAAyB;AAC/B,YAAM,kBAAkB,KAAK,mBAAkB,KAAM,CAAA;AAIrD,UAAI,2BAA2B;AAE/B,UAAI,gBAAgB,QAAQ;AAC1B,cAAM,CAAC,mBAAmB,IAAI,gBAAgB,CAAC;AAC/C,mCACE,KAAK,uBAAuB;AAC9B,aAAK,qBAAqB;AAC1B,aAAK,KAAK,IAAI,oBAAoB;AAClC,aAAK,cAAc,oBAAoB;aAClC;AACL,mCAA2B,KAAK,uBAAuB;AACvD,aAAK,qBAAqB;AAC1B,aAAK,KAAK,IAAI;AACd,aAAK,cAAc;;AAGrB,aAAO;IACT;;;;;IAMQ,MAAM,cAAcG,KAAQ;AAClC,WAAK,SAAS,kBAAkB,WAAW;AAC3C,WAAK,gBAAgBA,GAAC;AAItB,UAAI,KAAK,iBAAiB,WAAW,MAAM;AACzC;;AAGF,YAAM,QAAQ,KAAK,KAAM;AACzB,YAAM,aAAa,cAAc,KAAK,GAAG;AACzC,UAAI,CAAC,YAAY,IAAI,KAAK,0BAA0B,CAAC,KAAK,CAAC,IAAI;AAK/D,UAAI,cAAc,eAAe,cAAc;AAC7C,mBAAW,WAAW;;AAIxB,qBAAe,gBAAgB,MAAM,CAAC;AAEtC,UAAI,cAAc;AAChB,qBAAa,WAAW;AACxB,qBAAa,MAAK;;IAEtB;IAEQ,gBAAgBA,KAAQ;AAC9B,sBAAgB,MAAMA,GAAC;IACzB;IAEQ,aAAaA,KAAQ;AAC3B,WAAK,OAAO;AACZ,WAAK,gBAAgBA,GAAC;IACxB;;;;IAKQ,gBAAgB,OAAqB;AAC3C,YAAM,SAAS,MAAM,OAAO;AAC5B,YAAM,OAAO,MAAM,OAAO,SAAS,CAAC;AACpC,WAAK,OAAO;AACZ,UAAI,aAAa;AAEjB,UAAI,OAAO,SAAS,mBAAmB;AACrC,qBAAa,KAAK,WAAW,IAAI;iBACxB,OAAO,SAAS,aAAa,gBAAgB,OAAO,GAAG,GAAG;AACnE,qBAAa,KAAK,WAAW,IAAI;aAC5B;AAEL,aAAK,WAAW;AAChB,aAAK,KAAI;;AAKX,UAAI,YAAY;AACd,aAAK,0BAAyB;;IAElC;;;;;;IAOQ,WAAW,MAAkB;AACnC,YAAM,kBAAkB,KAAK,mBAAkB,KAAM,CAAA;AACrD,sBAAgB,QAAQ,CAAC,CAAC,MAAM,MAAK;AACnC,YAAI,SAAS,QAAQ;AACnB,iBAAO,WAAW;;MAEtB,CAAC;AACD,WAAK,WAAW;AAEhB,aAAO,KAAK,0BAAyB;IACvC;;;;;IAMQ,uBACN,OAAqD;AAErD,YAAM,qBAAqB,MAAM;AAGjC,UACE,KAAK,0BAA0B,KAC7B,CAAC,CAAC,MAAM,MAAM,WAAW,kBAAkB,GAE7C;AACA;;AAGF,WAAK,WAAW,kBAAkB;IACpC;;;;;IAMQ,yBACN,OAAuD;AAEvD,YAAM,qBAAqB,MAAM;AAGjC,UACE,CAAC,KAAK,0BAA0B,KAC9B,CAAC,CAAC,MAAM,MAAM,WAAW,kBAAkB,GAE7C;AACA;;AAGF,WAAK,0BAAyB;IAChC;;;;;IAMQ,oBAAiB;AAEvB,UAAI,KAAK,oBAAoB,CAAC,KAAK,0BAA0B,QAAQ;AACnE,aAAK,OAAO,KAAK,gBAAgB;iBAKjC,KAAK,6BAA6B,QAClC,CAAC,KAAK,0BAA0B,QAChC;AACA,aAAK,YAAY,KAAK,wBAAwB;aAGzC;AACL,aAAK,0BAAyB;;IAElC;IAEQ,mBAAgB;AACtB,WAAK,iBAAiB,KAAK,aAAa,SAAS;IACnD;;;;IAKQ,4BAAyB;AAC/B,WAAK,cAAc,IAAI,MAAM,SAAS,EAAC,SAAS,MAAM,UAAU,KAAI,CAAC,CAAC;AACtE,WAAK,cAAc,IAAI,MAAM,UAAU,EAAC,SAAS,KAAI,CAAC,CAAC;IACzD;IAEQ,eAAY;AAClB,aAAO,KAAK,QAAQ,KAAK,YAAY,KAAK;IAC5C;IAMS,CAAC,YAAY,IAAC;AACrB,aAAO,KAAK;IACd;IAES,oBAAiB;AACxB,WAAK,MAAK;IACZ;IAES,yBAAyB,OAAa;AAC7C,WAAK,QAAQ;IACf;IAEA,CAAC,eAAe,IAAC;AACf,aAAO,IAAI,gBAAgB,MAAM,IAAI;IACvC;IAEA,CAAC,iBAAiB,IAAC;AACjB,aAAO,KAAK;IACd;;AAxvBA,GAAA,MAAA;AACE,8BAA0B,MAAM;EAClC,GAAC;AAGe,SAAA,oBAAoB;IAClC,GAAGJ,GAAW;IACd,gBAAgB;;AAMS,aAAA;IAA1B,EAAS,EAAC,MAAM,QAAO,CAAC;;AAKE,aAAA;IAA1B,EAAS,EAAC,MAAM,QAAO,CAAC;;AAU0B,aAAA;IAAlD,EAAS,EAAC,MAAM,QAAQ,WAAW,aAAY,CAAC;;AAKrC,aAAA;IAAX,EAAQ;;AAM+C,aAAA;IAAvD,EAAS,EAAC,MAAM,QAAQ,WAAW,kBAAiB,CAAC;;AAQZ,aAAA;IAAzC,EAAS,EAAC,MAAM,SAAS,SAAS,KAAI,CAAC;;AAUxC,aAAA;IADC,EAAS,EAAC,WAAW,mBAAkB,CAAC;;AAOzC,aAAA;IADC,EAAS,EAAC,MAAM,SAAS,WAAW,mBAAkB,CAAC;;AAQxD,aAAA;IADC,EAAS,EAAC,MAAM,QAAQ,WAAW,kBAAiB,CAAC;;AAOtD,aAAA;IADC,EAAS,EAAC,MAAM,SAAS,WAAW,mBAAkB,CAAC;;AAMjB,aAAA;IAAtC,EAAS,EAAC,WAAW,eAAc,CAAC;;AAMA,aAAA;IAApC,EAAS,EAAC,WAAW,aAAY,CAAC;;AASnC,aAAA;IADC,EAAQ;;AA0BT,aAAA;IADC,EAAS,EAAC,MAAM,QAAQ,WAAW,iBAAgB,CAAC;;AA6CpC,aAAA;IAAhB,EAAK;;AAMW,aAAA;IAAhB,EAAK;;AAKW,aAAA;IAAhB,EAAK;;AACW,aAAA;IAAhB,EAAK;;AACW,aAAA;IAAhB,EAAK;;AAC4B,aAAA;IAAjCK,GAAM,QAAQ;;AACoB,aAAA;IAAlCA,GAAM,SAAS;;AACkB,aAAA;IAAjCA,GAAM,QAAQ;;AAEE,aAAA;IADhBD,GAAsB,EAAC,MAAM,gBAAgB,SAAS,KAAI,CAAC;;;;AClPxD,MAAgB,eAAhB,cAAqC,OAAM;IAAjD,cAAA;;AACqB,WAAA,WAAWE;IAChC;;;;ACRO,MAAMC,WAASC;;;;ACAf,MAAMC,WAASC;;;;ACwCf,MAAM,iBAAN,MAAMC,wBAAuB,aAAY;;AAC9B,iBAAA,SAA8B,CAACC,UAAcA,QAAM;AADxD,mBAAc,WAAA;IAD1B,EAAc,kBAAkB;KACpB,cAAc;;;AClCrB,MAAgB,iBAAhB,cAAuC,OAAM;IAAnD,cAAA;;AACqB,WAAA,WAAWC;IAChC;;;;ACRO,MAAMC,WAASC;;;;ACwCf,MAAM,mBAAN,MAAMC,0BAAyB,eAAc;;AAClC,mBAAA,SAA8B,CAACC,UAAcA,QAAM;AADxD,qBAAgB,WAAA;IAD5B,EAAc,oBAAoB;KACtB,gBAAgB;;;AC7BvB,WAAU,8BAA2B;AACzC,WAAO,IAAI,MAAM,qBAAqB;MACpC,SAAS;MACT,UAAU;KACX;EACH;AAMM,WAAU,gCAA6B;AAC3C,WAAO,IAAI,MAAM,uBAAuB;MACtC,SAAS;MACT,UAAU;KACX;EACH;AAWM,MAAO,yBAAP,MAA6B;;;;IASjC,IAAI,OAAI;AACN,aAAO,KAAK,mBAAmB;IACjC;;;;;;;IAQA,IAAI,gBAAa;AACf,aAAO,KAAK,mBAAmB;IACjC;IAEA,iBAAiB,MAAY;AAC3B,WAAK,mBAAmB,iBAAiB,IAAI;IAC/C;;;;;;;;IASA,IAAI,cAAW;AACb,UAAI,KAAK,wBAAwB,MAAM;AACrC,eAAO,KAAK;;AAGd,aAAO,KAAK,mBAAmB;IACjC;IAEA,eAAe,MAAY;AACzB,WAAK,sBAAsB;IAC7B;;;;;IAMA,YACmB,MACjB,QAA0B;AADT,WAAA,OAAA;AAjDX,WAAA,sBAAqC;AACrC,WAAA,eAAe,KAAK,KAAK;AACzB,WAAA,cAAc;AAkFtB,WAAA,UAAU,MAAK;AACb,aAAK,mBAAmB,QAAO;MACjC;AAMA,WAAA,YAAY,CAACC,QAAoB;AAC/B,aAAK,mBAAmB,UAAUA,GAAC;MACrC;AA1CE,WAAK,qBAAqB,IAAI,mBAAmB,MAAM,MAAM;AAC7D,WAAK,cAAc,IAAI;IACzB;IAEA,aAAU;AACR,UAAI,KAAK,iBAAiB,KAAK,KAAK,UAAU;AAC5C,aAAK,KAAK,eAAe,KAAK,KAAK,WAAW,SAAS;;IAE3D;IAEA,cAAW;AAET,UAAI,KAAK,iBAAiB,KAAK,KAAK,YAAY,CAAC,KAAK,aAAa;AAKjE,YAAI,KAAK,KAAK,UAAU;AACtB,eAAK,KAAK,cAAc,4BAA2B,CAAE;eAChD;AACL,eAAK,KAAK,cAAc,8BAA6B,CAAE;;;AAI3D,WAAK,eAAe,KAAK,KAAK;AAC9B,WAAK,cAAc;IACrB;;;;ACjEI,MAAO,iBAAP,cAA8BC,GAAU;IAA9C,cAAA;;AAc4C,WAAA,WAAW;AAMrD,WAAA,aAAa;AAKc,WAAA,WAAW;AAI1B,WAAA,QAAQ;AAWpB,WAAA,OAAO;AA4BU,WAAA,yBAAyB,IAAI,uBAAuB,MAAM;QACzE,qBAAqB,MAAK;AACxB,iBAAO,KAAK;QACd;QACA,2BAA2B,MAAK;AAC9B,iBAAO,KAAK;QACd;QACA,oBAAoB,MAAK;AACvB,iBAAO,KAAK;QACd;QACA,uBAAuB,MAAM,KAAK;OACnC;IAyFH;;;;;IA1HE,IAAI,gBAAa;AACf,aAAO,KAAK,uBAAuB;IACrC;IAGA,IAAI,cAAc,MAAY;AAC5B,WAAK,uBAAuB,iBAAiB,IAAI;IACnD;;;;;IAMA,IAAI,cAAW;AACb,aAAO,KAAK,uBAAuB;IACrC;IAGA,IAAI,YAAY,MAAY;AAC1B,WAAK,uBAAuB,eAAe,IAAI;IACjD;IAemB,SAAM;AACvB,aAAO,KAAK,eAAe;;;YAGnB,KAAK,aAAY,KAAM,KAAK,gBAAe;;;;UAI7C,KAAK,WAAU;;KAEpB;IACH;;;;;;IAOU,eAAe,SAAgB;AACvC,aAAO;;;mBAGQ,KAAK,WAAW,KAAK;eACzB,KAAK,uBAAuB;qBACrB,KAAyB,aAAa;wBACnC,KAAyB,gBAAgB;uBAC1C,KAAyB,eAAe;wBACvC,KAAyB,gBAAgB;wBACzC,KAAyB,gBAAgB;2BACvCC,GAAS,KAAK,iBAAgB,CAAE;iBAC1C,KAAK,uBAAuB;mBAC1B,KAAK,uBAAuB;WACpC;;;IAGT;;;;IAKU,eAAY;AACpB,aAAO;;;kBAGO,KAAK;IACrB;;;;IAKU,kBAAe;AACvB,aAAO;;;;IAIT;;;;IAKU,mBAAgB;AACxB,aAAO;QACL,YAAY,KAAK;QACjB,YAAY,KAAK;;IAErB;;;;IAKU,aAAU;AAClB,aAAO;;;;;;;;;IAST;IAES,QAAK;AAGZ,WAAK,cAAc,MAAK;IAC1B;;AAtKA,GAAA,MAAA;AACE,8BAA0B,cAAc;EAC1C,GAAC;AAGe,iBAAA,oBAAoB;IAClC,GAAGD,GAAW;IACd,gBAAgB;;AAMwB,aAAA;IAAzC,EAAS,EAAC,MAAM,SAAS,SAAS,KAAI,CAAC;;AAMxC,aAAA;IADC,EAAS,EAAC,MAAM,SAAS,WAAW,gBAAgB,SAAS,KAAI,CAAC;;AAMxC,aAAA;IAA1B,EAAS,EAAC,MAAM,QAAO,CAAC;;AAIb,aAAA;IAAX,EAAQ;;AAE+B,aAAA;IAAvCE,GAAM,YAAY;;AAGA,aAAA;IADlBC,GAAsB,EAAC,MAAM,WAAU,CAAC;;AAGtB,aAAA;IADlBA,GAAsB,EAAC,MAAM,kBAAiB,CAAC;;AAG7B,aAAA;IADlBF,GAAmB,EAAC,MAAM,GAAE,CAAC;;AAc9B,aAAA;IADC,EAAS,EAAC,WAAW,iBAAgB,CAAC;;AAcvC,aAAA;IADC,EAAS,EAAC,WAAW,eAAc,CAAC;;;;ACvEhC,MAAM,iBAAN,MAAMG,wBAAuB,eAAc;;AAChC,iBAAA,SAA8B,CAACC,QAAM;AAD1C,mBAAc,WAAA;IAD1B,EAAc,kBAAkB;KACpB,cAAc;;;AC7CpB,MAAMC,WAASC;;;;WC+BNC,GACdC,KACAC,KACAC,IAAAA;AAEA,WAAOF,MAAYC,IAAAA,IAAaC,QAAAA,KAAAA,SAAAA,GAAAA;EAClC;;;ACVA,MAAM,kBAAkB,oBAAoB,sBAAsBC,EAAU,CAAC;AAavE,MAAO,SAAP,cAAsB,gBAAe;;;;;;IAyGzC,IAAI,YAAS;AACX,aAAO,KAAK,aAAa,YAAY,KAAK,KAAK;IACjD;IACA,IAAI,UAAU,MAAY;AACxB,WAAK,aAAa,cAAc,IAAI;IACtC;;;;;;IAOA,IAAI,UAAO;AACT,aAAO,KAAK,aAAa,UAAU,KAAK,KAAK;IAC/C;IACA,IAAI,QAAQ,MAAY;AACtB,WAAK,aAAa,YAAY,IAAI;IACpC;;;IA0BA,IAAY,uBAAoB;AAE9B,YAAM,EAAC,UAAS,IAAI;AACpB,aACE,KAAK,kBACJ,aAAa,GAAG,qBACjB,KAAK,mBACL,OAAO,KAAK,UAAU;IAE1B;IAEA,IAAY,2BAAwB;AAClC,aACE,KAAK,sBAAsB,KAAK,mBAAmB,OAAO,KAAK,UAAU;IAE7E;;;;IAKA,IAAY,qBAAkB;AAE5B,YAAM,EAAC,UAAS,IAAI;AACpB,UAAI,KAAK,OAAO;AACd,eACE,KAAK,gBACJ,aAAa,GAAG,mBACjB,KAAK,iBACL,OAAO,KAAK,QAAQ;;AAIxB,aAAO,aAAa,KAAK,cAAc,OAAO,KAAK,KAAK;IAC1D;IAEA,IAAY,yBAAsB;AAChC,UAAI,KAAK,OAAO;AACd,eACE,KAAK,oBAAoB,KAAK,iBAAiB,OAAO,KAAK,QAAQ;;AAKvE,YAAM,EAAC,cAAa,IAAI;AACxB,aAAO,iBAAiB,KAAK,cAAc,OAAO,KAAK,KAAK;IAC9D;IAUA,cAAA;AACE,YAAK;AA9LmB,WAAA,MAAM;AAKN,WAAA,MAAM;AAqBM,WAAA,aAAa;AAMP,WAAA,kBAAkB;AAMpB,WAAA,gBAAgB;AAMf,WAAA,iBAAiB;AAMb,WAAA,qBAAqB;AAM3B,WAAA,eAAe;AAMX,WAAA,mBAAmB;AAKtC,WAAA,OAAO;AAKN,WAAA,QAAQ;AAKR,WAAA,UAAU;AAOV,WAAA,QAAQ;AAuClB,WAAA,mBAAmB;AACnB,WAAA,iBAAiB;AAEjB,WAAA,aAAa;AACb,WAAA,qBAAqB;AAuD9B,WAAA,kBAAkB;AAGlB,WAAA,uBAAuB;AAM7B,UAAI,CAACC,IAAU;AACb,aAAK,iBAAiB,SAAS,CAAC,UAAqB;AACnD,cAAI,CAAC,kBAAkB,KAAK,KAAK,CAAC,KAAK,UAAU;AAC/C;;AAEF,eAAK,MAAK;AACV,kCAAwB,KAAK,QAAQ;QACvC,CAAC;;IAEL;IAES,QAAK;AACZ,WAAK,UAAU,MAAK;IACtB;IAEmB,WAAW,SAAuB;AACnD,WAAK,mBAAmB,QAAQ,IAAI,YAAY,IAC5C,KAAK,aACL,KAAK,YAAY;AACrB,YAAM,kBACH,QAAQ,IAAI,UAAU,KAAK,KAAK,SAAU,QAAQ,IAAI,OAAO;AAChE,WAAK,iBAAiB,kBAClB,KAAK,QACH,KAAK,WACL,KAAK,QACP,KAAK,UAAU;AAGnB,UAAI,QAAQ,IAAI,kBAAkB,MAAM,QAAW;AACjD,aAAK,kBAAkB,KAAK,aAAa,KAAK,gBAAgB;iBACrD,QAAQ,IAAI,gBAAgB,MAAM,QAAW;AACtD,aAAK,kBAAkB,KAAK,WAAW,KAAK,cAAc;;IAE9D;IAEmB,QAAQ,SAAuB;AAKhD,UAAI,KAAK,OAAO;AACd,aAAK,mBAAmB,KAAK,WAAY;;AAE3C,WAAK,iBAAiB,KAAK,SAAU;AAIrC,UAAI,KAAK,OAAO;AACd,cAAM,WAAW,KAAK,MAAM,KAAK,OAAO;AACxC,YAAI,KAAK,eAAe,QAAW;AACjC,eAAK,WAAY,gBAAgB,KAAK,MAAM;AAE5C,gBAAMC,KAAI,KAAK,WAAY;AAC3B,eAAK,aAAa,KAAK,mBAAmBA;;AAE5C,YAAI,KAAK,aAAa,QAAW;AAC/B,eAAK,SAAU,gBAAgB,KAAK,MAAM,IAAI;AAE9C,gBAAMA,KAAI,KAAK,SAAU;AACzB,eAAK,WAAW,KAAK,iBAAiBA;;aAEnC;AACL,aAAK,UAAL,KAAK,QAAU,KAAK;;AAEtB,UACE,QAAQ,IAAI,OAAO,KACnB,QAAQ,IAAI,kBAAkB,KAC9B,QAAQ,IAAI,gBAAgB,KAC5B,KAAK,iBACL;AAGA,cAAM,WAAW,KAAK,aAAa,cAAc,YAAY;AAC7D,cAAM,SAAS,KAAK,WAAW,cAAc,YAAY;AACzD,aAAK,qBAAqB,cAAc,UAAU,MAAM;;AAI1D,WAAK,cAAa;IACpB;IAEmB,SAAM;AACvB,YAAM,OAAO,KAAK,SAAS,IAAI,IAAI,KAAK;AACxC,YAAM,QAAQ,KAAK,IAAI,KAAK,MAAM,KAAK,KAAK,IAAI;AAChD,YAAM,gBAAgB,KAAK,UACrB,KAAK,oBAAoB,KAAK,OAAO,KAAK,OAAO,QACnD;AACJ,YAAM,gBAAgB,KAAK,kBAAkB,KAAK,OAAO,KAAK,OAAO;AACrE,YAAM,kBAAkB;;QAEtB,qBAAqB,OAAO,aAAa;QACzC,mBAAmB,OAAO,WAAW;;QAErC,iBAAiB,OAAO,QAAQ,IAAI;;AAEtC,YAAM,mBAAmB,EAAC,QAAQ,KAAK,MAAK;AAG5C,YAAM,aAAa,KAAK,mBAAmB,OAAO,KAAK,gBAAgB;AACvE,YAAM,YACH,KAAK,QAAQ,KAAK,gBAAgB,KAAK,eACxC,OAAO,KAAK,cAAc;AAE5B,YAAM,kBAAkB;QACtB,OAAO;QACP,OAAO,KAAK;QACZ,WAAW,KAAK;QAChB,eAAe,KAAK;QACpB,SAAS,KAAK;QACd,SAAS,KAAK,YAAY,KAAK;;AAGjC,YAAM,gBAAgB;QACpB,OAAO;QACP,OAAO,KAAK;QACZ,WAAW,KAAK;QAChB,eAAe,KAAK;QACpB,SAAS,KAAK,QAAQ,KAAK,cAAc,KAAK,MAAM,KAAK;QACzD,SAAS,KAAK;;AAGhB,YAAM,mBAAmB;QACvB,OAAO;QACP,OAAO,KAAK;QACZ,OAAO;;AAGT,YAAM,iBAAiB;QACrB,OAAO;QACP,OAAO,KAAK;QACZ,OAAO;;AAGT,YAAM,yBAAyB;QAC7B,OAAO,KAAK,oBAAoB,KAAK;;AAGvC,aAAO;yBACcD,GAAS,gBAAgB;cACpCA,GAAS,eAAe;QAC9BE,GAAK,KAAK,OAAO,MAAM,KAAK,YAAY,eAAe,CAAC;QACxD,KAAK,YAAY,aAAa,KAAK,KAAK,YAAW;;;wCAGnBF,GAAS,sBAAsB;cACzDE,GAAK,KAAK,OAAO,MAAM,KAAK,aAAa,gBAAgB,CAAC;cAC1D,KAAK,aAAa,cAAc;;;;;IAK5C;IAEQ,cAAW;AACjB,aAAO;;QAEH,KAAK,QAAQ,mCAAsC;;IAEzD;IAEQ,YAAY,OAAa;AAC/B,aAAO;gDACqC;;IAE9C;IAEQ,aAAa,EACnB,OACA,OACA,MAAK,GAKN;AACC,YAAM,QAAQ,CAAC,KAAK,YAAY,UAAU,KAAK;AAC/C,YAAMC,iBAAgB,CAAC,KAAK,YAAY,KAAK;AAC7C,YAAM,OAAO,QAAQ,UAAU;AAC/B,aAAO;sBACWH,GAAS;QACvB,CAAC,IAAI,GAAG;QACR;QACA;QACA,eAAAG;OACD;6CACsC;;cAE/B;gBACE;oBACI,KAAK;;;;QAIjBD,GAAK,KAAK,SAAS,MAAM,KAAK,YAAY,KAAK,CAAC;;IAEtD;IAEQ,YAAY,EAClB,OACA,OACA,WACA,eACA,SACA,QAAO,GAQR;AAIC,YAAM,OAAO,QAAQ,UAAU;AAC/B,aAAO;;eAEIF,GAAS;QAChB;QACA,KAAK,CAAC;OACP;eACQ,KAAK;qBACC,KAAK;mBACP,KAAK;sBACF,KAAK;qBACN,KAAK;sBACJ,KAAK;iBACV,KAAK;eACP,KAAK;eACL,KAAK;gBACJ,KAAK;WACV;kBACO,KAAK;aACV,OAAO,KAAK,GAAG;sBACN;aACT,OAAO,KAAK,GAAG;sBACN;cACR,OAAO,KAAK,IAAI;eACf,OAAO,KAAK;kBACT,QAAQ,IAAI;mBACX,aAAa;uBACT;IACrB;IAEQ,MAAM,kBACZ,QACA,UAAiB;AAEjB,YAAM,WAAW,MAAM;AACvB,UAAI,CAAC,UAAU;AACb;;AAGF,UAAI,UAAU;AACZ,iBAAS,mBACP,IAAI,aAAa,gBAAgB;UAC/B,WAAW;UACX,WAAW,KAAK;SACjB,CAAC;aAEC;AACL,iBAAS,mBACP,IAAI,aAAa,gBAAgB;UAC/B,WAAW;UACX,WAAW,KAAK;SACjB,CAAC;;IAGR;IAEQ,YAAY,OAAY;AAC9B,WAAK,YAAY,MAAM,MAA0B;IACnD;IAEQ,YAAY,OAAY;AAC9B,YAAM,SAAS,MAAM;AACrB,YAAM,QACJ,WAAW,KAAK,aAAa,KAAK,WAAY,KAAK;AACrD,WAAK,SAAS;QACZ,SAAS,MAAM,SAAS;QACxB,SAAS;QACT;QACA;QACA,QAAQ,oBAAI,IAAI;UACd,CAAC,QAAQ,OAAO,aAAa;UAC7B,CAAC,OAAO,OAAO,aAAa;SAC7B;;IAEL;IAEQ,aAAa,OAAY;AAC/B,WAAK,SAAS;IAChB;IAEQ,cAAc,OAAoB;AACxC,WAAK,YAAY,KAAK;IACxB;IAEQ,YAAY,OAAoB;AACtC,WAAK,aAAa,KAAK;IACzB;IAEQ,WAAW,OAAmB;AACpC,WAAK,YAAY,KAAK;AACtB,WAAK,kBAAkB,MAAM;AAC7B,YAAM,UAAW,MAAM,WAAgC,KAAK;AAG5D,WAAK,mBACH,CAAC,KAAK,YAAY,WAAW,QAAQ,KAAK,WAAW;AACvD,WAAK,iBAAiB,CAAC,KAAK,YAAY,CAAC,WAAW,QAAQ,KAAK,SAAS;IAC5E;IAEQ,MAAM,SAAS,OAAmB;AACxC,UAAI,CAAC,KAAK,QAAQ;AAChB;;AAGF,YAAM,EAAC,QAAQ,QAAQ,QAAO,IAAI,KAAK;AAGvC,YAAM,IAAI,QAAQ,qBAAqB;AACvC,UAAI,WAAW,QAAW;AAGxB,eAAO,MAAK;AAGZ,YAAI,WAAW,OAAO,kBAAkB,OAAO,IAAI,MAAM,GAAI;AAC3D,iBAAO,cAAc,IAAI,MAAM,UAAU,EAAC,SAAS,KAAI,CAAC,CAAC;;;AAG7D,WAAK,aAAa,KAAK;IACzB;;;;;;;;;;;;;;IAeQ,WAAW,OAAmB;AACpC,WAAK,mBAAmB,CAAC,KAAK,YAAY,SAAS,OAAO,KAAK,WAAW;AAC1E,WAAK,iBAAiB,CAAC,KAAK,YAAY,SAAS,OAAO,KAAK,SAAS;IACxE;IAEQ,YAAY,OAAmB;AACrC,WAAK,WAAW,KAAK;IACvB;IAEQ,cAAW;AACjB,WAAK,mBAAmB;AACxB,WAAK,iBAAiB;IACxB;IAEQ,YAAY,OAAuB;AACzC,WAAK,aAAa,MAAM,UAAU,SAAS,OAAO;IACpD;IAEQ,gBAAa;AACnB,UAAI,CAAC,KAAK,QAAQ;AAChB,eAAO;;AAGT,YAAM,EAAC,QAAQ,MAAK,IAAI,KAAK;AAC7B,YAAM,UAAU,WAAW,KAAK;AAChC,aAAO,UACH,OAAO,gBAAgB,MAAM,gBAC7B,OAAO,gBAAgB,MAAM;IACnC;;;;IAKQ,kBAAe;AACrB,YAAM,EAAC,OAAM,IAAI;AACjB,UAAI,CAAC,QAAQ;AACX,eAAO;;AAGT,YAAM,EAAC,QAAQ,OAAO,OAAM,IAAI;AAChC,UAAI,OAAO,SAAS;AAClB,cAAM,aAAa,OAAO,IAAI,MAAM,MAAM,OAAO,IAAI,KAAK;AAC1D,YAAI,cAAc,KAAK,cAAa,GAAI;AACtC,iBAAO,UAAU;AACjB,iBAAO,UAAU;AACjB,iBAAO,SAAS;AAChB,iBAAO,QAAQ;;;AAGnB,aAAO,OAAO;IAChB;;;IAIQ,aAAU;AAChB,UAAI,CAAC,KAAK,QAAQ;AAChB,eAAO;;AAGT,YAAM,EAAC,QAAQ,OAAO,OAAM,IAAI,KAAK;AACrC,YAAM,UAAU,OAAO,kBAAkB,MAAM;AAC/C,aAAO,gBAAgB,MAAM;AAC7B,YAAM,gBAAgB,OAAO,IAAI,KAAK;AACtC,aAAO;IACT;;IAGQ,cAAW;AACjB,UAAI,CAAC,KAAK,cAAa,KAAM,CAAC,KAAK,QAAQ;AACzC,eAAO;;AAET,YAAM,EAAC,QAAQ,MAAK,IAAI,KAAK;AAC7B,aAAO,gBAAgB,MAAM;AAC7B,aAAO;IACT;IAEQ,YAAY,OAAiB;AAEnC,UAAI,KAAK,sBAAsB;AAC7B;;AAEF,UAAI,kBAAkB;AACtB,UAAI,aAAa;AACjB,UAAI,KAAK,OAAO;AACd,YAAI,KAAK,gBAAe,GAAI;AAC1B,4BAAkB;AAClB,uBAAa,KAAK,WAAU;;AAE9B,YAAI,KAAK,YAAW,GAAI;AACtB,4BAAkB;AAClB,uBAAa;;;AAGjB,YAAM,SAAS,MAAM;AACrB,WAAK,YAAY,MAAM;AAEvB,UAAI,KAAK,OAAO;AACd,aAAK,aAAa,KAAK,WAAY;AACnC,aAAK,WAAW,KAAK,SAAU;aAC1B;AACL,aAAK,QAAQ,KAAK,SAAU;;AAG9B,UAAI,iBAAiB;AACnB,cAAM,gBAAe;;AAGvB,UAAI,YAAY;AACd,aAAK,uBAAuB;AAC5B,wBAAgB,QAAQ,KAAK;AAC7B,aAAK,uBAAuB;;IAEhC;IAEQ,aAAa,OAAY;AAG/B,YAAM,eAAe,MAAM;AAC3B,YAAM,EAAC,QAAQ,OAAM,IAAI,KAAK,UAAU,CAAA;AACxC,YAAM,UACJ,UAAU,OAAO,kBAAkB,OAAQ,IAAI,YAAY;AAC7D,UAAI,CAAC,SAAS;AACZ,wBAAgB,MAAM,KAAK;;AAG7B,WAAK,aAAa,KAAK;IACzB;IAMS,CAAC,YAAY,IAAC;AACrB,UAAI,KAAK,OAAO;AACd,cAAM,OAAO,IAAI,SAAQ;AACzB,aAAK,OAAO,KAAK,WAAW,OAAO,KAAK,UAAU,CAAC;AACnD,aAAK,OAAO,KAAK,SAAS,OAAO,KAAK,QAAQ,CAAC;AAC/C,eAAO;;AAGT,aAAO,OAAO,KAAK,KAAK;IAC1B;IAES,oBAAiB;AACxB,UAAI,KAAK,OAAO;AACd,cAAM,aAAa,KAAK,aAAa,aAAa;AAClD,aAAK,aAAa,eAAe,OAAO,OAAO,UAAU,IAAI;AAC7D,cAAM,WAAW,KAAK,aAAa,WAAW;AAC9C,aAAK,WAAW,aAAa,OAAO,OAAO,QAAQ,IAAI;AACvD;;AAEF,YAAM,QAAQ,KAAK,aAAa,OAAO;AACvC,WAAK,QAAQ,UAAU,OAAO,OAAO,KAAK,IAAI;IAChD;IAES,yBACP,OAA8C;AAE9C,UAAI,MAAM,QAAQ,KAAK,GAAG;AACxB,cAAM,CAAC,CAAC,EAAE,UAAU,GAAG,CAAC,EAAE,QAAQ,CAAC,IAAI;AACvC,aAAK,aAAa,OAAO,UAAU;AACnC,aAAK,WAAW,OAAO,QAAQ;AAC/B,aAAK,QAAQ;AACb;;AAGF,WAAK,QAAQ,OAAO,KAAK;AACzB,WAAK,QAAQ;IACf;;AAjtBA,GAAA,MAAA;AACE,8BAA0B,MAAM;EAClC,GAAC;AAGe,SAAA,oBAAoC;IAClD,GAAGD,GAAW;IACd,gBAAgB;;AAMQ,aAAA;IAAzB,EAAS,EAAC,MAAM,OAAM,CAAC;;AAKE,aAAA;IAAzB,EAAS,EAAC,MAAM,OAAM,CAAC;;AAKE,aAAA;IAAzB,EAAS,EAAC,MAAM,OAAM,CAAC;;AAK4B,aAAA;IAAnD,EAAS,EAAC,MAAM,QAAQ,WAAW,cAAa,CAAC;;AAKA,aAAA;IAAjD,EAAS,EAAC,MAAM,QAAQ,WAAW,YAAW,CAAC;;AAMV,aAAA;IAArC,EAAS,EAAC,WAAW,cAAa,CAAC;;AAMQ,aAAA;IAA3C,EAAS,EAAC,WAAW,oBAAmB,CAAC;;AAMA,aAAA;IAAzC,EAAS,EAAC,WAAW,kBAAiB,CAAC;;AAMG,aAAA;IAA1C,EAAS,EAAC,WAAW,mBAAkB,CAAC;;AAMM,aAAA;IAA9C,EAAS,EAAC,WAAW,uBAAsB,CAAC;;AAMJ,aAAA;IAAxC,EAAS,EAAC,WAAW,iBAAgB,CAAC;;AAMM,aAAA;IAA5C,EAAS,EAAC,WAAW,qBAAoB,CAAC;;AAKjB,aAAA;IAAzB,EAAS,EAAC,MAAM,OAAM,CAAC;;AAKG,aAAA;IAA1B,EAAS,EAAC,MAAM,QAAO,CAAC;;AAKE,aAAA;IAA1B,EAAS,EAAC,MAAM,QAAO,CAAC;;AAOE,aAAA;IAA1B,EAAS,EAAC,MAAM,QAAO,CAAC;;AA0Bc,aAAA;IAAtCK,GAAM,aAAa;;AACqB,aAAA;IAAxCA,GAAM,eAAe;;AAEL,aAAA;IADhBC,GAAW,iBAAiB;;AAGQ,aAAA;IAApCD,GAAM,WAAW;;AACqB,aAAA;IAAtCA,GAAM,aAAa;;AAEH,aAAA;IADhBC,GAAW,eAAe;;AAMV,aAAA;IAAhB,EAAK;;AACW,aAAA;IAAhB,EAAK;;AAEW,aAAA;IAAhB,EAAK;;AACW,aAAA;IAAhB,EAAK;;AAEW,aAAA;IAAhB,EAAK;;AACW,aAAA;IAAhB,EAAK;;AAqkBR,WAAS,SAAS,EAAC,GAAAC,IAAG,GAAAC,GAAC,GAAiB,SAA4B;AAClE,QAAI,CAAC,SAAS;AACZ,aAAO;;AAET,UAAM,EAAC,KAAK,MAAM,QAAQ,MAAK,IAAI,QAAQ,sBAAqB;AAChE,WAAOD,MAAK,QAAQA,MAAK,SAASC,MAAK,OAAOA,MAAK;EACrD;AAEA,WAAS,cACP,KACA,KAA+B;AAE/B,QAAI,EAAE,OAAO,MAAM;AACjB,aAAO;;AAET,UAAMC,KAAI,IAAI,sBAAqB;AACnC,UAAMC,KAAI,IAAI,sBAAqB;AACnC,WAAO,EACLD,GAAE,MAAMC,GAAE,UACVD,GAAE,QAAQC,GAAE,QACZD,GAAE,SAASC,GAAE,OACbD,GAAE,OAAOC,GAAE;EAEf;;;ACpxBO,MAAMC,WAASC;;;;AC8Bf,MAAM,WAAN,MAAMC,kBAAiB,OAAM;;AAClB,WAAA,SAA8B,CAACC,UAAQA,QAAkB;AAD9D,aAAQ,WAAA;IADpB,EAAc,WAAW;KACb,QAAQ;;;ACJrB,MAAM,kBAAkB,0BACtB,oBAAoB,sBAAsBC,EAAU,CAAC,CAAC;AASlD,MAAO,SAAP,cAAsB,gBAAe;IA6CzC,cAAA;AACE,YAAK;AA/BoB,WAAA,WAAW;AAKX,WAAA,QAAQ;AAOnC,WAAA,uBAAuB;AAQI,WAAA,WAAW;AAM1B,WAAA,QAAQ;AAMlB,UAAI,CAACC,IAAU;AACb,aAAK,iBAAiB,SAAS,CAAC,UAAqB;AACnD,cAAI,CAAC,kBAAkB,KAAK,KAAK,CAAC,KAAK,OAAO;AAC5C;;AAEF,eAAK,MAAK;AACV,kCAAwB,KAAK,KAAK;QACpC,CAAC;;IAEL;IAEmB,SAAM;AAIvB,aAAO;2BACgBA,GAAS,KAAK,iBAAgB,CAAE;;;;;;uBAMnC,KAAmB,aAAa;qBACnC,KAAK;sBACJ,KAAK;sBACL,KAAK;mBACR,KAAK;oBACJ,KAAK;;;+BAGM,KAAK,aAAY;;;IAG9C;IAEQ,mBAAgB;AACtB,aAAO;QACL,YAAY,KAAK;QACjB,cAAc,CAAC,KAAK;QACpB,YAAY,KAAK;;IAErB;IAEQ,eAAY;AAClB,YAAM,UAAU;QACd,aAAa,KAAK,uBAAuB,KAAK,WAAW,KAAK;;AAEhE,aAAO;QACH,KAAK,kBAAiB;;6CAEe,KAAK;8BACpBA,GAAS,OAAO;YAClC,KAAK,gBAAe,IAAK,KAAK,YAAW,IAAK;;;;IAIxD;IAEQ,cAAW;AACjB,aAAO;;UAED,KAAK,aAAY;UACjB,KAAK,uBAAuB,MAAS,KAAK,cAAa;;;IAG/D;;;;IAKQ,eAAY;AAClB,aAAO;;;;;;;;IAQT;;;;IAKQ,gBAAa;AACnB,aAAO;;;;;;;;IAQT;IAEQ,oBAAiB;AACvB,aAAO;IACT;IAEQ,kBAAe;AACrB,aAAO,KAAK,SAAS,KAAK;IAC5B;IAEQ,YAAY,OAAY;AAC9B,YAAM,SAAS,MAAM;AACrB,WAAK,WAAW,OAAO;IAEzB;IAEQ,aAAa,OAAY;AAE/B,sBAAgB,MAAM,KAAK;IAC7B;IAMS,CAAC,YAAY,IAAC;AACrB,aAAO,KAAK,WAAW,KAAK,QAAQ;IACtC;IAES,CAAC,YAAY,IAAC;AACrB,aAAO,OAAO,KAAK,QAAQ;IAC7B;IAES,oBAAiB;AAGxB,WAAK,WAAW,KAAK,aAAa,UAAU;IAC9C;IAES,yBAAyB,OAAa;AAC7C,WAAK,WAAW,UAAU;IAC5B;IAEA,CAAC,eAAe,IAAC;AACf,aAAO,IAAI,kBAAkB,OAAO;QAClC,SAAS,KAAK;QACd,UAAU,KAAK;QACf;IACJ;IAEA,CAAC,iBAAiB,IAAC;AACjB,aAAO,KAAK;IACd;;AA/LA,GAAA,MAAA;AACE,8BAA0B,MAAM;EAClC,GAAC;AAGe,SAAA,oBAAoC;IAClD,MAAM;IACN,gBAAgB;;AAOS,aAAA;IAA1B,EAAS,EAAC,MAAM,QAAO,CAAC;;AAKE,aAAA;IAA1B,EAAS,EAAC,MAAM,QAAO,CAAC;;AAOzB,aAAA;IADC,EAAS,EAAC,MAAM,SAAS,WAAW,0BAAyB,CAAC;;AASpC,aAAA;IAA1B,EAAS,EAAC,MAAM,QAAO,CAAC;;AAMb,aAAA;IAAX,EAAQ;;AAEwB,aAAA;IAAhCC,GAAM,OAAO;;;;AC/ET,MAAMC,WAASC;;;;ACsBf,MAAM,WAAN,MAAMC,kBAAiB,OAAM;;AAClB,WAAA,SAA8B,CAACC,QAAM;AAD1C,aAAQ,WAAA;IADpB,EAAc,WAAW;KACb,QAAQ;;;;ACFrB,MAAM,YAAY,OAAO,WAAW;AAM7B,MAAM,oBAAoB,OAAO,kBAAkB;AAG1D,MAAM,eAAe,eAAeC,EAAU;AAKxC,MAAO,MAAP,cAAmB,aAAY;;;;IAkBnC,IAAI,WAAQ;AACV,aAAO,KAAK;IACd;IACA,IAAI,SAAS,QAAe;AAC1B,WAAK,SAAS;IAChB;IAsBA,cAAA;AACE,YAAK;AAvCE,WAAA,QAAQ;AAKyB,WAAA,SAAS;AAgBD,WAAA,UAAU;AAKT,WAAA,WAAW;AAG3C,WAAA,qBAAqB;AAKvB,WAAA;MAEd,KAAqB,gBAAe;AAIrC,UAAI,CAACC,IAAU;AACb,aAAK,UAAU,OAAO;AACtB,aAAK,iBAAiB,WAAW,KAAK,cAAc,KAAK,IAAI,CAAC;;IAElE;IAEmB,SAAM;AACvB,YAAM,YAAY;AAClB,aAAO;;;eAGI,KAAK;yDACqC;;4BAE7B;;yBAEHA,GAAS,KAAK,kBAAiB,CAAE;;wCAElB,KAAK;4BACjB,KAAK;UACvB,KAAK,qBAAqB,IAAU;;QAEtC,KAAK,qBAAqB,YAAY;;IAE5C;IAEU,oBAAiB;AACzB,aAAO;QACL,YAAY,KAAK;QACjB,aAAa,CAAC,KAAK;;IAEvB;IAEmB,UAAO;AACxB,WAAK,UAAU,eAAe,OAAO,KAAK,MAAM;IAClD;IAEQ,MAAM,cAAc,OAAoB;AAE9C,YAAM;AACN,UAAI,MAAM,kBAAkB;AAC1B;;AAGF,UAAI,MAAM,QAAQ,WAAW,MAAM,QAAQ,KAAK;AAE9C,cAAM,eAAc;AACpB,aAAK,MAAK;;IAEd;IAEQ,mBAAmB,OAAY;AAGrC,YAAM,gBAAe;AACrB,WAAK,MAAK;IACZ;IAEA,EAAAC,MAtE+B,WAsE9B,kBAAiB,EAAE,aAAgB;AAClC,UAAI,CAAC,KAAK,SAAS,GAAG;AACpB;;AAGF,WAAK,SAAS,EAAE,cAAa,EAAG,QAAQ,CAACC,OAAK;AAC5C,QAAAA,GAAE,OAAM;MACV,CAAC;AACD,YAAM,SAAS,KAAK,aAAa,WAAW;AAC5C,UAAI,WAAW,MAAM;AACnB,aAAK,SAAS,EAAE,QAAQ,QAAQ;UAC9B,UAAU;UACV,QAAQ,OAAO;SAChB;;IAEL;IAEQ,aAAa,aAAgB;AACnC,YAAM,eAAe,mBAAkB;AACvC,UAAI,CAAC,KAAK,QAAQ;AAChB,eAAO,eAAe,CAAC,EAAC,WAAW,EAAC,GAAG,EAAC,aAAa,OAAM,CAAC,IAAI;;AAGlE,YAAM,OAAiB,CAAA;AACvB,YAAM,WACJ,YAAY,SAAS,GAAG,sBAAqB,KAAO,CAAA;AACtD,YAAM,UAAU,SAAS;AACzB,YAAM,aAAa,SAAS;AAC5B,YAAM,SAAS,KAAK,SAAS,EAAG,sBAAqB;AACrD,YAAM,QAAQ,OAAO;AACrB,YAAM,WAAW,OAAO;AACxB,YAAM,QAAQ,aAAa;AAC3B,UACE,CAAC,gBACD,YAAY,UACZ,UAAU,UACV,CAAC,MAAM,KAAK,GACZ;AACA,aAAK,WAAW,IAAI,eAAe,UAAU,OAAO,QAClD,CAAC,eACY,MAAM,QAAQ,CAAC;aACzB;AACL,aAAK,SAAS,IAAI;;AAIpB,aAAO,CAAC,MAAM,EAAC,aAAa,OAAM,CAAC;IACrC;IAEQ,mBAAgB;AACtB,WAAK,WAAW;AAGhB,iBAAW,QAAQ,KAAK,sBAAsB;AAC5C,cAAM,iBACJ,KAAK,aAAa,KAAK,aACvB,CAAC,CAAE,KAAc,UAAU,MAAM,IAAI;AACvC,YAAI,KAAK,aAAa,KAAK,gBAAgB,gBAAgB;AACzD;;;AAIJ,WAAK,WAAW;IAClB;IAEQ,uBAAoB;AAC1B,WAAK,UAAU,KAAK,cAAc,SAAS;IAC7C;;AArKS,aAAA;IADR,EAAS,EAAC,MAAM,SAAS,SAAS,MAAM,WAAW,SAAQ,CAAC;;AAMnB,aAAA;IAAzC,EAAS,EAAC,MAAM,SAAS,SAAS,KAAI,CAAC;;AAMxC,aAAA;IADC,EAAS,EAAC,MAAM,QAAO,CAAC;;AAWyB,aAAA;IAAjD,EAAS,EAAC,MAAM,SAAS,WAAW,WAAU,CAAC;;AAKG,aAAA;IAAlD,EAAS,EAAC,MAAM,SAAS,WAAW,YAAW,CAAC;;AAEnB,aAAA;IAA7BC,GAAM,YAAY;;AACA,aAAA;IAAlB,EAAK;;AAEW,aAAA;IADhBH,GAAmB,EAAC,SAAS,KAAI,CAAC;;AAGlB,aAAA;IADhBI,GAAsB,EAAC,MAAM,QAAQ,SAAS,KAAI,CAAC;;AAwItD,WAAS,qBAAkB;AACzB,WAAO,OAAO,WAAW,kCAAkC,EAAE;EAC/D;;;AC7MM,MAAO,aAAP,cAA0B,IAAG;IAAnC,cAAA;;AAIuD,WAAA,aAAa;IAQpE;IANqB,oBAAiB;AAClC,aAAO;QACL,GAAG,MAAM,kBAAiB;QAC1B,WAAW,CAAC,KAAK;;IAErB;;AAPqD,aAAA;IAApD,EAAS,EAAC,MAAM,SAAS,WAAW,cAAa,CAAC;;;;ACV9C,MAAMC,WAASC;;;;ACAf,MAAMC,WAASC;;;;ACoBf,MAAM,eAAN,MAAMC,sBAAqB,WAAU;;AAC1B,eAAA,SAA8B,CAACC,UAAcA,QAAa;AAD/D,iBAAY,WAAA;IADxB,EAAc,gBAAgB;KAClB,YAAY;;;AChBnB,MAAO,eAAP,cAA4B,IAAG;IAArC,cAAA;;AACqB,WAAA,qBAAqB;IAC1C;;;;ACNO,MAAMC,WAASC;;;;ACoBf,MAAM,iBAAN,MAAMC,wBAAuB,aAAY;;AAC9B,iBAAA,SAA8B,CAACC,UAAcA,QAAe;AADjE,mBAAc,WAAA;IAD1B,EAAc,kBAAkB;KACpB,cAAc;;;ACUrB,MAAO,OAAP,cAAoBC,GAAU;;;;;;IAYlC,IAAI,YAAS;AACX,aAAO,KAAK,KAAK,KAAK,CAAC,QAAQ,IAAI,MAAM,KAAK;IAChD;IACA,IAAI,UAAU,KAAe;AAG3B,UAAI,KAAK;AACP,aAAK,YAAY,GAAG;;IAExB;;;;;;IAQA,IAAI,iBAAc;AAChB,aAAO,KAAK,KAAK,UAAU,CAAC,QAAQ,IAAI,MAAM;IAChD;IACA,IAAI,eAAe,OAAa;AAC9B,YAAM,qBAAqB,MAAK;AAC9B,cAAM,MAAM,KAAK,KAAK,KAAK;AAE3B,YAAI,KAAK;AACP,eAAK,YAAY,GAAG;;MAExB;AAEA,UAAI,CAAC,KAAK,aAAa;AAerB,aAAK,eAAe,KAAK,kBAAkB;AAC3C;;AAGF,yBAAkB;IACpB;IAUA,IAAY,aAAU;AACpB,aAAO,KAAK,KAAK,KAAK,CAAC,QAAQ,IAAI,QAAQ,eAAe,CAAC;IAC7D;IAMA,cAAA;AACE,YAAK;AAdgD,WAAA,eAAe;AASrD,WAAA;MAEd,KAAqB,gBAAe;AAIrC,UAAI,CAACC,IAAU;AACb,aAAK,UAAU,OAAO;AACtB,aAAK,iBAAiB,WAAW,KAAK,cAAc,KAAK,IAAI,CAAC;AAC9D,aAAK,iBAAiB,SAAS,KAAK,YAAY,KAAK,IAAI,CAAC;AAC1D,aAAK,iBAAiB,YAAY,KAAK,eAAe,KAAK,IAAI,CAAC;;IAEpE;;;;;;;;;IAUA,MAAM,YAAY,eAA0B;AAC1C,YAAM,KAAK;AACX,YAAM,EAAC,KAAI,IAAI;AACf,wBAAA,gBAAkB,KAAK;AACvB,UACE,CAAC,iBACD,CAAC,KAAK,SAAS,aAAa,KAC5B,CAAC,KAAK,qBACN;AACA;;AAIF,iBAAW,OAAO,KAAK,MAAM;AAC3B,cAAM,IAAI;;AAGZ,YAAM,SAAS,cAAc;AAC7B,YAAM,SAAS,cAAc;AAC7B,YAAM,SAAS,KAAK;AACpB,YAAM,aAAa,KAAK;AACxB,YAAM,eAAe;AACrB,YAAM,MAAM,SAAS;AACrB,YAAM,MAAM,SAAS,SAAS,aAAa;AAC3C,YAAM,KAAK,KAAK,IAAI,KAAK,KAAK,IAAI,KAAK,MAAM,CAAC;AAK9C,YAAM,WAA2B,CAAC,KAAK,aAAa,YAAY;AAChE,WAAK,oBAAoB,SAAS,EAAC,UAAU,KAAK,GAAG,MAAM,GAAE,CAAC;IAChE;IAEmB,SAAM;AACvB,aAAO;;;wBAGa,KAAK;mBACV,KAAK;;;;IAItB;IAEQ,MAAM,eAAe,OAAY;AACvC,YAAM,MAAM,MAAM;AAElB,YAAM;AACN,UAAI,MAAM,oBAAoB,CAAC,MAAM,GAAG,KAAK,IAAI,QAAQ;AACvD;;AAGF,WAAK,YAAY,GAAG;IACtB;IAEQ,YAAY,WAAc;AAChC,YAAM,EAAC,KAAI,IAAI;AACf,YAAM,cAAc,KAAK;AACzB,UAAI,CAAC,KAAK,SAAS,SAAS,KAAK,gBAAgB,WAAW;AAE1D;;AAGF,iBAAW,OAAO,MAAM;AACtB,YAAI,SAAS,QAAQ;;AAGvB,UAAI,aAAa;AAGf,cAAM,mBAAmB,CAAC,KAAK,cAC7B,IAAI,MAAM,UAAU,EAAC,SAAS,MAAM,YAAY,KAAI,CAAC,CAAC;AAExD,YAAI,kBAAkB;AACpB,qBAAW,OAAO,MAAM;AACtB,gBAAI,SAAS,QAAQ;;AAEvB;;AAGF,kBAAU,iBAAiB,EAAE,WAAW;;AAG1C,WAAK,mBAAmB,SAAS;AACjC,WAAK,YAAY,SAAS;IAC5B;IAEQ,mBAAmB,cAAiB;AAC1C,iBAAW,OAAO,KAAK,MAAM;AAC3B,YAAI,WAAW,QAAQ,eAAe,IAAI;;IAE9C;;IAGQ,MAAM,cAAc,OAAoB;AAE9C,YAAM;AACN,YAAM,SAAS,MAAM,QAAQ;AAC7B,YAAM,UAAU,MAAM,QAAQ;AAC9B,YAAM,SAAS,MAAM,QAAQ;AAC7B,YAAM,QAAQ,MAAM,QAAQ;AAE5B,UAAI,MAAM,oBAAqB,CAAC,UAAU,CAAC,WAAW,CAAC,UAAU,CAAC,OAAQ;AACxE;;AAGF,YAAM,EAAC,KAAI,IAAI;AAEf,UAAI,KAAK,SAAS,GAAG;AACnB;;AAIF,YAAM,eAAc;AAEpB,UAAI;AACJ,UAAI,UAAU,OAAO;AACnB,uBAAe,SAAS,IAAI,KAAK,SAAS;aACrC;AAEL,cAAMC,SAAQ,iBAAiB,IAAI,EAAE,cAAc;AACnD,cAAM,WAAWA,SAAQ,SAAS;AAClC,cAAM,EAAC,WAAU,IAAI;AACrB,YAAI,CAAC,YAAY;AAGf,yBAAe,WAAW,IAAI,KAAK,SAAS;eACvC;AACL,gBAAM,eAAe,KAAK,KAAK,QAAQ,UAAU;AACjD,yBAAe,WAAW,eAAe,IAAI,eAAe;AAC5D,cAAI,gBAAgB,KAAK,QAAQ;AAE/B,2BAAe;qBACN,eAAe,GAAG;AAE3B,2BAAe,KAAK,SAAS;;;;AAKnC,YAAM,aAAa,KAAK,YAAY;AACpC,iBAAW,MAAK;AAChB,UAAI,KAAK,cAAc;AACrB,aAAK,YAAY,UAAU;aACtB;AACL,aAAK,mBAAmB,UAAU;;IAEtC;;IAGQ,cAAW;AACjB,WAAK,YAAY,KAAK,cAAc,KAAK,SAAS;IACpD;IAEQ,iBAAc;AAEpB,UAAI,KAAK,QAAQ,eAAe,GAAG;AACjC;;AAGF,YAAM,EAAC,UAAS,IAAI;AACpB,UAAI,WAAW;AACb,aAAK,mBAAmB,SAAS;;IAErC;IAEQ,mBAAgB;AACtB,YAAM,WAAW,KAAK,KAAK,CAAC;AAC5B,UAAI,CAAC,KAAK,aAAa,UAAU;AAG/B,aAAK,YAAY,QAAQ;;AAM3B,WAAK,YAAY,KAAK,SAAS;IACjC;;AA9QS,aAAA;IADRC,GAAsB,EAAC,SAAS,MAAM,UAAU,WAAU,CAAC;;AAyB5D,aAAA;IADC,EAAS,EAAC,MAAM,QAAQ,WAAW,mBAAkB,CAAC;;AAsCA,aAAA;IAAtD,EAAS,EAAC,MAAM,SAAS,WAAW,gBAAe,CAAC;;AAEpB,aAAA;IAAhCC,GAAM,OAAO;;AACkB,aAAA;IAA/BA,GAAM,MAAM;;AAiNf,WAAS,MAAM,SAAgB;AAC7B,WAAO,mBAAmB,eAAe,QAAQ,aAAa,QAAQ;EACxE;;;ACtTO,MAAMC,WAASC;;;;ACmBf,MAAM,SAAN,MAAMC,gBAAe,KAAI;;AACd,SAAA,SAA8B,CAACC,QAAM;AAD1C,WAAM,WAAA;IADlB,EAAc,SAAS;KACX,MAAM;;;ACnBZ,MAAMC,WAASC;;;;ACQtB,MAAA,EAAOC,GAAYC,GAAAA,IAAaC;AAAhC,MA+DaC,MAAsBC,CAAAA,QAAAA,WAChCA,IAA2BC;AAhE9B,MAkKMC,KAAc,CAAA;AAlKpB,MA+KaC,KAAoB,CAACC,KAAYC,MAAiBH,OAC5DE,IAAKE,OAAmBD;;;MCpGdE,KAAOC,GA3EpB,cAA4BC,GAAAA;IAC1BC,YAAYC,IAAAA;AAEV,UADAC,MAAMD,EAAAA,GAGFA,GAASE,SAASC,GAASC,YAC3BJ,GAASE,SAASC,GAASE,aAC3BL,GAASE,SAASC,GAASG;AAG7B,cAAUC,MACR,gEAAA;AAGJ,UAAA,CAAKC,IAAmBR,EAAAA;AACtB,cAAUO,MAAM,sDAAA;IAEnB;IAEDE,OAAOC,IAAAA;AACL,aAAOA;IACR;IAEQC,OAAOC,KAAAA,CAAsBF,EAAAA,GAAAA;AACpC,UAAIA,OAAUG,KAAYH,OAAUI;AAClC,eAAOJ;AAET,YAAMK,MAAUH,IAAKG,SACfC,MAAOJ,IAAKI;AAElB,UAAIJ,IAAKV,SAASC,GAASC,UAAAA;AAEzB,YAAIM,OAAWK,IAAgBC,GAAAA;AAC7B,iBAAOH;MAAAA,WAEAD,IAAKV,SAASC,GAASG,mBAAAA;AAChC,YAAA,CAAA,CAAMI,OAAUK,IAAQE,aAAaD,GAAAA;AACnC,iBAAOH;MAAAA,WAEAD,IAAKV,SAASC,GAASE,aAC5BU,IAAQG,aAAaF,GAAAA,MAAiBN,KAAPS;AACjC,eAAON;AAMX,aADAO,GAAkBR,GAAAA,GACXF;IACR;EAAA,CAAA;;;AC1DI,MAAM,kBAAkB;IAC7B,cAAc,OAAoB;AAChC,aAAO,SAAS;IAClB;IACA,YAAY,OAAa;AACvB,aAAO,SAAS;IAClB;;;;ACkGI,MAAO,qBAAP,cAAkC,UAAyB;IAI5C,gBAAgB,EAAC,OAAO,gBAAe,GAAiB;AACzE,UAAI,kBAAkB;AACtB,UAAI,aAAa,KAAK,KAAK,CAAC,iBAAiB;AAE3C,0BAAkB,KAAK,gBAAgB,SAAS,cAAc,OAAO;AAErE,aAAK,eAAe;iBACX,CAAC,iBAAiB;AAE3B,0BACE,KAAK,mBAAmB,SAAS,cAAc,UAAU;AAE3D,aAAK,kBAAkB;;AAIzB,YAAM,QAAQ,aAAa,KAAK,IAC3B,kBACD;AAGJ,UAAI,OAAO;AACT,cAAM,OAAO,MAAM;;AAGrB,UAAI,gBAAgB,UAAU,MAAM,OAAO;AAKzC,wBAAgB,QAAQ,MAAM;;AAGhC,sBAAgB,WAAW,MAAM;AAMjC,UAAI,OAAO;AACT,cAAM,aAAa;AACnB,YAAI,WAAW,SAAS;AACtB,gBAAM,UAAU,WAAW;eACtB;AACL,gBAAM,gBAAgB,SAAS;;AAGjC,YAAI,WAAW,KAAK;AAClB,gBAAM,MAAM,WAAW;eAClB;AACL,gBAAM,gBAAgB,KAAK;;AAG7B,YAAI,WAAW,KAAK;AAClB,gBAAM,MAAM,WAAW;eAClB;AACL,gBAAM,gBAAgB,KAAK;;AAG7B,YAAI,WAAW,MAAM;AACnB,gBAAM,OAAO,WAAW;eACnB;AACL,gBAAM,gBAAgB,MAAM;;;AAehC,WAAK,MAAM,aAAa,MAAM,IAAI;AAChC,wBAAgB,aAAa,aAAa,OAAO,MAAM,SAAS,CAAC;aAC5D;AACL,wBAAgB,gBAAgB,WAAW;;AAG7C,WAAK,MAAM,aAAa,MAAM,IAAI;AAChC,wBAAgB,aAAa,aAAa,OAAO,MAAM,SAAS,CAAC;aAC5D;AACL,wBAAgB,gBAAgB,WAAW;;AAG7C,aAAO;QACL,UAAU,gBAAgB;QAC1B,mBAAmB,gBAAgB;;IAEvC;IAEmB,OACjB,EAAC,OAAO,KAAI,GACZ,EAAC,OAAO,KAAI,GAAiB;AAG7B,YAAM,uBACJ,KAAK,SAAS,KAAK,QACnB,KAAK,UAAU,KAAK,SACpB,KAAK,aAAa,KAAK,YACvB,KAAK,cAAc,KAAK,aACxB,KAAK,cAAc,KAAK;AAE1B,UAAI,CAAC,aAAa,IAAI,KAAK,CAAC,aAAa,IAAI,GAAG;AAE9C,eAAO;;AAIT,aACE,wBACA,KAAK,YAAY,KAAK,WACtB,KAAK,QAAQ,KAAK,OAClB,KAAK,QAAQ,KAAK,OAClB,KAAK,SAAS,KAAK;IAEvB;IAEmB,KAAK,EAAC,MAAK,GAAiB;AAG7C,aAAO;QACL,OAAO,aAAa,KAAK,IACrB,KAAK,UAAU,KAAK,IACpB,KAAK,aAAa,KAAK;QAC3B,iBAAiB;;IAErB;IAEQ,UAAU,OAAiB;AACjC,YAAM,EAAC,MAAM,SAAS,KAAK,KAAK,KAAI,IAAI;AACxC,aAAO;QACL,GAAG,KAAK,gBAAgB,KAAK;QAC7B;QACA;QACA;QACA;QACA;;IAEJ;IAEQ,aAAa,OAAoB;AACvC,aAAO;QACL,GAAG,KAAK,gBAAgB,KAAK;QAC7B,MAAM,MAAM;;IAEhB;IAEQ,gBAAgB,EACtB,OACA,UACA,WACA,UAAS,GACmB;AAC5B,aAAO,EAAC,OAAO,UAAU,WAAW,UAAS;IAC/C;;AAGF,WAAS,aAAa,OAAiC;AACrD,WAAO,MAAM,SAAS;EACxB;;;AC5MA,MAAM,qBAAqB,sBACzB,0BACE,oBAAoB,sBAAsBW,EAAU,CAAC,CAAC,CACvD;AAgBG,MAAgB,YAAhB,cAAkC,mBAAkB;IAA1D,cAAA;;AAiB4C,WAAA,QAAQ;AAUb,WAAA,YAAY;AAYrC,WAAA,QAAQ;AAUsB,WAAA,WAAW;AAKzC,WAAA,QAAQ;AAKkB,WAAA,aAAa;AAKb,WAAA,aAAa;AAMnD,WAAA,iBAAiB;AAMjB,WAAA,kBAAkB;AAMwB,WAAA,iBAAiB;AAMlB,WAAA,gBAAgB;AAM/B,WAAA,OAAO;AAMP,WAAA,OAAO;AAGG,WAAA,YAAY;AAOpC,WAAA,MAAM;AAQQ,WAAA,YAAY;AAO1B,WAAA,MAAM;AAQQ,WAAA,YAAY;AAKc,WAAA,YAAY;AAQpD,WAAA,UAAU;AAUiC,WAAA,cAAc;AAQ3B,WAAA,WAAW;AAOX,WAAA,WAAW;AAsCzC,WAAA,OAAO;AAsBnB,WAAA,OAAiD;AAQtB,WAAA,eAAe;AAkDzB,WAAA,QAAQ;AACR,WAAA,UAAU;AAIV,WAAA,cAAc;AAKd,WAAA,kBAAkB;IAyYrC;;;;IApgBE,IAAI,qBAAkB;AACpB,aAAO,KAAK,mBAAkB,EAAG;IACnC;IACA,IAAI,mBAAmB,OAA6C;AAClE,WAAK,mBAAkB,EAAG,qBAAqB;IACjD;;;;IAKA,IAAI,eAAY;AACd,aAAO,KAAK,mBAAkB,EAAG;IACnC;IACA,IAAI,aAAa,OAAoB;AACnC,WAAK,mBAAkB,EAAG,eAAe;IAC3C;;;;IAKA,IAAI,iBAAc;AAChB,aAAO,KAAK,mBAAkB,EAAG;IACnC;IACA,IAAI,eAAe,OAAoB;AACrC,WAAK,mBAAkB,EAAG,iBAAiB;IAC7C;;;;IA2CA,IAAI,gBAAa;AACf,YAAM,QAAQ,KAAK,SAAQ;AAC3B,UAAI,CAAC,OAAO;AACV,eAAO;;AAGT,aAAO,MAAM;IACf;IACA,IAAI,cAAc,OAAa;AAC7B,YAAM,QAAQ,KAAK,SAAQ;AAC3B,UAAI,CAAC,OAAO;AACV;;AAGF,YAAM,gBAAgB;AACtB,WAAK,QAAQ,MAAM;IACrB;;;;IAKA,IAAI,cAAW;AACb,YAAM,QAAQ,KAAK,SAAQ;AAC3B,UAAI,CAAC,OAAO;AACV,eAAO;;AAGT,aAAO,MAAM;IACf;IACA,IAAI,YAAY,OAAkB;AAChC,YAAM,QAAQ,KAAK,SAAQ;AAC3B,UAAI,CAAC,OAAO;AACV;;AAGF,YAAM,cAAc;AACpB,WAAK,QAAQ,MAAM;IACrB;IAoBA,IAAY,WAAQ;AAClB,aAAO,KAAK,SAAS,KAAK;IAC5B;;;;;;IAkBA,SAAM;AACJ,WAAK,mBAAkB,EAAG,OAAM;IAClC;IAcA,gBAAgB,MAAe;AAG7B,WAAK,mBAAkB,EAAG,aACxB,GAAI,IAAqD;AAE3D,WAAK,QAAQ,KAAK,mBAAkB,EAAG;IACzC;;;;;;;;;;IAWA,kBACE,OACA,KACA,WAA2C;AAE3C,WAAK,mBAAkB,EAAG,kBAAkB,OAAO,KAAK,SAAS;IACnE;;;;;;;;;IAUA,SAAS,eAAsB;AAC7B,YAAM,QAAQ,KAAK,SAAQ;AAC3B,UAAI,CAAC,OAAO;AACV;;AAGF,YAAM,SAAS,aAAa;AAC5B,WAAK,QAAQ,MAAM;IACrB;;;;;;;;;IAUA,OAAO,eAAsB;AAC3B,YAAM,QAAQ,KAAK,SAAQ;AAC3B,UAAI,CAAC,OAAO;AACV;;AAGF,YAAM,OAAO,aAAa;AAC1B,WAAK,QAAQ,MAAM;IACrB;;;;IAKA,QAAK;AACH,WAAK,QAAQ;AACb,WAAK,QAAQ,KAAK,aAAa,OAAO,KAAK;AAC3C,WAAK,cAAc;AACnB,WAAK,kBAAkB;IACzB;IAES,yBACP,WACA,UACA,UAAuB;AAEvB,UAAI,cAAc,WAAW,KAAK,OAAO;AAGvC;;AAGF,YAAM,yBAAyB,WAAW,UAAU,QAAQ;IAC9D;IAEmB,SAAM;AACvB,YAAM,UAAU;QACd,YAAY,KAAK;QACjB,SAAS,CAAC,KAAK,YAAY,KAAK;QAChC,YAAY,KAAK,SAAS;QAC1B,cAAc,KAAK;;AAGrB,aAAO;gCACqBC,GAAS,OAAO;UACtC,KAAK,YAAW;;;IAGxB;IAEmB,QAAQ,mBAAiC;AAK1D,YAAM,QAAQ,KAAK,mBAAkB,EAAG;AACxC,UAAI,KAAK,UAAU,OAAO;AAIxB,aAAK,QAAQ;;IAEjB;IAEQ,cAAW;AACjB,aAAOC,MAAc,KAAK;;cAEhB,KAAK,MAAM;kBACP,KAAK;eACR,KAAK;mBACD,KAAK,aAAY;iBACnB,KAAK;iBACL,KAAK;mBACH,KAAK;cACV,KAAK;YACP,KAAK;mBACE,CAAC,CAAC,KAAK;kBACR,KAAK;mBACJ,KAAK,SAAS;wBACT,KAAK;;QAErB,KAAK,kBAAiB;QACtB,KAAK,sBAAqB;QAC1B,KAAK,mBAAkB;;QAEvB,KAAK;IACX;IAEQ,oBAAiB;AACvB,aAAO;;gDAEqC,KAAK;;;IAGnD;IAEQ,qBAAkB;AACxB,aAAO;;iDAEsC,KAAK;;;IAGpD;IAEQ,wBAAqB;AAC3B,YAAM,QAAmB,EAAC,aAAa,KAAK,cAAa;AACzD,YAAM,YACH,KAAyB,aAAa,KAAK,SAAS;AAGvD,YAAM,eAAe,KAAK;AAI1B,YAAM,gBAAgB,KAAK,aAAa,MAAM;AAC9C,YAAM,gBAAgB,KAAK,aAAa,MAAM;AAC9C,UAAI,KAAK,SAAS,YAAY;AAC5B,eAAO;;;kBAGKD,GAAS,KAAK;;yBAEP,KAAK;uBACP;yBACE,gBAAgB;sBACnB,KAAK;sBACL,eAAe,KAAK,YAAY;sBAChC,eAAe,KAAK,YAAY;wBAC9B,KAAK,eAAe;sBACtB,KAAK;sBACL,KAAK;iBACV,KAAK;iBACL,KAAK;mBACHE,GAAK,KAAK,KAAK;oBACd,KAAK;mBACN,KAAK;kBACN,KAAK;mBACJ,KAAK;oBACJ,KAAK;;;AAIrB,YAAM,SAAS,KAAK,aAAY;AAChC,YAAM,SAAS,KAAK,aAAY;AAKhC,YAAM,YAAY,KAAK;AACvB,aAAO;;UAED;;;kBAGQF,GAAS,KAAK;;yBAEP,KAAK;uBACP;yBACE,gBAAgB;sBACnB,KAAK;sBACL,aAAa;gBAClB,KAAK,OAAO;sBACP,eAAe,KAAK,YAAY;gBACrC,KAAK,OAAO;sBACP,eAAe,KAAK,YAAY;oBAClC,KAAK,WAAW;wBACZ,KAAK,eAAe;sBACtB,KAAK;sBACL,KAAK;sBACL,KAAK;iBACT,KAAK,QAAQ;iBACd,KAAK;mBACHE,GAAK,KAAK,KAAK;oBACd,KAAK;mBACN,KAAK;kBACN,KAAK;mBACJ,KAAK;oBACJ,KAAK;UACf;;;IAGR;IAEQ,eAAY;AAClB,aAAO,KAAK;QAAY,KAAK;;QAA2B;MAAK;IAC/D;IAEQ,eAAY;AAClB,aAAO,KAAK;QAAY,KAAK;;QAA2B;MAAI;IAC9D;IAEQ,YAAY,MAAc,UAAiB;AACjD,UAAI,CAAC,MAAM;AACT,eAAO;;AAGT,YAAM,UAAU;QACd,UAAU;QACV,UAAU,CAAC;;AAGb,aAAO,iBAAoBF,GAAS,OAAO,MAAM;IACnD;IAEQ,eAAY;AAClB,aAAO,KAAK,QAAQ,KAAK,YAAY,KAAK;IAC5C;IAEQ,oBAAiB;AAKvB,WAAK,UAAU,KAAK,iBAAiB,QAAQ,QAAQ,KAAK;IAC5D;IAEQ,YAAY,OAAiB;AACnC,WAAK,QAAQ;AACb,WAAK,QAAS,MAAM,OAA4B;IAClD;IAEQ,gBAAgB,OAAY;AAClC,sBAAgB,MAAM,KAAK;IAC7B;IAEQ,qBAAkB;AACxB,UAAI,CAAC,KAAK,iBAAiB;AAMzB,aAAK,kBAAiB;AACtB,aAAK,eAAc;;AAGrB,UAAI,KAAK,iBAAiB;AAIxB,aAAK,eAAc;;AAGrB,aAAO,KAAK;IACd;IAEQ,WAAQ;AACd,UAAI,KAAK,SAAS,YAAY;AAC5B,eAAO;;AAGT,aAAO,KAAK,mBAAkB;IAChC;IAEQ,mBAAgB;AACtB,WAAK,iBAAiB,KAAK,aAAa,SAAS;AACjD,WAAK,kBAAkB,KAAK,cAAc,SAAS;IACrD;IAMS,CAAC,YAAY,IAAC;AACrB,aAAO,KAAK;IACd;IAES,oBAAiB;AACxB,WAAK,MAAK;IACZ;IAES,yBAAyB,OAAa;AAC7C,WAAK,QAAQ;IACf;IAES,QAAK;AAGZ,WAAK,mBAAkB,EAAG,MAAK;IACjC;IAEA,CAAC,eAAe,IAAC;AACf,aAAO,IAAI,mBAAmB,OAAO;QACnC,OAAO;QACP,iBAAiB,KAAK;QACtB;IACJ;IAEA,CAAC,iBAAiB,IAAC;AACjB,aAAO,KAAK;IACd;IAEA,CAAC,gBAAgB,EAAE,cAA0B;AAE3C,oBAAc,eAAc;AAE5B,YAAM,cAAc,KAAK,aAAY;AACrC,WAAK,cAAc,CAAC,CAAC;AACrB,WAAK,kBAAkB,KAAK;AAE5B,UAAI,gBAAgB,KAAK,aAAY,GAAI;AACvC,aAAK,OAAO,gBAAe;;IAE/B;;AAlrBA,GAAA,MAAA;AACE,8BAA0B,SAAS;EACrC,GAAC;AAGe,YAAA,oBAAoC;IAClD,GAAGD,GAAW;IACd,gBAAgB;;AASwB,aAAA;IAAzC,EAAS,EAAC,MAAM,SAAS,SAAS,KAAI,CAAC;;AAUH,aAAA;IAApC,EAAS,EAAC,WAAW,aAAY,CAAC;;AAYvB,aAAA;IAAX,EAAQ;;AAUiC,aAAA;IAAzC,EAAS,EAAC,MAAM,SAAS,SAAS,KAAI,CAAC;;AAK5B,aAAA;IAAX,EAAQ;;AAK6B,aAAA;IAArC,EAAS,EAAC,WAAW,cAAa,CAAC;;AAKE,aAAA;IAArC,EAAS,EAAC,WAAW,cAAa,CAAC;;AAMpC,aAAA;IADC,EAAS,EAAC,MAAM,SAAS,WAAW,mBAAkB,CAAC;;AAOxD,aAAA;IADC,EAAS,EAAC,MAAM,SAAS,WAAW,oBAAmB,CAAC;;AAOf,aAAA;IAAzC,EAAS,EAAC,WAAW,kBAAiB,CAAC;;AAMC,aAAA;IAAxC,EAAS,EAAC,WAAW,iBAAgB,CAAC;;AAMb,aAAA;IAAzB,EAAS,EAAC,MAAM,OAAM,CAAC;;AAME,aAAA;IAAzB,EAAS,EAAC,MAAM,OAAM,CAAC;;AAGY,aAAA;IAAnC,EAAS,EAAC,SAAS,KAAI,CAAC;;AAOb,aAAA;IAAX,EAAQ;;AAQiB,aAAA;IAAzB,EAAS,EAAC,MAAM,OAAM,CAAC;;AAOZ,aAAA;IAAX,EAAQ;;AAQiB,aAAA;IAAzB,EAAS,EAAC,MAAM,OAAM,CAAC;;AAK4B,aAAA;IAAnD,EAAS,EAAC,MAAM,SAAS,WAAW,aAAY,CAAC;;AAQtC,aAAA;IAAX,EAAQ;;AAU8C,aAAA;IAAtD,EAAS,EAAC,SAAS,MAAM,WAAW,gBAAe,CAAC;;AAQX,aAAA;IAAzC,EAAS,EAAC,MAAM,SAAS,SAAS,KAAI,CAAC;;AAOE,aAAA;IAAzC,EAAS,EAAC,MAAM,SAAS,SAAS,KAAI,CAAC;;AAsC5B,aAAA;IAAX,EAAQ;;AAsBT,aAAA;IADC,EAAS,EAAC,SAAS,KAAI,CAAC;;AASE,aAAA;IAA1B,EAAS,EAAC,SAAS,KAAI,CAAC;;AAkDR,aAAA;IAAhB,EAAK;;AACW,aAAA;IAAhB,EAAK;;AAIW,aAAA;IAAhB,EAAK;;AAKW,aAAA;IAAhB,EAAK;;AAOW,aAAA;IADhBI,GAAM,QAAQ;;AAKmB,aAAA;IAAjCA,GAAM,QAAQ;;AAEE,aAAA;IADhBC,GAAsB,EAAC,MAAM,eAAc,CAAC;;AAG5B,aAAA;IADhBA,GAAsB,EAAC,MAAM,gBAAe,CAAC;;;;ACvY1C,MAAO,kBAAP,cAA+B,UAAS;IAA9C,cAAA;;AACqB,WAAA,WAAWC;IAChC;;;;ACVO,MAAMC,WAASC;;;;ACuBf,MAAM,oBAAN,MAAMC,2BAA0B,gBAAe;IAA/C,cAAA;;AAGuB,WAAA,WAAWC;IACzC;;AAHkB,oBAAA,SAA8B,CAACC,UAAcA,QAAY;AAD9D,sBAAiB,WAAA;IAD7B,EAAc,sBAAsB;KACxB,iBAAiB;;;ACvBvB,MAAMC,WAASC;;;;ACQhB,MAAO,oBAAP,cAAiC,UAAS;IAAhD,cAAA;;AACqB,WAAA,WAAWC;IAChC;;;;ACaO,MAAM,sBAAN,MAAMC,6BAA4B,kBAAiB;IAAnD,cAAA;;AAGuB,WAAA,WAAWC;IACzC;;AAHkB,sBAAA,SAA8B,CAACC,UAAcA,QAAc;AADhE,wBAAmB,WAAA;IAD/B,EAAc,wBAAwB;KAC1B,mBAAmB;;;ACbzB,MAAM,yBAAN,cAAqCC,GAAW;AAAA,IACrD,SAAS;AACP,aAAO;AAAA;AAAA;AAAA;AAAA,IAIT;AAAA,EA8EF;AA5EE,EARW,uBAQJ,SAASC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AARL,2BAAN;AAAA,IADN,EAAc,0BAA0B;AAAA,KAC5B;;;ACDN,MAAM,8BAAN,cAA0CC,GAAW;AAAA,IAC1D,SAAS;AACP,aAAO;AAAA,IACT;AAAA,EAwCF;AAtCE,EALW,4BAKJ,SAASC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALL,gCAAN;AAAA,IADN,EAAc,gCAAgC;AAAA,KAClC;;;ACsHb,MAAMC,KAAiC,CACrCC,KACAC,OAAAA;AAAAA,QAAAA,KAAAA;AAEA,UAAMC,KAAWF,IAAOG;AACxB,QAAA,WAAID;AACF,aAAA;AAEF,eAAWE,OAAOF;AAAAA,gBAShBG,OAAAC,MAACF,KAA2D,SAAA,WAAAG,OAAAA,IAAA,KAAAC,KAC1DP,IAAAA,KACA,GAGFF,GAA+BK,KAAKH,EAAAA;AAEtC,WAAA;EAAW;AAxBb,MAiCMQ,MAAkCL,CAAAA,QAAAA;AACtC,QAAIJ,IAAQE;AACZ,OAAG;AACD,UAAA,YAAKF,KAASI,IAAIM;AAChB;AAEFR,MAAAA,MAAWF,GAAOG,MAClBD,IAASS,OAAOP,GAAAA,GAChBA,MAAMJ;IAAAA,SACoB,OAAnBE,QAAAA,MAAAA,SAAAA,IAAUU;EAAY;AA1CjC,MA6CMC,KAA6BT,CAAAA,QAAAA;AAGjC,aAASJ,IAASA,KAASI,IAAIM,MAAWN,MAAMJ,IAAQ;AACtD,UAAIE,MAAWF,GAAOG;AACtB,UAAA,WAAID;AACFF,QAAAA,GAAOG,OAA2BD,MAAW,oBAAIY;eACxCZ,IAASa,IAAIX,GAAAA;AAGtB;AAEFF,MAAAA,IAASc,IAAIZ,GAAAA,GACba,GAAqBjB,EAAAA;IACtB;EAAA;AAUH,WAASkB,IAAyCC,KAAAA;AAAAA,eAC5CC,KAAKjB,QACPM,IAA+BW,IAAAA,GAC/BA,KAAKV,OAAWS,KAChBN,GAA0BO,IAAAA,KAE1BA,KAAKV,OAAWS;EAEpB;AAuBA,WAASE,GAEPpB,KACAqB,KAAAA,OACAC,MAAgB,GAAA;AAEhB,UAAMC,KAAQJ,KAAKK,MACbvB,MAAWkB,KAAKjB;AACtB,QAAA,WAAID,OAA4C,MAAlBA,IAASU;AAGvC,UAAIU;AACF,YAAII,MAAMC,QAAQH,EAAAA;AAIhB,mBAASI,MAAIL,KAAeK,MAAIJ,GAAMK,QAAQD;AAC5C7B,YAAAA,GAA+ByB,GAAMI,GAAAA,GAAAA,KAAI,GACzCnB,IAA+Be,GAAMI,GAAAA,CAAAA;;AAErB,kBAATJ,OAITzB,GAA+ByB,IAAAA,KAAyB,GACxDf,IAA+Be,EAAAA;;AAGjCzB,QAAAA,GAA+BqB,MAAMnB,GAAAA;EAEzC;AAKA,MAAMgB,KAAwBb,CAAAA,QAAAA;AAAAA,QAAAA,IAAAA,IAAAA,KAAAA;AACvBA,IAAAA,IAAkB0B,QAAQC,GAASC,UAAAA,UACtC1B,MAAA2B,MAAC7B,KAAkB8B,SAAAA,WAAAA,OAAAA,IAAAA,OACjBb,KAAAA,UACFhB,MAAA8B,KAAC/B,KAAkBgC,SAAAA,WAAAA,OAAAA,GAAAA,OAA8BlB;EAClD;AAoBG,MAAgBmB,KAAhB,cAAuCC,GAAAA;IAA7CC,cAAAA;AAAAA,YAAAA,GAAAA,SAAAA,GAYWnB,KAAwBjB,OAAAA;IAgFlC;IAzEUqC,KACPC,KACAzC,IACA0C,KAAAA;AAEAC,YAAMH,KAAaC,KAAMzC,IAAQ0C,GAAAA,GACjC7B,GAA0BO,IAAAA,GAC1BA,KAAKnB,cAAcwC,IAAKG;IACzB;IAcQC,KACP5C,KACA6C,KAAAA,MAAsB;AAAA,UAAAtC,KAAAuC;AAElB9C,MAAAA,QAAgBmB,KAAKnB,gBACvBmB,KAAKnB,cAAcA,KACfA,MACc,UAAhBK,MAAAc,KAAK4B,gBAAAA,WAAW1C,OAAAA,IAAA2C,KAAA7B,IAAAA,IAEC,UAAjBf,KAAAe,KAAK8B,iBAAAA,WAAY7C,MAAAA,GAAA4C,KAAA7B,IAAAA,IAGjB0B,OACF/C,GAA+BqB,MAAMnB,GAAAA,GACrCQ,IAA+BW,IAAAA;IAElC;IAYD+B,SAAS3B,IAAAA;AACP,UAAI4B,IAAmBhC,KAAKiC,IAAAA;AAC1BjC,aAAKiC,KAAOC,KAAW9B,IAAOJ,IAAAA;WACzB;AAML,cAAMmC,MAAY,CAAA,GAAKnC,KAAKiC,KAAO5B,IAAAA;AACnC8B,QAAAA,IAAUnC,KAAKoC,IAAAA,IAAqBhC,IACnCJ,KAAKiC,KAAyBC,KAAWC,KAAWnC,MAAM,CAAA;MAC5D;IACF;IAQS8B,eAAAA;IAAiB;IACjBF,cAAAA;IAAgB;EAAA;;;AC9Xf,MAAAS,KACX,oBAAIC;;;ACUN,MAAIC,KAAI;AAER,MAAMC,KAA6C,oBAAIC;AAAvD,MACMC,MAAiD,oBAAIC;AAD3D,MAgCaC,KAAiB,MAC5B,IAAIC,QAASC,CAAAA,OAAYC,sBAAsBD,EAAAA,CAAAA;AAjCjD,MAyCaE,KAAU,CAAC,EAACC,SAAS,EAAA,CAAA;AAzClC,MA2CaC,KAAS,CAAC,EAACC,SAAS,EAAA,GAAI,EAACA,SAAS,EAAA,CAAA;AA3C/C,MAkDMC,KAAS,CAACC,IAAWC,QAAAA;AACzB,UAAMC,KAAIF,KAAIC;AACd,WAAa,MAANC,KAAAA,SAAsBA;EAAC;AApDhC,MAsDMC,KAAa,CAACH,IAAWC,QAAAA;AAC7B,UAAMC,KAAIF,KAAIC;AACd,WAAa,MAANC,KAAAA,SAAsBA;EAAC;AAxDhC,MA4DaE,KAAiB,EAC5BC,MAAM,CAACL,IAAWC,QAAAA;AAChB,UAAMK,KAAQP,GAAOC,IAAGC,GAAAA;AACxB,WAAO,EAACK,OAAAA,IAAOC,WAAWD,MAAS,cAAcA,QAAAA;EAAW,GAE9DE,KAAK,CAACR,IAAWC,QAAAA;AACf,UAAMK,KAAQP,GAAOC,IAAGC,GAAAA;AACxB,WAAO,EAACK,OAAAA,IAAOC,WAAWD,MAAS,cAAcA,QAAAA;EAAW,GAE9DG,OAAO,CAACT,IAAWC,QAAAA;AACjB,UAAMK,KAAQH,GAAWH,IAAGC,GAAAA;AAC5B,WAAO,EAACK,OAAAA,IAAOC,WAAWD,MAAS,UAAUA,MAAAA;EAAS,GAExDI,QAAQ,CAACV,IAAWC,QAAAA;AAClB,UAAMK,KAAQH,GAAWH,IAAGC,GAAAA;AAC5B,WAAO,EAACK,OAAAA,IAAOC,WAAWD,MAAS,UAAUA,MAAAA;EAAS,EAAA;AA3E1D,MA+EaK,KAAmD,EAC9DC,UAAU,KACVC,QAAQ,cAAA;AAjFV,MAoFaC,KAA0C,CACrD,QACA,OACA,SACA,UACA,WACA,SACA,YAAA;AA3FF,MAmHMC,KAA2C,oBAAIC;AAK/C,MAAOC,KAAP,cAAuBC,GAAAA;IAoB3BC,YAAYC,IAAAA;AAEV,UADAC,MAAMD,EAAAA,GAlBAE,KAAWC,IAAmB,MAC9BD,KAAYE,IAAgB,MAC5BF,KAAcG,IAAAA,MAKtBH,KAASI,YAAAA,OAYHN,GAAKO,SAASC,GAASC;AACzB,cAAUC,MACR,6DAAA;AAGJR,WAAKS,eAAAA;IACN;IAEDA,iBAAAA;AAAAA,UAAAA;AACsB,gBAApBC,KAAAV,KAAKW,oBAAAA,WAAeD,MAAAA,GAAAE,KAAAZ,IAAAA,GACpBA,KAAKa,WAAW,IAAIC,QAASC,CAAAA,OAAAA;AAC3Bf,aAAKgB,IAAmBD;MAAC,CAAA;IAE5B;IAEDE,MAAAA,kBAAAA;AAAAA,UAAAA;AACuB,gBAArBP,KAAAV,KAAKgB,MAAAA,WAAgBN,MAAAA,GAAAE,KAAAZ,IAAAA,GACrBA,KAAKgB,IAAAA;IACN;IAEDE,OAAOC,KAAAA;AACL,aAAOC;IACR;IAEDC,gBAAAA;AACE,aAAOC,GAAcC,IAAIvB,KAAKwB,CAAAA;IAC/B;IAEDC,aAAAA;AAAAA,UAAAA;AACE,aAAOzB,KAAK0B,QAAQC,aAAkC,UAAtBjB,KAAAV,KAAKqB,cAAAA,MAAAA,WAAiBX,KAAAA,SAAAA,GAAAiB;IACvD;IAEQC,OAAO9B,IAAAA,CAAsB4B,GAAAA,GAAAA;AAAAA,UAAAA;AACpC,YAAMG,MAAAA,WAAc7B,KAAKwB;AAWzB,aAVIK,QACF7B,KAAKwB,IAAsB,UAAdd,KAAAZ,GAAK4B,YAAAA,WAAShB,KAAAA,SAAAA,GAAAoB,MAC3B9B,KAAKwB,EAAMO,cAAc/B,IAAAA,GACzBA,KAAKgC,UAAUlC,GAAKkC,SACpBvC,GAAiBwC,IAAIjC,KAAKgC,SAAShC,IAAAA,IAErCA,KAAKkC,oBAAoBR,MACrBG,OAAkC,cAAA,OAAZH,QACxB1B,KAAKmC,EAAYT,GAAAA,GAEZ1B,KAAKkB,OAAOQ,GAAAA;IACpB;IAKOS,EAAYT,IAAAA;AAAAA,UAAAA,KAAAA;AAClBA,MAAAA,KAAUA,QAAAA,KAAAA,KAAW,CAAA;AAErB,YAAMU,MAAapC,KAAKqB,cAAAA;AAAAA,iBACpBe,SACFV,KAAU,EAAA,GACLU,IAAWC,gBAAAA,GACXX,GAAAA,GAEGY,kBAAkB,EAAA,GACrBF,IAAWC,eAAeC,iBAAAA,GAC1BZ,GAAQY,gBAAAA,IAAAA,UAIf5B,OAAA6B,KAAAb,IAASc,eAAAA,WAAAA,QAAAA,GAAAA,aAAehD,KACxBQ,KAAK0B,UAAUA;IAChB;IAGOe,IAAAA;AACN,YAAMC,KAAmB,CAAA,GACnBC,MAAS3C,KAAKgC,QAAQY,sBAAAA,GACtBC,KAAgBC,iBAAiB9C,KAAKgC,OAAAA;AAU5C,aATAhC,KAAK0B,QAAQc,WAAYO,QAASC,CAAAA,QAAAA;AAAAA,YAAAA;AAChC,cAAMpE,KAC4B,UAAhC8B,MAAAiC,IAAOK,GAAAA,MAAAA,WAAyBtC,MAAAA,MAC9B5B,GAAekE,GAAAA,IAAAA,SACbH,GAAcG,GAAAA,GAEdC,KAAQC,OAAOtE,EAAAA;AACrB8D,QAAAA,GAAMM,GAAAA,IAAKG,MAAMF,EAAAA,IAAgBrE,KAAPwE,KAAYH;MAAK,CAAA,GAEtCP;IACR;IAGOW,IAAAA;AACN,UACErE,IADEsE,MAAAA;AAiBJ,aAfItD,KAAK0B,QAAQ6B,UACfvE,KAAQgB,KAAK0B,QAAQ6B,MAAAA,GACrBD,OA3IU,CAACtE,IAAgBwE,QAAAA;AAC/B,YAAIC,MAAMC,QAAQ1E,EAAAA,GAAAA;AAEhB,cACEyE,MAAMC,QAAQF,GAAAA,KACdA,IAASG,WAAW3E,GAAM2E,UAC1B3E,GAAM4E,MAAM,CAAChF,IAAGiF,OAAMjF,OAAO4E,IAA4BK,EAAAA,CAAAA;AAEzD,mBAAA;QAAO,WAEAL,QAAaxE;AAEtB,iBAAA;AAEF,eAAA;MAAW,GA6HSA,IAAOgB,KAAK8D,CAAAA,IAE9B9D,KAAKG,IACHH,KAAKwB,EAAOuC,cAAAA,CACX/D,KAAKyB,WAAAA,KAAAA,CACLzB,KAAKgE,YAAAA,KACNV,OACAtD,KAAKgC,QAAQiC,aACXjE,KAAKG,MAGPH,KAAK8D,IAAiBL,MAAMC,QAAQ1E,EAAAA,IAASyE,MAAMS,KAAKlF,EAAAA,IAASA,KAE5DgB,KAAKG;IACb;IAEDgE,aAAAA;AAAAA,UAAAA;AAGwC,oBAAA,OAA3BnE,KAAKkC,qBACdlC,KAAKmC,EAAYnC,KAAKkC,kBAAAA,CAAAA,GAEpBlC,KAAKqD,EAAAA,MACPrD,KAAKoE,IAAcpE,KAAKyC,EAAAA,GAExBzC,KAAKC,IACa,UAAhBS,KAAAV,KAAKC,MAAAA,WAAWS,KAAAA,KAAKV,KAAKgC,QAAQqC,YACpCrE,KAAKE,IAAeF,KAAKgC,QAAQsC;IAEpC;IAEDrD,MAAAA,cAAAA;AACE,UAAA,CACGjB,KAAKG,KAAAA,CACLH,KAAKgC,QAAQiC,eACbjE,KAAK0B,QAAQ6C,eAAAA,CAAgBvE,KAAKwE;AAEnC;AAKF,UAAIC;AAHJzE,WAAK0E,QAAAA,GAAAA,MAECC;AAEN,YAAMC,MAAY5E,KAAK6E,EAAAA,GAGjBC,KAAmB9E,KAAK+E,EAC5B/E,KAAK0B,QAAQY,iBACbsC,GAAAA,GAEII,MAAWhF,KAAKyC,EAAAA;AAEtB,UAAA,WAAIzC,KAAKoE,GAA2B;AAClC,cAAA,EAAMF,MAACA,IAAIe,IAAEA,IAAAA,IAAMjF,KAAKkF,EACtBlF,KAAKoE,GACLY,KACAJ,GAAAA;AAEF5E,aAAKmF,IAAI,YAAY,CAACnF,KAAKoE,GAAaY,KAAUd,IAAMe,GAAAA,CAAAA,GACxDR,KAASzE,KAAKoF,mBAAmBlB,IAAMe,GAAAA;MAExC,OAAM;AACL,cAAMI,KAAeC,GAAkB/D,IAAIvB,KAAK0B,QAAQ6D,IAAAA;AACxD,YAAIF,IAAc;AAEhBC,UAAAA,GAAkBE,OAAOxF,KAAK0B,QAAQ6D,IAAAA;AACtC,gBAAA,EAAMrB,MAACA,KAAIe,IAAEA,IAAAA,IAAMjF,KAAKkF,EACtBG,IACAL,KACAJ,GAAAA;AAEFH,UAAAA,KAASzE,KAAKoF,mBAAmBlB,KAAMe,GAAAA,GAEvCR,KAASzE,KAAK0B,QAAQ+D,KAClB,CACE,EAAA,GAAIzF,KAAK0B,QAAQ+D,GAAG,CAAA,GAAA,GAAOhB,GAAQ,CAAA,EAAA,GAAA,GAChCzE,KAAK0B,QAAQ+D,GAAGC,MAAM,CAAA,GACzBjB,GAAQ,CAAA,CAAA,IAEVA,IAEJkB,MACAlB,GAAQ1B,QAAS6C,CAAAA,OAAOA,GAAEC,SAASF,EAAAA;QACpC;AAAU3F,eAAK0B,QAAQ+D,OACtBhB,KAAS,CAAA,GAAIzE,KAAK0B,QAAQ+D,IAAI,CAAE,CAAA;MAEnC;AACDzF,WAAK8F,QAAQrB,IAAQK,EAAAA;IACtB;IAEDiB,cAAAA;AAAAA,UAAAA;AAAAA,iBACM/F,KAAKgG,MACPhG,KAAKgC,QAAQiE,aAAa,SAAyB,UAAhBvF,KAAAV,KAAKgG,MAAAA,WAAWtF,KAAAA,KAAA,EAAA,GACnDV,KAAKgG,IAAAA;IAER;IAEDE,eAAAA;AAAAA,UAAAA,IAAAA;AACElG,WAAKgG,IAAUhG,KAAKgC,QAAQmE,aAAa,OAAA,GAEb,UAA5BzF,KAACV,KAAKoG,iBAAAA,WAAsB1F,MAAAA,GAAAwF,aAAAA,GACT,UAAnB3D,MAAAvC,KAAKoG,iBAAAA,WAAc7D,OAAAA,IAAA8D,OAAAA;IACpB;IAEQC,cAAAA;IAAgB;IAGhBrF,MAAAA,eAAAA;AAAAA,UAAAA;AACP,UAAA,CAAKjB,KAAKG;AACR;AAKF,UAAA,WAHIH,KAAK0B,QAAQ6E,MACfjB,GAAkBrD,IAAIjC,KAAK0B,QAAQ6E,IAAIvG,KAAKoE,CAAAA,GAAAA,WAE1CpE,KAAK0B,QAAQ8E;AACf;AAIF,UAFAxG,KAAK0E,QAAAA,GAAAA,MACCC,GAAAA,GACc,UAAA8B,KAAhBzG,KAAKC,MAAAA,WAAWS,KAAAA,SAAAA,GAAEuD,aAAa;AAEjC,cAAMyC,KACJ1G,KAAKE,KAAgBF,KAAKE,EAAamE,eAAerE,KAAKC,IACvDD,KAAKE,IACL;AAGN,YAFAF,KAAKC,EAAY0G,aAAa3G,KAAKgC,SAAS0E,EAAAA,GAExC1G,KAAK0B,QAAQkF,cAAc;AAE7B,gBAAMC,KAAU7G,KAAKyC,EAAAA;AACrBzC,eAAKmF,IAAI,iBAAA;AAIT,gBAAMpG,MACHiB,KAAKoE,EAAarF,OAAmB8H,GAAQ9H,MAC1CG,KAAOc,KAAKoE,EAAalF,MAAkB2H,GAAQ3H;AAAAA,YACI,aAA5C4D,iBAAiB9C,KAAKgC,OAAAA,EAAS8E,aACtB,MAAT/H,OAAsB,MAARG,OAC7Bc,KAAKgC,QAAQ+E,MAAMD,WAAW,aAEnB,MAAT/H,QACFiB,KAAKgC,QAAQ+E,MAAMhI,OAAOA,MAAO,OAEvB,MAARG,OACFc,KAAKgC,QAAQ+E,MAAM7H,MAAMA,KAAM;QAElC;MACF;AAGD,YAAMoD,MAAkBtC,KAAK+E,EAC3B/E,KAAK0B,QAAQY,eAAAA;AAAAA,YAETtC,KAAK8F,QAAQ9F,KAAK0B,QAAQ8E,KAAKlE,GAAAA,GACrCtC,KAAKgC,QAAQgF,OAAAA;IACd;IAEDtC,UAAAA;AACE1E,WAAKS,eAAAA;IACN;IAEDwG,QAAAA;AAAAA,UAAAA,IAAAA;AACsB,gBAApB1E,OAAA7B,KAAAV,KAAK0B,SAAQwF,YAAAA,WAAO3E,OAAAA,IAAA3B,KAAAF,IAAGV,IAAAA;IACxB;IAEDmH,UAAUC,IAAAA;AAAAA,UAAAA,KAAAA;AACJA,MAAAA,OACqB,UAAvB7E,MAAA7B,MAAAV,KAAK0B,SAAQ2F,eAAAA,WAAU9E,MAAAA,GAAA3B,KAAAF,KAAGV,IAAAA,IAE5BA,KAAKoE,IAAAA,QACLpE,KAAKsH,sBAAAA,QACLtH,KAAKyE,SAAAA,QACLzE,KAAKW,gBAAAA;IACN;IAEOkE,IAAAA;AACN,YAAMD,KAAY,CAAA;AAClB,eACM5B,MAA6BhD,KAAKgC,QAAQqC,YAC9CrB,KACAA,MAAIA,QAAAA,MAAAA,SAAAA,IAAGqB,YACP;AACA,cAAM3F,KAAIe,GAAiB8B,IAAIyB,GAAAA;AAC3BtE,QAAAA,MAAAA,CAAMA,GAAE+C,WAAAA,KAAgB/C,MAC1BkG,GAAU2C,KAAK7I,EAAAA;MAElB;AACD,aAAOkG;IACR;IAEaJ,IAAAA,iBAAAA;AACZ,YAAMgD,KAAeC,IAAcC,IAAI1H,KAAKwB,CAAAA;AAM5C,aALKgG,MACHxH,KAAKwB,EAAOmG,eAAeC,KAAK,MAAA;AAC9BH,QAAAA,IAAcI,IAAI7H,KAAKwB,CAAAA;MAAO,CAAA,GAG3BgG;IACR;IAEOzC,EACNrD,IACAkD,MAAuB5E,KAAK6E,EAAAA,GAAAA;AAG5B,YAAMvC,KAAkB,EAAA,GAAIjD,GAAAA;AAK5B,aAJAuF,IAAU7B,QAASrE,CAAAA,OACjBoJ,OAAOC,OAAOzF,IAAiB5D,GAAEgD,QAAQY,eAAAA,CAAAA,GAE3CwF,OAAOC,OAAOzF,IAAiBZ,EAAAA,GACxBY;IACR;IAGO4C,EACNhB,IACAe,KACAL,IAAAA;AAEAV,MAAAA,KAAO,EAAA,GAAIA,GAAAA,GACXe,MAAK,EAAA,GAAIA,IAAAA;AACT,YAAM+C,MAAgBpD,GACnBqD,IAAKvJ,CAAAA,OAAMA,GAAE4I,mBAAAA,EACbY,OAAQxJ,CAAAA,OAAAA,WAAMA,EAAAA;AACjB,UAAIyJ,MAAU,GACVC,KAAU;AAqBd,aAAA,WApBIJ,QAEFA,IAAcjF,QAASrE,CAAAA,OAAAA;AACjBA,QAAAA,GAAES,UACJgJ,OAAqBzJ,GAAES,QAErBT,GAAEU,WACJgJ,MAAqB1J,GAAEU;MACxB,CAAA,GAAA,WAGC8E,GAAKnF,QAAAA,WAAsBkG,IAAGlG,SAChCmF,GAAKnF,OAAOoJ,MAAWjE,GAAKnF,MAC5BkG,IAAGlG,OAAOoJ,MAAWlD,IAAGlG,OAAAA,WAEtBmF,GAAKhF,OAAAA,WAAqB+F,IAAG/F,QAC/BgF,GAAKhF,MAAMkJ,KAAWlE,GAAKhF,KAC3B+F,IAAG/F,MAAMkJ,KAAWnD,IAAG/F,OAGpB,EAACgF,MAAAA,IAAMe,IAAAA,IAAAA;IACf;IAESG,mBAAmBlB,IAAiBe,KAAeoD,KAAAA,OAAS;AAAA,UAAAC;AACpE,YAAMC,MAAsB,CAAA,GACtBC,KAAoB,CAAA;AAC1B,UAAIC,KAAAA;AACJ,YAAM/F,MAAmB,CAAA;AACzB,iBAAWM,MAAKiC,KAAI;AAClB,cAAMW,KAAI1B,GAAKlB,EAAAA,GACbyD,MAAIxB,IAAGjC,EAAAA;AACT,YAAIA,MAAKlE,IAAgB;AACvB,gBAAM4J,KAAK5J,GAAekE,EAAAA;AAC1B,cAAA,WAAI4C,MAAAA,WAAmBa;AACrB;AAEF,gBAAMkC,MAAKD,GAAG9C,IAAaa,GAAAA;AAAAA,qBACvBkC,IAAG1J,cACLyD,IAAMM,EAAAA,IAAK2F,IAAG3J,OACdyJ,KAAAA,MACAF,IAAUtJ,YAAY,GAAsB,UAAAqJ,MAAnBC,IAAUtJ,cAAAA,WAASyB,MAAAA,MAAI,MAAMiI,IAAG1J;QAE5D;AAAU2G,UAAAA,OAAMa,OAAAA,WAAKb,MAAAA,WAAmBa,QACvCgC,KAAAA,MACAF,IAAUvF,EAAAA,IAAK4C,IACf4C,GAAQxF,EAAAA,IAAKyD;MAEhB;AAKD,aAJA8B,IAAUK,kBAAkBJ,GAAQI,kBAAkBP,KAClD,kBACA,YACJrI,KAAKsH,sBAAsB5E,KACpB+F,KAAY,CAACF,KAAWC,EAAAA,IAAAA;IAChC;IAESvH,MAAAA,QACRwD,IACA/C,MAAU1B,KAAK0B,QAAQY,iBAAAA;AAEvBtC,WAAKiH,MAAAA,GACLjH,KAAKyE,SAASA;AACd,UAAI2C,KAAAA;AACJ,UAAA,CAAKpH,KAAKgE,YAAAA,KAAAA,CAAkBhE,KAAKyB,WAAAA,MAC3BzB,KAAK0B,QAAQmH,aACf7I,KAAKyE,SAASA,KAASzE,KAAK0B,QAAQmH,SAAS7I,IAAAA,GAC7CA,KAAKmF,IAAI,mBAAmBV,EAAAA,IAAAA,WAE1BA,KAAsB;AACxBzE,aAAKmF,IAAI,WAAW,CAACV,IAAQ/C,GAAAA,CAAAA,GAC7B0F,KAAAA,MACApH,KAAKoG,eAAepG,KAAKgC,QAAQ8D,QAAQrB,IAAQ/C,GAAAA;AACjD,cAAMU,MAAapC,KAAKqB,cAAAA;AACxBe,gBAAAA,OAAAA,IAAYyF,IAAI7H,IAAAA;AAChB,YAAA;AAAA,gBACQA,KAAKoG,aAAavF;QAGzB,SAFQyH,IAAP;QAED;AACDlG,gBAAAA,OAAAA,IAAY4E,OAAOhH,IAAAA;MACpB;AAGH,aADAA,KAAKmH,UAAUC,EAAAA,GACRA;IACR;IAESpD,cAAAA;AAAAA,UAAAA,IAAAA;AACR,aACmC,eAAA,UAAjCtD,KAAAV,KAAKoG,iBAAAA,WAAAA,KAAAA,SAAAA,GAAc0C,eAAAA,UAA2BvG,MAAAvC,KAAKoG,iBAAAA,WAAAA,MAAAA,SAAAA,IAAc2C;IAEpE;IAED5D,IAAI6D,IAAiBC,KAAAA;AACfjJ,WAAKI,aAAAA,CAAcJ,KAAKyB,WAAAA,KAC1ByH,QAAQ/D,IAAI6D,IAAShJ,KAAK0B,QAAQ6E,IAAI0C,GAAAA;IAEzC;EAAA;AAAA,MAwBUnD,KAAUqD,GAAUxJ,EAAAA;;;ACjkBjC,MAAMyJ,KAAmB,CAAC,OAAO,SAAS,UAAU,MAAA;AAE9C,MAAOC,MAAP,cAAwBC,GAAAA;IAM5BC,YAAYC,IAAAA;AAEV,UADAC,MAAMD,EAAAA,GACFA,GAAKE,SAASC,GAASC;AACzB,cAAUC,MACR,8DAAA;IAGL;IAEDC,OAAOC,KAA2CC,KAAAA;AAChD,aAAOC;IACR;IAEQC,OACPV,IAAAA,CACCW,KAAQC,GAAAA,GAAAA;AAAAA,UAAAA;AAST,aAAA,WAPIC,KAAKC,MACPD,KAAKC,IAAsB,UAAdC,KAAAf,GAAKgB,YAAAA,WAASD,KAAAA,SAAAA,GAAAE,MAC3BJ,KAAKC,EAAMI,cAAcL,IAAAA,IAE3BA,KAAKM,IAAWnB,GAAKoB,SACrBP,KAAKN,IAAuBI,KAC5BE,KAAKL,IAAaI,QAAAA,MAAAA,MAAa,CAAC,QAAQ,OAAO,SAAS,QAAA,GACjDC,KAAKP,OAAOK,KAAQC,GAAAA;IAC5B;IAEDS,cAAAA;AACER,WAAKS,EAAAA;IACN;IAEOA,IAAAA;AAAAA,UAAAA,IAAAA;AACN,YAAMX,MACiC,cAAA,OAA9BE,KAAKN,IACRM,KAAKN,EAAAA,IACoB,UAAzBQ,KAAAF,KAAKN,MAAAA,WAAoBQ,KAAAA,SAAAA,GAAEQ,OAC3BC,KAASb,IAAOc;AACtB,UAAA,WAAId,OAAAA,CAAyBa;AAC3B;AAEF,YAAME,MAAKf,IAAOgB,sBAAAA,GACZC,KAAKJ,GAAOG,sBAAAA;AACH,gBAAfE,MAAAhB,KAAKL,MAAAA,WAAUqB,OAAAA,IAAEC,QAASC,CAAAA,OAAAA;AACxB,cAAMC,MAAIpC,GAAiBqC,SAASF,EAAAA,IAAKL,IAAGK,EAAAA,IAAKH,GAAGG,EAAAA,IAAKL,IAAGK,EAAAA;AAC3DlB,aAAKM,EAAyBe,MAAMH,EAAAA,IAAQC,MAAH;MAAQ,CAAA;IAErD;EAAA;AAAA,MAOUG,KAAWC,GAAUvC,GAAAA;;;AChFlC,WAAAwC,KAAAA;AACC,UAAUC,IAAAA,MAAM,gBAAA;EAChB;AAyCD,WAAAC,KAAAA;AACC,QAAA,EAAIC,KAAa,IAAjB;AAKA,UAAAC,KACIC,KAAAA;AAEJ,aAAA,WAAOC,KAA6B;AACnC,YAAAC,MAAiCD;AACjCA,QAAAA,MAAAA;AAEAE,QAAAA;AAEA,eAAA,WAAOC,KAAsB;AAC5B,cAAUC,KAAuBD,IAAOE;AACxCF,UAAAA,IAAOE,IAAAA;AACPF,UAAAA,IAAOG,KAAAA;AAEP,cAAA,EApDc,IAoDRH,IAAOG,MAAsBC,GAAiBJ,GAAAA;AACnD,gBAAA;AACCA,cAAAA,IAAOK,EAAAA;YAMP,SALQC,KAAP;AACD,kBAAA,CAAKV,IAAU;AACdD,gBAAAA,MAAQW;AACRV,gBAAAA,KAAAA;cACA;YACD;AAEFI,UAAAA,MAASC;QACT;MACD;AACDF,MAAAA,KAAiB;AACjBL,MAAAA;AAEA,UAAIE;AACH,cACAD;IAlCA;AAFAD,MAAAA;EAqCD;AAeD,MAAea,KAAAA;AAAf,MAGiBC,MAAAA;AAHjB,MAIIC,KAAa;AAJjB,MAKkBC,KAAG;AALrB,MASIC,KAAgB;AAEpB,WAAAC,GAAuBC,KAAAA;AACtB,QAAA,WAAIN,IAAJ;AAIA,UAAQO,KAAGD,IAAOE;AAClB,UAAA,WAAID,MAAsBA,GAAKE,MAAYT,IAAa;AAavDO,QAAAA,KAAO,EACNG,GAAU,GACVC,GAASL,KACTM,GAAaZ,GAAYa,GACzBC,GAAAA,QACAL,GAAST,IACTe,GAAAA,QACAC,GAAAA,QACAC,GAAeV,GAAAA;AAGhB,YAAA,WAAIP,GAAYa;AACfb,UAAAA,GAAYa,EAASC,IAAcP;AAEpCP,QAAAA,GAAYa,IAAWN;AACvBD,QAAAA,IAAOE,IAAQD;AAIf,YArIe,KAqIXP,GAAYkB;AACfZ,UAAAA,IAAOa,EAAWZ,EAAAA;AAEnB,eACAA;MAAA,WAAM,OAAIA,GAAKG,GAAiB;AAEhCH,QAAAA,GAAKG,IAAW;AAehB,YAAA,WAAIH,GAAKO,GAA2B;AACnCP,UAAAA,GAAKO,EAAYF,IAAcL,GAAKK;AAEpC,cAAA,WAAIL,GAAKK;AACRL,YAAAA,GAAKK,EAAYE,IAAcP,GAAKO;AAGrCP,UAAAA,GAAKK,IAAcZ,GAAYa;AAC/BN,UAAAA,GAAKO,IAAAA;AAELd,UAAAA,GAAYa,EAAUC,IAAcP;AACpCP,UAAAA,GAAYa,IAAWN;QACvB;AAID,eAAOA;MACP;IAzEA;EA2ED;AA+CD,WAASa,IAAqBC,KAAAA;AAC7BC,SAAKC,IAASF;AACdC,SAAKZ,IAAW;AAChBY,SAAKd,IAAAA;AACLc,SAAKE,IAAAA;EACL;AAEDJ,EAAAA,IAAOK,UAAUC,IAAW,WAAA;AAC3B,WAAA;EACA;AAEDN,EAAAA,IAAOK,UAAUN,IAAa,SAAUZ,KAAAA;AACvC,QAAIe,KAAKE,MAAajB,OAAAA,WAAQA,IAAKQ,GAA2B;AAC7DR,MAAAA,IAAKS,IAAcM,KAAKE;AACxB,UAAA,WAAIF,KAAKE;AACRF,aAAKE,EAAST,IAAcR;AAE7Be,WAAKE,IAAWjB;IAChB;EACD;AAEDa,EAAAA,IAAOK,UAAUE,IAAe,SAAUpB,KAAAA;AAEzC,QAAA,WAAIe,KAAKE,GAAwB;AAChC,UAAUI,KAAGrB,IAAKQ,GACZc,MAAOtB,IAAKS;AAClB,UAAA,WAAIY,IAAoB;AACvBA,QAAAA,GAAKZ,IAAca;AACnBtB,QAAAA,IAAKQ,IAAAA;MACL;AACD,UAAA,WAAIc,KAAoB;AACvBA,QAAAA,IAAKd,IAAca;AACnBrB,QAAAA,IAAKS,IAAAA;MACL;AACD,UAAIT,QAASe,KAAKE;AACjBF,aAAKE,IAAWK;IAEjB;EACD;AAEDT,EAAAA,IAAOK,UAAUK,YAAY,SAAUC,KAAAA;AACtC,QAAMzB,KAASgB;AACf,WAAaU,GAAC,WAAA;AACb,UAAMX,MAAQf,GAAOe,OACXY,KAxQK,KAwQFX,KAAKJ;AAClBI,WAAKJ,KAAAA;AACL,UAAA;AACCa,QAAAA,IAAGV,GAAAA;MAGH,UAJD;AAGCC,aAAKJ,KAAUe;MACf;IACD,CAAA;EACD;AAEDb,EAAAA,IAAOK,UAAUS,UAAU,WAAA;AAC1B,WAAOZ,KAAKD;EACZ;AAEDD,EAAAA,IAAOK,UAAUU,WAAW,WAAA;AAC3B,WAAYd,KAAAA,QAAQ;EACpB;AAEDD,EAAAA,IAAOK,UAAUW,SAAS,WAAA;AACzB,WAAOd,KAAKD;EACZ;AAEDD,EAAAA,IAAOK,UAAUY,OAAO,WAAA;AACvB,WAAOf,KAAKC;EACZ;AAEDe,SAAOC,eAAenB,IAAOK,WAAW,SAAS,EAChDe,KADgD,WAAA;AAE/C,QAAUjC,MAAGF,GAAciB,IAAAA;AAC3B,QAAA,WAAIf;AACHA,MAAAA,IAAKG,IAAWY,KAAKZ;AAEtB,WAAYa,KAAAA;EACZ,GACDkB,KARgD,SAQ9BpB,KAAAA;AACjB,QAAIrB,cAAJ0C;AAAAA,OArTF,WAAA;AACC,cAAM,IAAAC,MAAU,mCAAA;MAChB,EAoTEC;AAGD,QAAIvB,QAAUC,KAAKC,GAAQ;AAC1B,UAAIpB,KAAiB;AACpB0C,QAAAA,GAAAA;AAGDvB,WAAKC,IAASF;AACdC,WAAKZ;AACLN,MAAAA;AA3RFF,MAAAA;AA8RE,UAAA;AACC,iBACSK,MAAGe,KAAKE,GAAAA,WAChBjB,KACAA,MAAOA,IAAKS;AAEZT,UAAAA,IAAKE,EAAQqC,EAAAA;MAId,UAVD;AASCC,QAAAA,GAAAA;MACA;IACD;EACD,EAAA,CAAA;AAGF,WAASzC,GAAUe,KAAAA;AAClB,WAAO,IAAAD,IAAWC,GAAAA;EAClB;AAED,WAAA2B,GAA0BC,KAAAA;AAIzB,aACK1C,KAAO0C,IAAOpC,GAAAA,WAClBN,IACAA,KAAOA,GAAKO;AAKZ,UACCP,GAAKI,EAAQD,MAAaH,GAAKG,KAAAA,CAC9BH,GAAKI,EAAQe,EAAAA,KACdnB,GAAKI,EAAQD,MAAaH,GAAKG;AAE/B,eAAA;AAKF,WAAA;EACA;AAED,WAAAwC,GAAwBD,KAAAA;AAavB,aACK1C,KAAO0C,IAAOpC,GAAAA,WAClBN,IACAA,KAAOA,GAAKO,GACX;AACD,UAAkBqC,MAAG5C,GAAKI,EAAQH;AAClC,UAAA,WAAI2C;AACH5C,QAAAA,GAAKU,IAAgBkC;AAEtB5C,MAAAA,GAAKI,EAAQH,IAAQD;AACrBA,MAAAA,GAAKG,IAAAA;AAEL,UAAA,WAAIH,GAAKO,GAA2B;AACnCmC,QAAAA,IAAOpC,IAAWN;AAClB;MACA;IACD;EACD;AAED,WAAS6C,GAAeH,KAAAA;AACvB,QAAQ1C,KAAG0C,IAAOpC,GACdwC,MAAAA;AAOJ,WAAA,WAAO9C,IAAoB;AAC1B,UAAUqB,KAAGrB,GAAKK;AAUlB,UAAA,OAAIL,GAAKG,GAAiB;AACzBH,QAAAA,GAAKI,EAAQgB,EAAapB,EAAAA;AAE1B,YAAA,WAAIqB;AACHA,UAAAA,GAAKd,IAAcP,GAAKO;AAEzB,YAAA,WAAIP,GAAKO;AACRP,UAAAA,GAAKO,EAAYF,IAAcgB;MAEhC;AAWAyB,QAAAA,MAAO9C;AAGRA,MAAAA,GAAKI,EAAQH,IAAQD,GAAKU;AAC1B,UAAA,WAAIV,GAAKU;AACRV,QAAAA,GAAKU,IAAAA;AAGNV,MAAAA,KAAOqB;IACP;AAEDqB,IAAAA,IAAOpC,IAAWwC;EAClB;AAcD,WAASX,IAAyBY,KAAAA;AACjClC,IAAAA,IAAOmC,KAAKjC,MAAAA,MAAMkC;AAElBlC,SAAKmC,IAAWH;AAChBhC,SAAKT,IAAAA;AACLS,SAAKoC,IAAiBtD,KAAgB;AACtCkB,SAAKJ,IAhdW;EAidhB;AAAA,GAEDwB,IAASjB,YAAY,IAArBL,OAEmBM,IAAW,WAAA;AAC7BJ,SAAKJ,KAAAA;AAEL,QA1de,IA0dXI,KAAKJ;AACR,aAAA;AAMD,QA5dgB,OA4dX,KAAAI,KAAKJ;AACT,aAAA;AAEDI,SAAKJ,KAAAA;AAEL,QAAII,KAAKoC,MAAmBtD;AAC3B,aAAA;AAEDkB,SAAKoC,IAAiBtD;AAItBkB,SAAKJ,KA7eU;AA8ef,QAAII,KAAKZ,IAAW,KAAA,CAAMsC,GAAiB1B,IAAAA,GAAO;AACjDA,WAAKJ,KAAAA;AACL,aAAA;IACA;AAED,QAAMyC,MAAc3D;AACpB,QAAA;AACCkD,MAAAA,GAAe5B,IAAAA;AACftB,MAAAA,KAAcsB;AACd,UAAMD,KAAQC,KAAKmC,EAAAA;AACnB,UApfgB,KAqffnC,KAAKJ,KACLI,KAAKC,MAAWF,MACE,MAAlBC,KAAKZ,GACJ;AACDY,aAAKC,IAASF;AACdC,aAAKJ,KAAAA;AACLI,aAAKZ;MACL;IAKD,SAJQkD,KAAP;AACDtC,WAAKC,IAASqC;AACdtC,WAAKJ,KA/fW;AAggBhBI,WAAKZ;IACL;AACDV,IAAAA,KAAc2D;AACdP,IAAAA,GAAe9B,IAAAA;AACfA,SAAKJ,KAAAA;AACL,WAAA;EACA;AAEDwB,EAAAA,IAASjB,UAAUN,IAAa,SAAUZ,KAAAA;AACzC,QAAA,WAAIe,KAAKE,GAAwB;AAChCF,WAAKJ,KAAU2C;AAIf,eACSrD,KAAGc,KAAKT,GAAAA,WAChBN,IACAA,KAAOA,GAAKO;AAEZP,QAAAA,GAAKI,EAAQQ,EAAWZ,EAAAA;IAEzB;AACDa,IAAAA,IAAOK,UAAUN,EAAWoC,KAAKjC,MAAMf,GAAAA;EACvC;AAEDmC,EAAAA,IAASjB,UAAUE,IAAe,SAAUpB,KAAAA;AAE3C,QAAA,WAAIe,KAAKE,GAAwB;AAChCJ,MAAAA,IAAOK,UAAUE,EAAa4B,KAAKjC,MAAMf,GAAAA;AAIzC,UAAA,WAAIe,KAAKE,GAAwB;AAChCF,aAAKJ,KAAAA;AAEL,iBACS4C,KAAGxC,KAAKT,GAAAA,WAChBN,IACAA,KAAOA,GAAKO;AAEZP,UAAAA,GAAKI,EAAQgB,EAAapB,EAAAA;MAE3B;IACD;EACD;AAEDmC,EAAAA,IAASjB,UAAUqB,IAAU,WAAA;AAC5B,QAAA,EAljBgB,IAkjBVxB,KAAKJ,IAAoB;AAC9BI,WAAKJ,KAAU2C;AAEf,eACKtD,MAAOe,KAAKE,GAAAA,WAChBjB,KACAA,MAAOA,IAAKS;AAEZT,QAAAA,IAAKE,EAAQqC,EAAAA;IAEd;EACD;AAEDJ,EAAAA,IAASjB,UAAUY,OAAO,WAAA;AACzB,QAAA,CAAKf,KAAKI,EAAAA;AACTmB,MAAAA,GAAAA;AAED,QAhkBiB,KAgkBbvB,KAAKJ;AACR,YAAWK,KAAAA;AAEZ,WAAA,KAAYA;EACZ;AAEDe,SAAOC,eAAeG,IAASjB,WAAW,SAAS,EAClDe,KADkD,WAAA;AAEjD,QA5kBc,IA4kBVlB,KAAKJ;AACR2B,MAAAA,GAAAA;AAED,QAAUtC,KAAGF,GAAciB,IAAAA;AAC3BA,SAAKI,EAAAA;AACL,QAAA,WAAInB;AACHA,MAAAA,GAAKG,IAAWY,KAAKZ;AAEtB,QAhlBgB,KAglBZY,KAAKJ;AACR,YAAMI,KAAKC;AAEZ,WAAOD,KAAKC;EACZ,EAAA,CAAA;AAWF,WAASwC,GAAcC,KAAAA;AACtB,QAAMC,MAAUD,IAAOE;AACvBF,IAAAA,IAAOE,IAAAA;AAEP,QAAuB,cAAA,OAAnBD,KAA+B;AAvkBnCE,MAAAA;AA2kBC,UAAMC,MAAcC;AACpBA,MAAAA,KAAAA;AACA,UAAA;AACCJ,QAAAA,IAAAA;MASA,SARQK,IAAP;AACDN,QAAAA,IAAOO,KAAAA;AACPP,QAAAA,IAAOO,KA9mBO;AA+mBdC,QAAAA,GAAcR,GAAAA;AACd,cACAM;MAAA,UAPD;AAQCD,QAAAA,KAAcD;AACdK,QAAAA,GAAAA;MACA;IACD;EACD;AAED,WAAAD,GAAuBR,KAAAA;AACtB,aACKU,KAAOV,IAAOW,GAAAA,WAClBD,IACAA,KAAOA,GAAKE;AAEZF,MAAAA,GAAKG,EAAQC,EAAaJ,EAAAA;AAE3BV,IAAAA,IAAOe,IAAAA;AACPf,IAAAA,IAAOW,IAAAA;AAEPZ,IAAAA,GAAcC,GAAAA;EACd;AAED,WAAAgB,GAAiCZ,KAAAA;AAChC,QAAIC,OAAgBY;AACnB,YAAUC,IAAAA,MAAM,qBAAA;AAEjBC,IAAAA,GAAeF,IAAAA;AACfZ,IAAAA,KAAcD;AAEda,SAAKV,KAAAA;AACL,QA9oBgB,IA8oBZU,KAAKV;AACRC,MAAAA,GAAcS,IAAAA;AAEfR,IAAAA,GAAAA;EACA;AAiBD,WAAAW,GAA8BC,KAAAA;AAC7BJ,SAAKF,IAAWM;AAChBJ,SAAKf,IAAAA;AACLe,SAAKN,IAAAA;AACLM,SAAKK,IAAAA;AACLL,SAAKV,IAtqBW;EAuqBhB;AAEDgB,EAAAA,GAAOC,UAAUC,IAAY,WAAA;AAC5B,QAAYC,MAAGT,KAAKU,EAAAA;AACpB,QAAA;AACC,UA9qBe,IA8qBXV,KAAKV;AAAmB;AAC5B,UAAA,WAAIU,KAAKF;AAAwB;AAEjC,UAAMd,KAAUgB,KAAKF,EAAAA;AACrB,UAAuB,cAAA,OAAnBd;AACHgB,aAAKf,IAAWD;IAIjB,UAVD;AASCyB,MAAAA,IAAAA;IACA;EACD;AAEDH,EAAAA,GAAOC,UAAUG,IAAS,WAAA;AACzB,QA9rBe,IA8rBXV,KAAKV;AACRqB,MAAAA,GAAAA;AAEDX,SAAKV,KAjsBU;AAksBfU,SAAKV,KAAAA;AACLR,IAAAA,GAAckB,IAAAA;AACdY,IAAAA,GAAeZ,IAAAA;AApqBfd,IAAAA;AAuqBA,QAAA2B,KAAoBzB;AACpBA,IAAAA,KAAcY;AACd,WAAgBD,GAACe,KAAKd,MAAMb,EAAAA;EAC5B;AAEDmB,EAAAA,GAAOC,UAAUQ,IAAU,WAAA;AAC1B,QAAA,EA5sBgB,IA4sBVf,KAAKV,IAAoB;AAC9BU,WAAKV,KA7sBU;AA8sBfU,WAAKK,IAAqBW;AAC1BA,MAAAA,MAAgBhB;IAChB;EACD;AAEDM,EAAAA,GAAOC,UAAUU,IAAW,WAAA;AAC3BjB,SAAKV,KAltBW;AAotBhB,QAAA,EAvtBe,IAutBTU,KAAKV;AACVC,MAAAA,GAAcS,IAAAA;EAEf;AAED,WAASjB,GAAOqB,KAAAA;AACf,QAAMrB,KAAS,IAAAuB,GAAWF,GAAAA;AAC1B,QAAA;AACCrB,MAAAA,GAAOyB,EAAAA;IAIP,SAHQnB,KAAP;AACDN,MAAAA,GAAOkC,EAAAA;AACP,YACA5B;IAAA;AAGD,WAAON,GAAOkC,EAASH,KAAK/B,EAAAA;EAC5B;;;AC3tBM,WAAS,cACd,MACG;AACH,WAAO,MAAM,sBAAsB,KAAK;AAAA,MAGtC,gBAAgB;AACd,YAAI,CAAC,KAAK,iBAAiB;AACzB;AAAA,QACF;AACA,aAAK,iBAAiB;AACtB,YAAI,mBAAmB;AACvB,aAAK,iBAAiBmC,GAAO,MAAM;AACjC,cAAI,kBAAkB;AACpB,+BAAmB;AACnB,kBAAM,cAAc;AAAA,UACtB,OAAO;AACL,iBAAK,cAAc;AAAA,UACrB;AAAA,QACF,CAAC;AAAA,MACH;AAAA,IACF;AAAA,EACF;;;AC/BO,MAAM,mBAAmBC,GAAO,KAAK;;;ACCrC,MAAM,qBAAqBC,GAAO,KAAK;AAKvC,MAAM,qBAAqBA,GAAO,KAAK;;;ACOvC,MAAM,YAAN,cAAwB,cAAcC,EAAU,EAAE;AAAA,IAAlD;AAAA;AAII,WAAQ,gBAAgB;AAKgB,oBAAS;AAErB,uBAAY;AAEjD,WAAQ,iBAAiB,iBAAiB;AAAA;AAAA,IAE1C,SAAS;AACP,YAAM,YAAY,KAAK,iBAAiB,iBAAiB;AAGzD,YAAM,+BAA+B,YAAY,MAAM;AACvD,YAAM,+BAA+B,YAAY,MAAM;AACvD,YAAM,uBAAuB;AAE7B,YAAM,6BAA6B,YAC/B,OAAO,aACP,OAAO;AAEX,aAAO;AAAA;AAAA;AAAA,4BAGiB,iBAAiB,QAAQ,SAAS;AAAA,uCACvB,mBAAmB;AAAA,cAC5C,YACE;AAAA;AAAA,2BAEW,KAAK;AAAA,oBACZC,GAAQ;AAAA,QACR,YAAY,CAAC,SAAS;AAAA,QACtB,iBAAiB;AAAA,UACf,UAAU;AAAA,UACV,QAAQ;AAAA,QACV;AAAA,QACA,IAAIC;AAAA,QACJ,KAAKC;AAAA,MACP,CAAC,aACH;AAAA;AAAA,uBAEO,KAAK,iBAAiB,CAAC,iBAAiB;AAAA,gBAC/CF,GAAQ;AAAA,QACR,YAAY,CAAC,WAAW;AAAA,QACxB,iBAAiB;AAAA,UACf,UAAU;AAAA,UACV,QAAQ;AAAA,QACV;AAAA,MACF,CAAC;AAAA;AAAA;AAAA,oBAGKA,GAAQ;AAAA,QACR,YAAY,CAAC,SAAS;AAAA,QACtB,iBAAiB;AAAA,UACf,UAAU;AAAA,UACV,QAAQ;AAAA,QACV;AAAA,MACF,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA,cAKL,KAAK,cAAc,SAAS,IAAI,KAAK,cAAc,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA,IAKxE;AAAA,IAEQ,cAAc,WAAoB;AACxC,aAAO;AAAA;AAAA,eAEI,aAAa,mBAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAO7C;AAAA,IAEQ,cAAc,WAAoB;AACxC,UAAI,CAAC,KAAK,QAAQ;AAChB,eAAO;AAAA,MACT;AAEA,aAAO;AAAA;AAAA,eAEI,aAAa,mBAAmB;AAAA;AAAA;AAAA,cAGjC,KAAK;AAAA;AAAA;AAAA;AAAA,IAIjB;AAAA;AAAA;AAAA;AAAA,IAKQ,eAAe;AACrB,uBAAiB,QAAQ;AAAA,IAC3B;AAAA,IAEA,eAAe;AACb,YAAM,cAAc,OAAO,WAAW,qBAAqB;AAC3D,WAAK,gBAAgB,YAAY;AAGjC,kBAAY,iBAAiB,UAAU,CAACG,QAAM;AAC5C,aAAK,gBAAgBA,IAAE;AAAA,MACzB,CAAC;AAAA,IACH;AAAA,IAEA,QAAQ,SAA+B;AACrC,YAAM,QAAQ,OAAO;AACrB,UACE,KAAK,mBAAmB,iBAAiB,SACzC,iBAAiB,SACjB,KAAK,eACL;AACA,QACE,KAAK;AAAA,UACH;AAAA,QACF,GACC,MAAM;AAAA,MACX;AAAA,IACF;AAAA,EA6QF;AA3QE,EAvIW,UAunIC;AAAA,IAAhB,EAAM;AAAA,KAJI,UAIM;AAKgC;AAAA,IAAhD,EAAS,EAAC,MAAM,SAAS,WAAW,UAAS,CAAC;AAAA,KATpC,UASsC;AAEZ;AAAA,IAApC,EAAS,EAAC,WAAW,aAAY,CAAC;AAAA,KAXxB,UAW0B;AAX1B,cAAN;AAAA,IADN,EAAc,YAAY;AAAA,KACd;;;ACCP,MAAO,kBAAP,cAA+BC,GAAU;IAA/C,cAAA;;AAK6B,WAAA,WAAW;AACX,WAAA,WAAW;AAC1B,WAAA,QAAQ;AACkC,WAAA,cAAc;AAClB,WAAA,UAAU;AAE3C,WAAA,YAAY;IAkI/B;IA9HqB,OAAO,OAAsC;AAC9D,WAAK,YAAY,KAAK,mBAAmB,KAAK;AAC9C,YAAM,OAAO,KAAK;AAGlB,WAAK,UAAU,KAAK,YAAY,SAAS;IAC3C;IAEQ,mBACN,cAA6C;AAE7C,YAAM,eAAe,aAAa,IAAI,UAAU;AAEhD,UAAI,iBAAiB;AAAW,eAAO;AAEvC,YAAM,eAAe,KAAK;AAC1B,YAAM,mBAAmB,CAAC,KAAK;AAC/B,UAAI,CAAC,gBAAgB,gBAAgB,kBAAkB;AACrD,eAAO;;AAET,UAAI,gBAAgB,CAAC,gBAAgB,kBAAkB;AACrD,eAAO;;AAET,aAAO;IACT;IAEQ,cAAW;AACjB,YAAM,QAAQ,IAAI,MAAM,gCAAgC;QACtD,SAAS;QACT,UAAU;OACX;AACD,WAAK,cAAc,KAAK;IAC1B;IAEmB,SAAM;AAEvB,YAAM,EAAC,UAAS,IAAI;AACpB,aAAO;;oBAES,KAAK,WAAW,OAAO;qBACtB,aAAa;uBACX,KAAK;oBACR,KAAK;kBACP,KAAK;sCACeC,GAAS,KAAK,iBAAgB,CAAE;;;;;uBAK/C,KAAK;;UAElB,KAAK,cAAa,KAAM,KAAK,cAAa,KAAM,KAAK,YAAW;UAChE,KAAK,kBAAiB;;;IAG9B;IAEU,mBAAgB;AACxB,aAAO;QACL,kCAAkC,KAAK;QACvC,oCAAoC,CAAC,KAAK;QAC1C,oCAAoC,KAAK,UAAU;QACnD,uCAAuC,KAAK,UAAU;QACtD,mCAAmC,KAAK;QACxC,wCAAwC,CAAC,KAAK;QAC9C,2CAA2C,KAAK;QAChD,mCAAmC,KAAK,cAAc;QACtD,qCAAqC,KAAK,cAAc;;IAE5D;IAEU,gBAAa;AACrB,aAAO;IACT;IAEQ,gBAAa;AACnB,aAAO,KAAK,UAAU,KAClB,KAAK,0BAAyB,IAC9B,KAAK,uBAAsB;IACjC;IAEQ,4BAAyB;AAC/B,aAAO;;;;;;;;;;;;;;;IAeT;IAEQ,yBAAsB;AAC5B,aAAO;;;;;;;;;;;;;;;IAeT;IAEQ,cAAW;AACjB,aAAO;uDAC4C,KAAK;;IAE1D;IAEQ,oBAAiB;AACvB,aAAO;IACT;;AA3IA,GAAA,MAAA;AACE,8BAA0B,eAAe;EAC3C,GAAC;AAE0B,aAAA;IAA1B,EAAS,EAAC,MAAM,QAAO,CAAC;;AACE,aAAA;IAA1B,EAAS,EAAC,MAAM,QAAO,CAAC;;AACb,aAAA;IAAX,EAAQ;;AAC6C,aAAA;IAArD,EAAS,EAAC,MAAM,SAAS,WAAW,eAAc,CAAC;;AACF,aAAA;IAAjD,EAAS,EAAC,MAAM,SAAS,WAAW,WAAU,CAAC;;AAE/B,aAAA;IAAhB,EAAK;;AAEW,aAAA;IADhBC,GAAsB,EAAC,MAAM,QAAQ,SAAS,KAAI,CAAC;;;;ACxBhD,MAAO,0BAAP,cAAuC,gBAAe;IACvC,mBAAgB;AACjC,aAAO;QACL,GAAG,MAAM,iBAAgB;QACzB,kCAAkC;;IAEtC;IAEmB,gBAAa;AAC9B,aAAO;IACT;;;;AChBK,MAAMC,WAASC;;;;ACAf,MAAMC,WAASC;;;;ACmBf,MAAM,4BAAN,MAAMC,mCAAkC,wBAAuB;;AACpD,4BAAA,SAA8B,CAACC,UAAcA,QAAc;AADhE,8BAAyB,WAAA;IADrC,EAAc,8BAA8B;KAChC,yBAAyB;;;ACHhC,MAAO,qBAAP,cAAkCC,GAAU;IAAlD,cAAA;;AAK6B,WAAA,cAAc;IAwF3C;IApFE,kBAAkB,OAAa;AAC7B,UAAI,KAAK,iBAAiB,KAAK;AAAG,eAAO;AACzC,aAAO,KAAK,QAAQ,KAAK,EAAE;IAC7B;IAEA,kBAAkB,OAAe,UAAiB;AAChD,UAAI,KAAK,iBAAiB,KAAK;AAAG;AAClC,WAAK,QAAQ,KAAK,EAAE,WAAW;IACjC;IAEA,kBAAkB,OAAa;AAC7B,UAAI,KAAK,iBAAiB,KAAK;AAAG,eAAO;AACzC,aAAO,KAAK,QAAQ,KAAK,EAAE;IAC7B;IAEA,kBAAkB,OAAe,UAAiB;AAEhD,UAAI,KAAK,iBAAiB,KAAK;AAAG;AAElC,UAAI,KAAK,kBAAkB,KAAK;AAAG;AAEnC,UAAI,KAAK,aAAa;AACpB,aAAK,QAAQ,KAAK,EAAE,WAAW;AAC/B,aAAK,mBAAmB,KAAK;AAC7B;;AAIF,UAAI,CAAC;AAAU;AAEf,WAAK,QAAQ,KAAK,EAAE,WAAW;AAC/B,WAAK,mBAAmB,KAAK;AAE7B,eAASC,MAAI,GAAGA,MAAI,KAAK,QAAQ,QAAQA,OAAK;AAC5C,YAAIA,QAAM;AAAO;AACjB,aAAK,QAAQA,GAAC,EAAE,WAAW;;IAE/B;IAEQ,iCAAiC,OAAkB;AACzD,YAAM,QAAQ,KAAK,QAAQ,QAAQ,MAAM,MAAyB;AAClE,WAAK,gBAAgB,KAAK;IAC5B;IAEQ,gBAAgB,OAAa;AACnC,UAAI,KAAK,iBAAiB,KAAK;AAAG;AAClC,WAAK,kBAAkB,OAAO,CAAC,KAAK,QAAQ,KAAK,EAAE,QAAQ;IAC7D;IAEQ,iBAAiB,OAAa;AACpC,aAAO,QAAQ,KAAK,SAAS,KAAK,QAAQ;IAC5C;IAEQ,mBAAmB,OAAa;AACtC,WAAK,cACH,IAAI,YAAY,kCAAkC;QAChD,QAAQ;UACN,QAAQ,KAAK,QAAQ,KAAK;UAC1B,UAAU,KAAK,QAAQ,KAAK,EAAE;UAC9B;;QAEF,SAAS;QACT,UAAU;OACX,CAAC;IAEN;IAEmB,SAAM;AAEvB,YAAM,EAAC,UAAS,IAAI;AACpB,aAAO;;;yCAG8B,KAAK;qBACzB,aAAa;;;;;IAKhC;IAEU,mBAAgB;AACxB,aAAO,CAAA;IACT;;AA3FA,GAAA,MAAA;AACE,8BAA0B,kBAAkB;EAC9C,GAAC;AAE0B,aAAA;IAA1B,EAAS,EAAC,MAAM,QAAO,CAAC;;AAEe,aAAA;IAAvCC,GAAsB,EAAC,SAAS,KAAI,CAAC;;;;ACnBlC,MAAO,6BAAP,cAA0C,mBAAkB;IAC7C,mBAAgB;AACjC,aAAO;QACL,GAAG,MAAM,iBAAgB;QACzB,sCAAsC;;IAE1C;;;;ACVK,MAAMC,WAASC;;;;ACAf,MAAMC,WAASC;;;;ACmBf,MAAM,+BAAN,MAAMC,sCAAqC,2BAA0B;;AAC1D,+BAAA,SAA8B,CAACC,UAAcA,QAAc;AADhE,iCAA4B,WAAA;IADxC,EAAc,kCAAkC;KACpC,4BAA4B;;;ACDlC,MAAM,iBAAN,cAA6BC,GAAW;AAAA,IAAxC;AAAA;AAsBI,WAAQ,gBAAgB;AAKrB,mBAAQ;AAMoB,0BAAe;AAKhB,yBAAc;AAAA;AAAA,IAOrD,SAAS;AACP,aAAO;AAAA;AAAA;AAAA;AAAA,iBAIM,KAAK;AAAA,iBACL,KAAK;AAAA,gBACN,KAAK;AAAA,oBACD,KAAK;AAAA,qBACJ,KAAK;AAAA,8BACI,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA,IAKjC;AAAA,IAEA,MAAc,UAAU;AACtB,YAAM,UAAU,UAAU,UAAU,KAAK,YAAY,CAAC;AACtD,WAAK,cAAc;AAAA,IACrB;AAAA,IAEQ,UAAU;AAChB,WAAK,gBAAgB,KAAK,WAAW;AAAA,IACvC;AAAA;AAAA;AAAA;AAAA;AAAA,IAMA,cAAc;AACZ,UAAI,OAAO;AACX,iBAAW,MAAM,KAAK,YAAY;AAChC,gBAAQ,GAAG;AAAA,MACb;AAEA,aAAO;AAAA,IACT;AAAA,IAEQ,gBAAgB;AACtB,WAAK,gBAAgB;AAErB,UAAI,KAAK,WAAW;AAClB,eAAO,aAAa,KAAK,SAAS;AAAA,MACpC;AAEA,WAAK,YAAY,OAAO,WAAW,MAAM;AACvC,aAAK,gBAAgB;AAAA,MACvB,GAAG,GAAI;AAAA,IACT;AAAA,EACF;AA9FE,EADW,eACJ,SAASC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAqBC;AAAA,IAAhB,EAAM;AAAA,KAtBI,eAsBM;AAKL;AAAA,IAAX,EAAS;AAAA,KA3BC,eA2BC;AAM4B;AAAA,IAAvC,EAAS,EAAC,WAAW,gBAAe,CAAC;AAAA,KAjC3B,eAiC6B;AAKD;AAAA,IAAtC,EAAS,EAAC,WAAW,eAAc,CAAC;AAAA,KAtC1B,eAsC4B;AAEN;AAAA,IAAhCA,GAAM,gBAAgB;AAAA,KAxCZ,eAwCsB;AAGzB;AAAA,IADPC,GAAsB,EAAC,SAAS,MAAM,UAAU,IAAG,CAAC;AAAA,KA1C1C,eA2CH;AA3CG,mBAAN;AAAA,IADN,EAAc,kBAAkB;AAAA,KACpB;;;ACGP,WAAU,OAAO,KAAW;AAChC,QAAI,MAAM,GAAG;AACX,aAAO;eACE,QAAQ,GAAG;AACpB,aAAO;WACF;AACL,aAAO;;EAEX;AAOM,WAAU,KAAK,OAAe,MAAc,QAAc;AAC9D,YAAQ,IAAM,UAAU,QAAQ,SAAS;EAC3C;AAQM,WAAU,SAAS,KAAa,KAAa,OAAa;AAC9D,QAAI,QAAQ,KAAK;AACf,aAAO;eACE,QAAQ,KAAK;AACtB,aAAO;;AAGT,WAAO;EACT;AAQM,WAAU,YAAY,KAAa,KAAa,OAAa;AACjE,QAAI,QAAQ,KAAK;AACf,aAAO;eACE,QAAQ,KAAK;AACtB,aAAO;;AAGT,WAAO;EACT;AAQM,WAAU,mBAAmB,SAAe;AAChD,cAAU,UAAU;AACpB,QAAI,UAAU,GAAG;AACf,gBAAU,UAAU;;AAEtB,WAAO;EACT;AAQM,WAAU,sBAAsB,SAAe;AACnD,cAAU,UAAU;AACpB,QAAI,UAAU,GAAG;AACf,gBAAU,UAAU;;AAEtB,WAAO;EACT;AAwBM,WAAU,kBAAkBC,IAAWC,IAAS;AACpD,WAAO,MAAQ,KAAK,IAAI,KAAK,IAAID,KAAIC,EAAC,IAAI,GAAK;EACjD;AAKM,WAAU,eAAe,KAAe,QAAkB;AAC9D,UAAMD,KACF,IAAI,CAAC,IAAI,OAAO,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC,IAAI,OAAO,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC,IAAI,OAAO,CAAC,EAAE,CAAC;AACxE,UAAMC,KACF,IAAI,CAAC,IAAI,OAAO,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC,IAAI,OAAO,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC,IAAI,OAAO,CAAC,EAAE,CAAC;AACxE,UAAMC,KACF,IAAI,CAAC,IAAI,OAAO,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC,IAAI,OAAO,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC,IAAI,OAAO,CAAC,EAAE,CAAC;AACxE,WAAO,CAACF,IAAGC,IAAGC,EAAC;EACjB;;;ACpHA,MAAM,cAAc;IAClB,CAAC,YAAY,YAAY,UAAU;IACnC,CAAC,QAAQ,QAAQ,MAAM;IACvB,CAAC,YAAY,YAAY,UAAU;;AAGrC,MAAM,cAAc;IAClB;MACE;MACA;MACA;;IAEF;MACE;MACA;MACA;;IAEF;MACE;MACA;MACA;;;AAIJ,MAAM,kBAAkB,CAAC,QAAQ,KAAO,OAAO;AAKzC,WAAU,YAAY,KAAa,OAAe,MAAY;AAClE,YAAQ,OAAO,MAAM,MAAM,QAAQ,MAAM,QAAQ,QAAQ,IAAI,OAAO,SAChE;EACN;AAKM,WAAU,eAAe,QAAgB;AAC7C,UAAMC,KAAI,aAAa,OAAO,CAAC,CAAC;AAChC,UAAMC,KAAI,aAAa,OAAO,CAAC,CAAC;AAChC,UAAMC,KAAI,aAAa,OAAO,CAAC,CAAC;AAChC,WAAO,YAAYF,IAAGC,IAAGC,EAAC;EAC5B;AAYM,WAAU,YAAY,MAAY;AACtC,WAAO,QAAQ,KAAK;EACtB;AAKM,WAAU,cAAc,MAAY;AACxC,WAAO,QAAQ,IAAI;EACrB;AAKM,WAAU,aAAa,MAAY;AACvC,WAAO,OAAO;EAChB;AAYM,WAAU,YAAYC,IAAWC,IAAWC,IAAS;AACzD,UAAM,SAAS;AACf,UAAM,UAAU,OAAO,CAAC,EAAE,CAAC,IAAIF,KAAI,OAAO,CAAC,EAAE,CAAC,IAAIC,KAAI,OAAO,CAAC,EAAE,CAAC,IAAIC;AACrE,UAAM,UAAU,OAAO,CAAC,EAAE,CAAC,IAAIF,KAAI,OAAO,CAAC,EAAE,CAAC,IAAIC,KAAI,OAAO,CAAC,EAAE,CAAC,IAAIC;AACrE,UAAM,UAAU,OAAO,CAAC,EAAE,CAAC,IAAIF,KAAI,OAAO,CAAC,EAAE,CAAC,IAAIC,KAAI,OAAO,CAAC,EAAE,CAAC,IAAIC;AACrE,UAAMC,KAAI,aAAa,OAAO;AAC9B,UAAMC,KAAI,aAAa,OAAO;AAC9B,UAAMC,KAAI,aAAa,OAAO;AAC9B,WAAO,YAAYF,IAAGC,IAAGC,EAAC;EAC5B;AAKM,WAAU,YAAY,MAAY;AACtC,UAAMF,KAAI,WAAW,YAAY,IAAI,CAAC;AACtC,UAAMC,KAAI,WAAW,cAAc,IAAI,CAAC;AACxC,UAAMC,KAAI,WAAW,aAAa,IAAI,CAAC;AACvC,WAAiB,eAAe,CAACF,IAAGC,IAAGC,EAAC,GAAG,WAAW;EACxD;AA0DM,WAAU,cAAc,OAAa;AACzC,UAAMC,KAAI,WAAW,KAAK;AAC1B,UAAM,YAAY,aAAaA,EAAC;AAChC,WAAO,YAAY,WAAW,WAAW,SAAS;EACpD;AAQM,WAAU,cAAc,MAAY;AACxC,UAAMA,KAAI,YAAY,IAAI,EAAE,CAAC;AAC7B,WAAO,MAAQ,KAAKA,KAAI,GAAK,IAAI;EACnC;AAaM,WAAU,WAAW,OAAa;AACtC,WAAO,MAAQ,SAAS,QAAQ,MAAQ,GAAK;EAC/C;AAaM,WAAU,WAAWA,IAAS;AAClC,WAAO,KAAKA,KAAI,GAAK,IAAI,MAAQ;EACnC;AAUM,WAAU,WAAW,cAAoB;AAC7C,UAAM,aAAa,eAAe;AAClC,QAAI,cAAc,aAAa;AAC7B,aAAO,aAAa,QAAQ;WACvB;AACL,aAAO,KAAK,KAAK,aAAa,SAAS,OAAO,GAAG,IAAI;;EAEzD;AAUM,WAAU,aAAa,cAAoB;AAC/C,UAAM,aAAa,eAAe;AAClC,QAAIC,gBAAe;AACnB,QAAI,cAAc,UAAW;AAC3B,MAAAA,gBAAe,aAAa;WACvB;AACL,MAAAA,gBAAe,QAAQ,KAAK,IAAI,YAAY,IAAM,GAAG,IAAI;;AAE3D,WAAiB,SAAS,GAAG,KAAK,KAAK,MAAMA,gBAAe,GAAK,CAAC;EACpE;AAOM,WAAU,gBAAa;AAC3B,WAAO;EACT;AAmDA,WAAS,KAAKC,IAAS;AACrB,UAAMC,MAAI,MAAQ;AAClB,UAAM,QAAQ,QAAU;AACxB,QAAID,KAAIC,KAAG;AACT,aAAO,KAAK,IAAID,IAAG,IAAM,CAAG;WACvB;AACL,cAAQ,QAAQA,KAAI,MAAM;;EAE9B;AAEA,WAAS,QAAQ,IAAU;AACzB,UAAMC,MAAI,MAAQ;AAClB,UAAM,QAAQ,QAAU;AACxB,UAAM,MAAM,KAAK,KAAK;AACtB,QAAI,MAAMA,KAAG;AACX,aAAO;WACF;AACL,cAAQ,MAAM,KAAK,MAAM;;EAE7B;;;AC1TM,MAAO,oBAAP,MAAwB;;;;;;;;;;;;;;;;;;;;;;;IA0B5B,OAAO,KACH,aAAmB,cAAa,GAChC,oBAAqB,MAAQ,KAAK,KAAY,WAAW,EAAI,IAAI,KACjE,kBAAkB,IAAM,WAAW,GACnC,wBAAwB,OAAK;AAC/B,YAAM,MAAM;AACZ,YAAM,KAAK,IAAI,CAAC,IAAI,WAAW,IAAI,CAAC,IAAI,WAAW,IAAI,CAAC,IAAI;AAC5D,YAAM,KAAK,IAAI,CAAC,IAAI,YAAY,IAAI,CAAC,IAAI,WAAW,IAAI,CAAC,IAAI;AAC7D,YAAM,KAAK,IAAI,CAAC,IAAI,WAAY,IAAI,CAAC,IAAI,WAAW,IAAI,CAAC,IAAI;AAC7D,YAAMC,KAAI,MAAM,WAAW;AAC3B,YAAMC,KAAID,MAAK,MAAW,KAAK,MAAM,OAAOA,KAAI,OAAO,EAAI,IACjC,KAAK,OAAO,OAAOA,KAAI,OAAO,EAAI;AAC5D,UAAIE,KAAI,wBACJ,IACAF,MAAK,IAAO,IAAM,MAAO,KAAK,KAAK,CAAC,oBAAoB,MAAQ,EAAI;AACxE,MAAAE,KAAIA,KAAI,IAAM,IAAMA,KAAI,IAAM,IAAMA;AACpC,YAAM,KAAKF;AACX,YAAM,OAAO;QACXE,MAAK,MAAQ,MAAM,IAAMA;QACzBA,MAAK,MAAQ,MAAM,IAAMA;QACzBA,MAAK,MAAQ,MAAM,IAAMA;;AAE3B,YAAMC,KAAI,KAAO,IAAM,oBAAoB;AAC3C,YAAM,KAAKA,KAAIA,KAAIA,KAAIA;AACvB,YAAM,MAAM,IAAM;AAClB,YAAM,KAAK,KAAK,oBACZ,MAAM,MAAM,MAAM,KAAK,KAAK,IAAM,iBAAiB;AACvD,YAAMC,MAAU,WAAW,eAAe,IAAI,WAAW,CAAC;AAC1D,YAAMC,KAAI,OAAO,KAAK,KAAKD,GAAC;AAC5B,YAAM,MAAM,QAAQ,KAAK,IAAIA,KAAG,GAAG;AACnC,YAAM,MAAM;AACZ,YAAM,cAAc;QAClB,KAAK,IAAK,KAAK,KAAK,CAAC,IAAI,KAAM,KAAO,IAAI;QAC1C,KAAK,IAAK,KAAK,KAAK,CAAC,IAAI,KAAM,KAAO,IAAI;QAC1C,KAAK,IAAK,KAAK,KAAK,CAAC,IAAI,KAAM,KAAO,IAAI;;AAE5C,YAAM,OAAO;QACV,MAAQ,YAAY,CAAC,KAAM,YAAY,CAAC,IAAI;QAC5C,MAAQ,YAAY,CAAC,KAAM,YAAY,CAAC,IAAI;QAC5C,MAAQ,YAAY,CAAC,KAAM,YAAY,CAAC,IAAI;;AAE/C,YAAM,MAAM,IAAM,KAAK,CAAC,IAAI,KAAK,CAAC,IAAI,OAAO,KAAK,CAAC,KAAK;AACxD,aAAO,IAAI,kBACPA,KAAG,IAAI,KAAK,KAAKH,IAAG,IAAI,MAAM,IAAI,KAAK,IAAI,IAAI,IAAI,GAAGI,EAAC;IAC7D;;;;;;;;IASA,YACWD,KAAkB,IAAmB,KACrC,KAAoBH,IAAkB,IACtC,MAAuB,IAAmB,QAC1CI,IAAS;AAHT,WAAA,IAAAD;AAAkB,WAAA,KAAA;AAAmB,WAAA,MAAA;AACrC,WAAA,MAAA;AAAoB,WAAA,IAAAH;AAAkB,WAAA,KAAA;AACtC,WAAA,OAAA;AAAuB,WAAA,KAAA;AAAmB,WAAA,SAAA;AAC1C,WAAA,IAAAI;IAAY;;AAjFhB,oBAAA,UAAU,kBAAkB,KAAI;;;ACInC,MAAO,QAAP,MAAY;;;;;;;;;;;;;;;;;;;;;IAqBhB,YACa,KAAsB,QAAyBC,IAC/C,GAAoBC,IAAoBC,IACxC,OAAwB,OAAwB,OAAa;AAF7D,WAAA,MAAA;AAAsB,WAAA,SAAA;AAAyB,WAAA,IAAAF;AAC/C,WAAA,IAAA;AAAoB,WAAA,IAAAC;AAAoB,WAAA,IAAAC;AACxC,WAAA,QAAA;AAAwB,WAAA,QAAA;AAAwB,WAAA,QAAA;IAAgB;;;;;;IAO7E,SAAS,OAAY;AACnB,YAAM,KAAK,KAAK,QAAQ,MAAM;AAC9B,YAAM,KAAK,KAAK,QAAQ,MAAM;AAC9B,YAAM,KAAK,KAAK,QAAQ,MAAM;AAC9B,YAAM,UAAU,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,EAAE;AACrD,YAAM,KAAK,OAAO,KAAK,IAAI,SAAS,IAAI;AACxC,aAAO;IACT;;;;;;IAOA,OAAO,QAAQ,MAAY;AACzB,aAAO,MAAM,2BAA2B,MAAM,kBAAkB,OAAO;IACzE;;;;;;;IAQA,OAAO,2BACH,MAAc,mBAAoC;AACpD,YAAM,OAAO,OAAO,aAAe;AACnC,YAAM,SAAS,OAAO,UAAe;AACrC,YAAM,OAAQ,OAAO;AACrB,YAAM,OAAa,WAAW,GAAG;AACjC,YAAM,SAAe,WAAW,KAAK;AACrC,YAAM,QAAc,WAAW,IAAI;AACnC,YAAMC,KAAI,aAAa,OAAO,aAAa,SAAS,aAAa;AACjE,YAAMC,KAAI,SAAS,OAAO,SAAS,SAAS,SAAS;AACrD,YAAMC,KAAI,aAAa,OAAO,aAAa,SAAS,aAAa;AAEjE,YAAM,KAAK,WAAWF,KAAI,WAAWC,KAAI,WAAWC;AACpD,YAAM,KAAK,YAAYF,KAAI,WAAWC,KAAI,WAAWC;AACrD,YAAM,KAAK,WAAYF,KAAI,WAAWC,KAAI,WAAWC;AAErD,YAAM,KAAK,kBAAkB,KAAK,CAAC,IAAI;AACvC,YAAM,KAAK,kBAAkB,KAAK,CAAC,IAAI;AACvC,YAAM,KAAK,kBAAkB,KAAK,CAAC,IAAI;AAEvC,YAAM,MAAM,KAAK,IAAK,kBAAkB,KAAK,KAAK,IAAI,EAAE,IAAK,KAAO,IAAI;AACxE,YAAM,MAAM,KAAK,IAAK,kBAAkB,KAAK,KAAK,IAAI,EAAE,IAAK,KAAO,IAAI;AACxE,YAAM,MAAM,KAAK,IAAK,kBAAkB,KAAK,KAAK,IAAI,EAAE,IAAK,KAAO,IAAI;AAExE,YAAM,KAAW,OAAO,EAAE,IAAI,MAAQ,OAAQ,MAAM;AACpD,YAAM,KAAW,OAAO,EAAE,IAAI,MAAQ,OAAQ,MAAM;AACpD,YAAM,KAAW,OAAO,EAAE,IAAI,MAAQ,OAAQ,MAAM;AAEpD,YAAMC,MAAK,KAAO,KAAK,MAAQ,KAAK,MAAM;AAC1C,YAAMC,MAAK,KAAK,KAAK,IAAM,MAAM;AACjC,YAAMC,MAAK,KAAO,KAAK,KAAO,KAAK,KAAO,MAAM;AAChD,YAAMC,OAAM,KAAO,KAAK,KAAO,KAAK,MAAM;AAC1C,YAAM,QAAQ,KAAK,MAAMF,IAAGD,EAAC;AAC7B,YAAM,cAAe,QAAQ,MAAS,KAAK;AAC3C,YAAM,MAAM,cAAc,IAAI,cAAc,MACxC,eAAe,MAAW,cAAc,MACd;AAC9B,YAAM,aAAc,MAAM,KAAK,KAAM;AAErC,YAAM,KAAKG,MAAK,kBAAkB;AAClC,YAAMT,KAAI,MACN,KAAK,IACD,KAAK,kBAAkB,IACvB,kBAAkB,IAAI,kBAAkB,CAAC;AACjD,YAAM,IAAK,IAAM,kBAAkB,IAAK,KAAK,KAAKA,KAAI,GAAK,KACtD,kBAAkB,KAAK,KAAO,kBAAkB;AACrD,YAAM,WAAW,MAAM,QAAQ,MAAM,MAAM;AAC3C,YAAM,OAAO,QAAQ,KAAK,IAAK,WAAW,KAAK,KAAM,MAAQ,CAAG,IAAI;AACpE,YAAM,KACD,MAAU,KAAQ,OAAO,kBAAkB,KAAK,kBAAkB;AACvE,YAAMU,KAAK,KAAK,KAAK,KAAKJ,KAAIA,KAAIC,KAAIA,EAAC,KAAMC,KAAI;AACjD,YAAM,QAAQ,KAAK,IAAIE,IAAG,GAAG,IACzB,KAAK,IAAI,OAAO,KAAK,IAAI,MAAM,kBAAkB,CAAC,GAAG,IAAI;AAC7D,YAAMC,KAAI,QAAQ,KAAK,KAAKX,KAAI,GAAK;AACrC,YAAMC,KAAIU,KAAI,kBAAkB;AAChC,YAAMT,KAAI,KACN,KAAK,KAAM,QAAQ,kBAAkB,KAAM,kBAAkB,KAAK,EAAI;AAC1E,YAAM,SAAU,IAAM,MAAQ,QAASF,MAAM,IAAM,OAAQA;AAC3D,YAAM,QAAS,IAAM,SAAU,KAAK,IAAI,IAAM,SAASC,EAAC;AACxD,YAAM,QAAQ,QAAQ,KAAK,IAAI,UAAU;AACzC,YAAM,QAAQ,QAAQ,KAAK,IAAI,UAAU;AAEzC,aAAO,IAAI,MAAM,KAAKU,IAAGX,IAAG,GAAGC,IAAGC,IAAG,OAAO,OAAO,KAAK;IAC1D;;;;;;IAOA,OAAO,QAAQF,IAAWW,IAAWC,IAAS;AAC5C,aAAO,MAAM,2BAA2BZ,IAAGW,IAAGC,IAAG,kBAAkB,OAAO;IAC5E;;;;;;;;IASA,OAAO,2BACHZ,IAAWW,IAAWC,IACtB,mBAAoC;AACtC,YAAM,IAAK,IAAM,kBAAkB,IAAK,KAAK,KAAKZ,KAAI,GAAK,KACtD,kBAAkB,KAAK,KAAO,kBAAkB;AACrD,YAAMC,KAAIU,KAAI,kBAAkB;AAChC,YAAM,QAAQA,KAAI,KAAK,KAAKX,KAAI,GAAK;AACrC,YAAME,KAAI,KACN,KAAK,KAAM,QAAQ,kBAAkB,KAAM,kBAAkB,KAAK,EAAI;AAC1E,YAAM,aAAcU,KAAI,KAAK,KAAM;AACnC,YAAM,SAAU,IAAM,MAAQ,QAASZ,MAAM,IAAM,OAAQA;AAC3D,YAAM,QAAS,IAAM,SAAU,KAAK,IAAI,IAAM,SAASC,EAAC;AACxD,YAAM,QAAQ,QAAQ,KAAK,IAAI,UAAU;AACzC,YAAM,QAAQ,QAAQ,KAAK,IAAI,UAAU;AACzC,aAAO,IAAI,MAAMW,IAAGD,IAAGX,IAAG,GAAGC,IAAGC,IAAG,OAAO,OAAO,KAAK;IACxD;;;;;;;;IASA,OAAO,QAAQ,OAAe,OAAe,OAAa;AACxD,aAAO,MAAM,2BACT,OAAO,OAAO,OAAO,kBAAkB,OAAO;IACpD;;;;;;;;;;IAWA,OAAO,2BACH,OAAe,OAAe,OAC9B,mBAAoC;AACtC,YAAMI,KAAI;AACV,YAAMC,KAAI;AACV,YAAMN,KAAI,KAAK,KAAKK,KAAIA,KAAIC,KAAIA,EAAC;AACjC,YAAMM,MAAK,KAAK,IAAIZ,KAAI,MAAM,IAAI,KAAO;AACzC,YAAMU,KAAIE,KAAI,kBAAkB;AAChC,UAAID,KAAI,KAAK,MAAML,IAAGD,EAAC,KAAK,MAAQ,KAAK;AACzC,UAAIM,KAAI,GAAK;AACX,QAAAA,MAAK;;AAEP,YAAMZ,KAAI,SAAS,KAAK,QAAQ,OAAO;AACvC,aAAO,MAAM,2BAA2BA,IAAGW,IAAGC,IAAG,iBAAiB;IACpE;;;;;;IAOA,QAAK;AACH,aAAO,KAAK,OAAO,kBAAkB,OAAO;IAC9C;;;;;;IAOA,OAAO,mBAAoC;AACzC,YAAM,QAAQ,KAAK,WAAW,KAAO,KAAK,MAAM,IAC5C,IACA,KAAK,SAAS,KAAK,KAAK,KAAK,IAAI,GAAK;AAE1C,YAAMF,KAAI,KAAK,IACX,QAAQ,KAAK,IAAI,OAAO,KAAK,IAAI,MAAM,kBAAkB,CAAC,GAAG,IAAI,GACjE,IAAM,GAAG;AACb,YAAM,OAAQ,KAAK,MAAM,KAAK,KAAM;AAEpC,YAAM,OAAO,QAAQ,KAAK,IAAI,OAAO,CAAG,IAAI;AAC5C,YAAM,KAAK,kBAAkB,KACzB,KAAK,IACD,KAAK,IAAI,KAAO,IAAM,kBAAkB,IAAI,kBAAkB,CAAC;AACvE,YAAM,KACF,QAAQ,MAAU,MAAQ,kBAAkB,KAAK,kBAAkB;AACvE,YAAMD,MAAK,KAAK,kBAAkB;AAElC,YAAM,OAAO,KAAK,IAAI,IAAI;AAC1B,YAAM,OAAO,KAAK,IAAI,IAAI;AAE1B,YAAM,QAAS,MAAQA,MAAK,SAASC,MAChC,KAAO,KAAK,KAAOA,KAAI,OAAO,MAAQA,KAAI;AAC/C,YAAMJ,KAAI,QAAQ;AAClB,YAAMC,KAAI,QAAQ;AAClB,YAAM,MAAM,MAAQE,MAAK,MAAQH,KAAI,MAAQC,MAAK;AAClD,YAAM,MAAM,MAAQE,MAAK,MAAQH,KAAI,MAAQC,MAAK;AAClD,YAAM,MAAM,MAAQE,MAAK,MAAQH,KAAI,OAASC,MAAK;AAEnD,YAAM,SAAS,KAAK,IAAI,GAAI,QAAQ,KAAK,IAAI,EAAE,KAAM,MAAQ,KAAK,IAAI,EAAE,EAAE;AAC1E,YAAM,KAAU,OAAO,EAAE,KAAK,MAAQ,kBAAkB,MACpD,KAAK,IAAI,QAAQ,IAAM,IAAI;AAC/B,YAAM,SAAS,KAAK,IAAI,GAAI,QAAQ,KAAK,IAAI,EAAE,KAAM,MAAQ,KAAK,IAAI,EAAE,EAAE;AAC1E,YAAM,KAAU,OAAO,EAAE,KAAK,MAAQ,kBAAkB,MACpD,KAAK,IAAI,QAAQ,IAAM,IAAI;AAC/B,YAAM,SAAS,KAAK,IAAI,GAAI,QAAQ,KAAK,IAAI,EAAE,KAAM,MAAQ,KAAK,IAAI,EAAE,EAAE;AAC1E,YAAM,KAAU,OAAO,EAAE,KAAK,MAAQ,kBAAkB,MACpD,KAAK,IAAI,QAAQ,IAAM,IAAI;AAC/B,YAAM,KAAK,KAAK,kBAAkB,KAAK,CAAC;AACxC,YAAM,KAAK,KAAK,kBAAkB,KAAK,CAAC;AACxC,YAAM,KAAK,KAAK,kBAAkB,KAAK,CAAC;AAExC,YAAMJ,KAAI,aAAa,KAAK,aAAa,KAAK,aAAa;AAC3D,YAAMC,KAAI,aAAa,KAAK,aAAa,KAAK,YAAa;AAC3D,YAAMC,KAAI,aAAc,KAAK,aAAa,KAAK,aAAa;AAE5D,YAAM,OAAa,YAAYF,IAAGC,IAAGC,EAAC;AACtC,aAAO;IACT;;;IAIA,OAAO,2BACHF,IAAWC,IAAWC,IACtB,mBAAoC;AAGtC,YAAM,KAAK,WAAWF,KAAI,WAAWC,KAAI,WAAWC;AACpD,YAAM,KAAK,YAAYF,KAAI,WAAWC,KAAI,WAAWC;AACrD,YAAM,KAAK,WAAYF,KAAI,WAAWC,KAAI,WAAWC;AAGrD,YAAM,KAAK,kBAAkB,KAAK,CAAC,IAAI;AACvC,YAAM,KAAK,kBAAkB,KAAK,CAAC,IAAI;AACvC,YAAM,KAAK,kBAAkB,KAAK,CAAC,IAAI;AAGvC,YAAM,MAAM,KAAK,IAAI,kBAAkB,KAAK,KAAK,IAAI,EAAE,IAAI,KAAO,IAAI;AACtE,YAAM,MAAM,KAAK,IAAI,kBAAkB,KAAK,KAAK,IAAI,EAAE,IAAI,KAAO,IAAI;AACtE,YAAM,MAAM,KAAK,IAAI,kBAAkB,KAAK,KAAK,IAAI,EAAE,IAAI,KAAO,IAAI;AACtE,YAAM,KAAU,OAAO,EAAE,IAAI,MAAQ,OAAO,MAAM;AAClD,YAAM,KAAU,OAAO,EAAE,IAAI,MAAQ,OAAO,MAAM;AAClD,YAAM,KAAU,OAAO,EAAE,IAAI,MAAQ,OAAO,MAAM;AAGlD,YAAMC,MAAK,KAAO,KAAK,MAAQ,KAAK,MAAM;AAE1C,YAAMC,MAAK,KAAK,KAAK,IAAM,MAAM;AAGjC,YAAMC,MAAK,KAAO,KAAK,KAAO,KAAK,KAAO,MAAM;AAChD,YAAMC,OAAM,KAAO,KAAK,KAAO,KAAK,MAAM;AAG1C,YAAM,QAAQ,KAAK,MAAMF,IAAGD,EAAC;AAC7B,YAAM,cAAc,QAAQ,MAAQ,KAAK;AACzC,YAAM,MAAM,cAAc,IAAI,cAAc,MACxC,eAAe,MAAW,cAAc,MACd;AAC9B,YAAM,aAAa,MAAM,KAAK,KAAK;AAGnC,YAAM,KAAKG,MAAK,kBAAkB;AAGlC,YAAM,IAAI,MACN,KAAK,IACD,KAAK,kBAAkB,IACvB,kBAAkB,IAAI,kBAAkB,CAAC;AACjD,YAAM,IAAK,IAAM,kBAAkB,IAAK,KAAK,KAAK,IAAI,GAAK,KACtD,kBAAkB,KAAK,KAAQ,kBAAkB;AAEtD,YAAM,WAAY,MAAM,QAAS,MAAM,MAAM;AAC7C,YAAM,OACD,IAAM,KAAQ,KAAK,IAAI,WAAW,KAAK,KAAK,MAAQ,CAAG,IAAI;AAChE,YAAM,KACF,MAAU,KAAO,OAAO,kBAAkB,KAAK,kBAAkB;AACrE,YAAMC,KAAI,KAAK,KAAK,KAAKJ,KAAIA,KAAIC,KAAIA,EAAC,KAAKC,KAAI;AAC/C,YAAM,QAAQ,KAAK,IAAIE,IAAG,GAAG,IACzB,KAAK,IAAI,OAAO,KAAK,IAAI,MAAM,kBAAkB,CAAC,GAAG,IAAI;AAE7D,YAAMI,KAAI,QAAQ,KAAK,KAAK,IAAI,GAAK;AACrC,YAAMD,KAAIC,KAAI,kBAAkB;AAChC,YAAMZ,KAAI,KACN,KAAK,KAAM,QAAQ,kBAAkB,KAAM,kBAAkB,KAAK,EAAI;AAG1E,YAAM,SAAS,IAAM,MAAQ,QAAS,KAAK,IAAM,OAAQ;AACzD,YAAM,QAAQ,KAAK,IAAI,IAAM,SAASW,EAAC,IAAI;AAC3C,YAAM,QAAQ,QAAQ,KAAK,IAAI,UAAU;AACzC,YAAM,QAAQ,QAAQ,KAAK,IAAI,UAAU;AACzC,aAAO,IAAI,MAAM,KAAKC,IAAG,GAAG,GAAGD,IAAGX,IAAG,OAAO,OAAO,KAAK;IAC1D;;IAGA,uBAAuB,mBAAoC;AACzD,YAAM,QAAS,KAAK,WAAW,KAAO,KAAK,MAAM,IAC7C,IACA,KAAK,SAAS,KAAK,KAAK,KAAK,IAAI,GAAK;AAE1C,YAAMQ,KAAI,KAAK,IACX,QAAQ,KAAK,IAAI,OAAO,KAAK,IAAI,MAAM,kBAAkB,CAAC,GAAG,IAAI,GACjE,IAAM,GAAG;AACb,YAAM,OAAO,KAAK,MAAM,KAAK,KAAK;AAElC,YAAM,OAAO,QAAQ,KAAK,IAAI,OAAO,CAAG,IAAI;AAC5C,YAAM,KAAK,kBAAkB,KACzB,KAAK,IACD,KAAK,IAAI,KAAO,IAAM,kBAAkB,IAAI,kBAAkB,CAAC;AACvE,YAAM,KACF,QAAQ,MAAU,MAAQ,kBAAkB,KAAK,kBAAkB;AAEvE,YAAMD,MAAM,KAAK,kBAAkB;AAEnC,YAAM,OAAO,KAAK,IAAI,IAAI;AAC1B,YAAM,OAAO,KAAK,IAAI,IAAI;AAE1B,YAAM,QAAQ,MAAQA,MAAK,SAASC,MAC/B,KAAO,KAAK,KAAKA,KAAI,OAAO,MAAQA,KAAI;AAC7C,YAAMJ,KAAI,QAAQ;AAClB,YAAMC,KAAI,QAAQ;AAClB,YAAM,MAAM,MAAQE,MAAK,MAAQH,KAAI,MAAQC,MAAK;AAClD,YAAM,MAAM,MAAQE,MAAK,MAAQH,KAAI,MAAQC,MAAK;AAClD,YAAM,MAAM,MAAQE,MAAK,MAAQH,KAAI,OAASC,MAAK;AAEnD,YAAM,SAAS,KAAK,IAAI,GAAI,QAAQ,KAAK,IAAI,EAAE,KAAM,MAAQ,KAAK,IAAI,EAAE,EAAE;AAC1E,YAAM,KAAU,OAAO,EAAE,KAAK,MAAQ,kBAAkB,MACpD,KAAK,IAAI,QAAQ,IAAM,IAAI;AAC/B,YAAM,SAAS,KAAK,IAAI,GAAI,QAAQ,KAAK,IAAI,EAAE,KAAM,MAAQ,KAAK,IAAI,EAAE,EAAE;AAC1E,YAAM,KAAU,OAAO,EAAE,KAAK,MAAQ,kBAAkB,MACpD,KAAK,IAAI,QAAQ,IAAM,IAAI;AAC/B,YAAM,SAAS,KAAK,IAAI,GAAI,QAAQ,KAAK,IAAI,EAAE,KAAM,MAAQ,KAAK,IAAI,EAAE,EAAE;AAC1E,YAAM,KAAU,OAAO,EAAE,KAAK,MAAQ,kBAAkB,MACpD,KAAK,IAAI,QAAQ,IAAM,IAAI;AAC/B,YAAM,KAAK,KAAK,kBAAkB,KAAK,CAAC;AACxC,YAAM,KAAK,KAAK,kBAAkB,KAAK,CAAC;AACxC,YAAM,KAAK,KAAK,kBAAkB,KAAK,CAAC;AAExC,YAAMJ,KAAI,aAAa,KAAK,aAAa,KAAK,aAAa;AAC3D,YAAMC,KAAI,aAAa,KAAK,aAAa,KAAK,YAAa;AAC3D,YAAMC,KAAI,aAAc,KAAK,aAAa,KAAK,aAAa;AAE5D,aAAO,CAACF,IAAGC,IAAGC,EAAC;IACjB;;;;AC9XI,MAAO,YAAP,MAAgB;;;;;;;;IAsIZ,OAAO,gBAAgB,OAAa;AAC1C,cAAQ,QAAQ,KAAK,KAAK,MAAM,KAAK,KAAK;IAC5C;;;;;;;;;;IAWQ,OAAO,iBAAiB,cAAoB;AAClD,YAAM,aAAa,eAAe;AAClC,UAAIU,gBAAe;AACnB,UAAI,cAAc,UAAW;AAC3B,QAAAA,gBAAe,aAAa;aACvB;AACL,QAAAA,gBAAe,QAAQ,KAAK,IAAI,YAAY,IAAM,GAAG,IAAI;;AAE3D,aAAOA,gBAAe;IACxB;IAEQ,OAAO,oBAAoB,WAAiB;AAClD,YAAM,KAAK,KAAK,IAAI,KAAK,IAAI,SAAS,GAAG,IAAI;AAC7C,aAAiB,OAAO,SAAS,IAAI,MAAQ,MAAM,KAAK;IAC1D;;;;;;;IAQQ,OAAO,MAAM,QAAgB;AACnC,YAAM,iBACQ,eAAe,QAAQ,UAAU,2BAA2B;AAC1E,YAAM,KAAK,UAAU,oBAAoB,eAAe,CAAC,CAAC;AAC1D,YAAM,KAAK,UAAU,oBAAoB,eAAe,CAAC,CAAC;AAC1D,YAAM,KAAK,UAAU,oBAAoB,eAAe,CAAC,CAAC;AAE1D,YAAMC,MAAK,KAAO,KAAK,MAAQ,KAAK,MAAM;AAE1C,YAAMC,MAAK,KAAK,KAAK,IAAM,MAAM;AACjC,aAAO,KAAK,MAAMA,IAAGD,EAAC;IACxB;IAEQ,OAAO,iBAAiBA,IAAWC,IAAWC,IAAS;AAC7D,YAAM,UAAU,UAAU,gBAAgBD,KAAID,EAAC;AAC/C,YAAM,UAAU,UAAU,gBAAgBE,KAAIF,EAAC;AAC/C,aAAO,UAAU;IACnB;;;;;;;;;IAUQ,OAAO,UAAU,QAAgB,KAAa,QAAc;AAElE,cAAQ,MAAM,WAAW,SAAS;IACpC;IAEQ,OAAO,UAAU,QAAkBG,IAAW,QAAgB;AAEpE,aAAO;QACL,OAAO,CAAC,KAAK,OAAO,CAAC,IAAI,OAAO,CAAC,KAAKA;QACtC,OAAO,CAAC,KAAK,OAAO,CAAC,IAAI,OAAO,CAAC,KAAKA;QACtC,OAAO,CAAC,KAAK,OAAO,CAAC,IAAI,OAAO,CAAC,KAAKA;;IAE1C;;;;;;;;;;;;IAaQ,OAAO,cACX,QACA,YACA,QACA,MAAY;AAEd,YAAMA,KAAI,UAAU,UAAU,OAAO,IAAI,GAAG,YAAY,OAAO,IAAI,CAAC;AACpE,aAAO,UAAU,UAAU,QAAQA,IAAG,MAAM;IAC9C;IAEQ,OAAO,UAAUC,IAAS;AAChC,aAAO,KAAOA,MAAKA,MAAK;IAC1B;;;;;;;;;;;IAYQ,OAAO,UAAUC,IAAWC,KAAS;AAC3C,YAAM,KAAK,UAAU,cAAc,CAAC;AACpC,YAAM,KAAK,UAAU,cAAc,CAAC;AACpC,YAAM,KAAK,UAAU,cAAc,CAAC;AACpC,YAAM,SAASA,MAAI,KAAK,IAAI,IAAM;AAClC,YAAM,SAASA,MAAI,MAAM,IAAI,IAAM;AACnC,UAAIA,MAAI,GAAG;AACT,cAAMC,KAAI;AACV,cAAMN,KAAI;AACV,cAAMO,MAAKH,KAAIE,KAAI,KAAKN,KAAI,MAAM;AAClC,YAAI,UAAU,UAAUO,EAAC,GAAG;AAC1B,iBAAO,CAACA,IAAGD,IAAGN,EAAC;eACV;AACL,iBAAO,CAAC,IAAM,IAAM,EAAI;;iBAEjBK,MAAI,GAAG;AAChB,cAAML,KAAI;AACV,cAAMO,KAAI;AACV,cAAMD,MAAKF,KAAIG,KAAI,KAAKP,KAAI,MAAM;AAClC,YAAI,UAAU,UAAUM,EAAC,GAAG;AAC1B,iBAAO,CAACC,IAAGD,IAAGN,EAAC;eACV;AACL,iBAAO,CAAC,IAAM,IAAM,EAAI;;aAErB;AACL,cAAMO,KAAI;AACV,cAAMD,KAAI;AACV,cAAMN,MAAKI,KAAIG,KAAI,KAAKD,KAAI,MAAM;AAClC,YAAI,UAAU,UAAUN,EAAC,GAAG;AAC1B,iBAAO,CAACO,IAAGD,IAAGN,EAAC;eACV;AACL,iBAAO,CAAC,IAAM,IAAM,EAAI;;;IAG9B;;;;;;;;;;IAWQ,OAAO,gBAAgBI,IAAW,WAAiB;AACzD,UAAI,OAAO,CAAC,IAAM,IAAM,EAAI;AAC5B,UAAI,QAAQ;AACZ,UAAI,UAAU;AACd,UAAI,WAAW;AACf,UAAI,cAAc;AAClB,UAAI,QAAQ;AACZ,eAASC,MAAI,GAAGA,MAAI,IAAIA,OAAK;AAC3B,cAAM,MAAM,UAAU,UAAUD,IAAGC,GAAC;AACpC,YAAI,IAAI,CAAC,IAAI,GAAG;AACd;;AAEF,cAAM,SAAS,UAAU,MAAM,GAAG;AAClC,YAAI,CAAC,aAAa;AAChB,iBAAO;AACP,kBAAQ;AACR,oBAAU;AACV,qBAAW;AACX,wBAAc;AACd;;AAEF,YAAI,SAAS,UAAU,iBAAiB,SAAS,QAAQ,QAAQ,GAAG;AAClE,kBAAQ;AACR,cAAI,UAAU,iBAAiB,SAAS,WAAW,MAAM,GAAG;AAC1D,oBAAQ;AACR,uBAAW;iBACN;AACL,mBAAO;AACP,sBAAU;;;;AAIhB,aAAO,CAAC,MAAM,KAAK;IACrB;IAEQ,OAAO,SAASN,IAAaC,IAAW;AAC9C,aAAO;SACJD,GAAE,CAAC,IAAIC,GAAE,CAAC,KAAK;SACfD,GAAE,CAAC,IAAIC,GAAE,CAAC,KAAK;SACfD,GAAE,CAAC,IAAIC,GAAE,CAAC,KAAK;;IAEpB;IAEQ,OAAO,mBAAmBG,IAAS;AACzC,aAAO,KAAK,MAAMA,KAAI,GAAG;IAC3B;IAEQ,OAAO,mBAAmBA,IAAS;AACzC,aAAO,KAAK,KAAKA,KAAI,GAAG;IAC1B;;;;;;;;;IAUQ,OAAO,cAAcC,IAAW,WAAiB;AACvD,YAAM,UAAU,UAAU,gBAAgBA,IAAG,SAAS;AACtD,UAAI,OAAO,QAAQ,CAAC;AACpB,UAAI,UAAU,UAAU,MAAM,IAAI;AAClC,UAAI,QAAQ,QAAQ,CAAC;AACrB,eAAS,OAAO,GAAG,OAAO,GAAG,QAAQ;AACnC,YAAI,KAAK,IAAI,MAAM,MAAM,IAAI,GAAG;AAC9B,cAAI,SAAS;AACb,cAAI,SAAS;AACb,cAAI,KAAK,IAAI,IAAI,MAAM,IAAI,GAAG;AAC5B,qBAAS,UAAU,mBACf,UAAU,iBAAiB,KAAK,IAAI,CAAC,CAAC;AAC1C,qBAAS,UAAU,mBACf,UAAU,iBAAiB,MAAM,IAAI,CAAC,CAAC;iBACtC;AACL,qBAAS,UAAU,mBACf,UAAU,iBAAiB,KAAK,IAAI,CAAC,CAAC;AAC1C,qBAAS,UAAU,mBACf,UAAU,iBAAiB,MAAM,IAAI,CAAC,CAAC;;AAE7C,mBAASI,MAAI,GAAGA,MAAI,GAAGA,OAAK;AAC1B,gBAAI,KAAK,IAAI,SAAS,MAAM,KAAK,GAAG;AAClC;mBACK;AACL,oBAAM,SAAS,KAAK,OAAO,SAAS,UAAU,CAAG;AACjD,oBAAM,qBAAqB,UAAU,gBAAgB,MAAM;AAC3D,oBAAM,MACF,UAAU,cAAc,MAAM,oBAAoB,OAAO,IAAI;AACjE,oBAAM,SAAS,UAAU,MAAM,GAAG;AAClC,kBAAI,UAAU,iBAAiB,SAAS,WAAW,MAAM,GAAG;AAC1D,wBAAQ;AACR,yBAAS;qBACJ;AACL,uBAAO;AACP,0BAAU;AACV,yBAAS;;;;;;AAMnB,aAAO,UAAU,SAAS,MAAM,KAAK;IACvC;IAEQ,OAAO,2BAA2B,SAAe;AACvD,YAAM,aAAa,KAAK,IAAI,OAAO;AACnC,YAAM,OAAO,KAAK,IAAI,GAAG,QAAQ,cAAc,MAAQ,WAAW;AAClE,aAAiB,OAAO,OAAO,IAAI,KAAK,IAAI,MAAM,IAAM,IAAI;IAC9D;;;;;;;;;;IAWQ,OAAO,cAAc,YAAoB,QAAgBJ,IAAS;AAGxE,UAAIK,KAAI,KAAK,KAAKL,EAAC,IAAI;AAIvB,YAAM,oBAAoB,kBAAkB;AAC5C,YAAM,cACF,IAAI,KAAK,IAAI,OAAO,KAAK,IAAI,MAAM,kBAAkB,CAAC,GAAG,IAAI;AACjE,YAAM,OAAO,QAAQ,KAAK,IAAI,aAAa,CAAG,IAAI;AAClD,YAAM,KACF,QAAQ,MAAU,MAAQ,kBAAkB,KAAK,kBAAkB;AACvE,YAAM,OAAO,KAAK,IAAI,UAAU;AAChC,YAAM,OAAO,KAAK,IAAI,UAAU;AAChC,eAAS,iBAAiB,GAAG,iBAAiB,GAAG,kBAAkB;AAIjE,cAAM,cAAcK,KAAI;AACxB,cAAM,QACF,WAAW,KAAOA,OAAM,IAAM,IAAM,SAAS,KAAK,KAAK,WAAW;AACtE,cAAMP,KAAI,KAAK,IAAI,QAAQ,aAAa,IAAM,GAAG;AACjD,cAAM,KAAK,kBAAkB,KACzB,KAAK,IACD,aACA,IAAM,kBAAkB,IAAI,kBAAkB,CAAC;AAEvD,cAAMQ,MAAK,KAAK,kBAAkB;AAClC,cAAM,QAAQ,MAAQA,MAAK,SAASR,MAC/B,KAAO,KAAK,KAAKA,KAAI,OAAO,MAAQA,KAAI;AAC7C,cAAMH,KAAI,QAAQ;AAClB,cAAMC,KAAI,QAAQ;AAClB,cAAM,MAAM,MAAQU,MAAK,MAAQX,KAAI,MAAQC,MAAK;AAClD,cAAM,MAAM,MAAQU,MAAK,MAAQX,KAAI,MAAQC,MAAK;AAClD,cAAM,MAAM,MAAQU,MAAK,MAAQX,KAAI,OAASC,MAAK;AACnD,cAAM,WAAW,UAAU,2BAA2B,EAAE;AACxD,cAAM,WAAW,UAAU,2BAA2B,EAAE;AACxD,cAAM,WAAW,UAAU,2BAA2B,EAAE;AACxD,cAAM,SAAmB,eACrB,CAAC,UAAU,UAAU,QAAQ,GAC7B,UAAU,2BAA2B;AAKzC,YAAI,OAAO,CAAC,IAAI,KAAK,OAAO,CAAC,IAAI,KAAK,OAAO,CAAC,IAAI,GAAG;AACnD,iBAAO;;AAET,cAAM,KAAK,UAAU,cAAc,CAAC;AACpC,cAAM,KAAK,UAAU,cAAc,CAAC;AACpC,cAAM,KAAK,UAAU,cAAc,CAAC;AACpC,cAAM,MAAM,KAAK,OAAO,CAAC,IAAI,KAAK,OAAO,CAAC,IAAI,KAAK,OAAO,CAAC;AAC3D,YAAI,OAAO,GAAG;AACZ,iBAAO;;AAET,YAAI,mBAAmB,KAAK,KAAK,IAAI,MAAMI,EAAC,IAAI,MAAO;AACrD,cAAI,OAAO,CAAC,IAAI,UAAU,OAAO,CAAC,IAAI,UAAU,OAAO,CAAC,IAAI,QAAQ;AAClE,mBAAO;;AAET,iBAAkB,eAAe,MAAM;;AAIzC,QAAAK,KAAIA,MAAK,MAAML,MAAKK,MAAK,IAAI;;AAE/B,aAAO;IACT;;;;;;;;;;;;;IAcA,OAAO,WAAW,YAAoB,QAAgB,OAAa;AACjE,UAAI,SAAS,QAAU,QAAQ,QAAU,QAAQ,SAAS;AACxD,eAAkB,cAAc,KAAK;;AAEvC,mBAAuB,sBAAsB,UAAU;AACvD,YAAM,aAAa,aAAa,MAAM,KAAK;AAC3C,YAAML,KAAe,WAAW,KAAK;AACrC,YAAM,cAAc,UAAU,cAAc,YAAY,QAAQA,EAAC;AACjE,UAAI,gBAAgB,GAAG;AACrB,eAAO;;AAET,YAAM,SAAS,UAAU,cAAcA,IAAG,UAAU;AACpD,aAAkB,eAAe,MAAM;IACzC;;;;;;;;;;;;;IAcA,OAAO,WAAW,YAAoB,QAAgB,OAAa;AACjE,aAAO,MAAM,QAAQ,UAAU,WAAW,YAAY,QAAQ,KAAK,CAAC;IACtE;;AArgBO,YAAA,8BAA8B;IACnC;MACE;MACA;MACA;;IAEF;MACE;MACA;MACA;;IAEF;MACE;MACA;MACA;;;AAIG,YAAA,8BAA8B;IACnC;MACE;MACA;MACA;;IAEF;MACE;MACA;MACA;;IAEF;MACE;MACA;MACA;;;AAIG,YAAA,gBAAgB,CAAC,QAAQ,QAAQ,MAAM;AAEvC,YAAA,kBAAkB;IACvB;IAAsB;IAAsB;IAC5C;IAAsB;IAAsB;IAC5C;IAAsB;IAAsB;IAC5C;IAAsB;IAAsB;IAC5C;IAAsB;IAAsB;IAC5C;IAAsB;IAAsB;IAC5C;IAAsB;IAAsB;IAC5C;IAAsB;IAAsB;IAC5C;IAAsB;IAAsB;IAC5C;IAAsB;IAAsB;IAC5C;IAAsB;IAAsB;IAC5C;IAAsB;IAAsB;IAC5C;IAAsB;IAAsB;IAC5C;IAAsB;IAAsB;IAC5C;IAAsB;IAAsB;IAC5C;IAAsB;IAAsB;IAC5C;IAAsB;IAAsB;IAC5C;IAAsB;IAAsB;IAC5C;IAAsB;IAAsB;IAC5C;IAAsB;IAAsB;IAC5C;IAAsB;IAAsB;IAC5C;IAAsB;IAAsB;IAC5C;IAAsB;IAAsB;IAC5C;IAAsB;IAAsB;IAC5C;IAAsB;IAAsB;IAC5C;IAAsB;IAAsB;IAC5C;IAAsB;IAAsB;IAC5C;IAAsB;IAAsB;IAC5C;IAAsB;IAAsB;IAC5C;IAAsB;IAAsB;IAC5C;IAAsB;IAAsB;IAC5C;IAAsB;IAAsB;IAC5C;IAAsB;IAAsB;IAC5C;IAAsB;IAAsB;IAC5C;IAAsB;IAAsB;IAC5C;IAAsB;IAAsB;IAC5C;IAAsB;IAAsB;IAC5C;IAAsB;IAAsB;IAC5C;IAAsB;IAAsB;IAC5C;IAAsB;IAAsB;IAC5C;IAAsB;IAAsB;IAC5C;IAAsB;IAAsB;IAC5C;IAAsB;IAAsB;IAC5C;IAAsB;IAAsB;IAC5C;IAAsB;IAAsB;IAC5C;IAAsB;IAAsB;IAC5C;IAAsB;IAAsB;IAC5C;IAAsB;IAAsB;IAC5C;IAAsB;IAAsB;IAC5C;IAAsB;IAAsB;IAC5C;IAAsB;IAAsB;IAC5C;IAAsB;IAAsB;IAC5C;IAAsB;IAAsB;IAC5C;IAAsB;IAAsB;IAC5C;IAAsB;IAAsB;IAC5C;IAAsB;IAAsB;IAC5C;IAAsB;IAAsB;IAC5C;IAAsB;IAAsB;IAC5C;IAAsB;IAAsB;IAC5C;IAAsB;IAAsB;IAC5C;IAAsB;IAAsB;IAC5C;IAAsB;IAAsB;IAC5C;IAAsB;IAAsB;IAC5C;IAAsB;IAAsB;IAC5C;IAAsB;IAAsB;IAC5C;IAAsB;IAAsB;IAC5C;IAAsB;IAAsB;IAC5C;IAAsB;IAAsB;IAC5C;IAAsB;IAAsB;IAC5C;IAAsB;IAAsB;IAC5C;IAAsB;IAAsB;IAC5C;IAAsB;IAAsB;IAC5C;IAAsB;IAAsB;IAC5C;IAAsB;IAAsB;IAC5C;IAAsB;IAAsB;IAC5C;IAAsB;IAAsB;IAC5C;IAAsB;IAAsB;IAC5C;IAAsB;IAAsB;IAC5C;IAAsB;IAAsB;IAC5C;IAAsB;IAAsB;IAC5C;IAAsB;IAAsB;IAC5C;IAAsB;IAAsB;IAC5C;IAAsB;IAAsB;IAC5C;IAAsB;IAAsB;IAC5C;IAAsB;IAAsB;;;;ACjH1C,MAAO,MAAP,MAAU;IAcd,OAAO,KAAK,KAAa,QAAgB,MAAY;AACnD,aAAO,IAAI,IAAI,UAAU,WAAW,KAAK,QAAQ,IAAI,CAAC;IACxD;;;;;IAMA,OAAO,QAAQ,MAAY;AACzB,aAAO,IAAI,IAAI,IAAI;IACrB;IAEA,QAAK;AACH,aAAO,KAAK;IACd;;;;;IAMA,IAAI,MAAG;AACL,aAAO,KAAK;IACd;;;;;;IAOA,IAAI,IAAI,QAAc;AACpB,WAAK,iBACD,UAAU,WACN,QACA,KAAK,gBACL,KAAK,YAAY,CAChB;IAEX;IAEA,IAAI,SAAM;AACR,aAAO,KAAK;IACd;;;;;;IAOA,IAAI,OAAO,WAAiB;AAC1B,WAAK,iBACD,UAAU,WACN,KAAK,aACL,WACA,KAAK,YAAY,CAChB;IAEX;;IAGA,IAAI,OAAI;AACN,aAAO,KAAK;IACd;;;;;;IAOA,IAAI,KAAK,SAAe;AACtB,WAAK,iBACD,UAAU,WACN,KAAK,aACL,KAAK,gBACL,OAAO,CACN;IAEX;IAEA,YAA4B,MAAY;AAAZ,WAAA,OAAA;AAC1B,YAAM,MAAM,MAAM,QAAQ,IAAI;AAC9B,WAAK,cAAc,IAAI;AACvB,WAAK,iBAAiB,IAAI;AAC1B,WAAK,eAAqB,cAAc,IAAI;AAC5C,WAAK,OAAO;IACd;IAEQ,iBAAiB,MAAY;AACnC,YAAM,MAAM,MAAM,QAAQ,IAAI;AAC9B,WAAK,cAAc,IAAI;AACvB,WAAK,iBAAiB,IAAI;AAC1B,WAAK,eAAqB,cAAc,IAAI;AAC5C,WAAK,OAAO;IACd;;;;;;;;;;;;;;;IAgBA,oBAAoB,IAAqB;AAEvC,YAAM,MAAM,MAAM,QAAQ,KAAK,MAAK,CAAE;AACtC,YAAM,aAAa,IAAI,uBAAuB,EAAE;AAGhD,YAAM,aAAa,MAAM,2BACrB,WAAW,CAAC,GACZ,WAAW,CAAC,GACZ,WAAW,CAAC,GACZ,kBAAkB,KAAI,CAAE;AAM5B,YAAM,YAAY,IAAI,KAClB,WAAW,KACX,WAAW,QACL,WAAW,WAAW,CAAC,CAAC,CAAC;AAEnC,aAAO;IACT;;;;ACvJI,MAAO,WAAP,MAAe;;;;;;;IAOnB,OAAO,aAAa,OAAe,OAAa;AAC9C,cAAa,YAAY,GAAK,KAAO,KAAK;AAC1C,cAAa,YAAY,GAAK,KAAO,KAAK;AAC1C,aAAO,SAAS,UAAgB,WAAW,KAAK,GAAS,WAAW,KAAK,CAAC;IAC5E;IAEA,OAAO,UAAU,IAAYO,KAAU;AACrC,YAAM,UAAU,KAAKA,MAAK,KAAKA;AAC/B,YAAM,SAAU,YAAYA,MAAM,KAAKA;AACvC,cAAQ,UAAU,MAAQ,SAAS;IACrC;;;;;;;;;;;IAYA,OAAO,QAAQ,MAAc,OAAa;AACxC,UAAI,OAAO,KAAO,OAAO,KAAO;AAC9B,eAAO;;AAGT,YAAM,QAAc,WAAW,IAAI;AACnC,YAAM,SAAS,SAAS,QAAQ,KAAO;AACvC,YAAM,eAAe,SAAS,UAAU,QAAQ,KAAK;AACrD,YAAM,QAAQ,KAAK,IAAI,eAAe,KAAK;AAC3C,UAAI,eAAe,SAAS,QAAQ,MAAM;AACxC,eAAO;;AAKT,YAAM,cAAoB,WAAW,MAAM,IAAI;AAC/C,UAAI,cAAc,KAAK,cAAc,KAAK;AACxC,eAAO;;AAET,aAAO;IACT;;;;;;;;;;;IAYA,OAAO,OAAO,MAAc,OAAa;AACvC,UAAI,OAAO,KAAO,OAAO,KAAO;AAC9B,eAAO;;AAGT,YAAM,SAAe,WAAW,IAAI;AACpC,YAAM,SAAU,SAAS,KAAO,QAAS;AACzC,YAAM,eAAe,SAAS,UAAU,QAAQ,KAAK;AAErD,YAAM,QAAQ,KAAK,IAAI,eAAe,KAAK;AAC3C,UAAI,eAAe,SAAS,QAAQ,MAAM;AACxC,eAAO;;AAKT,YAAM,cAAoB,WAAW,KAAK,IAAI;AAC9C,UAAI,cAAc,KAAK,cAAc,KAAK;AACxC,eAAO;;AAET,aAAO;IACT;;;;;;;;;;;;;;;IAgBA,OAAO,cAAc,MAAc,OAAa;AAC9C,YAAM,cAAc,SAAS,QAAQ,MAAM,KAAK;AAChD,aAAQ,cAAc,IAAO,MAAQ;IACvC;;;;;;;;;;;;;;;IAgBA,OAAO,aAAa,MAAc,OAAa;AAC7C,YAAM,aAAa,SAAS,OAAO,MAAM,KAAK;AAC9C,aAAQ,aAAa,IAAO,IAAM;IACpC;;;;AC5HI,MAAO,kBAAP,MAAsB;;;;;;;;;IAS1B,OAAO,WAAW,KAAQ;AACxB,YAAM,YACF,KAAK,MAAM,IAAI,GAAG,KAAK,MAAQ,KAAK,MAAM,IAAI,GAAG,KAAK;AAC1D,YAAM,eAAe,KAAK,MAAM,IAAI,MAAM,IAAI;AAC9C,YAAM,aAAa,KAAK,MAAM,IAAI,IAAI,IAAI;AAE1C,aAAO,aAAa,gBAAgB;IACtC;;;;;;;;IASA,OAAO,cAAc,KAAQ;AAC3B,UAAI,gBAAgB,WAAW,GAAG,GAAG;AACnC,eAAO,IAAI,KACP,IAAI,KACJ,IAAI,QACJ,EAAI;;AAIV,aAAO;IACT;;;;ACDI,MAAO,eAAP,MAAmB;;;;;;;IASvB,OAAO,YAAY,MAAwB;AACzC,aAAO,IAAI,aACP,KAAK,QAAQ,IACb,KAAK,SACL,KAAK,MACL,KAAK,gBAAgB,OACrB,KAAK,YACL,KAAK,kBACL,KAAK,eACL,KAAK,aAAa;IAExB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAkCA,YACa,MACA,SACA,MACA,cACA,YACA,kBACA,eACA,eAAwD;AAPxD,WAAA,OAAA;AACA,WAAA,UAAA;AACA,WAAA,OAAA;AACA,WAAA,eAAA;AACA,WAAA,aAAA;AACA,WAAA,mBAAA;AACA,WAAA,gBAAA;AACA,WAAA,gBAAA;AA7DI,WAAA,WAAW,oBAAI,IAAG;AA+DjC,UAAK,CAAC,cAAe,kBAAkB;AACrC,cAAM,IAAI,MACN,SAAS,kEACgC;;AAE/C,UAAK,CAAC,cAAe,eAAe;AAClC,cAAM,IAAI,MACN,SAAS,+DACgC;;AAE/C,UAAI,cAAc,CAAC,eAAe;AAChC,cAAM,IAAI,MACN,SAAS,+DACmC;;IAEpD;;;;;;;;IASA,QAAQ,QAAqB;AAC3B,aAAO,KAAK,OAAO,MAAM,EAAE,MAAK;IAClC;;;;;;;;;IAUA,OAAO,QAAqB;AAC1B,YAAM,eAAe,KAAK,SAAS,IAAI,MAAM;AAC7C,UAAI,gBAAgB,MAAM;AACxB,eAAO;;AAET,YAAM,OAAO,KAAK,QAAQ,MAAM;AAChC,YAAM,SAAS,KAAK,QAAQ,MAAM,EAAE,OAAO,IAAI;AAC/C,UAAI,KAAK,SAAS,OAAO,GAAG;AAC1B,aAAK,SAAS,MAAK;;AAErB,WAAK,SAAS,IAAI,QAAQ,MAAM;AAChC,aAAO;IACT;;;;;;;;;IAUA,QAAQ,QAAqB;AAC3B,YAAM,qBAAqB,OAAO,gBAAgB;AAGlD,UAAI,KAAK,eAAe;AACtB,cAAM,gBAAgB,KAAK,cAAc,MAAM;AAC/C,cAAM,QAAQ,cAAc;AAC5B,cAAM,QAAQ,cAAc;AAC5B,cAAM,QAAQ,cAAc;AAC5B,cAAM,WAAW,cAAc;AAC/B,cAAM,eAAe,cAAc;AAEnC,cAAM,KAAK,KAAK,WAAY,MAAM;AAClC,cAAM,SAAS,GAAG,QAAQ,MAAM;AAEhC,cAAM,YACD,aAAa,YACZ,aAAa,aAAa,CAAC,OAAO,UAClC,aAAa,YAAY,OAAO;AACtC,cAAM,SAAS,YAAY,QAAQ;AACnC,cAAM,UAAU,YAAY,QAAQ;AACpC,cAAM,WAAW,KAAK,SAAS,OAAO;AACtC,cAAM,eAAe,OAAO,SAAS,IAAI;AAGzC,cAAM,YAAY,OAAO,cAAe,YAAY,OAAO,aAAa;AACxE,cAAM,YACF,QAAQ,cAAe,YAAY,OAAO,aAAa;AAI3D,cAAM,eAAe,OAAO,KAAK,MAAM;AACvC,YAAI,QAAQ,SAAS,aAAa,QAAQ,YAAY,KAAK,YACvD,eACA,aAAa,eAAe,QAAQ,SAAS;AAEjD,cAAM,eAAe,QAAQ,KAAK,MAAM;AACxC,YAAI,QAAQ,SAAS,aAAa,QAAQ,YAAY,KAAK,YACvD,eACA,aAAa,eAAe,QAAQ,SAAS;AAEjD,YAAI,oBAAoB;AAGtB,kBAAQ,aAAa,eAAe,QAAQ,SAAS;AACrD,kBAAQ,aAAa,eAAe,QAAQ,SAAS;;AAGvD,aAAK,QAAQ,SAAS,gBAAgB,OAAO;eAEtC;AAEL,kBAAa,YAAY,GAAG,KAAK,QAAQ,QAAQ,YAAY;AAC7D,eAAK,QAAQ,SAAS,gBAAgB,OAAO;iBAEtC;AAEL,oBAAa,YAAY,GAAG,KAAK,QAAQ,QAAQ,YAAY;;;AAKjE,YAAI,MAAM,SAAS,QAAQ,IAAI;AAG7B,cAAI,eAAe,GAAG;AACpB,oBAAQ;AACR,oBAAQ,KAAK,IAAI,OAAO,QAAQ,QAAQ,YAAY;iBAC/C;AACL,oBAAQ;AACR,oBAAQ,KAAK,IAAI,OAAO,QAAQ,QAAQ,YAAY;;mBAE7C,MAAM,SAAS,QAAQ,IAAI;AACpC,cAAI,cAAc;AAGhB,gBAAI,eAAe,GAAG;AACpB,sBAAQ;AACR,sBAAQ,KAAK,IAAI,OAAO,QAAQ,QAAQ,YAAY;mBAC/C;AACL,sBAAQ;AACR,sBAAQ,KAAK,IAAI,OAAO,QAAQ,QAAQ,YAAY;;iBAEjD;AAEL,gBAAI,eAAe,GAAG;AACpB,sBAAQ;mBACH;AACL,sBAAQ;;;;AAMd,eAAO,WAAW,QAAQ;aAGvB;AAEH,YAAI,SAAS,KAAK,KAAK,MAAM;AAE7B,YAAI,KAAK,cAAc,MAAM;AAC3B,iBAAO;;AAGT,cAAM,SAAS,KAAK,WAAW,MAAM,EAAE,QAAQ,MAAM;AAErD,cAAM,eACF,KAAK,cAAe,YAAY,OAAO,aAAa;AAExD,YAAI,SAAS,aAAa,QAAQ,MAAM,KAAK,cAAc;eAEpD;AAEL,mBAAS,aAAa,eAAe,QAAQ,YAAY;;AAG3D,YAAI,oBAAoB;AACtB,mBAAS,aAAa,eAAe,QAAQ,YAAY;;AAG3D,YAAI,KAAK,gBAAgB,MAAM,UAAU,SAAS,IAAI;AAEpD,cAAI,SAAS,aAAa,IAAI,MAAM,KAAK,cAAc;AACrD,qBAAS;iBACJ;AACL,qBAAS;;;AAIb,YAAI,KAAK,kBAAkB;AAGzB,gBAAM,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,YAAY,KAAK,gBAAgB;AAC1D,gBAAM,CAAC,SAAS,OAAO,IACnB,CAAC,IAAI,MAAM,EAAE,QAAQ,MAAM,GAAG,IAAI,MAAM,EAAE,QAAQ,MAAM,CAAC;AAC7D,gBAAM,CAAC,OAAO,KAAK,IACf,CAAC,KAAK,IAAI,SAAS,OAAO,GAAG,KAAK,IAAI,SAAS,OAAO,CAAC;AAE3D,cAAI,SAAS,aAAa,OAAO,MAAM,KAAK,gBACxC,SAAS,aAAa,OAAO,MAAM,KAAK,cAAc;AACxD,mBAAO;;AAKT,gBAAM,cAAc,SAAS,QAAQ,OAAO,YAAY;AAIxD,gBAAM,aAAa,SAAS,OAAO,OAAO,YAAY;AAGtD,gBAAM,aAAa,CAAA;AACnB,cAAI,gBAAgB;AAAI,uBAAW,KAAK,WAAW;AACnD,cAAI,eAAe;AAAI,uBAAW,KAAK,UAAU;AAEjD,gBAAM,eAAe,aAAa,2BAA2B,OAAO,KAChE,aAAa,2BAA2B,OAAO;AACnD,cAAI,cAAc;AAChB,mBAAQ,cAAc,IAAK,MAAM;;AAEnC,cAAI,WAAW,WAAW,GAAG;AAC3B,mBAAO,WAAW,CAAC;;AAErB,iBAAQ,aAAa,IAAK,IAAI;;AAGhC,eAAO;;IAEX;;;;;;;;;;IAWA,OAAO,eAAe,QAAgB,OAAa;AACjD,YAAM,cAAc,SAAS,cAAc,QAAQ,KAAK;AACxD,YAAM,aAAa,SAAS,aAAa,QAAQ,KAAK;AACtD,YAAM,eAAe,SAAS,aAAa,aAAa,MAAM;AAC9D,YAAM,cAAc,SAAS,aAAa,YAAY,MAAM;AAC5D,YAAM,gBAAgB,aAAa,2BAA2B,MAAM;AAEpE,UAAI,eAAe;AAUjB,cAAM,uBAAuB,KAAK,IAAI,eAAe,WAAW,IAAI,OAChE,eAAe,SAAS,cAAc;AAC1C,eAAO,gBAAgB,SAAS,gBAAgB,eACxC,uBACJ,cACA;aACC;AACL,eAAO,eAAe,SAAS,eAAe,eAAe,aACA;;IAEjE;;;;;;;;;;;;IAaA,OAAO,2BAA2B,MAAY;AAC5C,aAAO,KAAK,MAAM,IAAI,IAAI;IAC5B;;;;;IAMA,OAAO,0BAA0B,MAAY;AAC3C,aAAO,KAAK,MAAM,IAAI,KAAK;IAC7B;;;;;IAMA,OAAO,sBAAsB,MAAY;AACvC,UAAI,aAAa,2BAA2B,IAAI,KAC5C,CAAC,aAAa,0BAA0B,IAAI,GAAG;AACjD,eAAO;;AAET,aAAO;IACT;;;;AC3ZF,MAAY;AAAZ,GAAA,SAAYC,UAAO;AACjB,IAAAA,SAAAA,SAAA,YAAA,IAAA,CAAA,IAAA;AACA,IAAAA,SAAAA,SAAA,SAAA,IAAA,CAAA,IAAA;AACA,IAAAA,SAAAA,SAAA,YAAA,IAAA,CAAA,IAAA;AACA,IAAAA,SAAAA,SAAA,SAAA,IAAA,CAAA,IAAA;AACA,IAAAA,SAAAA,SAAA,YAAA,IAAA,CAAA,IAAA;AACA,IAAAA,SAAAA,SAAA,UAAA,IAAA,CAAA,IAAA;AACA,IAAAA,SAAAA,SAAA,SAAA,IAAA,CAAA,IAAA;AACA,IAAAA,SAAAA,SAAA,SAAA,IAAA,CAAA,IAAA;AACA,IAAAA,SAAAA,SAAA,aAAA,IAAA,CAAA,IAAA;EACF,GAVY,YAAA,UAAO,CAAA,EAAA;;;ACGb,MAAO,gBAAP,MAAoB;;;;;;;;;IASxB,YACa,KACA,QACA,QACA,MAAY;AAHZ,WAAA,MAAA;AACA,WAAA,SAAA;AACA,WAAA,SAAA;AACA,WAAA,OAAA;IACV;;;;;;;;IASH,YAAY,eAAqB;AAC/B,UAAI,iBAAiB,IAAM;AACzB,eAAO,KAAK;iBACH,gBAAgB,GAAK;AAC9B,eAAY,KAAK,KAAK,KAAK,KAAK,SAAS,gBAAiB,MAAO,CAAC;iBACzD,gBAAgB,KAAK;AAC9B,eAAY,KAAK,KAAK,QAAQ,KAAK,SAAS,gBAAgB,KAAK,GAAG;iBAC3D,gBAAgB,GAAK;AAC9B,eAAY,KAAK,KAAK,QAAQ,KAAK,OAAO,gBAAgB,OAAO,GAAG;aAC/D;AACL,eAAO,KAAK;;IAEhB;;;;AC5BI,MAAO,gBAAP,MAAoB;;;;;;;;;;;;;;;;;;;;;;;;IAwBxB,YACa,OACA,OACA,OACA,UACA,cAAqB;AAJrB,WAAA,QAAA;AACA,WAAA,QAAA;AACA,WAAA,QAAA;AACA,WAAA,WAAA;AACA,WAAA,eAAA;IACV;;;;ACnCL,WAAS,WAAW,QAAqB;AACvC,WAAO,OAAO,YAAY,QAAQ,YAC9B,OAAO,YAAY,QAAQ;EACjC;AAEA,WAAS,aAAa,QAAqB;AACzC,WAAO,OAAO,YAAY,QAAQ;EACpC;AAEA,WAAS,wBACL,KAAa,QAAgB,MAC7B,kBAAyB;AAC3B,QAAI,SAAS;AAEb,QAAI,kBAAkB,IAAI,KAAK,KAAK,QAAQ,IAAI;AAChD,QAAI,gBAAgB,SAAS,QAAQ;AACnC,UAAI,aAAa,gBAAgB;AACjC,aAAO,gBAAgB,SAAS,QAAQ;AACtC,kBAAU,mBAAmB,KAAO;AACpC,cAAM,oBAAoB,IAAI,KAAK,KAAK,QAAQ,MAAM;AACtD,YAAI,aAAa,kBAAkB,QAAQ;AACzC;;AAEF,YAAI,KAAK,IAAI,kBAAkB,SAAS,MAAM,IAAI,KAAK;AACrD;;AAGF,cAAM,iBAAiB,KAAK,IAAI,kBAAkB,SAAS,MAAM;AACjE,cAAM,eAAe,KAAK,IAAI,gBAAgB,SAAS,MAAM;AAC7D,YAAI,iBAAiB,cAAc;AACjC,4BAAkB;;AAEpB,qBAAa,KAAK,IAAI,YAAY,kBAAkB,MAAM;;;AAI9D,WAAO;EACT;AAEA,WAAS,2BAA2B,QAAqB;AACvD,WAAO,kBAAkB;;MACL;;MACO;;MACF,OAAO,SAAS,KAAK;;MAC5B;;MACa;IAAS;EAE1C;AAEA,WAAS,cAAc,WAAgB,QAAqB;AAC1D,UAAM,UACF,UAAU,oBAAoB,2BAA2B,MAAM,CAAC;AACpE,QAAI,aAAa,2BAA2B,UAAU,IAAI,KACtD,CAAC,aAAa,0BAA0B,QAAQ,IAAI,GAAG;AACzD,aAAO,aAAa,sBAAsB,UAAU,IAAI;WACnD;AACL,aAAO,aAAa,sBAAsB,QAAQ,IAAI;;EAE1D;AAOM,MAAO,wBAAP,MAA4B;IAEhC,OAAO,eAAeC,IAAgB;AACpC,aAAOA,GAAE,SAAS,sBAAsB,gBACtB,sBAAsB;IAC1C;;AAJO,wBAAA,yBAAyB;AAMzB,wBAAA,yBAAyB,aAAa,YAAY;IACvD,MAAM;IACN,SAAS,CAACA,OAAMA,GAAE;IAClB,MAAM,CAACA,OAAMA,GAAE,eAAe,SAAS;GACxC;AAEM,wBAAA,2BAA2B,aAAa,YAAY;IACzD,MAAM;IACN,SAAS,CAACA,OAAMA,GAAE;IAClB,MAAM,CAACA,OAAMA,GAAE,iBAAiB,SAAS;GAC1C;AAEM,wBAAA,0BAA0B,aAAa,YAAY;IACxD,MAAM;IACN,SAAS,CAACA,OAAMA,GAAE;IAClB,MAAM,CAACA,OAAMA,GAAE,gBAAgB,SAAS;GACzC;AAEM,wBAAA,yBAAyB,aAAa,YAAY;IACvD,MAAM;IACN,SAAS,CAACA,OAAMA,GAAE;IAClB,MAAM,CAACA,OAAMA,GAAE,eAAe,SAAS;GACxC;AAEM,wBAAA,gCAAgC,aAAa,YAAY;IAC9D,MAAM;IACN,SAAS,CAACA,OAAMA,GAAE;IAClB,MAAM,CAACA,OAAMA,GAAE,sBAAsB,SAAS;GAC/C;AAEM,wBAAA,aAAa,aAAa,YAAY;IAC3C,MAAM;IACN,SAAS,CAACA,OAAMA,GAAE;IAClB,MAAM,CAACA,OAAMA,GAAE,SAAS,IAAI;IAC5B,cAAc;GACf;AAEM,wBAAA,eAAe,aAAa,YAAY;IAC7C,MAAM;IACN,SAAS,CAACA,OAAMA,GAAE;IAClB,MAAM,CAACA,OAAMA,GAAE,SAAS,KAAK;IAC7B,YAAY,CAACA,OAAM,sBAAsB;IACzC,eAAe,IAAI,cAAc,GAAG,GAAG,KAAK,CAAC;GAC9C;AAEM,wBAAA,UAAU,aAAa,YAAY;IACxC,MAAM;IACN,SAAS,CAACA,OAAMA,GAAE;IAClB,MAAM,CAACA,OAAMA,GAAE,SAAS,IAAI;IAC5B,cAAc;GACf;AAEM,wBAAA,aAAa,aAAa,YAAY;IAC3C,MAAM;IACN,SAAS,CAACA,OAAMA,GAAE;IAClB,MAAM,CAACA,OAAMA,GAAE,SAAS,IAAI;IAC5B,cAAc;GACf;AAEM,wBAAA,gBAAgB,aAAa,YAAY;IAC9C,MAAM;IACN,SAAS,CAACA,OAAMA,GAAE;IAClB,MAAM,CAACA,OAAMA,GAAE,SAAS,KAAK;IAC7B,cAAc;GACf;AAEM,wBAAA,yBAAyB,aAAa,YAAY;IACvD,MAAM;IACN,SAAS,CAACA,OAAMA,GAAE;IAClB,MAAM,CAACA,OAAMA,GAAE,SAAS,IAAI;IAC5B,cAAc;GACf;AAEM,wBAAA,sBAAsB,aAAa,YAAY;IACpD,MAAM;IACN,SAAS,CAACA,OAAMA,GAAE;IAClB,MAAM,CAACA,OAAMA,GAAE,SAAS,KAAK;IAC7B,cAAc;GACf;AAEM,wBAAA,mBAAmB,aAAa,YAAY;IACjD,MAAM;IACN,SAAS,CAACA,OAAMA,GAAE;IAClB,MAAM,CAACA,OAAMA,GAAE,SAAS,KAAK;IAC7B,cAAc;GACf;AAEM,wBAAA,uBAAuB,aAAa,YAAY;IACrD,MAAM;IACN,SAAS,CAACA,OAAMA,GAAE;IAClB,MAAM,CAACA,OAAMA,GAAE,SAAS,KAAK;IAC7B,cAAc;GACf;AAEM,wBAAA,0BAA0B,aAAa,YAAY;IACxD,MAAM;IACN,SAAS,CAACA,OAAMA,GAAE;IAClB,MAAM,CAACA,OAAMA,GAAE,SAAS,KAAK;IAC7B,cAAc;GACf;AAEM,wBAAA,YAAY,aAAa,YAAY;IAC1C,MAAM;IACN,SAAS,CAACA,OAAMA,GAAE;IAClB,MAAM,CAACA,OAAMA,GAAE,SAAS,KAAK;IAC7B,YAAY,CAACA,OAAM,sBAAsB,eAAeA,EAAC;IACzD,eAAe,IAAI,cAAc,KAAK,GAAG,IAAI,EAAE;GAChD;AAEM,wBAAA,iBAAiB,aAAa,YAAY;IAC/C,MAAM;IACN,SAAS,CAACA,OAAMA,GAAE;IAClB,MAAM,CAACA,OAAMA,GAAE,SAAS,KAAK;IAC7B,cAAc;GACf;AAEM,wBAAA,mBAAmB,aAAa,YAAY;IACjD,MAAM;IACN,SAAS,CAACA,OAAMA,GAAE;IAClB,MAAM,CAACA,OAAMA,GAAE,SAAS,KAAK;IAC7B,YAAY,CAACA,OAAM,sBAAsB,eAAeA,EAAC;IACzD,eAAe,IAAI,cAAc,GAAG,KAAK,GAAG,EAAE;GAC/C;AAEM,wBAAA,iBAAiB,aAAa,YAAY;IAC/C,MAAM;IACN,SAAS,CAACA,OAAMA,GAAE;IAClB,MAAM,CAACA,OAAMA,GAAE,SAAS,KAAK;GAC9B;AAEM,wBAAA,mBAAmB,aAAa,YAAY;IACjD,MAAM;IACN,SAAS,CAACA,OAAMA,GAAE;IAClB,MAAM,CAACA,OAAMA,GAAE,SAAS,KAAK;IAC7B,YAAY,CAACA,OAAM,sBAAsB;IACzC,eAAe,IAAI,cAAc,KAAK,GAAG,IAAI,EAAE;GAChD;AAEM,wBAAA,UAAU,aAAa,YAAY;IACxC,MAAM;IACN,SAAS,CAACA,OAAMA,GAAE;IAClB,MAAM,CAACA,OAAMA,GAAE,SAAS,KAAK;IAC7B,YAAY,CAACA,OAAM,sBAAsB,eAAeA,EAAC;IACzD,eAAe,IAAI,cAAc,KAAK,GAAG,KAAK,CAAC;GAChD;AAEM,wBAAA,iBAAiB,aAAa,YAAY;IAC/C,MAAM;IACN,SAAS,CAACA,OAAMA,GAAE;IAClB,MAAM,CAACA,OAAMA,GAAE,SAAS,KAAK;IAC7B,YAAY,CAACA,OAAM,sBAAsB,eAAeA,EAAC;IACzD,eAAe,IAAI,cAAc,GAAG,GAAG,GAAG,CAAC;GAC5C;AAEM,wBAAA,SAAS,aAAa,YAAY;IACvC,MAAM;IACN,SAAS,CAACA,OAAMA,GAAE;IAClB,MAAM,CAACA,OAAM;GACd;AAEM,wBAAA,QAAQ,aAAa,YAAY;IACtC,MAAM;IACN,SAAS,CAACA,OAAMA,GAAE;IAClB,MAAM,CAACA,OAAM;GACd;AAEM,wBAAA,cAAc,aAAa,YAAY;IAC5C,MAAM;IACN,SAAS,CAACA,OAAMA,GAAE;IAClB,MAAM,CAACA,OAAMA,GAAE,SAAS,KAAK;IAC7B,cAAc;GACf;AAEM,wBAAA,UAAU,aAAa,YAAY;IACxC,MAAM;IACN,SAAS,CAACA,OAAMA,GAAE;IAClB,MACI,CAACA,OAAK;AACJ,UAAI,aAAaA,EAAC,GAAG;AACnB,eAAOA,GAAE,SAAS,MAAM;;AAE1B,aAAOA,GAAE,SAAS,KAAK;IACzB;IACJ,cAAc;IACd,YAAY,CAACA,OAAM,sBAAsB,eAAeA,EAAC;IACzD,eAAe,IAAI,cAAc,GAAG,KAAK,GAAG,EAAE;IAC9C,eAAe,CAACA,OAAM,IAAI,cACtB,sBAAsB,kBAAkB,sBAAsB,SAC9D,IAAI,UAAU,KAAK;GACxB;AAEM,wBAAA,YAAY,aAAa,YAAY;IAC1C,MAAM;IACN,SAAS,CAACA,OAAMA,GAAE;IAClB,MACI,CAACA,OAAK;AACJ,UAAI,aAAaA,EAAC,GAAG;AACnB,eAAOA,GAAE,SAAS,KAAK;;AAEzB,aAAOA,GAAE,SAAS,KAAK;IACzB;IACJ,YAAY,CAACA,OAAM,sBAAsB;IACzC,eAAe,IAAI,cAAc,KAAK,GAAG,IAAI,EAAE;GAChD;AAEM,wBAAA,mBAAmB,aAAa,YAAY;IACjD,MAAM;IACN,SAAS,CAACA,OAAMA,GAAE;IAClB,MACI,CAACA,OAAK;AACJ,UAAI,WAAWA,EAAC,GAAG;AACjB,eAAO,cAAcA,GAAE,gBAAgBA,EAAC;;AAE1C,UAAI,aAAaA,EAAC,GAAG;AACnB,eAAOA,GAAE,SAAS,KAAK;;AAEzB,aAAOA,GAAE,SAAS,KAAK;IACzB;IACJ,cAAc;IACd,YAAY,CAACA,OAAM,sBAAsB,eAAeA,EAAC;IACzD,eAAe,IAAI,cAAc,GAAG,GAAG,GAAG,CAAC;IAC3C,eAAe,CAACA,OAAM,IAAI,cACtB,sBAAsB,kBAAkB,sBAAsB,SAC9D,IAAI,UAAU,KAAK;GACxB;AAEM,wBAAA,qBAAqB,aAAa,YAAY;IACnD,MAAM;IACN,SAAS,CAACA,OAAMA,GAAE;IAClB,MACI,CAACA,OAAK;AACJ,UAAI,WAAWA,EAAC,GAAG;AACjB,eAAO,aAAa,eAChB,sBAAsB,iBAAiB,KAAKA,EAAC,GAAG,GAAG;;AAEzD,UAAI,aAAaA,EAAC,GAAG;AACnB,eAAOA,GAAE,SAAS,IAAI;;AAExB,aAAOA,GAAE,SAAS,KAAK;IACzB;IACJ,YAAY,CAACA,OAAM,sBAAsB;IACzC,eAAe,IAAI,cAAc,KAAK,GAAG,IAAI,EAAE;GAChD;AAEM,wBAAA,iBAAiB,aAAa,YAAY;IAC/C,MAAM;IACN,SAAS,CAACA,OAAMA,GAAE;IAClB,MAAM,CAACA,OAAMA,GAAE,SAAS,KAAK;IAC7B,YAAY,CAACA,OAAM,sBAAsB;IACzC,eAAe,IAAI,cAAc,GAAG,KAAK,GAAG,EAAE;GAC/C;AAEM,wBAAA,YAAY,aAAa,YAAY;IAC1C,MAAM;IACN,SAAS,CAACA,OAAMA,GAAE;IAClB,MAAM,CAACA,OAAMA,GAAE,SAAS,KAAK;IAC7B,cAAc;IACd,YAAY,CAACA,OAAM,sBAAsB,eAAeA,EAAC;IACzD,eAAe,IAAI,cAAc,GAAG,KAAK,GAAG,EAAE;IAC9C,eAAe,CAACA,OAAM,IAAI,cACtB,sBAAsB,oBACtB,sBAAsB,WAAW,IAAI,UAAU,KAAK;GACzD;AAEM,wBAAA,cAAc,aAAa,YAAY;IAC5C,MAAM;IACN,SAAS,CAACA,OAAMA,GAAE;IAClB,MACI,CAACA,OAAK;AACJ,UAAI,aAAaA,EAAC,GAAG;AACnB,eAAOA,GAAE,SAAS,KAAK;aAClB;AACL,eAAOA,GAAE,SAAS,KAAK;;IAE3B;IACJ,YAAY,CAACA,OAAM,sBAAsB;IACzC,eAAe,IAAI,cAAc,KAAK,GAAG,IAAI,EAAE;GAChD;AAEM,wBAAA,qBAAqB,aAAa,YAAY;IACnD,MAAM;IACN,SAAS,CAACA,OAAMA,GAAE;IAClB,MACI,CAACA,OAAK;AACJ,YAAM,cAAcA,GAAE,SAAS,KAAK;AACpC,UAAI,aAAaA,EAAC,GAAG;AACnB,eAAOA,GAAE,SAAS,KAAK;;AAEzB,UAAI,CAAC,WAAWA,EAAC,GAAG;AAClB,eAAO;;AAET,UAAI,SAAS,wBACTA,GAAE,iBAAiB,KAAKA,GAAE,iBAAiB,QAAQ,aACnDA,GAAE,SAAS,QAAQ,IAAI;AAC3B,eAAS,cAAcA,GAAE,iBAAiB,OAAO,MAAM,GAAGA,EAAC;AAC3D,aAAO;IACT;IACJ,cAAc;IACd,YAAY,CAACA,OAAM,sBAAsB,eAAeA,EAAC;IACzD,eAAe,IAAI,cAAc,GAAG,GAAG,GAAG,CAAC;IAC3C,eAAe,CAACA,OAAM,IAAI,cACtB,sBAAsB,oBACtB,sBAAsB,WAAW,IAAI,UAAU,KAAK;GACzD;AAEM,wBAAA,uBAAuB,aAAa,YAAY;IACrD,MAAM;IACN,SAAS,CAACA,OAAMA,GAAE;IAClB,MACI,CAACA,OAAK;AACJ,UAAI,CAAC,WAAWA,EAAC,GAAG;AAClB,eAAOA,GAAE,SAAS,KAAK;;AAEzB,aAAO,aAAa,eAChB,sBAAsB,mBAAmB,KAAKA,EAAC,GAAG,GAAG;IAC3D;IACJ,YAAY,CAACA,OAAM,sBAAsB;IACzC,eAAe,IAAI,cAAc,KAAK,GAAG,IAAI,EAAE;GAChD;AAEM,wBAAA,WAAW,aAAa,YAAY;IACzC,MAAM;IACN,SAAS,CAACA,OAAMA,GAAE;IAClB,MACI,CAACA,OAAK;AACJ,UAAI,aAAaA,EAAC,GAAG;AACnB,eAAOA,GAAE,SAAS,KAAK;;AAEzB,aAAOA,GAAE,SAAS,KAAK;IACzB;IACJ,cAAc;IACd,YAAY,CAACA,OAAM,sBAAsB,eAAeA,EAAC;IACzD,eAAe,IAAI,cAAc,GAAG,KAAK,GAAG,EAAE;IAC9C,eAAe,CAACA,OAAM,IAAI,cACtB,sBAAsB,mBAAmB,sBAAsB,UAC/D,IAAI,UAAU,KAAK;GACxB;AAEM,wBAAA,aAAa,aAAa,YAAY;IAC3C,MAAM;IACN,SAAS,CAACA,OAAMA,GAAE;IAClB,MACI,CAACA,OAAK;AACJ,UAAI,aAAaA,EAAC,GAAG;AACnB,eAAOA,GAAE,SAAS,KAAK;;AAEzB,aAAOA,GAAE,SAAS,KAAK;IACzB;IACJ,YAAY,CAACA,OAAM,sBAAsB;IACzC,eAAe,IAAI,cAAc,KAAK,GAAG,IAAI,EAAE;GAChD;AAEM,wBAAA,oBAAoB,aAAa,YAAY;IAClD,MAAM;IACN,SAAS,CAACA,OAAMA,GAAE;IAClB,MACI,CAACA,OAAK;AACJ,UAAI,aAAaA,EAAC,GAAG;AACnB,eAAOA,GAAE,SAAS,KAAK;;AAEzB,UAAI,CAAC,WAAWA,EAAC,GAAG;AAClB,eAAOA,GAAE,SAAS,KAAK;;AAEzB,YAAM,aACF,cAAcA,GAAE,gBAAgB,OAAOA,GAAE,eAAe,IAAI,GAAGA,EAAC;AACpE,YAAM,cAAcA,GAAE,gBAAgB,OAAO,UAAU;AACvD,aAAO,gBAAgB,cAAc,WAAW,EAAE;IACpD;IACJ,cAAc;IACd,YAAY,CAACA,OAAM,sBAAsB,eAAeA,EAAC;IACzD,eAAe,IAAI,cAAc,GAAG,GAAG,GAAG,CAAC;IAC3C,eAAe,CAACA,OAAM,IAAI,cACtB,sBAAsB,mBAAmB,sBAAsB,UAC/D,IAAI,UAAU,KAAK;GACxB;AAEM,wBAAA,sBAAsB,aAAa,YAAY;IACpD,MAAM;IACN,SAAS,CAACA,OAAMA,GAAE;IAClB,MACI,CAACA,OAAK;AACJ,UAAI,aAAaA,EAAC,GAAG;AACnB,eAAOA,GAAE,SAAS,IAAI;;AAExB,UAAI,CAAC,WAAWA,EAAC,GAAG;AAClB,eAAOA,GAAE,SAAS,KAAK;;AAEzB,aAAO,aAAa,eAChB,sBAAsB,kBAAkB,KAAKA,EAAC,GAAG,GAAG;IAC1D;IACJ,YAAY,CAACA,OAAM,sBAAsB;IACzC,eAAe,IAAI,cAAc,KAAK,GAAG,IAAI,EAAE;GAChD;AAEM,wBAAA,QAAQ,aAAa,YAAY;IACtC,MAAM;IACN,SAAS,CAACA,OAAMA,GAAE;IAClB,MAAM,CAACA,OAAMA,GAAE,SAAS,KAAK;IAC7B,cAAc;IACd,YAAY,CAACA,OAAM,sBAAsB,eAAeA,EAAC;IACzD,eAAe,IAAI,cAAc,GAAG,KAAK,GAAG,EAAE;IAC9C,eAAe,CAACA,OAAM,IAAI,cACtB,sBAAsB,gBAAgB,sBAAsB,OAAO,IACnE,UAAU,KAAK;GACpB;AAEM,wBAAA,UAAU,aAAa,YAAY;IACxC,MAAM;IACN,SAAS,CAACA,OAAMA,GAAE;IAClB,MAAM,CAACA,OAAMA,GAAE,SAAS,KAAK;IAC7B,YAAY,CAACA,OAAM,sBAAsB;IACzC,eAAe,IAAI,cAAc,KAAK,GAAG,IAAI,EAAE;GAChD;AAEM,wBAAA,iBAAiB,aAAa,YAAY;IAC/C,MAAM;IACN,SAAS,CAACA,OAAMA,GAAE;IAClB,MAAM,CAACA,OAAMA,GAAE,SAAS,KAAK;IAC7B,cAAc;IACd,YAAY,CAACA,OAAM,sBAAsB,eAAeA,EAAC;IACzD,eAAe,IAAI,cAAc,GAAG,GAAG,GAAG,CAAC;IAC3C,eAAe,CAACA,OAAM,IAAI,cACtB,sBAAsB,gBAAgB,sBAAsB,OAAO,IACnE,UAAU,KAAK;GACpB;AAEM,wBAAA,mBAAmB,aAAa,YAAY;IACjD,MAAM;IACN,SAAS,CAACA,OAAMA,GAAE;IAClB,MAAM,CAACA,OAAMA,GAAE,SAAS,KAAK;IAC7B,YAAY,CAACA,OAAM,sBAAsB;IACzC,eAAe,IAAI,cAAc,KAAK,GAAG,IAAI,EAAE;GAChD;AAEM,wBAAA,eAAe,aAAa,YAAY;IAC7C,MAAM;IACN,SAAS,CAACA,OAAMA,GAAE;IAClB,MAAM,CAACA,OAAM,aAAaA,EAAC,IAAI,KAAO;IACtC,cAAc;IACd,YAAY,CAACA,OAAM,sBAAsB,eAAeA,EAAC;IACzD,eAAe,IAAI,cAAc,GAAG,GAAG,GAAG,CAAC;IAC3C,eAAe,CAACA,OAAM,IAAI,cACtB,sBAAsB,cACtB,sBAAsB,iBAAiB,IAAI,WAAW,IAAI;GAC/D;AAEM,wBAAA,kBAAkB,aAAa,YAAY;IAChD,MAAM;IACN,SAAS,CAACA,OAAMA,GAAE;IAClB,MAAM,CAACA,OAAM,aAAaA,EAAC,IAAI,KAAO;IACtC,cAAc;IACd,YAAY,CAACA,OAAM,sBAAsB,eAAeA,EAAC;IACzD,eAAe,IAAI,cAAc,GAAG,GAAG,GAAG,CAAC;IAC3C,eAAe,CAACA,OAAM,IAAI,cACtB,sBAAsB,cACtB,sBAAsB,iBAAiB,IAAI,WAAW,IAAI;GAC/D;AAEM,wBAAA,iBAAiB,aAAa,YAAY;IAC/C,MAAM;IACN,SAAS,CAACA,OAAMA,GAAE;IAClB,MAAM,CAACA,OAAM,aAAaA,EAAC,IAAI,MAAQ;IACvC,YAAY,CAACA,OAAM,sBAAsB;IACzC,kBAAkB,CAACA,OAAM,sBAAsB;IAC/C,eAAe,IAAI,cAAc,KAAK,GAAG,IAAI,EAAE;GAChD;AAEM,wBAAA,wBAAwB,aAAa,YAAY;IACtD,MAAM;IACN,SAAS,CAACA,OAAMA,GAAE;IAClB,MAAM,CAACA,OAAM,aAAaA,EAAC,IAAI,KAAO;IACtC,YAAY,CAACA,OAAM,sBAAsB;IACzC,kBAAkB,CAACA,OAAM,sBAAsB;IAC/C,eAAe,IAAI,cAAc,GAAG,KAAK,GAAG,EAAE;GAC/C;AAEM,wBAAA,iBAAiB,aAAa,YAAY;IAC/C,MAAM;IACN,SAAS,CAACA,OAAMA,GAAE;IAClB,MAAM,CAACA,OAAM,aAAaA,EAAC,IAAI,KAAO;IACtC,cAAc;IACd,YAAY,CAACA,OAAM,sBAAsB,eAAeA,EAAC;IACzD,eAAe,IAAI,cAAc,GAAG,GAAG,GAAG,CAAC;IAC3C,eAAe,CAACA,OAAM,IAAI,cACtB,sBAAsB,gBACtB,sBAAsB,mBAAmB,IAAI,WAAW,IAAI;GACjE;AAEM,wBAAA,oBAAoB,aAAa,YAAY;IAClD,MAAM;IACN,SAAS,CAACA,OAAMA,GAAE;IAClB,MAAM,CAACA,OAAM,aAAaA,EAAC,IAAI,KAAO;IACtC,cAAc;IACd,YAAY,CAACA,OAAM,sBAAsB,eAAeA,EAAC;IACzD,eAAe,IAAI,cAAc,GAAG,GAAG,GAAG,CAAC;IAC3C,eAAe,CAACA,OAAM,IAAI,cACtB,sBAAsB,gBACtB,sBAAsB,mBAAmB,IAAI,WAAW,IAAI;GACjE;AAEM,wBAAA,mBAAmB,aAAa,YAAY;IACjD,MAAM;IACN,SAAS,CAACA,OAAMA,GAAE;IAClB,MAAM,CAACA,OAAM;IACb,YAAY,CAACA,OAAM,sBAAsB;IACzC,kBAAkB,CAACA,OAAM,sBAAsB;IAC/C,eAAe,IAAI,cAAc,KAAK,GAAG,IAAI,EAAE;GAChD;AAEM,wBAAA,0BAA0B,aAAa,YAAY;IACxD,MAAM;IACN,SAAS,CAACA,OAAMA,GAAE;IAClB,MAAM,CAACA,OAAM,aAAaA,EAAC,IAAI,KAAO;IACtC,YAAY,CAACA,OAAM,sBAAsB;IACzC,kBAAkB,CAACA,OAAM,sBAAsB;IAC/C,eAAe,IAAI,cAAc,GAAG,KAAK,GAAG,EAAE;GAC/C;AAEM,wBAAA,gBAAgB,aAAa,YAAY;IAC9C,MAAM;IACN,SAAS,CAACA,OAAMA,GAAE;IAClB,MAAM,CAACA,OAAM,aAAaA,EAAC,IAAI,KAAO;IACtC,cAAc;IACd,YAAY,CAACA,OAAM,sBAAsB,eAAeA,EAAC;IACzD,eAAe,IAAI,cAAc,GAAG,GAAG,GAAG,CAAC;IAC3C,eAAe,CAACA,OAAM,IAAI,cACtB,sBAAsB,eACtB,sBAAsB,kBAAkB,IAAI,WAAW,IAAI;GAChE;AAEM,wBAAA,mBAAmB,aAAa,YAAY;IACjD,MAAM;IACN,SAAS,CAACA,OAAMA,GAAE;IAClB,MAAM,CAACA,OAAM,aAAaA,EAAC,IAAI,KAAO;IACtC,cAAc;IACd,YAAY,CAACA,OAAM,sBAAsB,eAAeA,EAAC;IACzD,eAAe,IAAI,cAAc,GAAG,GAAG,GAAG,CAAC;IAC3C,eAAe,CAACA,OAAM,IAAI,cACtB,sBAAsB,eACtB,sBAAsB,kBAAkB,IAAI,WAAW,IAAI;GAChE;AAEM,wBAAA,kBAAkB,aAAa,YAAY;IAChD,MAAM;IACN,SAAS,CAACA,OAAMA,GAAE;IAClB,MAAM,CAACA,OAAM,aAAaA,EAAC,IAAI,MAAQ;IACvC,YAAY,CAACA,OAAM,sBAAsB;IACzC,kBAAkB,CAACA,OAAM,sBAAsB;IAC/C,eAAe,IAAI,cAAc,KAAK,GAAG,IAAI,EAAE;GAChD;AAEM,wBAAA,yBAAyB,aAAa,YAAY;IACvD,MAAM;IACN,SAAS,CAACA,OAAMA,GAAE;IAClB,MAAM,CAACA,OAAM,aAAaA,EAAC,IAAI,KAAO;IACtC,YAAY,CAACA,OAAM,sBAAsB;IACzC,kBAAkB,CAACA,OAAM,sBAAsB;IAC/C,eAAe,IAAI,cAAc,GAAG,KAAK,GAAG,EAAE;GAC/C;;;AC1nBG,MAAO,eAAP,MAAmB;;;;;IAOvB,OAAO,QAAQ,MAAY;AACzB,YAAM,MAAM,IAAI,QAAQ,IAAI;AAC5B,aAAO,aAAa,QAAQ,GAAG;IACjC;;;;;IAMA,OAAO,QAAQ,KAAQ;AACrB,aAAO,IAAI,aAAa,IAAI,KAAK,IAAI,QAAQ,GAAG;IAClD;;;;;;IAOA,OAAO,iBAAiB,KAAa,QAAc;AACjD,aAAO,IAAI,aAAa,KAAK,QAAQ,aAAa,eAAe,KAAK,MAAM,CAAC;IAC/E;IAEA,YAA6B,KAAsB,QAAyB,UAAa;AAA5D,WAAA,MAAA;AAAsB,WAAA,SAAA;AAAyB,WAAA,WAAA;AA5B3D,WAAA,QAAQ,oBAAI,IAAG;IA4B4D;IAEpF,OAAO,eAAe,KAAa,QAAc;AACvD,YAAM,YAAY;AAClB,UAAI,mBAAmB,IAAI,KAAK,KAAK,QAAQ,SAAS;AACtD,UAAI,gBAAgB,KAAK,IAAI,iBAAiB,SAAS,MAAM;AAO7D,eAAS,QAAQ,GAAK,QAAQ,IAAM,SAAS,GAAK;AAKhD,YAAI,KAAK,MAAM,MAAM,MAAM,KAAK,MAAM,iBAAiB,MAAM,GAAG;AAC9D,iBAAO;;AAGT,cAAM,SAAS,IAAI,KAAK,KAAK,QAAQ,YAAY,KAAK;AACtD,cAAM,cAAc,KAAK,IAAI,OAAO,SAAS,MAAM;AACnD,YAAI,cAAc,eAAe;AAC/B,0BAAgB;AAChB,6BAAmB;;AAGrB,cAAM,cAAc,IAAI,KAAK,KAAK,QAAQ,YAAY,KAAK;AAC3D,cAAM,mBAAmB,KAAK,IAAI,YAAY,SAAS,MAAM;AAC7D,YAAI,mBAAmB,eAAe;AACpC,0BAAgB;AAChB,6BAAmB;;;AAIvB,aAAO;IACT;;;;;IAMA,KAAK,MAAY;AACf,UAAI,OAAO,KAAK,MAAM,IAAI,IAAI;AAC9B,UAAI,SAAS,QAAW;AACtB,eAAO,IAAI,KAAK,KAAK,KAAK,KAAK,QAAQ,IAAI,EAAE,MAAK;AAClD,aAAK,MAAM,IAAI,MAAM,IAAI;;AAE3B,aAAO;IACT;;;;;IAMA,OAAO,MAAY;AACjB,aAAO,IAAI,QAAQ,KAAK,KAAK,IAAI,CAAC;IACpC;;;;AC5CI,MAAO,gBAAP,MAAoB;IA6DxB,YAAY,MAA0B;AACpC,WAAK,kBAAkB,KAAK;AAC5B,WAAK,UAAU,KAAK;AACpB,WAAK,gBAAgB,KAAK;AAC1B,WAAK,SAAS,KAAK;AACnB,WAAK,iBAAiB,IAAI,QAAQ,KAAK,eAAe;AACtD,WAAK,iBAAiB,KAAK;AAC3B,WAAK,mBAAmB,KAAK;AAC7B,WAAK,kBAAkB,KAAK;AAC5B,WAAK,iBAAiB,KAAK;AAC3B,WAAK,wBAAwB,KAAK;AAClC,WAAK,eAAe,aAAa,iBAAiB,IAAM,EAAI;IAC9D;;;;;;;;;;;IAYA,OAAO,cAAc,aAAkB,MAAgB,WAAmB;AAExE,YAAM,YAAY,YAAY;AAC9B,UAAI,KAAK,WAAW,UAAU,QAAQ;AACpC,cAAM,IAAI,MAAM,+BAA+B,KAAK,sBAChD,UAAU,QAAQ;;AAExB,UAAI,UAAU,WAAW,GAAG;AAC1B,eAAY,sBAAsB,YAAY,MAAM,UAAU,CAAC,CAAC;;AAElE,YAAM,OAAO,KAAK;AAClB,eAASC,MAAI,GAAGA,OAAK,OAAO,GAAGA,OAAK;AAClC,cAAM,UAAU,KAAKA,GAAC;AACtB,cAAM,UAAU,KAAKA,MAAI,CAAC;AAC1B,YAAI,UAAU,aAAa,YAAY,SAAS;AAC9C,iBAAY,sBAAsB,YAAY,UAAUA,GAAC,CAAC;;;AAK9D,aAAO;IACT;;;;ACjJI,MAAO,mBAAP,cAAgC,cAAa;IAiDjD,YAAY,gBAAqB,QAAiB,eAAqB;AACrE,YAAM;QACJ,iBAAiB,eAAe,MAAK;QACrC,SAAS,QAAQ;QACjB;QACA;QACA,gBAAgB,aAAa,iBACpB,sBAAsB,eAAe,MAAM,GAAK,GAAG,EAAI;QAChE,kBAAkB,aAAa,iBAC3B,cAAc,cACV,gBAAgB,iBAAiB,MACjC,iBAAiB,kBAAkB,GACvC,EAAI;QACR,iBAAiB,aAAa,iBAC1B,cAAc,cACV,gBAAgB,iBAAiB,MACjC,iBAAiB,iBAAiB,GACtC,EAAI;QACR,gBACI,aAAa,iBAAiB,eAAe,MAAM,IAAI,CAAG;QAC9D,uBACI,aAAa,iBAAiB,eAAe,MAAM,IAAI,EAAI;OAChE;IACH;;AAnEwB,mBAAA,OAAiB;IACvC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;AAOsB,mBAAA,qBAA+B;IACrD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;AAOsB,mBAAA,oBAA8B;IACpD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;;;AC9CE,MAAO,gBAAP,cAA6B,cAAa;IAiD9C,YAAY,gBAAqB,QAAiB,eAAqB;AACrE,YAAM;QACJ,iBAAiB,eAAe,MAAK;QACrC,SAAS,QAAQ;QACjB;QACA;QACA,gBAAgB,aAAa,iBAAiB,eAAe,KAAK,GAAK;QACvE,kBAAkB,aAAa,iBAC3B,cAAc,cACV,gBAAgB,cAAc,MAC9B,cAAc,kBAAkB,GACpC,EAAI;QACR,iBAAiB,aAAa,iBAC1B,cAAc,cACV,gBAAgB,cAAc,MAC9B,cAAc,iBAAiB,GACnC,EAAI;QACR,gBAAgB,aAAa,iBAAiB,eAAe,KAAK,EAAI;QACtE,uBACI,aAAa,iBAAiB,eAAe,KAAK,EAAI;OAC3D;IACH;;AAjEwB,gBAAA,OAAO;IAC7B;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;AAOsB,gBAAA,qBAAqB;IAC3C;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;AAOsB,gBAAA,oBAAoB;IAC1C;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;;;ACtCJ,MAAM,wBAAwB;IAC5B,SAAS;IACT,mBAAmB;IACnB,QAAQ;;;AAGV,WAAS,QAAQC,IAA8BC,IAA4B;AACzE,QAAID,GAAE,QAAQC,GAAE,OAAO;AACrB,aAAO;eACED,GAAE,QAAQC,GAAE,OAAO;AAC5B,aAAO;;AAET,WAAO;EACT;AAUM,MAAO,QAAP,MAAY;IAQhB,cAAA;IAAuB;;;;;;;;;;;;;;IAevB,OAAO,MACL,oBAAyC,SAAsB;AAE/D,YAAM,EAAC,SAAS,mBAAmB,OAAM,IAAI,EAAC,GAAG,uBAAuB,GAAG,QAAO;AAGlF,YAAM,YAAmB,CAAA;AACzB,YAAM,gBAAgB,IAAI,MAAc,GAAG,EAAE,KAAK,CAAC;AACnD,UAAI,gBAAgB;AACpB,iBAAW,CAAC,MAAM,UAAU,KAAK,mBAAmB,QAAO,GAAI;AAC7D,cAAM,MAAM,IAAI,QAAQ,IAAI;AAC5B,kBAAU,KAAK,GAAG;AAClB,cAAM,MAAM,KAAK,MAAM,IAAI,GAAG;AAC9B,sBAAc,GAAG,KAAK;AACtB,yBAAiB;;AAInB,YAAM,wBAAwB,IAAI,MAAc,GAAG,EAAE,KAAK,CAAG;AAC7D,eAAS,MAAM,GAAG,MAAM,KAAK,OAAO;AAClC,cAAM,aAAa,cAAc,GAAG,IAAI;AACxC,iBAASC,MAAI,MAAM,IAAIA,MAAI,MAAM,IAAIA,OAAK;AACxC,gBAAM,cAAmB,mBAAmBA,GAAC;AAC7C,gCAAsB,WAAW,KAAK;;;AAM1C,YAAM,YAAY,IAAI,MAAK;AAC3B,iBAAW,OAAO,WAAW;AAC3B,cAAM,MAAW,mBAAmB,KAAK,MAAM,IAAI,GAAG,CAAC;AACvD,cAAM,aAAa,sBAAsB,GAAG;AAC5C,YAAI,WAAW,IAAI,SAAS,MAAM,iBAAiB,cAAc,MAAM,4BAA4B;AACjG;;AAGF,cAAM,kBAAkB,aAAa,MAAQ,MAAM;AACnD,cAAM,eAAe,IAAI,SAAS,MAAM,gBAAgB,MAAM,sBAAsB,MAAM;AAC1F,cAAM,eAAe,IAAI,SAAS,MAAM,iBAAiB;AACzD,cAAM,QAAQ,kBAAkB;AAChC,kBAAU,KAAK,EAAC,KAAK,MAAK,CAAC;;AAG7B,gBAAU,KAAK,OAAO;AAMtB,YAAM,eAAsB,CAAA;AAC5B,eAASC,qBAAoB,IAAIA,sBAAqB,IAAIA,sBAAqB;AAC7E,qBAAa,SAAS;AACtB,mBAAW,EAAC,IAAG,KAAK,WAAW;AAC7B,gBAAM,eAAe,aAAa,KAAK,eAAY;AACjD,mBAAY,kBAAkB,IAAI,KAAK,UAAU,GAAG,IAAIA;UAC1D,CAAC;AACD,cAAI,CAAC,cAAc;AACjB,yBAAa,KAAK,GAAG;;AAEvB,cAAI,aAAa,UAAU;AAAS;;AAEtC,YAAI,aAAa,UAAU;AAAS;;AAEtC,YAAM,SAAmB,CAAA;AACzB,UAAI,aAAa,WAAW,GAAG;AAC7B,eAAO,KAAK,iBAAiB;;AAE/B,iBAAW,aAAa,cAAc;AACpC,eAAO,KAAK,UAAU,MAAK,CAAE;;AAE/B,aAAO;IACT;;AA9FwB,QAAA,gBAAgB;AAChB,QAAA,oBAAoB;AACpB,QAAA,sBAAsB;AACtB,QAAA,sBAAsB;AACtB,QAAA,gBAAgB;AAChB,QAAA,4BAA4B;;;ACrChD,WAAU,YAAY,MAAY;AACtC,UAAMC,KAAe,YAAY,IAAI;AACrC,UAAMC,KAAe,cAAc,IAAI;AACvC,UAAMC,KAAe,aAAa,IAAI;AACtC,UAAM,WAAW,CAACF,GAAE,SAAS,EAAE,GAAGC,GAAE,SAAS,EAAE,GAAGC,GAAE,SAAS,EAAE,CAAC;AAGhE,eAAW,CAACC,KAAG,IAAI,KAAK,SAAS,QAAO,GAAI;AAC1C,UAAI,KAAK,WAAW,GAAG;AACrB,iBAASA,GAAC,IAAI,MAAM;;;AAIxB,WAAO,MAAM,SAAS,KAAK,EAAE;EAC/B;AAQM,WAAU,YAAY,KAAW;AACrC,UAAM,IAAI,QAAQ,KAAK,EAAE;AACzB,UAAM,UAAU,IAAI,WAAW;AAC/B,UAAM,QAAQ,IAAI,WAAW;AAC7B,UAAM,UAAU,IAAI,WAAW;AAC/B,QAAI,CAAC,WAAW,CAAC,SAAS,CAAC,SAAS;AAClC,YAAM,IAAI,MAAM,oBAAoB,GAAG;;AAEzC,QAAIH,KAAI;AACR,QAAIC,KAAI;AACR,QAAIC,KAAI;AACR,QAAI,SAAS;AACX,MAAAF,KAAI,YAAY,IAAI,MAAM,GAAG,CAAC,EAAE,OAAO,CAAC,CAAC;AACzC,MAAAC,KAAI,YAAY,IAAI,MAAM,GAAG,CAAC,EAAE,OAAO,CAAC,CAAC;AACzC,MAAAC,KAAI,YAAY,IAAI,MAAM,GAAG,CAAC,EAAE,OAAO,CAAC,CAAC;eAChC,OAAO;AAChB,MAAAF,KAAI,YAAY,IAAI,MAAM,GAAG,CAAC,CAAC;AAC/B,MAAAC,KAAI,YAAY,IAAI,MAAM,GAAG,CAAC,CAAC;AAC/B,MAAAC,KAAI,YAAY,IAAI,MAAM,GAAG,CAAC,CAAC;eACtB,SAAS;AAClB,MAAAF,KAAI,YAAY,IAAI,MAAM,GAAG,CAAC,CAAC;AAC/B,MAAAC,KAAI,YAAY,IAAI,MAAM,GAAG,CAAC,CAAC;AAC/B,MAAAC,KAAI,YAAY,IAAI,MAAM,GAAG,CAAC,CAAC;;AAGjC,YACM,OAAO,MAAQF,KAAI,QAAU,MAAQC,KAAI,QAAU,IAAMC,KAAI,SAC/D;EACN;AAEA,WAAS,YAAY,OAAa;AAEhC,WAAO,SAAS,OAAO,EAAE;EAC3B;;;AC7DA,MAAM,iBAAiB;AAAA,IACrB,YAAY,sBAAsB;AAAA,IAClC,iBAAiB,sBAAsB;AAAA,IACvC,SAAS,sBAAsB;AAAA,IAC/B,eAAe,sBAAsB;AAAA,IACrC,kBAAkB,sBAAsB;AAAA,IACxC,4BAA4B,sBAAsB;AAAA,IAClD,yBAAyB,sBAAsB;AAAA,IAC/C,qBAAqB,sBAAsB;AAAA,IAC3C,0BAA0B,sBAAsB;AAAA,IAChD,6BAA6B,sBAAsB;AAAA,IACnD,cAAc,sBAAsB;AAAA,IACpC,mBAAmB,sBAAsB;AAAA,IACzC,sBAAsB,sBAAsB;AAAA,IAC5C,mBAAmB,sBAAsB;AAAA,IACzC,sBAAsB,sBAAsB;AAAA,IAC5C,SAAS,sBAAsB;AAAA,IAC/B,mBAAmB,sBAAsB;AAAA,IACzC,QAAQ,sBAAsB;AAAA,IAC9B,OAAO,sBAAsB;AAAA,IAC7B,gBAAgB,sBAAsB;AAAA,IACtC,SAAS,sBAAsB;AAAA,IAC/B,cAAc,sBAAsB;AAAA,IACpC,qBAAqB,sBAAsB;AAAA,IAC3C,wBAAwB,sBAAsB;AAAA,IAC9C,mBAAmB,sBAAsB;AAAA,IACzC,WAAW,sBAAsB;AAAA,IACjC,gBAAgB,sBAAsB;AAAA,IACtC,uBAAuB,sBAAsB;AAAA,IAC7C,0BAA0B,sBAAsB;AAAA,IAChD,UAAU,sBAAsB;AAAA,IAChC,eAAe,sBAAsB;AAAA,IACrC,sBAAsB,sBAAsB;AAAA,IAC5C,yBAAyB,sBAAsB;AAAA,IAC/C,OAAO,sBAAsB;AAAA,IAC7B,YAAY,sBAAsB;AAAA,IAClC,mBAAmB,sBAAsB;AAAA,IACzC,sBAAsB,sBAAsB;AAAA,EAC9C;AAQO,WAAS,WAAW,OAAe;AACxC,WAAO,IAAI,QAAQ,YAAY,KAAK,CAAC;AAAA,EACvC;AAWO,WAAS,WAAW,KAAa,QAAgB,MAAc;AACpE,UAAM,MAAM,IAAI,KAAK,KAAK,QAAQ,IAAI;AACtC,UAAM,QAAQ,IAAI,MAAM;AACxB,WAAO,YAAY,KAAK;AAAA,EAC1B;;;AChEA,MAAM,YAAmB,CAAC,GAAG,GAAG;AAChC,MAAM,eAAsB,CAAC,GAAG,GAAG;AACnC,MAAM,aAAoB,CAAC,GAAG,GAAG;AAQ1B,MAAM,YAAN,cAAwBE,GAAW;AAAA,IAAnC;AAAA;AAIqB,mBAAQ;AAKR,mBAAQ;AAMR,mBAAQ;AAKR,kBAAkC;AAAA;AAAA,IAEnD,SAAS;AAChB,UAAI,QAAQ;AAEZ,UAAI,KAAK,SAAS,UAAU;AAC1B,gBAAQ;AAAA,MACV,WAAW,KAAK,SAAS,QAAQ;AAC/B,gBAAQ;AAAA,MACV;AAEA,aAAO;AAAA,uDAC4C,KAAK;AAAA;AAAA;AAAA;AAAA,qBAIvC,KAAK;AAAA,eACX,MAAM,CAAC;AAAA,eACP,MAAM,CAAC;AAAA,iBACL,KAAK;AAAA,iBACL,KAAK;AAAA;AAAA;AAAA,gBAGN,KAAK;AAAA,gBACLC,GAAS;AAAA,QACf,YAAY,KAAK,cAAc;AAAA,MACjC,CAAC;AAAA;AAAA,IAEP;AAAA,IAEQ,QAAQC,KAAU;AACxB,YAAM,SAASA,IAAE;AACjB,WAAK,QAAQ,OAAO;AAEpB,WAAK,cAAc,IAAI,MAAM,OAAO,CAAC;AAAA,IACvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAQQ,gBAAgB;AACtB,YAAM,WAAW;AAEjB,UAAI,uBAAuB;AAE3B,UAAI,KAAK,SAAS,OAAO;AACvB,iBAASC,MAAI,GAAGA,MAAI,UAAUA,OAAK;AACjC,gBAAM,MAAO,UAAU,CAAC,IAAI,WAAYA;AAGxC,gBAAM,MAAM,WAAW,KAAK,KAAK,EAAE;AACnC,kCAAwB,KAAK,OAAOA;AAAA,QACtC;AAAA,MACF,WAAW,KAAK,SAAS,UAAU;AACjC,cAAM,MAAM,WAAW,KAAK,SAAS,MAAM;AAC3C,cAAM,MAAM,IAAI;AAEhB,iBAASA,MAAI,GAAGA,MAAI,UAAUA,OAAK;AACjC,gBAAM,SAAU,aAAa,CAAC,IAAI,WAAYA;AAG9C,gBAAM,MAAM,WAAW,KAAK,QAAQ,EAAE;AACtC,kCAAwB,KAAK,OAAOA;AAAA,QACtC;AAAA,MACF,WAAW,KAAK,SAAS,QAAQ;AAC/B,iBAASA,MAAI,GAAGA,MAAI,UAAUA,OAAK;AACjC,gBAAM,OAAQ,WAAW,CAAC,IAAI,WAAYA;AAG1C,gBAAM,MAAM,WAAW,GAAG,GAAG,IAAI;AACjC,kCAAwB,KAAK,OAAOA;AAAA,QACtC;AAAA,MACF;AAEA,8BAAwB;AAExB,aAAO;AAAA,IACT;AAAA,EAwBF;AAtBE,EAtGW,UAsGK,SAASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAlGC;AAAA,IAAzB,EAAS,EAAC,MAAM,OAAM,CAAC;AAAA,KAJb,UAIe;AAKA;AAAA,IAAzB,EAAS,EAAC,MAAM,OAAM,CAAC;AAAA,KATb,UASe;AAMA;AAAA,IAAzB,EAAS,EAAC,MAAM,OAAM,CAAC;AAAA,KAfb,UAee;AAKA;AAAA,IAAzB,EAAS,EAAC,MAAM,OAAM,CAAC;AAAA,KApBb,UAoBe;AApBf,cAAN;AAAA,IADN,EAAc,YAAY;AAAA,KACd;;;ACbN,MAAM,mBAAN,cAA+B,MAAM;AAAA;AAAA;AAAA;AAAA,IAI1C,YAAmB,OAAe;AAChC,YAAM,gBAAgB,EAAC,SAAS,MAAM,UAAU,KAAI,CAAC;AADpC;AAAA,IAEnB;AAAA,EACF;AAMO,MAAM,sBAAN,cAAkC,MAAM;AAAA;AAAA;AAAA;AAAA,IAI7C,YAAmB,MAAiC;AAClD,YAAM,eAAe,EAAC,SAAS,MAAM,UAAU,KAAI,CAAC;AADnC;AAAA,IAEnB;AAAA,EACF;;;ACyBO,WAAS,wBAAuC;AACrD,WAAO,aAAa,QAAQ,gBAAgB;AAAA,EAC9C;AAOO,WAAS,iBAAmC;AACjD,WAAO,aAAa,QAAQ,YAAY;AAAA,EAC1C;AAgBO,WAAS,sBAAqC;AACnD,WAAO,aAAa,QAAQ,YAAY;AAAA,EAC1C;;;ACzDO,MAAM,eAAN,cAA2BC,GAAW;AAAA,IAAtC;AAAA;AASI,+BAAsC;AAQtC,sBAAW;AAKX,iBAAM;AAKN,oBAAS;AAKT,kBAAO;AAAA;AAAA,IAKhB,SAAS;AACP,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAMc;AAAA;AAAA;AAAA,QAGjB,KAAK,gBAAgB,KAAK,KAAK,gBAAgB;AAAA,QAC/C,KAAK,sBAAsB;AAAA;AAAA,IAEjC;AAAA;AAAA;AAAA;AAAA,IAKU,kBAAkB;AAC1B,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAOY,KAAK;AAAA;AAAA,uBAELC,GAAK,KAAK,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAMvC;AAAA;AAAA;AAAA;AAAA,IAKQ,kBAAkB;AACxB,aAAO;AAAA;AAAA,iBAEMA,GAAK,KAAK,GAAG;AAAA;AAAA;AAAA;AAAA,iBAIb,KAAK;AAAA;AAAA,iBAELA,GAAK,KAAK,MAAM;AAAA,iBAChB,KAAK;AAAA;AAAA;AAAA;AAAA,iBAIL,KAAK;AAAA;AAAA,iBAELA,GAAK,KAAK,IAAI;AAAA;AAAA;AAAA;AAAA,iBAId,KAAK;AAAA;AAAA,IAEpB;AAAA;AAAA;AAAA;AAAA,IAKQ,wBAAwB;AAC9B,aAAO;AAAA,wCAC6B,KAAK;AAAA;AAAA,QAErC,KAAK,iBAAiB,QAAQ,WAAW;AAAA,QACzC,KAAK,iBAAiB,QAAQ,mBAAmB;AAAA,QACjD,KAAK,iBAAiB,SAAS,YAAY;AAAA;AAAA,IAEjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IASQ,iBAAiB,MAAiB,MAAc;AACtD,aAAO;AAAA,mBACQ;AAAA,cACL;AAAA,oBACM;AAAA,kBACF,KAAK,sBAAsB;AAAA,6BAChB;AAAA;AAAA,IAE3B;AAAA,IAEQ,gBAAgB;AACtB,iBAAW,UAAU,KAAK,SAAS;AACjC,aAAK,OAAO,IAAI,IAAI,OAAO;AAAA,MAC7B;AAEA,WAAK,WAAW,WAAW,KAAK,KAAK,KAAK,QAAQ,KAAK,IAAI;AAC3D,WAAK,cAAc,IAAI,iBAAiB,KAAK,QAAQ,CAAC;AAAA,IACxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOQ,iBAAiB,UAAkB;AACzC,YAAM,MAAM,WAAW,QAAQ;AAC/B,WAAK,MAAM,IAAI;AACf,WAAK,SAAS,IAAI;AAClB,WAAK,OAAO,IAAI;AAAA,IAClB;AAAA,IAEQ,mBAAmB;AACzB,WAAK,WAAW,KAAK,QAAQ;AAC7B,WAAK,iBAAiB,KAAK,QAAQ;AACnC,WAAK,cAAc,IAAI,iBAAiB,KAAK,QAAQ,CAAC;AAAA,IACxD;AAAA,IAEA,MAAM,eAAe;AACnB,UAAI,CAAC,KAAK,mBAAmB;AAE3B,aAAK,oBAAoB,eAAe;AAAA,MAC1C;AAEA,UAAI,CAAC,KAAK,UAAU;AAElB,aAAK,WAAW,oBAAoB;AAAA,MACtC;AAEA,WAAK,iBAAiB,KAAK,QAAQ;AAAA,IACrC;AAAA,IAEQ,qBACNC,KAKA;AACA,YAAM,EAAC,OAAM,IAAIA,IAAE;AACnB,YAAM,QAAQ,OAAO,QAAQ;AAC7B,WAAK,oBAAoB;AACzB,WAAK,cAAc,IAAI,oBAAoB,KAAK,CAAC;AAAA,IACnD;AAAA,EAuHF;AA5SE,EADW,aACK,oBAAoB;AAAA,IAClC,GAAGF,GAAW;AAAA,IACd,gBAAgB;AAAA,EAClB;AAoLA,EAxLW,aAwaASF;AAQA;AAAA,IAAR,EAAM;AAAA,KAjBI,aAiBF;AAKA;AAAA,IAAR,EAAM;AAAA,KAtBI,aAsBF;AAKA;AAAA,IAAR,EAAM;AAAA,KA3BI,aA2BF;AAKA;AAAA,IAAR,EAAM;AAAA,KAhCI,aAgCF;AAEe;AAAA,IAAvBA,GAAM,OAAO;AAAA,KAlCH,aAkCa;AACQ;AAAA,IAA/BD,GAAS,YAAY;AAAA,KAnCX,aAmCqB;AAnCrB,iBAAN;AAAA,IADN,EAAc,eAAe;AAAA,KACjB;;;ACrBN,MAAM,iBAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACWvB,MAAM,YAAN,cAAwB,cAAcE,EAAU,EAAE;AAAA,IAAlD;AAAA;AAII,WAAQ,WAAW;AAAA;AAAA,IAG5B,SAAS;AACP,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BASmB,iBAAiB,QAAQ,UAAU;AAAA,uBAC1C,CAAC,iBAAiB,QACvB,SACA;AAAA,0BACQC,GAAK,CAAC,iBAAiB,KAAK;AAAA,uBAC/B,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBASZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAoBU,KAAK;AAAA;AAAA;AAAA;AAAA,gCAIC,KAAK,WAAW,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAUjC,KAAK;AAAA,0BACH,KAAK;AAAA,0BACL,KAAK;AAAA,2BACJ,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAS9B;AAAA;AAAA;AAAA;AAAA,IAKQ,iBAAiB;AACvB,WAAK,WAAW;AAChB,yBAAmB,QAAQ;AAC3B,yBAAmB,QAAQ;AAC3B,uBAAiB,QAAQ;AAAA,IAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,IAMQ,eAAe;AACrB,WAAK,WAAW;AAChB,yBAAmB,QAAQ;AAC3B,yBAAmB,QAAQ;AAAA,IAC7B;AAAA,IAEQ,eAAe;AACrB,WAAK,aAAa,MAAM;AAAA,IAC1B;AAAA,IAEQ,UAAUC,KAAkB;AAClC,UAAI,CAACA,IAAE,oBAAoBA,IAAE,QAAQ,UAAU;AAC7C,QAAAA,IAAE,eAAe;AACjB,aAAK,WAAW;AAAA,MAClB;AAAA,IACF;AAAA;AAAA;AAAA;AAAA,IAKQ,iBAAiBA,KAAe;AACtC,uBAAiB,QAAQ,CAAEA,IAAE,OAAwB;AAAA,IACvD;AAAA,EA2FF;AAzFE,EArHW,UAqHJ,SAASC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAjHC;AAAA,IAAhB,EAAM;AAAA,KAJI,UAIM;AACe;AAAA,IAA/BA,GAAM,eAAe;AAAA,KALX,UAKqB;AALrB,cAAN;AAAA,IADN,EAAc,aAAa;AAAA,KACf;;;ACPN,MAAM,iBAAN,cAA6BC,GAAW;AAAA,IAAxC;AAAA;AAwEI,WAAQ,aAAa;AAKrB,WAAQ,sBAAsB;AAQvC;AAAA;AAAA;AAAA;AAAA,WAAQ,aAAa,oBAAI,IAAY;AAAA;AAAA,IAErC,SAAS;AACP,aAAO;AAAA;AAAA,cAEGC,GAAS;AAAA,QACf,uBAAuB,GAAG,KAAK;AAAA,MACjC,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAUkB,KAAK;AAAA,0BACJ,KAAK;AAAA;AAAA,iBAEd,KAAK;AAAA,gBACN,KAAK;AAAA,mBACF,KAAK;AAAA,uBACD,KAAK;AAAA,qBACP,KAAK;AAAA,uBACH,KAAK;AAAA,gBACZA,GAAS;AAAA,QACf,YAAY,KAAK;AAAA,MACnB,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAMP;AAAA,IAEQ,UAAU;AAChB,WAAK,aAAa;AAAA,IACpB;AAAA,IAEQ,SAAS;AACf,WAAK,aAAa;AAAA,IACpB;AAAA,IAEQ,UAAU,OAAsB;AACtC,YAAM,EAAE,IAAI,IAAI;AAChB,cAAQ,KAAK;AAAA,QACX,KAAK;AAAA,QACL,KAAK;AACH,eAAK,sBAAsB,KAAK,IAAI,KAAK,sBAAsB,GAAG,GAAG;AACrE;AAAA,QACF,KAAK;AAAA,QACL,KAAK;AACH,eAAK,sBAAsB,KAAK,IAAI,KAAK,sBAAsB,GAAG,CAAC;AACnE;AAAA,QACF,KAAK;AACH,eAAK,sBAAsB,KAAK,IAAI,KAAK,sBAAsB,IAAI,GAAG;AACtE;AAAA,QACF,KAAK;AACH,eAAK,sBAAsB,KAAK,IAAI,KAAK,sBAAsB,IAAI,CAAC;AACpE;AAAA,QACF,KAAK;AACH,eAAK,sBAAsB;AAC3B;AAAA,QACF,KAAK;AACH,eAAK,sBAAsB;AAC3B;AAAA,QACF;AACE;AAAA,MACJ;AAAA,IACF;AAAA,IAEQ,cAAc,OAAqB;AACzC,WAAK,aAAa;AAElB,UAAI,KAAK,WAAW,IAAI,MAAM,SAAS;AAAG;AAE1C,WAAK,WAAW,IAAI,MAAM,SAAS;AACnC,MAAC,MAAM,OAAuB,kBAAkB,MAAM,SAAS;AAAA,IACjE;AAAA,IAEQ,YAAY,OAAqB;AACvC,WAAK,WAAW,OAAO,MAAM,SAAS;AACtC,MAAC,MAAM,OAAuB,sBAAsB,MAAM,SAAS;AAEnE,UAAI,KAAK,WAAW,SAAS,GAAG;AAC9B,aAAK,aAAa;AAAA,MACpB;AAAA,IACF;AAAA,IAEQ,cAAc,OAAqB;AACzC,UAAI,CAAC,KAAK;AAAY;AAEtB,YAAM,EAAE,SAAS,OAAO,IAAI;AAC5B,YAAM,EAAE,KAAK,YAAY,QAAQ,cAAc,IAC7C,KAAK,UAAU,sBAAsB;AAGvC,YAAM,SAAS,gBAAgB;AAI/B,YAAM,sBAAsB,OAAQ,SAAS,cAAc,SAAU;AAGrE,WAAK,sBAAsB,KAAK,IAAI,KAAK,IAAI,qBAAqB,CAAC,GAAG,GAAG;AAAA,IAC3E;AAAA,EACF;AA/LE,EADW,eACJ,SAASC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAuEC;AAAA,IAAhB,EAAM;AAAA,KAxEI,eAwEM;AAKA;AAAA,IAAhB,EAAM;AAAA,KA7EI,eA6EM;AAEU;AAAA,IAA1BA,GAAM,UAAU;AAAA,KA/EN,eA+EgB;AA/EhB,mBAAN;AAAA,IADN,EAAc,iBAAiB;AAAA,KACnB;",
  "names": ["__extends", "__assign", "__rest", "__decorate", "__param", "__esDecorate", "__runInitializers", "__propKey", "__setFunctionName", "__metadata", "__awaiter", "__generator", "__exportStar", "__values", "__read", "__spread", "__spreadArrays", "__spreadArray", "__await", "__asyncGenerator", "__asyncDelegator", "__asyncValues", "__makeTemplateObject", "__importStar", "__importDefault", "__classPrivateFieldGet", "__classPrivateFieldSet", "__classPrivateFieldIn", "__createBinding", "exports", "v", "d", "b", "p", "t", "s", "i", "n", "e", "c", "r", "f", "_", "x", "P", "y", "g", "m", "o", "k", "k2", "a", "j", "l", "tslib", "customElement", "tagName", "classOrDescriptor", "clazz", "customElements", "define", "descriptor", "kind", "elements", "finisher", "standardProperty", "options", "element", "kind", "descriptor", "finisher", "clazz", "createProperty", "key", "Symbol", "placement", "originalKey", "initializer", "this", "call", "legacyProperty", "proto", "name", "constructor", "property", "protoOrDescriptor", "state", "options", "property", "decorateProperty", "finisher", "descriptor", "protoOrDescriptor", "name", "key", "_a", "originalKey", "info", "undefined", "kind", "placement", "ctor", "constructor", "Object", "defineProperty", "query", "selector", "cache", "decorateProperty", "descriptor", "name", "get", "_b", "_a", "this", "renderRoot", "querySelector", "enumerable", "configurable", "key", "Symbol", "o", "t", "queryAll", "selector", "decorateProperty", "descriptor", "_name", "get", "_b", "_a", "this", "renderRoot", "querySelectorAll", "enumerable", "configurable", "queryAsync", "selector", "decorateProperty", "descriptor", "_name", "async", "this", "updateComplete", "_a", "renderRoot", "querySelector", "enumerable", "configurable", "slotAssignedElements", "_a", "globalThis", "HTMLSlotElement", "prototype", "assignedElements", "slot", "opts", "assignedNodes", "filter", "node", "nodeType", "Node", "ELEMENT_NODE", "queryAssignedElements", "options", "selector", "decorateProperty", "descriptor", "_name", "get", "slotSelector", "slotEl", "this", "renderRoot", "querySelector", "elements", "matches", "enumerable", "configurable", "queryAssignedNodes", "slotOrOptions", "flatten", "selector", "assignedNodesOptions", "slot", "queryAssignedElements", "decorateProperty", "descriptor", "_name", "get", "slotSelector", "slotEl", "_a", "this", "renderRoot", "querySelector", "_b", "assignedNodes", "enumerable", "configurable", "internals", "HTMLElement", "customElements", "global", "globalThis", "supportsAdoptingStyleSheets", "ShadowRoot", "ShadyCSS", "nativeShadow", "Document", "prototype", "CSSStyleSheet", "constructionToken", "Symbol", "cssTagCache", "WeakMap", "CSSResult", "constructor", "cssText", "strings", "safeToken", "this", "Error", "_strings", "styleSheet", "_styleSheet", "cacheable", "length", "get", "replaceSync", "set", "toString", "unsafeCSS", "value", "String", "css", "values", "reduce", "acc", "v", "idx", "adoptStyles", "renderRoot", "styles", "adoptedStyleSheets", "map", "s", "forEach", "style", "document", "createElement", "nonce", "setAttribute", "textContent", "appendChild", "getCompatibleStyle", "sheet", "rule", "cssRules", "global", "globalThis", "_a", "customElements", "trustedTypes", "emptyStringForBooleanAttribute", "emptyScript", "polyfillSupport", "reactiveElementPolyfillSupport", "defaultConverter", "toAttribute", "value", "type", "Boolean", "Object", "Array", "JSON", "stringify", "fromAttribute", "fromValue", "Number", "parse", "e", "notEqual", "old", "defaultPropertyDeclaration", "attribute", "String", "converter", "reflect", "hasChanged", "finalized", "ReactiveElement", "HTMLElement", "constructor", "super", "this", "__instanceProperties", "Map", "isUpdatePending", "hasUpdated", "__reflectingProperty", "_initialize", "static", "initializer", "finalize", "_initializers", "push", "observedAttributes", "attributes", "elementProperties", "forEach", "v", "p", "attr", "__attributeNameForProperty", "__attributeToPropertyMap", "set", "name", "options", "state", "noAccessor", "prototype", "hasOwnProperty", "key", "Symbol", "descriptor", "getPropertyDescriptor", "defineProperty", "get", "oldValue", "requestUpdate", "configurable", "enumerable", "superCtor", "getPrototypeOf", "props", "properties", "propKeys", "getOwnPropertyNames", "getOwnPropertySymbols", "createProperty", "elementStyles", "finalizeStyles", "styles", "isArray", "Set", "flat", "Infinity", "reverse", "s", "unshift", "getCompatibleStyle", "toLowerCase", "__updatePromise", "Promise", "res", "enableUpdating", "_$changedProperties", "__saveInstanceProperties", "i", "addController", "controller", "__controllers", "renderRoot", "isConnected", "_b", "hostConnected", "call", "removeController", "splice", "indexOf", "_v", "createRenderRoot", "shadowRoot", "attachShadow", "shadowRootOptions", "adoptStyles", "connectedCallback", "c", "_requestedUpdate", "disconnectedCallback", "hostDisconnected", "attributeChangedCallback", "_old", "_$attributeToProperty", "__propertyToAttribute", "attrValue", "undefined", "removeAttribute", "setAttribute", "ctor", "propName", "getPropertyOptions", "shouldRequestUpdate", "has", "__reflectingProperties", "__enqueueUpdate", "async", "reject", "result", "scheduleUpdate", "performUpdate", "shouldUpdate", "changedProperties", "willUpdate", "hostUpdate", "update", "__markUpdated", "_$didUpdate", "_changedProperties", "hostUpdated", "firstUpdated", "updated", "updateComplete", "getUpdateComplete", "k", "mode", "_d", "reactiveElementVersions", "global", "globalThis", "trustedTypes", "policy", "createPolicy", "createHTML", "s", "boundAttributeSuffix", "marker", "Math", "random", "String", "slice", "markerMatch", "nodeMarker", "d", "document", "createTreeWalker", "createMarker", "createComment", "isPrimitive", "value", "isArray", "Array", "isIterable", "Symbol", "iterator", "SPACE_CHAR", "textEndRegex", "commentEndRegex", "comment2EndRegex", "tagEndRegex", "RegExp", "singleQuoteAttrEndRegex", "doubleQuoteAttrEndRegex", "rawTextElement", "tag", "type", "strings", "values", "_$litType$", "html", "svg", "noChange", "for", "nothing", "templateCache", "WeakMap", "walker", "getTemplateHtml", "l", "length", "attrNames", "rawTextEndRegex", "regex", "i", "attrName", "match", "attrNameEndIndex", "lastIndex", "exec", "test", "end", "startsWith", "push", "undefined", "htmlResult", "hasOwnProperty", "Error", "Template", "constructor", "options", "node", "this", "parts", "nodeIndex", "attrNameIndex", "partCount", "el", "createElement", "currentNode", "content", "svgElement", "firstChild", "remove", "append", "childNodes", "nextNode", "nodeType", "hasAttributes", "attrsToRemove", "name", "getAttributeNames", "endsWith", "realName", "statics", "getAttribute", "toLowerCase", "split", "m", "index", "ctor", "PropertyPart", "BooleanAttributePart", "EventPart", "AttributePart", "removeAttribute", "tagName", "textContent", "emptyScript", "data", "indexOf", "static", "_options", "innerHTML", "resolveDirective", "part", "parent", "attributeIndex", "currentDirective", "_a", "__directives", "__directive", "nextDirectiveConstructor", "_b", "call", "_$initialize", "_c", "_d", "_$resolve", "TemplateInstance", "template", "_$parts", "_$disconnectableChildren", "_$template", "_$parent", "parentNode", "_$isConnected", "_clone", "fragment", "creationScope", "importNode", "partIndex", "templatePart", "ChildPart", "nextSibling", "ElementPart", "_update", "_$setValue", "startNode", "endNode", "_$committedValue", "_$startNode", "_$endNode", "__isConnected", "isConnected", "directiveParent", "_$clear", "_commitText", "_commitTemplateResult", "_commitNode", "_commitIterable", "_insert", "insertBefore", "createTextNode", "result", "_$getTemplate", "h", "instance", "get", "set", "itemParts", "itemPart", "item", "start", "from", "_$notifyConnectionChanged", "n", "setConnected", "element", "fill", "valueIndex", "noCommit", "change", "v", "_commitValue", "setAttribute", "emptyStringForBooleanAttribute", "super", "newListener", "oldListener", "shouldRemoveListener", "capture", "once", "passive", "shouldAddListener", "removeEventListener", "addEventListener", "handleEvent", "event", "host", "_$LH", "_boundAttributeSuffix", "_marker", "_markerMatch", "_HTML_RESULT", "_getTemplateHtml", "_TemplateInstance", "_isIterable", "_resolveDirective", "_ChildPart", "_AttributePart", "_BooleanAttributePart", "_EventPart", "_PropertyPart", "_ElementPart", "polyfillSupport", "litHtmlPolyfillSupport", "litHtmlVersions", "render", "container", "partOwnerNode", "renderBefore", "LitElement", "ReactiveElement", "constructor", "this", "renderOptions", "host", "__childPart", "createRenderRoot", "renderRoot", "super", "_a", "_b", "renderBefore", "firstChild", "update", "changedProperties", "value", "render", "hasUpdated", "isConnected", "connectedCallback", "setConnected", "disconnectedCallback", "noChange", "globalThis", "litElementHydrateSupport", "call", "polyfillSupport", "litElementPolyfillSupport", "_$changedProperties", "_c", "globalThis", "litElementVersions", "push", "isServer", "s", "i", "MdElevation", "o", "s", "o", "styles", "i", "MdFocusRing", "styles", "PartType", "ATTRIBUTE", "CHILD", "PROPERTY", "BOOLEAN_ATTRIBUTE", "EVENT", "ELEMENT", "directive", "c", "values", "_$litDirective$", "Directive", "constructor", "_partInfo", "_$isConnected", "this", "_$parent", "_$initialize", "part", "parent", "attributeIndex", "__part", "__attributeIndex", "_$resolve", "props", "update", "_part", "render", "classMap", "directive", "Directive", "constructor", "partInfo", "super", "type", "PartType", "ATTRIBUTE", "name", "_a", "strings", "length", "Error", "render", "classInfo", "Object", "keys", "filter", "key", "join", "update", "part", "this", "_previousClasses", "Set", "_staticClasses", "split", "s", "has", "add", "classList", "element", "forEach", "remove", "delete", "value", "_b", "noChange", "State", "EVENTS", "o", "s", "x", "y", "i", "styles", "i", "MdRipple", "styles", "o", "s", "o", "i", "e", "styles", "i", "styles", "i", "styles", "i", "MdElevatedButton", "styles", "styles", "i", "MdFilledButton", "styles", "styles", "i", "MdFilledTonalButton", "styles", "styles", "i", "MdOutlinedButton", "styles", "styles", "i", "MdTextButton", "styles", "_a", "o", "s", "o", "i", "styles", "i", "MdCheckbox", "styles", "s", "o", "styles", "i", "styles", "i", "styles", "i", "MdAssistChip", "styles", "s", "o", "isRtl", "e", "styles", "i", "MdChipSet", "styles", "o", "isFocusable", "isRtl", "i", "styles", "i", "styles", "i", "styles", "i", "MdFilterChip", "styles", "i", "styles", "i", "MdInputChip", "styles", "styles", "i", "MdSuggestionChip", "styles", "s", "styles", "i", "MdDivider", "styles", "s", "o", "animation", "i", "styles", "i", "MdDialog", "styles", "s", "o", "styles", "i", "styles", "i", "styles", "i", "MdBrandedFab", "styles", "styles", "i", "MdFab", "styles", "s", "o", "e", "i", "styles", "i", "styles", "i", "MdFilledField", "styles", "styles", "i", "MdOutlinedField", "styles", "s", "styles", "i", "MdIcon", "styles", "styles", "i", "brand", "Symbol", "for", "unwrapStaticValue", "value", "r", "literal", "strings", "values", "_$litStatic$", "reduce", "acc", "v", "idx", "value", "Error", "r", "brand", "stringsCache", "Map", "withStatic", "coreTag", "l", "length", "staticValue", "dynamicValue", "staticStrings", "dynamicValues", "s", "i", "hasStatics", "unwrapStaticValue", "push", "key", "join", "get", "raw", "set", "html", "coreHtml", "svg", "coreSvg", "s", "i", "n", "o", "styles", "i", "MdFilledIconButton", "styles", "styles", "i", "MdFilledTonalIconButton", "styles", "styles", "i", "MdIconButton", "styles", "styles", "i", "MdOutlinedIconButton", "styles", "i", "isRtl", "s", "o", "e", "styles", "i", "MdList", "styles", "s", "e", "styles", "i", "MdItem", "styles", "s", "i", "n", "o", "e", "styles", "i", "MdListItem", "styles", "important", "importantFlag", "styleMap", "directive", "Directive", "constructor", "partInfo", "super", "type", "PartType", "ATTRIBUTE", "name", "_a", "strings", "length", "Error", "render", "styleInfo", "Object", "keys", "reduce", "style", "prop", "value", "includes", "replace", "toLowerCase", "update", "part", "element", "this", "_previousStyleProperties", "Set", "add", "forEach", "delete", "removeProperty", "isImportant", "endsWith", "setProperty", "slice", "noChange", "a", "b", "s", "isRtl", "o", "i", "e", "styles", "i", "MdMenu", "styles", "s", "i", "n", "o", "e", "styles", "i", "MdMenuItem", "styles", "s", "o", "isRtl", "e", "styles", "i", "MdSubMenu", "styles", "s", "o", "styles", "i", "MdCircularProgress", "styles", "o", "styles", "i", "MdLinearProgress", "styles", "_a", "i", "isRtl", "s", "o", "i", "styles", "i", "MdRadio", "styles", "_a", "o", "i", "s", "o", "_a", "n", "e", "i", "i", "styles", "i", "styles", "i", "MdFilledSelect", "styles", "i", "styles", "i", "MdOutlinedSelect", "styles", "e", "s", "o", "i", "e", "MdSelectOption", "styles", "styles", "i", "when", "condition", "trueCase", "falseCase", "s", "o", "v", "n", "isOverlapping", "i", "e", "x", "y", "a", "b", "styles", "i", "MdSlider", "styles", "s", "o", "i", "styles", "i", "MdSwitch", "styles", "s", "o", "_a", "a", "i", "e", "styles", "i", "styles", "i", "MdPrimaryTab", "styles", "styles", "i", "MdSecondaryTab", "styles", "s", "o", "isRtl", "e", "i", "styles", "i", "MdTabs", "styles", "styles", "i", "_ChildPart", "ChildPart", "_$LH", "isSingleExpression", "part", "strings", "RESET_VALUE", "setCommittedValue", "part", "value", "_$committedValue", "live", "directive", "Directive", "constructor", "partInfo", "super", "type", "PartType", "PROPERTY", "ATTRIBUTE", "BOOLEAN_ATTRIBUTE", "Error", "isSingleExpression", "render", "value", "update", "part", "noChange", "nothing", "element", "name", "hasAttribute", "getAttribute", "String", "setCommittedValue", "s", "o", "n", "l", "i", "e", "i", "styles", "i", "MdFilledTextField", "i", "styles", "styles", "i", "i", "MdOutlinedTextField", "i", "styles", "s", "i", "s", "i", "notifyChildrenConnectedChanged", "parent", "isConnected", "children", "_$disconnectableChildren", "obj", "_b", "_a", "o", "e", "removeDisconnectableFromParent", "_$parent", "delete", "size", "addDisconnectableToParent", "Set", "has", "add", "installDisconnectAPI", "reparentDisconnectables", "newParent", "this", "notifyChildPartConnectedChanged", "isClearingValue", "fromPartIndex", "value", "_$committedValue", "Array", "isArray", "i", "length", "type", "PartType", "CHILD", "_c", "_$notifyConnectionChanged", "_d", "_$reparentDisconnectables", "AsyncDirective", "Directive", "constructor", "_$initialize", "part", "attributeIndex", "super", "_$isConnected", "_$AO", "isClearingDirective", "r", "reconnected", "call", "disconnected", "setValue", "isSingleExpression", "__part", "_$setValue", "newValues", "__attributeIndex", "controllerMap", "WeakMap", "z", "disconnectedProps", "Map", "renderedHosts", "WeakSet", "animationFrame", "Promise", "resolve", "requestAnimationFrame", "fadeOut", "opacity", "fadeIn", "opacity", "diffOp", "a", "b", "v", "quotientOp", "transformProps", "left", "value", "transform", "top", "width", "height", "defaultKeyframeOptions", "duration", "easing", "defaultCssProperties", "nodeToAnimateMap", "WeakMap", "Animate", "AsyncDirective", "constructor", "part", "super", "this", "_parentNode", "_nextSibling", "_shouldAnimate", "shouldLog", "type", "PartType", "CHILD", "Error", "createFinished", "_a", "resolveFinished", "call", "finished", "Promise", "r", "_resolveFinished", "async", "render", "_options", "nothing", "getController", "controllerMap", "get", "_host", "isDisabled", "options", "disabled", "update", "firstUpdate", "host", "addController", "element", "set", "optionsOrCallback", "_setOptions", "controller", "defaultOptions", "keyframeOptions", "_b", "properties", "_measure", "props", "bounds", "getBoundingClientRect", "computedStyle", "getComputedStyle", "forEach", "p", "asNum", "Number", "isNaN", "String", "_canStart", "dirty", "guard", "previous", "Array", "isArray", "length", "every", "i", "_previousValue", "hasUpdated", "isAnimating", "isConnected", "from", "hostUpdate", "_fromValues", "parentNode", "nextSibling", "skipInitial", "isHostRendered", "frames", "prepare", "animationFrame", "ancestors", "_getAncestors", "animationOptions", "_calculateKeyframeOptions", "toValues", "to", "_applyAncestorAdjustments", "log", "calculateKeyframes", "disconnected", "disconnectedProps", "inId", "delete", "in", "slice", "z", "f", "zIndex", "animate", "resetStyles", "_styles", "setAttribute", "commitStyles", "getAttribute", "webAnimation", "cancel", "reconnected", "id", "out", "t", "ref", "insertBefore", "stabilizeOut", "shifted", "position", "style", "remove", "start", "onStart", "didFinish", "didAnimate", "onComplete", "animatingProperties", "push", "hostRendered", "renderedHosts", "has", "updateComplete", "then", "add", "Object", "assign", "ancestorProps", "map", "filter", "dScaleX", "dScaleY", "center", "e", "fromFrame", "toFrame", "hasFrames", "tp", "op", "transformOrigin", "onFrames", "playState", "pending", "message", "data", "console", "directive", "positionedPoints", "Position", "AsyncDirective", "constructor", "part", "super", "type", "PartType", "ELEMENT", "Error", "render", "_targetCallbackOrRef", "_positions", "nothing", "update", "target", "positions", "this", "_host", "_a", "options", "host", "addController", "_element", "element", "hostUpdated", "_position", "value", "parent", "offsetParent", "tr", "getBoundingClientRect", "pr", "_b", "forEach", "p", "x", "includes", "style", "position", "directive", "cycleDetected", "Error", "endBatch", "batchDepth", "error", "hasError", "batchedEffect", "o", "batchIteration", "effect", "next", "_nextBatchedEffect", "_flags", "needsToRecompute", "_callback", "err", "evalContext", "batchedEffect", "batchDepth", "batchIteration", "globalVersion", "addDependency", "signal", "node", "_node", "_target", "_version", "_source", "_prevSource", "_sources", "_nextSource", "_prevTarget", "_nextTarget", "_rollbackNode", "_flags", "_subscribe", "Signal", "value", "this", "_value", "_targets", "prototype", "_refresh", "_unsubscribe", "prev", "next", "subscribe", "fn", "effect", "flag", "valueOf", "toString", "toJSON", "peek", "Object", "defineProperty", "get", "set", "Computed", "Error", "mutationDetected", "cycleDetected", "_notify", "endBatch", "needsToRecompute", "target", "prepareSources", "rollbackNode", "cleanupSources", "head", "compute", "call", "undefined", "_compute", "_globalVersion", "prevContext", "err", "OUTDATED", "_node2", "cleanupEffect", "effect", "cleanup", "_cleanup", "batchDepth", "prevContext", "evalContext", "err", "_flags", "disposeEffect", "endBatch", "node", "_sources", "_nextSource", "_source", "_unsubscribe", "_compute", "endEffect", "this", "Error", "cleanupSources", "g", "compute", "_nextBatchedEffect", "Effect", "prototype", "_callback", "finish", "_start", "cycleDetected", "prepareSources", "t", "bind", "_notify", "batchedEffect", "_dispose", "b", "u", "u", "s", "$", "p", "f", "e", "i", "s", "o", "e", "styles", "i", "styles", "i", "MdOutlinedSegmentedButton", "styles", "s", "i", "e", "styles", "i", "styles", "i", "MdOutlinedSegmentedButtonSet", "styles", "s", "i", "e", "a", "b", "c", "r", "g", "b", "x", "y", "z", "r", "g", "b", "y", "delinearized", "t", "e", "f", "c", "d", "k", "n", "z", "j", "m", "s", "x", "y", "z", "a", "b", "u", "p2", "t", "c", "h", "M", "C", "delinearized", "a", "b", "c", "t", "x", "y", "n", "g", "r", "i", "j", "p2", "y2", "Variant", "s", "i", "a", "b", "i", "differenceDegrees", "r", "g", "b", "i", "s", "o", "e", "i", "s", "l", "e", "i", "s", "l", "e", "i", "s", "o", "i"]
}
