{
  "version": 3,
  "sources": ["../src/components/copy-code-button.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport '@material/web/icon/icon.js';\nimport '@material/web/iconbutton/icon-button.js';\n\nimport {MdIconButton} from '@material/web/iconbutton/icon-button.js';\nimport {css, html, LitElement} from 'lit';\nimport {\n  customElement,\n  property,\n  query,\n  queryAssignedElements,\n  state,\n} from 'lit/decorators.js';\n\n/**\n * A custom element that places a copy button at the top right corner of a\n * markdown-it codeblock. Injected into the page by the\n * /catalog/eleventy-helpers/plugins/copy-code-button.cjs markdown-it plugin.\n */\n@customElement('copy-code-button')\nexport class CopyCodeButton extends LitElement {\n  static styles = css`\n    :host {\n      display: block;\n      position: relative;\n      --_border-radius: calc(var(--catalog-code-block-border-radius) / 4);\n    }\n\n    md-icon-button {\n      color: red;\n      position: absolute;\n      inset: var(\n        --catalog-copy-code-button-inset,\n        var(--_border-radius) var(--_border-radius) auto auto\n      );\n      --md-sys-color-on-surface-variant: var(--md-sys-color-on-surface);\n      --md-sys-color-primary: var(--md-sys-color-on-surface);\n    }\n  `;\n\n  private timeoutId: number | undefined;\n\n  @state() private showCheckmark = false;\n\n  /**\n   * The aria label for the copy button when it has not been clicked.\n   */\n  @property() label = 'Copy code';\n\n  /**\n   * The aria label for the copy button when it has been clicked and the copy is\n   * successul.\n   */\n  @property({attribute: 'success-label'}) successLabel = 'Copy successful';\n\n  /**\n   * The title to be set on the copy button.\n   */\n  @property({attribute: 'button-title'}) buttonTitle = 'Copy code';\n\n  @query('md-icon-button') private copyButton!: MdIconButton;\n\n  @queryAssignedElements({flatten: true, selector: '*'})\n  private slottedEls!: NodeListOf<HTMLElement>;\n\n  render() {\n    return html`\n      <slot></slot>\n      <md-icon-button\n        toggle\n        @click=${this.onClick}\n        @input=${this.onInput}\n        title=${this.buttonTitle}\n        .selected=${this.showCheckmark}\n        aria-label=${this.label}\n        aria-label-selected=${this.successLabel}>\n        <md-icon>content_copy</md-icon>\n        <md-icon slot=\"selected\">checkmark</md-icon>\n      </md-icon-button>\n    `;\n  }\n\n  private async onClick() {\n    await navigator.clipboard.writeText(this.getCopyText());\n    this.onCopySuccess();\n  }\n\n  private onInput() {\n    this.showCheckmark = this.copyButton.selected;\n  }\n\n  /**\n   * Returns the text to be copied. By default, it copies the textContent of the\n   * nodes slotted into the element. Override for custom functionality.\n   */\n  getCopyText() {\n    let text = '';\n    for (const el of this.slottedEls) {\n      text += el.textContent;\n    }\n\n    return text;\n  }\n\n  private onCopySuccess() {\n    this.showCheckmark = true;\n\n    if (this.timeoutId) {\n      window.clearTimeout(this.timeoutId);\n    }\n\n    this.timeoutId = window.setTimeout(() => {\n      this.showCheckmark = false;\n    }, 2000);\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'copy-code-button': CopyCodeButton;\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;AAyBO,IAAM,iBAAN,cAA6B,EAAW;AAAA,EAAxC;AAAA;AAsBI,SAAQ,gBAAgB;AAKrB,iBAAQ;AAMoB,wBAAe;AAKhB,uBAAc;AAAA;AAAA,EAOrD,SAAS;AACP,WAAO;AAAA;AAAA;AAAA;AAAA,iBAIM,KAAK;AAAA,iBACL,KAAK;AAAA,gBACN,KAAK;AAAA,oBACD,KAAK;AAAA,qBACJ,KAAK;AAAA,8BACI,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA,EAKjC;AAAA,EAEA,MAAc,UAAU;AACtB,UAAM,UAAU,UAAU,UAAU,KAAK,YAAY,CAAC;AACtD,SAAK,cAAc;AAAA,EACrB;AAAA,EAEQ,UAAU;AAChB,SAAK,gBAAgB,KAAK,WAAW;AAAA,EACvC;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,cAAc;AACZ,QAAI,OAAO;AACX,eAAW,MAAM,KAAK,YAAY;AAChC,cAAQ,GAAG;AAAA,IACb;AAEA,WAAO;AAAA,EACT;AAAA,EAEQ,gBAAgB;AACtB,SAAK,gBAAgB;AAErB,QAAI,KAAK,WAAW;AAClB,aAAO,aAAa,KAAK,SAAS;AAAA,IACpC;AAEA,SAAK,YAAY,OAAO,WAAW,MAAM;AACvC,WAAK,gBAAgB;AAAA,IACvB,GAAG,GAAI;AAAA,EACT;AACF;AA/Fa,eACJ,SAASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAqBC;AAAA,EAAhB,EAAM;AAAA,GAtBI,eAsBM;AAKL;AAAA,EAAX,EAAS;AAAA,GA3BC,eA2BC;AAM4B;AAAA,EAAvC,EAAS,EAAC,WAAW,gBAAe,CAAC;AAAA,GAjC3B,eAiC6B;AAKD;AAAA,EAAtC,EAAS,EAAC,WAAW,eAAc,CAAC;AAAA,GAtC1B,eAsC4B;AAEN;AAAA,EAAhC,EAAM,gBAAgB;AAAA,GAxCZ,eAwCsB;AAGzB;AAAA,EADP,EAAsB,EAAC,SAAS,MAAM,UAAU,IAAG,CAAC;AAAA,GA1C1C,eA2CH;AA3CG,iBAAN;AAAA,EADN,EAAc,kBAAkB;AAAA,GACpB;",
  "names": ["i"]
}
