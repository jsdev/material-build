{
  "version": 3,
  "sources": ["../../internal/controller/attachable-controller.ts", "../../focus/internal/focus-ring.ts", "../../focus/internal/focus-ring-styles.ts", "../../focus/md-focus-ring.ts", "../../internal/motion/animation.ts", "../../ripple/internal/ripple.ts", "../../ripple/internal/ripple-styles.ts", "../../ripple/ripple.ts", "../../internal/aria/aria.ts", "../../internal/aria/delegate.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {isServer, ReactiveController, ReactiveControllerHost} from 'lit';\n\n/**\n * An element that can be attached to an associated controlling element.\n */\nexport interface Attachable {\n  /**\n   * Reflects the value of the `for` attribute, which is the ID of the element's\n   * associated control.\n   *\n   * Use this when the elements's associated control is not its parent.\n   *\n   * To manually control an element, set its `for` attribute to `\"\"`.\n   *\n   * @example\n   * ```html\n   * <div class=\"container\">\n   *   <md-attachable for=\"interactive\"></md-attachable>\n   *   <button id=\"interactive\">Action</button>\n   * </div>\n   * ```\n   *\n   * @example\n   * ```html\n   * <button class=\"manually-controlled\">\n   *   <md-attachable for=\"\"></md-attachable>\n   * </button>\n   * ```\n   */\n  htmlFor: string | null;\n\n  /**\n   * Gets or sets the element that controls the visibility of the attachable\n   * element. It is one of:\n   *\n   * - The control referenced by the `for` attribute.\n   * - The control provided to `element.attach(control)`\n   * - The element's parent.\n   * - `null` if the element is not controlled.\n   */\n  control: HTMLElement | null;\n\n  /**\n   * Attaches the element to an interactive control.\n   *\n   * @param control The element that controls the attachable element.\n   */\n  attach(control: HTMLElement): void;\n\n  /**\n   * Detaches the element from its current control.\n   */\n  detach(): void;\n}\n\n/**\n * A key to retrieve an `Attachable` element's `AttachableController` from a\n * global `MutationObserver`.\n */\nconst ATTACHABLE_CONTROLLER = Symbol('attachableController');\n\n/**\n * The host of an `AttachableController`. The controller will add itself to\n * the host so it can be retrieved in a global `MutationObserver`.\n */\ninterface AttachableControllerHost extends ReactiveControllerHost, HTMLElement {\n  [ATTACHABLE_CONTROLLER]?: AttachableController;\n}\n\nlet FOR_ATTRIBUTE_OBSERVER: MutationObserver | undefined;\n\nif (!isServer) {\n  /**\n   * A global `MutationObserver` that reacts to `for` attribute changes on\n   * `Attachable` elements. If the `for` attribute changes, the controller will\n   * re-attach to the new referenced element.\n   */\n  FOR_ATTRIBUTE_OBSERVER = new MutationObserver((records) => {\n    for (const record of records) {\n      // When a control's `for` attribute changes, inform its\n      // `AttachableController` to update to a new control.\n      (record.target as AttachableControllerHost)[\n        ATTACHABLE_CONTROLLER\n      ]?.hostConnected();\n    }\n  });\n}\n\n/**\n * A controller that provides an implementation for `Attachable` elements.\n *\n * @example\n * ```ts\n * class MyElement extends LitElement implements Attachable {\n *   get control() { return this.attachableController.control; }\n *\n *   private readonly attachableController = new AttachableController(\n *     this,\n *     (previousControl, newControl) => {\n *       previousControl?.removeEventListener('click', this.handleClick);\n *       newControl?.addEventListener('click', this.handleClick);\n *     }\n *   );\n *\n *   // Implement remaining `Attachable` properties/methods that call the\n *   // controller's properties/methods.\n * }\n * ```\n */\nexport class AttachableController implements ReactiveController, Attachable {\n  get htmlFor() {\n    return this.host.getAttribute('for');\n  }\n\n  set htmlFor(htmlFor: string | null) {\n    if (htmlFor === null) {\n      this.host.removeAttribute('for');\n    } else {\n      this.host.setAttribute('for', htmlFor);\n    }\n  }\n\n  get control() {\n    if (this.host.hasAttribute('for')) {\n      if (!this.htmlFor || !this.host.isConnected) {\n        return null;\n      }\n\n      return (\n        this.host.getRootNode() as Document | ShadowRoot\n      ).querySelector<HTMLElement>(`#${this.htmlFor}`);\n    }\n\n    return this.currentControl || this.host.parentElement;\n  }\n  set control(control: HTMLElement | null) {\n    if (control) {\n      this.attach(control);\n    } else {\n      this.detach();\n    }\n  }\n\n  private currentControl: HTMLElement | null = null;\n\n  /**\n   * Creates a new controller for an `Attachable` element.\n   *\n   * @param host The `Attachable` element.\n   * @param onControlChange A callback with two parameters for the previous and\n   *     next control. An `Attachable` element may perform setup or teardown\n   *     logic whenever the control changes.\n   */\n  constructor(\n    private readonly host: AttachableControllerHost,\n    private readonly onControlChange: (\n      prev: HTMLElement | null,\n      next: HTMLElement | null,\n    ) => void,\n  ) {\n    host.addController(this);\n    host[ATTACHABLE_CONTROLLER] = this;\n    FOR_ATTRIBUTE_OBSERVER?.observe(host, {attributeFilter: ['for']});\n  }\n\n  attach(control: HTMLElement) {\n    if (control === this.currentControl) {\n      return;\n    }\n\n    this.setCurrentControl(control);\n    // When imperatively attaching, remove the `for` attribute so\n    // that the attached control is used instead of a referenced one.\n    this.host.removeAttribute('for');\n  }\n\n  detach() {\n    this.setCurrentControl(null);\n    // When imperatively detaching, add an empty `for=\"\"` attribute. This will\n    // ensure the control is `null` rather than the `parentElement`.\n    this.host.setAttribute('for', '');\n  }\n\n  /** @private */\n  hostConnected() {\n    this.setCurrentControl(this.control);\n  }\n\n  /** @private */\n  hostDisconnected() {\n    this.setCurrentControl(null);\n  }\n\n  private setCurrentControl(control: HTMLElement | null) {\n    this.onControlChange(this.currentControl, control);\n    this.currentControl = control;\n  }\n}\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {isServer, LitElement, PropertyValues} from 'lit';\nimport {property} from 'lit/decorators.js';\n\nimport {\n  Attachable,\n  AttachableController,\n} from '../../internal/controller/attachable-controller.js';\n\n/**\n * Events that the focus ring listens to.\n */\nconst EVENTS = ['focusin', 'focusout', 'pointerdown'];\n\n/**\n * A focus ring component.\n *\n * @fires visibility-changed {Event} Fired whenever `visible` changes.\n */\nexport class FocusRing extends LitElement implements Attachable {\n  /**\n   * Makes the focus ring visible.\n   */\n  @property({type: Boolean, reflect: true}) visible = false;\n\n  /**\n   * Makes the focus ring animate inwards instead of outwards.\n   */\n  @property({type: Boolean, reflect: true}) inward = false;\n\n  get htmlFor() {\n    return this.attachableController.htmlFor;\n  }\n\n  set htmlFor(htmlFor: string | null) {\n    this.attachableController.htmlFor = htmlFor;\n  }\n\n  get control() {\n    return this.attachableController.control;\n  }\n  set control(control: HTMLElement | null) {\n    this.attachableController.control = control;\n  }\n\n  private readonly attachableController = new AttachableController(\n    this,\n    this.onControlChange.bind(this),\n  );\n\n  attach(control: HTMLElement) {\n    this.attachableController.attach(control);\n  }\n\n  detach() {\n    this.attachableController.detach();\n  }\n\n  override connectedCallback() {\n    super.connectedCallback();\n    // Needed for VoiceOver, which will create a \"group\" if the element is a\n    // sibling to other content.\n    this.setAttribute('aria-hidden', 'true');\n  }\n\n  /** @private */\n  handleEvent(event: FocusRingEvent) {\n    if (event[HANDLED_BY_FOCUS_RING]) {\n      // This ensures the focus ring does not activate when multiple focus rings\n      // are used within a single component.\n      return;\n    }\n\n    switch (event.type) {\n      default:\n        return;\n      case 'focusin':\n        this.visible = this.control?.matches(':focus-visible') ?? false;\n        break;\n      case 'focusout':\n      case 'pointerdown':\n        this.visible = false;\n        break;\n    }\n\n    event[HANDLED_BY_FOCUS_RING] = true;\n  }\n\n  private onControlChange(prev: HTMLElement | null, next: HTMLElement | null) {\n    if (isServer) return;\n\n    for (const event of EVENTS) {\n      prev?.removeEventListener(event, this);\n      next?.addEventListener(event, this);\n    }\n  }\n\n  override update(changed: PropertyValues<FocusRing>) {\n    if (changed.has('visible')) {\n      // This logic can be removed once the `:has` selector has been introduced\n      // to Firefox. This is necessary to allow correct submenu styles.\n      this.dispatchEvent(new Event('visibility-changed'));\n    }\n    super.update(changed);\n  }\n}\n\nconst HANDLED_BY_FOCUS_RING = Symbol('handledByFocusRing');\n\ninterface FocusRingEvent extends Event {\n  [HANDLED_BY_FOCUS_RING]: true;\n}\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./focus/internal/focus-ring-styles.css.\nimport {css} from 'lit';\nexport const styles = css`:host{animation-delay:0s,calc(var(--md-focus-ring-duration, 600ms)*.25);animation-duration:calc(var(--md-focus-ring-duration, 600ms)*.25),calc(var(--md-focus-ring-duration, 600ms)*.75);animation-timing-function:cubic-bezier(0.2, 0, 0, 1);box-sizing:border-box;color:var(--md-focus-ring-color, var(--md-sys-color-secondary, #625b71));display:none;pointer-events:none;position:absolute}:host([visible]){display:flex}:host(:not([inward])){animation-name:outward-grow,outward-shrink;border-end-end-radius:calc(var(--md-focus-ring-shape-end-end, var(--md-focus-ring-shape, var(--md-sys-shape-corner-full, 9999px))) + var(--md-focus-ring-outward-offset, 2px));border-end-start-radius:calc(var(--md-focus-ring-shape-end-start, var(--md-focus-ring-shape, var(--md-sys-shape-corner-full, 9999px))) + var(--md-focus-ring-outward-offset, 2px));border-start-end-radius:calc(var(--md-focus-ring-shape-start-end, var(--md-focus-ring-shape, var(--md-sys-shape-corner-full, 9999px))) + var(--md-focus-ring-outward-offset, 2px));border-start-start-radius:calc(var(--md-focus-ring-shape-start-start, var(--md-focus-ring-shape, var(--md-sys-shape-corner-full, 9999px))) + var(--md-focus-ring-outward-offset, 2px));inset:calc(-1*var(--md-focus-ring-outward-offset, 2px));outline:var(--md-focus-ring-width, 3px) solid currentColor}:host([inward]){animation-name:inward-grow,inward-shrink;border-end-end-radius:calc(var(--md-focus-ring-shape-end-end, var(--md-focus-ring-shape, var(--md-sys-shape-corner-full, 9999px))) - var(--md-focus-ring-inward-offset, 0px));border-end-start-radius:calc(var(--md-focus-ring-shape-end-start, var(--md-focus-ring-shape, var(--md-sys-shape-corner-full, 9999px))) - var(--md-focus-ring-inward-offset, 0px));border-start-end-radius:calc(var(--md-focus-ring-shape-start-end, var(--md-focus-ring-shape, var(--md-sys-shape-corner-full, 9999px))) - var(--md-focus-ring-inward-offset, 0px));border-start-start-radius:calc(var(--md-focus-ring-shape-start-start, var(--md-focus-ring-shape, var(--md-sys-shape-corner-full, 9999px))) - var(--md-focus-ring-inward-offset, 0px));border:var(--md-focus-ring-width, 3px) solid currentColor;inset:var(--md-focus-ring-inward-offset, 0px)}@keyframes outward-grow{from{outline-width:0}to{outline-width:var(--md-focus-ring-active-width, 8px)}}@keyframes outward-shrink{from{outline-width:var(--md-focus-ring-active-width, 8px)}}@keyframes inward-grow{from{border-width:0}to{border-width:var(--md-focus-ring-active-width, 8px)}}@keyframes inward-shrink{from{border-width:var(--md-focus-ring-active-width, 8px)}}@media(prefers-reduced-motion){:host{animation:none}}\n`;\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {CSSResultOrNative} from 'lit';\nimport {customElement} from 'lit/decorators.js';\n\nimport {FocusRing} from './internal/focus-ring.js';\nimport {styles} from './internal/focus-ring-styles.js';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'md-focus-ring': MdFocusRing;\n  }\n}\n\n/**\n * TODO(b/267336424): add docs\n *\n * @final\n * @suppress {visibility}\n */\n@customElement('md-focus-ring')\nexport class MdFocusRing extends FocusRing {\n  static override styles: CSSResultOrNative[] = [styles];\n}\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Easing functions to use for web animations.\n *\n * **NOTE:** `EASING.EMPHASIZED` is approximated with unknown accuracy.\n *\n * TODO(b/241113345): replace with tokens\n */\nexport const EASING = {\n  STANDARD: 'cubic-bezier(0.2, 0, 0, 1)',\n  STANDARD_ACCELERATE: 'cubic-bezier(.3,0,1,1)',\n  STANDARD_DECELERATE: 'cubic-bezier(0,0,0,1)',\n  EMPHASIZED: 'cubic-bezier(.3,0,0,1)',\n  EMPHASIZED_ACCELERATE: 'cubic-bezier(.3,0,.8,.15)',\n  EMPHASIZED_DECELERATE: 'cubic-bezier(.05,.7,.1,1)',\n} as const;\n\n/**\n * A signal that is used for abortable tasks.\n */\nexport interface AnimationSignal {\n  /**\n   * Starts the abortable task. Any previous tasks started with this instance\n   * will be aborted.\n   *\n   * @return An `AbortSignal` for the current task.\n   */\n  start(): AbortSignal;\n  /**\n   * Complete the current task.\n   */\n  finish(): void;\n}\n\n/**\n * Creates an `AnimationSignal` that can be used to cancel a previous task.\n *\n * @example\n * class MyClass {\n *   private labelAnimationSignal = createAnimationSignal();\n *\n *   private async animateLabel() {\n *     // Start of the task. Previous tasks will be canceled.\n *     const signal = this.labelAnimationSignal.start();\n *\n *     // Do async work...\n *     if (signal.aborted) {\n *       // Use AbortSignal to check if a request was made to abort after some\n *       // asynchronous work.\n *       return;\n *     }\n *\n *     const animation = this.animate(...);\n *     // Add event listeners to be notified when the task should be canceled.\n *     signal.addEventListener('abort', () => {\n *       animation.cancel();\n *     });\n *\n *     animation.addEventListener('finish', () => {\n *       // Tell the signal that the current task is finished.\n *       this.labelAnimationSignal.finish();\n *     });\n *   }\n * }\n *\n * @return An `AnimationSignal`.\n */\nexport function createAnimationSignal(): AnimationSignal {\n  // The current animation's AbortController\n  let animationAbortController: AbortController | null = null;\n\n  return {\n    start() {\n      // Tell the previous animation to cancel.\n      animationAbortController?.abort();\n      // Set up a new AbortController for the current animation.\n      animationAbortController = new AbortController();\n      // Provide the AbortSignal so that the caller can check aborted status\n      // and add listeners.\n      return animationAbortController.signal;\n    },\n    finish() {\n      animationAbortController = null;\n    },\n  };\n}\n\n/**\n * Returns a function which can be used to throttle function calls\n * mapped to a key via a given function that should produce a promise that\n * determines the throttle amount (defaults to requestAnimationFrame).\n */\nexport function createThrottle() {\n  const stack = new Set();\n  return async (\n    key = '',\n    cb: (...args: unknown[]) => unknown,\n    timeout = async () => {\n      await new Promise(requestAnimationFrame);\n    },\n  ) => {\n    if (!stack.has(key)) {\n      stack.add(key);\n      await timeout();\n      if (stack.has(key)) {\n        stack.delete(key);\n        cb();\n      }\n    }\n  };\n}\n\n/**\n * Parses an number in milliseconds from a css time value\n */\nexport function msFromTimeCSSValue(value: string) {\n  const match = value.trim().match(/([\\d.]+)(\\s*s$)?/);\n  const time = match?.[1];\n  const seconds = match?.[2];\n  return Number(time ?? 0) * (seconds ? 1000 : 1);\n}\n", "/**\n * @license\n * Copyright 2022 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {html, isServer, LitElement, PropertyValues} from 'lit';\nimport {property, query, state} from 'lit/decorators.js';\nimport {classMap} from 'lit/directives/class-map.js';\n\nimport {\n  Attachable,\n  AttachableController,\n} from '../../internal/controller/attachable-controller.js';\nimport {EASING} from '../../internal/motion/animation.js';\n\nconst PRESS_GROW_MS = 450;\nconst MINIMUM_PRESS_MS = 225;\nconst INITIAL_ORIGIN_SCALE = 0.2;\nconst PADDING = 10;\nconst SOFT_EDGE_MINIMUM_SIZE = 75;\nconst SOFT_EDGE_CONTAINER_RATIO = 0.35;\nconst PRESS_PSEUDO = '::after';\nconst ANIMATION_FILL = 'forwards';\n\n/**\n * Interaction states for the ripple.\n *\n * On Touch:\n *  - `INACTIVE -> TOUCH_DELAY -> WAITING_FOR_CLICK -> INACTIVE`\n *  - `INACTIVE -> TOUCH_DELAY -> HOLDING -> WAITING_FOR_CLICK -> INACTIVE`\n *\n * On Mouse or Pen:\n *   - `INACTIVE -> WAITING_FOR_CLICK -> INACTIVE`\n */\nenum State {\n  /**\n   * Initial state of the control, no touch in progress.\n   *\n   * Transitions:\n   *   - on touch down: transition to `TOUCH_DELAY`.\n   *   - on mouse down: transition to `WAITING_FOR_CLICK`.\n   */\n  INACTIVE,\n  /**\n   * Touch down has been received, waiting to determine if it's a swipe or\n   * scroll.\n   *\n   * Transitions:\n   *   - on touch up: begin press; transition to `WAITING_FOR_CLICK`.\n   *   - on cancel: transition to `INACTIVE`.\n   *   - after `TOUCH_DELAY_MS`: begin press; transition to `HOLDING`.\n   */\n  TOUCH_DELAY,\n  /**\n   * A touch has been deemed to be a press\n   *\n   * Transitions:\n   *  - on up: transition to `WAITING_FOR_CLICK`.\n   */\n  HOLDING,\n  /**\n   * The user touch has finished, transition into rest state.\n   *\n   * Transitions:\n   *   - on click end press; transition to `INACTIVE`.\n   */\n  WAITING_FOR_CLICK,\n}\n\n/**\n * Events that the ripple listens to.\n */\nconst EVENTS = [\n  'click',\n  'contextmenu',\n  'pointercancel',\n  'pointerdown',\n  'pointerenter',\n  'pointerleave',\n  'pointerup',\n];\n\n/**\n * Delay reacting to touch so that we do not show the ripple for a swipe or\n * scroll interaction.\n */\nconst TOUCH_DELAY_MS = 150;\n\n/**\n * Used to detect if HCM is active. Events do not process during HCM when the\n * ripple is not displayed.\n */\nconst FORCED_COLORS = isServer\n  ? null\n  : window.matchMedia('(forced-colors: active)');\n\n/**\n * A ripple component.\n */\nexport class Ripple extends LitElement implements Attachable {\n  /**\n   * Disables the ripple.\n   */\n  @property({type: Boolean, reflect: true}) disabled = false;\n\n  get htmlFor() {\n    return this.attachableController.htmlFor;\n  }\n\n  set htmlFor(htmlFor: string | null) {\n    this.attachableController.htmlFor = htmlFor;\n  }\n\n  get control() {\n    return this.attachableController.control;\n  }\n  set control(control: HTMLElement | null) {\n    this.attachableController.control = control;\n  }\n\n  @state() private hovered = false;\n  @state() private pressed = false;\n\n  @query('.surface') private readonly mdRoot!: HTMLElement | null;\n  private rippleSize = '';\n  private rippleScale = '';\n  private initialSize = 0;\n  private growAnimation?: Animation;\n  private state = State.INACTIVE;\n  private rippleStartEvent?: PointerEvent;\n  private checkBoundsAfterContextMenu = false;\n  private readonly attachableController = new AttachableController(\n    this,\n    this.onControlChange.bind(this),\n  );\n\n  attach(control: HTMLElement) {\n    this.attachableController.attach(control);\n  }\n\n  detach() {\n    this.attachableController.detach();\n  }\n\n  override connectedCallback() {\n    super.connectedCallback();\n    // Needed for VoiceOver, which will create a \"group\" if the element is a\n    // sibling to other content.\n    this.setAttribute('aria-hidden', 'true');\n  }\n\n  protected override render() {\n    const classes = {\n      'hovered': this.hovered,\n      'pressed': this.pressed,\n    };\n\n    return html`<div class=\"surface ${classMap(classes)}\"></div>`;\n  }\n\n  protected override update(changedProps: PropertyValues<Ripple>) {\n    if (changedProps.has('disabled') && this.disabled) {\n      this.hovered = false;\n      this.pressed = false;\n    }\n    super.update(changedProps);\n  }\n\n  /**\n   * TODO(b/269799771): make private\n   * @private only public for slider\n   */\n  handlePointerenter(event: PointerEvent) {\n    if (!this.shouldReactToEvent(event)) {\n      return;\n    }\n\n    this.hovered = true;\n  }\n\n  /**\n   * TODO(b/269799771): make private\n   * @private only public for slider\n   */\n  handlePointerleave(event: PointerEvent) {\n    if (!this.shouldReactToEvent(event)) {\n      return;\n    }\n\n    this.hovered = false;\n\n    // release a held mouse or pen press that moves outside the element\n    if (this.state !== State.INACTIVE) {\n      this.endPressAnimation();\n    }\n  }\n\n  private handlePointerup(event: PointerEvent) {\n    if (!this.shouldReactToEvent(event)) {\n      return;\n    }\n\n    if (this.state === State.HOLDING) {\n      this.state = State.WAITING_FOR_CLICK;\n      return;\n    }\n\n    if (this.state === State.TOUCH_DELAY) {\n      this.state = State.WAITING_FOR_CLICK;\n      this.startPressAnimation(this.rippleStartEvent);\n      return;\n    }\n  }\n\n  private async handlePointerdown(event: PointerEvent) {\n    if (!this.shouldReactToEvent(event)) {\n      return;\n    }\n\n    this.rippleStartEvent = event;\n    if (!this.isTouch(event)) {\n      this.state = State.WAITING_FOR_CLICK;\n      this.startPressAnimation(event);\n      return;\n    }\n\n    // after a longpress contextmenu event, an extra `pointerdown` can be\n    // dispatched to the pressed element. Check that the down is within\n    // bounds of the element in this case.\n    if (this.checkBoundsAfterContextMenu && !this.inBounds(event)) {\n      return;\n    }\n\n    this.checkBoundsAfterContextMenu = false;\n\n    // Wait for a hold after touch delay\n    this.state = State.TOUCH_DELAY;\n    await new Promise((resolve) => {\n      setTimeout(resolve, TOUCH_DELAY_MS);\n    });\n\n    if (this.state !== State.TOUCH_DELAY) {\n      return;\n    }\n\n    this.state = State.HOLDING;\n    this.startPressAnimation(event);\n  }\n\n  private handleClick() {\n    // Click is a MouseEvent in Firefox and Safari, so we cannot use\n    // `shouldReactToEvent`\n    if (this.disabled) {\n      return;\n    }\n\n    if (this.state === State.WAITING_FOR_CLICK) {\n      this.endPressAnimation();\n      return;\n    }\n\n    if (this.state === State.INACTIVE) {\n      // keyboard synthesized click event\n      this.startPressAnimation();\n      this.endPressAnimation();\n    }\n  }\n\n  private handlePointercancel(event: PointerEvent) {\n    if (!this.shouldReactToEvent(event)) {\n      return;\n    }\n\n    this.endPressAnimation();\n  }\n\n  private handleContextmenu() {\n    if (this.disabled) {\n      return;\n    }\n\n    this.checkBoundsAfterContextMenu = true;\n    this.endPressAnimation();\n  }\n\n  private determineRippleSize() {\n    const {height, width} = this.getBoundingClientRect();\n    const maxDim = Math.max(height, width);\n    const softEdgeSize = Math.max(\n      SOFT_EDGE_CONTAINER_RATIO * maxDim,\n      SOFT_EDGE_MINIMUM_SIZE,\n    );\n\n    const initialSize = Math.floor(maxDim * INITIAL_ORIGIN_SCALE);\n    const hypotenuse = Math.sqrt(width ** 2 + height ** 2);\n    const maxRadius = hypotenuse + PADDING;\n\n    this.initialSize = initialSize;\n    this.rippleScale = `${(maxRadius + softEdgeSize) / initialSize}`;\n    this.rippleSize = `${initialSize}px`;\n  }\n\n  private getNormalizedPointerEventCoords(pointerEvent: PointerEvent): {\n    x: number;\n    y: number;\n  } {\n    const {scrollX, scrollY} = window;\n    const {left, top} = this.getBoundingClientRect();\n    const documentX = scrollX + left;\n    const documentY = scrollY + top;\n    const {pageX, pageY} = pointerEvent;\n    return {x: pageX - documentX, y: pageY - documentY};\n  }\n\n  private getTranslationCoordinates(positionEvent?: Event) {\n    const {height, width} = this.getBoundingClientRect();\n    // end in the center\n    const endPoint = {\n      x: (width - this.initialSize) / 2,\n      y: (height - this.initialSize) / 2,\n    };\n\n    let startPoint;\n    if (positionEvent instanceof PointerEvent) {\n      startPoint = this.getNormalizedPointerEventCoords(positionEvent);\n    } else {\n      startPoint = {\n        x: width / 2,\n        y: height / 2,\n      };\n    }\n\n    // center around start point\n    startPoint = {\n      x: startPoint.x - this.initialSize / 2,\n      y: startPoint.y - this.initialSize / 2,\n    };\n\n    return {startPoint, endPoint};\n  }\n\n  private startPressAnimation(positionEvent?: Event) {\n    if (!this.mdRoot) {\n      return;\n    }\n\n    this.pressed = true;\n    this.growAnimation?.cancel();\n    this.determineRippleSize();\n    const {startPoint, endPoint} =\n      this.getTranslationCoordinates(positionEvent);\n    const translateStart = `${startPoint.x}px, ${startPoint.y}px`;\n    const translateEnd = `${endPoint.x}px, ${endPoint.y}px`;\n\n    this.growAnimation = this.mdRoot.animate(\n      {\n        top: [0, 0],\n        left: [0, 0],\n        height: [this.rippleSize, this.rippleSize],\n        width: [this.rippleSize, this.rippleSize],\n        transform: [\n          `translate(${translateStart}) scale(1)`,\n          `translate(${translateEnd}) scale(${this.rippleScale})`,\n        ],\n      },\n      {\n        pseudoElement: PRESS_PSEUDO,\n        duration: PRESS_GROW_MS,\n        easing: EASING.STANDARD,\n        fill: ANIMATION_FILL,\n      },\n    );\n  }\n\n  private async endPressAnimation() {\n    this.rippleStartEvent = undefined;\n    this.state = State.INACTIVE;\n    const animation = this.growAnimation;\n    let pressAnimationPlayState = Infinity;\n    if (typeof animation?.currentTime === 'number') {\n      pressAnimationPlayState = animation.currentTime;\n    } else if (animation?.currentTime) {\n      pressAnimationPlayState = animation.currentTime.to('ms').value;\n    }\n\n    if (pressAnimationPlayState >= MINIMUM_PRESS_MS) {\n      this.pressed = false;\n      return;\n    }\n\n    await new Promise((resolve) => {\n      setTimeout(resolve, MINIMUM_PRESS_MS - pressAnimationPlayState);\n    });\n\n    if (this.growAnimation !== animation) {\n      // A new press animation was started. The old animation was canceled and\n      // should not finish the pressed state.\n      return;\n    }\n\n    this.pressed = false;\n  }\n\n  /**\n   * Returns `true` if\n   *  - the ripple element is enabled\n   *  - the pointer is primary for the input type\n   *  - the pointer is the pointer that started the interaction, or will start\n   * the interaction\n   *  - the pointer is a touch, or the pointer state has the primary button\n   * held, or the pointer is hovering\n   */\n  private shouldReactToEvent(event: PointerEvent) {\n    if (this.disabled || !event.isPrimary) {\n      return false;\n    }\n\n    if (\n      this.rippleStartEvent &&\n      this.rippleStartEvent.pointerId !== event.pointerId\n    ) {\n      return false;\n    }\n\n    if (event.type === 'pointerenter' || event.type === 'pointerleave') {\n      return !this.isTouch(event);\n    }\n\n    const isPrimaryButton = event.buttons === 1;\n    return this.isTouch(event) || isPrimaryButton;\n  }\n\n  /**\n   * Check if the event is within the bounds of the element.\n   *\n   * This is only needed for the \"stuck\" contextmenu longpress on Chrome.\n   */\n  private inBounds({x, y}: PointerEvent) {\n    const {top, left, bottom, right} = this.getBoundingClientRect();\n    return x >= left && x <= right && y >= top && y <= bottom;\n  }\n\n  private isTouch({pointerType}: PointerEvent) {\n    return pointerType === 'touch';\n  }\n\n  /** @private */\n  async handleEvent(event: Event) {\n    if (FORCED_COLORS?.matches) {\n      // Skip event logic since the ripple is `display: none`.\n      return;\n    }\n\n    switch (event.type) {\n      case 'click':\n        this.handleClick();\n        break;\n      case 'contextmenu':\n        this.handleContextmenu();\n        break;\n      case 'pointercancel':\n        this.handlePointercancel(event as PointerEvent);\n        break;\n      case 'pointerdown':\n        await this.handlePointerdown(event as PointerEvent);\n        break;\n      case 'pointerenter':\n        this.handlePointerenter(event as PointerEvent);\n        break;\n      case 'pointerleave':\n        this.handlePointerleave(event as PointerEvent);\n        break;\n      case 'pointerup':\n        this.handlePointerup(event as PointerEvent);\n        break;\n      default:\n        break;\n    }\n  }\n\n  private onControlChange(prev: HTMLElement | null, next: HTMLElement | null) {\n    if (isServer) return;\n\n    for (const event of EVENTS) {\n      prev?.removeEventListener(event, this);\n      next?.addEventListener(event, this);\n    }\n  }\n}\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./ripple/internal/ripple-styles.css.\nimport {css} from 'lit';\nexport const styles = css`:host{display:flex;margin:auto;pointer-events:none}:host([disabled]){display:none}@media(forced-colors: active){:host{display:none}}:host,.surface{border-radius:inherit;position:absolute;inset:0;overflow:hidden}.surface{-webkit-tap-highlight-color:rgba(0,0,0,0)}.surface::before,.surface::after{content:\"\";opacity:0;position:absolute}.surface::before{background-color:var(--md-ripple-hover-color, var(--md-sys-color-on-surface, #1d1b20));inset:0;transition:opacity 15ms linear,background-color 15ms linear}.surface::after{background:radial-gradient(closest-side, var(--md-ripple-pressed-color, var(--md-sys-color-on-surface, #1d1b20)) max(100% - 70px, 65%), transparent 100%);transform-origin:center center;transition:opacity 375ms linear}.hovered::before{background-color:var(--md-ripple-hover-color, var(--md-sys-color-on-surface, #1d1b20));opacity:var(--md-ripple-hover-opacity, 0.08)}.pressed::after{opacity:var(--md-ripple-pressed-opacity, 0.12);transition-duration:105ms}\n`;\n", "/**\n * @license\n * Copyright 2022 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {CSSResultOrNative} from 'lit';\nimport {customElement} from 'lit/decorators.js';\n\nimport {Ripple} from './internal/ripple.js';\nimport {styles} from './internal/ripple-styles.js';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'md-ripple': MdRipple;\n  }\n}\n\n/**\n * @summary Ripples, also known as state layers, are visual indicators used to\n * communicate the status of a component or interactive element.\n *\n * @description A state layer is a semi-transparent covering on an element that\n * indicates its state. State layers provide a systematic approach to\n * visualizing states by using opacity. A layer can be applied to an entire\n * element or in a circular shape and only one state layer can be applied at a\n * given time.\n *\n * @final\n * @suppress {visibility}\n */\n@customElement('md-ripple')\nexport class MdRipple extends Ripple {\n  static override styles: CSSResultOrNative[] = [styles];\n}\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Accessibility Object Model reflective aria property name types.\n */\nexport type ARIAProperty = Exclude<keyof ARIAMixin, 'role'>;\n\n/**\n * Accessibility Object Model reflective aria properties.\n */\nexport const ARIA_PROPERTIES: ARIAProperty[] = [\n  'ariaAtomic',\n  'ariaAutoComplete',\n  'ariaBusy',\n  'ariaChecked',\n  'ariaColCount',\n  'ariaColIndex',\n  'ariaColSpan',\n  'ariaCurrent',\n  'ariaDisabled',\n  'ariaExpanded',\n  'ariaHasPopup',\n  'ariaHidden',\n  'ariaInvalid',\n  'ariaKeyShortcuts',\n  'ariaLabel',\n  'ariaLevel',\n  'ariaLive',\n  'ariaModal',\n  'ariaMultiLine',\n  'ariaMultiSelectable',\n  'ariaOrientation',\n  'ariaPlaceholder',\n  'ariaPosInSet',\n  'ariaPressed',\n  'ariaReadOnly',\n  'ariaRequired',\n  'ariaRoleDescription',\n  'ariaRowCount',\n  'ariaRowIndex',\n  'ariaRowSpan',\n  'ariaSelected',\n  'ariaSetSize',\n  'ariaSort',\n  'ariaValueMax',\n  'ariaValueMin',\n  'ariaValueNow',\n  'ariaValueText',\n];\n\n/**\n * Accessibility Object Model aria attribute name types.\n */\nexport type ARIAAttribute = ARIAPropertyToAttribute<ARIAProperty>;\n\n/**\n * Accessibility Object Model aria attributes.\n */\nexport const ARIA_ATTRIBUTES = ARIA_PROPERTIES.map(ariaPropertyToAttribute);\n\n/**\n * Checks if an attribute is one of the AOM aria attributes.\n *\n * @example\n * isAriaAttribute('aria-label'); // true\n *\n * @param attribute The attribute to check.\n * @return True if the attribute is an aria attribute, or false if not.\n */\nexport function isAriaAttribute(attribute: string): attribute is ARIAAttribute {\n  return attribute.startsWith('aria-');\n}\n\n/**\n * Converts an AOM aria property into its corresponding attribute.\n *\n * @example\n * ariaPropertyToAttribute('ariaLabel'); // 'aria-label'\n *\n * @param property The aria property.\n * @return The aria attribute.\n */\nexport function ariaPropertyToAttribute<K extends ARIAProperty | 'role'>(\n  property: K,\n) {\n  return (\n    property\n      .replace('aria', 'aria-')\n      // IDREF attributes also include an \"Element\" or \"Elements\" suffix\n      .replace(/Elements?/g, '')\n      .toLowerCase() as ARIAPropertyToAttribute<K>\n  );\n}\n\n// Converts an `ariaFoo` string type to an `aria-foo` string type.\ntype ARIAPropertyToAttribute<K extends string> =\n  K extends `aria${infer Suffix}Element${infer OptS}`\n    ? `aria-${Lowercase<Suffix>}`\n    : K extends `aria${infer Suffix}`\n    ? `aria-${Lowercase<Suffix>}`\n    : K;\n\n/**\n * An extension of `ARIAMixin` that enforces strict value types for aria\n * properties.\n *\n * This is needed for correct typing in render functions with lit analyzer.\n *\n * @example\n * render() {\n *   const {ariaLabel} = this as ARIAMixinStrict;\n *   return html`\n *     <button aria-label=${ariaLabel || nothing}>\n *       <slot></slot>\n *     </button>\n *   `;\n * }\n */\nexport interface ARIAMixinStrict extends ARIAMixin {\n  ariaAtomic: 'true' | 'false' | null;\n  ariaAutoComplete: 'none' | 'inline' | 'list' | 'both' | null;\n  ariaBusy: 'true' | 'false' | null;\n  ariaChecked: 'true' | 'false' | null;\n  ariaColCount: `${number}` | null;\n  ariaColIndex: `${number}` | null;\n  ariaColSpan: `${number}` | null;\n  ariaCurrent:\n    | 'page'\n    | 'step'\n    | 'location'\n    | 'date'\n    | 'time'\n    | 'true'\n    | 'false'\n    | null;\n  ariaDisabled: 'true' | 'false' | null;\n  ariaExpanded: 'true' | 'false' | null;\n  ariaHasPopup:\n    | 'false'\n    | 'true'\n    | 'menu'\n    | 'listbox'\n    | 'tree'\n    | 'grid'\n    | 'dialog'\n    | null;\n  ariaHidden: 'true' | 'false' | null;\n  ariaInvalid: 'true' | 'false' | null;\n  ariaKeyShortcuts: string | null;\n  ariaLabel: string | null;\n  ariaLevel: `${number}` | null;\n  ariaLive: 'assertive' | 'off' | 'polite' | null;\n  ariaModal: 'true' | 'false' | null;\n  ariaMultiLine: 'true' | 'false' | null;\n  ariaMultiSelectable: 'true' | 'false' | null;\n  ariaOrientation: 'horizontal' | 'vertical' | 'undefined' | null;\n  ariaPlaceholder: string | null;\n  ariaPosInSet: `${number}` | null;\n  ariaPressed: 'true' | 'false' | null;\n  ariaReadOnly: 'true' | 'false' | null;\n  ariaRequired: 'true' | 'false' | null;\n  ariaRoleDescription: string | null;\n  ariaRowCount: `${number}` | null;\n  ariaRowIndex: `${number}` | null;\n  ariaRowSpan: `${number}` | null;\n  ariaSelected: 'true' | 'false' | null;\n  ariaSetSize: `${number}` | null;\n  ariaSort: 'ascending' | 'descending' | 'none' | 'other' | null;\n  ariaValueMax: `${number}` | null;\n  ariaValueMin: `${number}` | null;\n  ariaValueNow: `${number}` | null;\n  ariaValueText: string | null;\n  role: ARIARole | null;\n}\n\n/**\n * Valid values for `role`.\n */\nexport type ARIARole =\n  | 'alert'\n  | 'alertdialog'\n  | 'button'\n  | 'checkbox'\n  | 'dialog'\n  | 'gridcell'\n  | 'link'\n  | 'log'\n  | 'marquee'\n  | 'menuitem'\n  | 'menuitemcheckbox'\n  | 'menuitemradio'\n  | 'option'\n  | 'progressbar'\n  | 'radio'\n  | 'scrollbar'\n  | 'searchbox'\n  | 'slider'\n  | 'spinbutton'\n  | 'status'\n  | 'switch'\n  | 'tab'\n  | 'tabpanel'\n  | 'textbox'\n  | 'timer'\n  | 'tooltip'\n  | 'treeitem'\n  | 'combobox'\n  | 'grid'\n  | 'listbox'\n  | 'menu'\n  | 'menubar'\n  | 'radiogroup'\n  | 'tablist'\n  | 'tree'\n  | 'treegrid'\n  | 'application'\n  | 'article'\n  | 'cell'\n  | 'columnheader'\n  | 'definition'\n  | 'directory'\n  | 'document'\n  | 'feed'\n  | 'figure'\n  | 'group'\n  | 'heading'\n  | 'img'\n  | 'list'\n  | 'listitem'\n  | 'math'\n  | 'none'\n  | 'note'\n  | 'presentation'\n  | 'region'\n  | 'row'\n  | 'rowgroup'\n  | 'rowheader'\n  | 'separator'\n  | 'table'\n  | 'term'\n  | 'text'\n  | 'toolbar'\n  | 'banner'\n  | 'complementary'\n  | 'contentinfo'\n  | 'form'\n  | 'main'\n  | 'navigation'\n  | 'region'\n  | 'search'\n  | 'doc-abstract'\n  | 'doc-acknowledgments'\n  | 'doc-afterword'\n  | 'doc-appendix'\n  | 'doc-backlink'\n  | 'doc-biblioentry'\n  | 'doc-bibliography'\n  | 'doc-biblioref'\n  | 'doc-chapter'\n  | 'doc-colophon'\n  | 'doc-conclusion'\n  | 'doc-cover'\n  | 'doc-credit'\n  | 'doc-credits'\n  | 'doc-dedication'\n  | 'doc-endnote'\n  | 'doc-endnotes'\n  | 'doc-epigraph'\n  | 'doc-epilogue'\n  | 'doc-errata'\n  | 'doc-example'\n  | 'doc-footnote'\n  | 'doc-foreword'\n  | 'doc-glossary'\n  | 'doc-glossref'\n  | 'doc-index'\n  | 'doc-introduction'\n  | 'doc-noteref'\n  | 'doc-notice'\n  | 'doc-pagebreak'\n  | 'doc-pagelist'\n  | 'doc-part'\n  | 'doc-preface'\n  | 'doc-prologue'\n  | 'doc-pullquote'\n  | 'doc-qna'\n  | 'doc-subtitle'\n  | 'doc-tip'\n  | 'doc-toc';\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {ReactiveElement} from 'lit';\n\nimport {ARIA_PROPERTIES, ariaPropertyToAttribute} from './aria.js';\n\n/**\n * Sets up a `ReactiveElement` constructor to enable updates when delegating\n * aria attributes. Elements may bind `this.aria*` properties to `aria-*`\n * attributes in their render functions.\n *\n * This function will:\n * - Call `requestUpdate()` when an aria attribute changes.\n * - Add `role=\"presentation\"` to the host.\n *\n * NOTE: The following features are not currently supported:\n * - Delegating IDREF attributes (ex: `aria-labelledby`, `aria-controls`)\n * - Delegating the `role` attribute\n *\n * @example\n * class XButton extends LitElement {\n *   static {\n *     requestUpdateOnAriaChange(XButton);\n *   }\n *\n *   protected override render() {\n *     return html`\n *       <button aria-label=${this.ariaLabel || nothing}>\n *         <slot></slot>\n *       </button>\n *     `;\n *   }\n * }\n *\n * @param ctor The `ReactiveElement` constructor to patch.\n */\nexport function requestUpdateOnAriaChange(ctor: typeof ReactiveElement) {\n  for (const ariaProperty of ARIA_PROPERTIES) {\n    ctor.createProperty(ariaProperty, {\n      attribute: ariaPropertyToAttribute(ariaProperty),\n      reflect: true,\n    });\n  }\n\n  ctor.addInitializer((element) => {\n    const controller = {\n      hostConnected() {\n        element.setAttribute('role', 'presentation');\n      },\n    };\n\n    element.addController(controller);\n  });\n}\n"],
  "mappings": "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",
  "names": ["i", "MdFocusRing", "State", "EVENTS", "o", "x", "styles", "i", "MdRipple", "styles"]
}
