{
  "version": 3,
  "sources": ["../../../node_modules/lit-html/src/async-directive.ts", "../../../node_modules/@lit-labs/motion/src/animate-controller.ts", "../../../node_modules/@lit-labs/motion/src/animate.ts", "../../../node_modules/@lit-labs/motion/src/position.ts", "../../../node_modules/@preact/signals-core/src/index.ts", "../../src/signals/signal-element.ts", "../../src/signals/drawer-open-state.ts", "../../src/signals/inert.ts", "../../src/components/nav-drawer.ts", "../../src/svg/material-design-logo.ts", "../../src/components/top-app-bar.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/**\n * Overview:\n *\n * This module is designed to add support for an async `setValue` API and\n * `disconnected` callback to directives with the least impact on the core\n * runtime or payload when that feature is not used.\n *\n * The strategy is to introduce a `AsyncDirective` subclass of\n * `Directive` that climbs the \"parent\" tree in its constructor to note which\n * branches of lit-html's \"logical tree\" of data structures contain such\n * directives and thus need to be crawled when a subtree is being cleared (or\n * manually disconnected) in order to run the `disconnected` callback.\n *\n * The \"nodes\" of the logical tree include Parts, TemplateInstances (for when a\n * TemplateResult is committed to a value of a ChildPart), and Directives; these\n * all implement a common interface called `DisconnectableChild`. Each has a\n * `_$parent` reference which is set during construction in the core code, and a\n * `_$disconnectableChildren` field which is initially undefined.\n *\n * The sparse tree created by means of the `AsyncDirective` constructor\n * crawling up the `_$parent` tree and placing a `_$disconnectableChildren` Set\n * on each parent that includes each child that contains a\n * `AsyncDirective` directly or transitively via its children. In order to\n * notify connection state changes and disconnect (or reconnect) a tree, the\n * `_$notifyConnectionChanged` API is patched onto ChildParts as a directive\n * climbs the parent tree, which is called by the core when clearing a part if\n * it exists. When called, that method iterates over the sparse tree of\n * Set<DisconnectableChildren> built up by AsyncDirectives, and calls\n * `_$notifyDirectiveConnectionChanged` on any directives that are encountered\n * in that tree, running the required callbacks.\n *\n * A given \"logical tree\" of lit-html data-structures might look like this:\n *\n *  ChildPart(N1) _$dC=[D2,T3]\n *   ._directive\n *     AsyncDirective(D2)\n *   ._value // user value was TemplateResult\n *     TemplateInstance(T3) _$dC=[A4,A6,N10,N12]\n *      ._$parts[]\n *        AttributePart(A4) _$dC=[D5]\n *         ._directives[]\n *           AsyncDirective(D5)\n *        AttributePart(A6) _$dC=[D7,D8]\n *         ._directives[]\n *           AsyncDirective(D7)\n *           Directive(D8) _$dC=[D9]\n *            ._directive\n *              AsyncDirective(D9)\n *        ChildPart(N10) _$dC=[D11]\n *         ._directive\n *           AsyncDirective(D11)\n *         ._value\n *           string\n *        ChildPart(N12) _$dC=[D13,N14,N16]\n *         ._directive\n *           AsyncDirective(D13)\n *         ._value // user value was iterable\n *           Array<ChildPart>\n *             ChildPart(N14) _$dC=[D15]\n *              ._value\n *                string\n *             ChildPart(N16) _$dC=[D17,T18]\n *              ._directive\n *                AsyncDirective(D17)\n *              ._value // user value was TemplateResult\n *                TemplateInstance(T18) _$dC=[A19,A21,N25]\n *                 ._$parts[]\n *                   AttributePart(A19) _$dC=[D20]\n *                    ._directives[]\n *                      AsyncDirective(D20)\n *                   AttributePart(A21) _$dC=[22,23]\n *                    ._directives[]\n *                      AsyncDirective(D22)\n *                      Directive(D23) _$dC=[D24]\n *                       ._directive\n *                         AsyncDirective(D24)\n *                   ChildPart(N25) _$dC=[D26]\n *                    ._directive\n *                      AsyncDirective(D26)\n *                    ._value\n *                      string\n *\n * Example 1: The directive in ChildPart(N12) updates and returns `nothing`. The\n * ChildPart will _clear() itself, and so we need to disconnect the \"value\" of\n * the ChildPart (but not its directive). In this case, when `_clear()` calls\n * `_$notifyConnectionChanged()`, we don't iterate all of the\n * _$disconnectableChildren, rather we do a value-specific disconnection: i.e.\n * since the _value was an Array<ChildPart> (because an iterable had been\n * committed), we iterate the array of ChildParts (N14, N16) and run\n * `setConnected` on them (which does recurse down the full tree of\n * `_$disconnectableChildren` below it, and also removes N14 and N16 from N12's\n * `_$disconnectableChildren`). Once the values have been disconnected, we then\n * check whether the ChildPart(N12)'s list of `_$disconnectableChildren` is empty\n * (and would remove it from its parent TemplateInstance(T3) if so), but since\n * it would still contain its directive D13, it stays in the disconnectable\n * tree.\n *\n * Example 2: In the course of Example 1, `setConnected` will reach\n * ChildPart(N16); in this case the entire part is being disconnected, so we\n * simply iterate all of N16's `_$disconnectableChildren` (D17,T18) and\n * recursively run `setConnected` on them. Note that we only remove children\n * from `_$disconnectableChildren` for the top-level values being disconnected\n * on a clear; doing this bookkeeping lower in the tree is wasteful since it's\n * all being thrown away.\n *\n * Example 3: If the LitElement containing the entire tree above becomes\n * disconnected, it will run `childPart.setConnected()` (which calls\n * `childPart._$notifyConnectionChanged()` if it exists); in this case, we\n * recursively run `setConnected()` over the entire tree, without removing any\n * children from `_$disconnectableChildren`, since this tree is required to\n * re-connect the tree, which does the same operation, simply passing\n * `isConnected: true` down the tree, signaling which callback to run.\n */\n\nimport {AttributePart, ChildPart, Disconnectable, Part} from './lit-html.js';\nimport {isSingleExpression} from './directive-helpers.js';\nimport {Directive, PartInfo, PartType} from './directive.js';\nexport * from './directive.js';\n\nconst DEV_MODE = true;\n\n/**\n * Recursively walks down the tree of Parts/TemplateInstances/Directives to set\n * the connected state of directives and run `disconnected`/ `reconnected`\n * callbacks.\n *\n * @return True if there were children to disconnect; false otherwise\n */\nconst notifyChildrenConnectedChanged = (\n  parent: Disconnectable,\n  isConnected: boolean\n): boolean => {\n  const children = parent._$disconnectableChildren;\n  if (children === undefined) {\n    return false;\n  }\n  for (const obj of children) {\n    // The existence of `_$notifyDirectiveConnectionChanged` is used as a \"brand\" to\n    // disambiguate AsyncDirectives from other DisconnectableChildren\n    // (as opposed to using an instanceof check to know when to call it); the\n    // redundancy of \"Directive\" in the API name is to avoid conflicting with\n    // `_$notifyConnectionChanged`, which exists `ChildParts` which are also in\n    // this list\n    // Disconnect Directive (and any nested directives contained within)\n    // This property needs to remain unminified.\n    (obj as AsyncDirective)['_$notifyDirectiveConnectionChanged']?.(\n      isConnected,\n      false\n    );\n    // Disconnect Part/TemplateInstance\n    notifyChildrenConnectedChanged(obj, isConnected);\n  }\n  return true;\n};\n\n/**\n * Removes the given child from its parent list of disconnectable children, and\n * if the parent list becomes empty as a result, removes the parent from its\n * parent, and so forth up the tree when that causes subsequent parent lists to\n * become empty.\n */\nconst removeDisconnectableFromParent = (obj: Disconnectable) => {\n  let parent, children;\n  do {\n    if ((parent = obj._$parent) === undefined) {\n      break;\n    }\n    children = parent._$disconnectableChildren!;\n    children.delete(obj);\n    obj = parent;\n  } while (children?.size === 0);\n};\n\nconst addDisconnectableToParent = (obj: Disconnectable) => {\n  // Climb the parent tree, creating a sparse tree of children needing\n  // disconnection\n  for (let parent; (parent = obj._$parent); obj = parent) {\n    let children = parent._$disconnectableChildren;\n    if (children === undefined) {\n      parent._$disconnectableChildren = children = new Set();\n    } else if (children.has(obj)) {\n      // Once we've reached a parent that already contains this child, we\n      // can short-circuit\n      break;\n    }\n    children.add(obj);\n    installDisconnectAPI(parent);\n  }\n};\n\n/**\n * Changes the parent reference of the ChildPart, and updates the sparse tree of\n * Disconnectable children accordingly.\n *\n * Note, this method will be patched onto ChildPart instances and called from\n * the core code when parts are moved between different parents.\n */\nfunction reparentDisconnectables(this: ChildPart, newParent: Disconnectable) {\n  if (this._$disconnectableChildren !== undefined) {\n    removeDisconnectableFromParent(this);\n    this._$parent = newParent;\n    addDisconnectableToParent(this);\n  } else {\n    this._$parent = newParent;\n  }\n}\n\n/**\n * Sets the connected state on any directives contained within the committed\n * value of this part (i.e. within a TemplateInstance or iterable of\n * ChildParts) and runs their `disconnected`/`reconnected`s, as well as within\n * any directives stored on the ChildPart (when `valueOnly` is false).\n *\n * `isClearingValue` should be passed as `true` on a top-level part that is\n * clearing itself, and not as a result of recursively disconnecting directives\n * as part of a `clear` operation higher up the tree. This both ensures that any\n * directive on this ChildPart that produced a value that caused the clear\n * operation is not disconnected, and also serves as a performance optimization\n * to avoid needless bookkeeping when a subtree is going away; when clearing a\n * subtree, only the top-most part need to remove itself from the parent.\n *\n * `fromPartIndex` is passed only in the case of a partial `_clear` running as a\n * result of truncating an iterable.\n *\n * Note, this method will be patched onto ChildPart instances and called from the\n * core code when parts are cleared or the connection state is changed by the\n * user.\n */\nfunction notifyChildPartConnectedChanged(\n  this: ChildPart,\n  isConnected: boolean,\n  isClearingValue = false,\n  fromPartIndex = 0\n) {\n  const value = this._$committedValue;\n  const children = this._$disconnectableChildren;\n  if (children === undefined || children.size === 0) {\n    return;\n  }\n  if (isClearingValue) {\n    if (Array.isArray(value)) {\n      // Iterable case: Any ChildParts created by the iterable should be\n      // disconnected and removed from this ChildPart's disconnectable\n      // children (starting at `fromPartIndex` in the case of truncation)\n      for (let i = fromPartIndex; i < value.length; i++) {\n        notifyChildrenConnectedChanged(value[i], false);\n        removeDisconnectableFromParent(value[i]);\n      }\n    } else if (value != null) {\n      // TemplateInstance case: If the value has disconnectable children (will\n      // only be in the case that it is a TemplateInstance), we disconnect it\n      // and remove it from this ChildPart's disconnectable children\n      notifyChildrenConnectedChanged(value as Disconnectable, false);\n      removeDisconnectableFromParent(value as Disconnectable);\n    }\n  } else {\n    notifyChildrenConnectedChanged(this, isConnected);\n  }\n}\n\n/**\n * Patches disconnection API onto ChildParts.\n */\nconst installDisconnectAPI = (obj: Disconnectable) => {\n  if ((obj as ChildPart).type == PartType.CHILD) {\n    (obj as ChildPart)._$notifyConnectionChanged ??=\n      notifyChildPartConnectedChanged;\n    (obj as ChildPart)._$reparentDisconnectables ??= reparentDisconnectables;\n  }\n};\n\n/**\n * An abstract `Directive` base class whose `disconnected` method will be\n * called when the part containing the directive is cleared as a result of\n * re-rendering, or when the user calls `part.setConnected(false)` on\n * a part that was previously rendered containing the directive (as happens\n * when e.g. a LitElement disconnects from the DOM).\n *\n * If `part.setConnected(true)` is subsequently called on a\n * containing part, the directive's `reconnected` method will be called prior\n * to its next `update`/`render` callbacks. When implementing `disconnected`,\n * `reconnected` should also be implemented to be compatible with reconnection.\n *\n * Note that updates may occur while the directive is disconnected. As such,\n * directives should generally check the `this.isConnected` flag during\n * render/update to determine whether it is safe to subscribe to resources\n * that may prevent garbage collection.\n */\nexport abstract class AsyncDirective extends Directive {\n  // As opposed to other Disconnectables, AsyncDirectives always get notified\n  // when the RootPart connection changes, so the public `isConnected`\n  // is a locally stored variable initialized via its part's getter and synced\n  // via `_$notifyDirectiveConnectionChanged`. This is cheaper than using\n  // the _$isConnected getter, which has to look back up the tree each time.\n  /**\n   * The connection state for this Directive.\n   */\n  isConnected!: boolean;\n\n  // @internal\n  override _$disconnectableChildren?: Set<Disconnectable> = undefined;\n  /**\n   * Initialize the part with internal fields\n   * @param part\n   * @param parent\n   * @param attributeIndex\n   */\n  override _$initialize(\n    part: Part,\n    parent: Disconnectable,\n    attributeIndex: number | undefined\n  ) {\n    super._$initialize(part, parent, attributeIndex);\n    addDisconnectableToParent(this);\n    this.isConnected = part._$isConnected;\n  }\n  // This property needs to remain unminified.\n  /**\n   * Called from the core code when a directive is going away from a part (in\n   * which case `shouldRemoveFromParent` should be true), and from the\n   * `setChildrenConnected` helper function when recursively changing the\n   * connection state of a tree (in which case `shouldRemoveFromParent` should\n   * be false).\n   *\n   * @param isConnected\n   * @param isClearingDirective - True when the directive itself is being\n   *     removed; false when the tree is being disconnected\n   * @internal\n   */\n  override ['_$notifyDirectiveConnectionChanged'](\n    isConnected: boolean,\n    isClearingDirective = true\n  ) {\n    if (isConnected !== this.isConnected) {\n      this.isConnected = isConnected;\n      if (isConnected) {\n        this.reconnected?.();\n      } else {\n        this.disconnected?.();\n      }\n    }\n    if (isClearingDirective) {\n      notifyChildrenConnectedChanged(this, isConnected);\n      removeDisconnectableFromParent(this);\n    }\n  }\n\n  /**\n   * Sets the value of the directive's Part outside the normal `update`/`render`\n   * lifecycle of a directive.\n   *\n   * This method should not be called synchronously from a directive's `update`\n   * or `render`.\n   *\n   * @param directive The directive to update\n   * @param value The value to set\n   */\n  setValue(value: unknown) {\n    if (isSingleExpression(this.__part as unknown as PartInfo)) {\n      this.__part._$setValue(value, this);\n    } else {\n      // this.__attributeIndex will be defined in this case, but\n      // assert it in dev mode\n      if (DEV_MODE && this.__attributeIndex === undefined) {\n        throw new Error(`Expected this.__attributeIndex to be a number`);\n      }\n      const newValues = [...(this.__part._$committedValue as Array<unknown>)];\n      newValues[this.__attributeIndex!] = value;\n      (this.__part as AttributePart)._$setValue(newValues, this, 0);\n    }\n  }\n\n  /**\n   * User callbacks for implementing logic to release any resources/subscriptions\n   * that may have been retained by this directive. Since directives may also be\n   * re-connected, `reconnected` should also be implemented to restore the\n   * working state of the directive prior to the next render.\n   */\n  protected disconnected() {}\n  protected reconnected() {}\n}\n", "import {ReactiveControllerHost} from 'lit';\nimport {Animate, Options} from './animate.js';\n\nexport const controllerMap: WeakMap<ReactiveControllerHost, AnimateController> =\n  new WeakMap();\n\n/**\n * AnimateController can be used to provide default configuration options to all\n * `animate()` directives in a given component.\n *\n * It also provides control over all the `animate()` animations within a given\n * component, for example, `this.animateController.pause()` pauses all animations.\n */\nexport class AnimateController {\n  host: ReactiveControllerHost;\n  defaultOptions: Options;\n  startPaused = false;\n  disabled = false;\n  onComplete?: () => void;\n\n  constructor(\n    host: ReactiveControllerHost,\n    options: {\n      defaultOptions?: Options;\n      startPaused?: boolean;\n      disabled?: boolean;\n      onComplete?: () => void;\n    }\n  ) {\n    this.host = host;\n    this.defaultOptions = options.defaultOptions || {};\n    this.startPaused = !!options.startPaused;\n    this.disabled = !!options.disabled;\n    this.onComplete = options.onComplete;\n    controllerMap.set(this.host, this);\n  }\n\n  /**\n   * Set of active `animate()` directives in the host component\n   */\n  clients: Set<Animate> = new Set();\n\n  protected pendingComplete = false;\n\n  async add(animate: Animate) {\n    this.clients.add(animate);\n    if (this.startPaused) {\n      animate.webAnimation?.pause();\n    }\n    this.pendingComplete = true;\n    await animate.finished;\n    if (this.pendingComplete && !this.isAnimating) {\n      this.pendingComplete = false;\n      this.onComplete?.();\n    }\n  }\n\n  remove(animate: Animate) {\n    this.clients.delete(animate);\n  }\n\n  /**\n   * Pauses all animations running in the host component.\n   */\n  pause() {\n    this.clients.forEach((f) => f.webAnimation?.pause());\n  }\n\n  /**\n   * Plays all active animations in the host component.\n   */\n  play() {\n    this.clients.forEach((f) => f.webAnimation?.play());\n  }\n\n  cancel() {\n    this.clients.forEach((f) => f.webAnimation?.cancel());\n    this.clients.clear();\n  }\n\n  finish() {\n    this.clients.forEach((f) => f.webAnimation?.finish());\n    this.clients.clear();\n  }\n\n  /**\n   * Toggles the play/pause state of all active `animate()` animations in the host component.\n   */\n  togglePlay() {\n    if (this.isPlaying) {\n      this.pause();\n    } else {\n      this.play();\n    }\n  }\n\n  /**\n   * Returns true if the host component has any active `animate()` animations.\n   */\n  get isAnimating() {\n    return this.clients.size > 0;\n  }\n\n  /**\n   * Returns true if the host component has any playing `animate()` animations.\n   */\n  get isPlaying() {\n    return Array.from(this.clients).some(\n      (a) => a.webAnimation?.playState === 'running'\n    );\n  }\n\n  async finished() {\n    await Promise.all(Array.from(this.clients).map((f) => f.finished));\n  }\n}\n", "import {LitElement, ReactiveControllerHost} from 'lit';\nimport {nothing, AttributePart} from 'lit/html.js';\nimport {directive, PartInfo, PartType} from 'lit/directive.js';\nimport {AsyncDirective} from 'lit/async-directive.js';\nimport {controllerMap} from './animate-controller.js';\nexport {AnimateController} from './animate-controller.js';\n\nexport type CSSValues = {\n  [index: string]: string | number;\n};\n\nexport type CSSPropertiesList = string[];\n\n// zIndex for \"in\" animations\nlet z = 0;\n\nconst disconnectedProps: Map<unknown, CSSValues> = new Map();\nconst renderedHosts: WeakSet<ReactiveControllerHost> = new WeakSet();\n\nexport type Options = {\n  // Options used for the animation\n  keyframeOptions?: KeyframeAnimationOptions;\n  // List of css properties to animate\n  properties?: CSSPropertiesList;\n  // if `true`, the `animate` is disabled\n  disabled?: boolean;\n  // Callback run to produce a value which is dirty checked to determine if animation should run.\n  guard?: () => unknown;\n  // Id for this `animate`; used to link to other `animate`s via e.g. `inId`\n  id?: unknown;\n  // Set to the `animate` id to map to when rendering \"in\"\n  inId?: unknown;\n  // Keyframes to use when animating \"in\"\n  in?: Keyframe[];\n  // Keyframes to use when animating \"out\"\n  out?: Keyframe[];\n  // Set to true to match DOM position when animating \"out\"\n  stabilizeOut?: boolean;\n  // Skips animation when initially rendering\n  skipInitial?: boolean;\n  // Callback run when the `animate` animation starts\n  onStart?: (animate: Animate) => void;\n  // Callback run when the animation is complete\n  onComplete?: (animate: Animate) => void;\n  // Callback run to modify frames used to animate\n  onFrames?: (animate: Animate) => Keyframe[] | undefined;\n};\n\nexport const animationFrame = () =>\n  new Promise((resolve) => requestAnimationFrame(resolve));\n\n// Presets for animating \"in\" and \"out\" of the DOM.\nexport const flyBelow = [{transform: 'translateY(100%) scale(0)', opacity: 0}];\nexport const flyAbove = [{transform: 'translateY(-100%) scale(0)', opacity: 0}];\nexport const flyLeft = [{transform: 'translateX(-100%) scale(0)', opacity: 0}];\nexport const flyRight = [{transform: 'translateX(100%) scale(0)', opacity: 0}];\nexport const none = [{}];\nexport const fadeOut = [{opacity: 0}];\nexport const fade = fadeOut;\nexport const fadeIn = [{opacity: 0}, {opacity: 1}];\nexport const fadeInSlow = [\n  {opacity: 0},\n  {opacity: 0.25, offset: 0.75},\n  {opacity: 1},\n];\n\nconst diffOp = (a: number, b: number) => {\n  const v = a - b;\n  return v === 0 ? undefined : v;\n};\nconst quotientOp = (a: number, b: number) => {\n  const v = a / b;\n  return v === 1 ? undefined : v;\n};\n\n// Computes a transform given a before and after input for given properties.\nexport const transformProps = {\n  left: (a: number, b: number) => {\n    const value = diffOp(a, b);\n    return {value, transform: value && `translateX(${value}px)`};\n  },\n  top: (a: number, b: number) => {\n    const value = diffOp(a, b);\n    return {value, transform: value && `translateY(${value}px)`};\n  },\n  width: (a: number, b: number) => {\n    const value = quotientOp(a, b);\n    return {value, transform: value && `scaleX(${value})`};\n  },\n  height: (a: number, b: number) => {\n    const value = quotientOp(a, b);\n    return {value, transform: value && `scaleY(${value})`};\n  },\n};\n\nexport const defaultKeyframeOptions: KeyframeAnimationOptions = {\n  duration: 333,\n  easing: `ease-in-out`,\n};\n\nexport const defaultCssProperties: CSSPropertiesList = [\n  'left',\n  'top',\n  'width',\n  'height',\n  'opacity',\n  'color',\n  'background',\n];\n\n// Dirty checks the value received from the `guard` option.\nconst isDirty = (value: unknown, previous: unknown) => {\n  if (Array.isArray(value)) {\n    // Dirty-check arrays by item\n    if (\n      Array.isArray(previous) &&\n      previous.length === value.length &&\n      value.every((v, i) => v === (previous as Array<unknown>)[i])\n    ) {\n      return false;\n    }\n  } else if (previous === value) {\n    // Dirty-check non-arrays by identity\n    return false;\n  }\n  return true;\n};\n\n// Mapping of node on which the `animate` directive is used to the `animate` directive.\n// Used to get the ancestor `animate` animations (which are used to modify\n// `animate` transforms), done by ascending the DOM.\nconst nodeToAnimateMap: WeakMap<Node, Animate> = new WeakMap();\n\n/**\n * `animate` directive class. Animates a node's position between renders.\n */\nexport class Animate extends AsyncDirective {\n  private _host?: LitElement;\n  private _fromValues?: CSSValues;\n  private _parentNode: Element | null = null;\n  private _nextSibling: Node | null = null;\n  private _shouldAnimate = true;\n  private _previousValue: unknown;\n  private _styles?: string | undefined | null;\n  element!: HTMLElement;\n\n  shouldLog = false;\n  animatingProperties?: CSSValues;\n  frames?: Keyframe[];\n  webAnimation?: Animation;\n  options!: Options;\n  optionsOrCallback?: (() => Options) | Options;\n\n  finished!: Promise<void>;\n  private _resolveFinished?: () => void;\n\n  constructor(part: PartInfo) {\n    super(part);\n    if (part.type === PartType.CHILD) {\n      throw new Error(\n        'The `animate` directive must be used in attribute position.'\n      );\n    }\n    this.createFinished();\n  }\n\n  createFinished() {\n    this.resolveFinished?.();\n    this.finished = new Promise((r) => {\n      this._resolveFinished = r;\n    });\n  }\n\n  async resolveFinished() {\n    this._resolveFinished?.();\n    this._resolveFinished = undefined;\n  }\n\n  render(_options?: (() => Options) | Options) {\n    return nothing;\n  }\n\n  getController() {\n    return controllerMap.get(this._host!);\n  }\n\n  isDisabled() {\n    return this.options.disabled || this.getController()?.disabled;\n  }\n\n  override update(part: AttributePart, [options]: Parameters<this['render']>) {\n    const firstUpdate = this._host === undefined;\n    if (firstUpdate) {\n      this._host = part.options?.host as LitElement;\n      this._host.addController(this);\n      this.element = part.element;\n      nodeToAnimateMap.set(this.element, this);\n    }\n    this.optionsOrCallback = options;\n    if (firstUpdate || typeof options !== 'function') {\n      this._setOptions(options as Options);\n    }\n    return this.render(options);\n  }\n\n  // TODO(sorvell): instead of a function/object, just use an object that the\n  // user can mutate and create accessors for the data that do lookups as needed.\n  // We're doing this every hostUpdate anyway and these lookups are fast.\n  private _setOptions(options?: Options) {\n    options = options ?? {};\n    // Mixin controller options.\n    const controller = this.getController();\n    if (controller !== undefined) {\n      options = {\n        ...controller.defaultOptions,\n        ...options,\n      };\n      options.keyframeOptions = {\n        ...controller.defaultOptions.keyframeOptions,\n        ...options.keyframeOptions,\n      };\n    }\n    // Ensure there are some properties to animation and some animation options.\n    options!.properties ??= defaultCssProperties;\n    this.options = options;\n  }\n\n  // Measures and returns metrics for the element's bounding box and styling\n  private _measure() {\n    const props: CSSValues = {};\n    const bounds = this.element.getBoundingClientRect();\n    const computedStyle = getComputedStyle(this.element);\n    this.options.properties!.forEach((p) => {\n      const v =\n        bounds[p as keyof typeof bounds] ??\n        (!transformProps[p as keyof typeof transformProps]\n          ? computedStyle[p as keyof CSSStyleDeclaration]\n          : undefined);\n      const asNum = Number(v);\n      props[p] = isNaN(asNum) ? String(v) : asNum;\n    });\n    return props;\n  }\n\n  // Returns true if a `animate` should be started.\n  private _canStart() {\n    let dirty = true,\n      value = undefined;\n    if (this.options.guard) {\n      value = this.options.guard();\n      dirty = isDirty(value, this._previousValue);\n    }\n    this._shouldAnimate =\n      this._host!.hasUpdated &&\n      !this.isDisabled() &&\n      !this.isAnimating() &&\n      dirty &&\n      this.element.isConnected;\n    if (this._shouldAnimate) {\n      // Copy the value if it's an array so that if it's mutated we don't forget\n      // what the previous values were.\n      this._previousValue = Array.isArray(value) ? Array.from(value) : value;\n    }\n    return this._shouldAnimate;\n  }\n\n  hostUpdate() {\n    // TODO(sorvell): If options will change that will affect measuring,\n    // then the user must pass a callback which can be called at update time.\n    if (typeof this.optionsOrCallback === 'function') {\n      this._setOptions(this.optionsOrCallback());\n    }\n    if (this._canStart()) {\n      this._fromValues = this._measure();\n      // Record parent and nextSibling used to re-attach node when animating \"out\"\n      this._parentNode =\n        this._parentNode ?? (this.element.parentNode as Element);\n      this._nextSibling = this.element.nextSibling;\n    }\n  }\n\n  async hostUpdated() {\n    if (\n      !this._shouldAnimate ||\n      !this.element.isConnected ||\n      (this.options.skipInitial && !this.isHostRendered)\n    ) {\n      return;\n    }\n    this.prepare();\n    // Wait for rendering so any sub-elements have a chance to render.\n    await animationFrame;\n    let frames: Keyframe[] | undefined;\n    const ancestors = this._getAncestors();\n    // These inherit from ancestors. This allows easier synchronization of\n    // child `animate`s within ancestor `animate`s.\n    const animationOptions = this._calculateKeyframeOptions(\n      this.options.keyframeOptions,\n      ancestors\n    );\n    const toValues = this._measure();\n    // Normal or inverse scale\n    if (this._fromValues !== undefined) {\n      const {from, to} = this._applyAncestorAdjustments(\n        this._fromValues,\n        toValues,\n        ancestors\n      );\n      this.log('measured', [this._fromValues, toValues, from, to]);\n      frames = this.calculateKeyframes(from, to);\n      // \"In\" `animate`.\n    } else {\n      const disconnected = disconnectedProps.get(this.options.inId);\n      if (disconnected) {\n        // use disconnected data only once.\n        disconnectedProps.delete(this.options.inId);\n        const {from, to} = this._applyAncestorAdjustments(\n          disconnected!,\n          toValues,\n          ancestors\n        );\n        frames = this.calculateKeyframes(from, to);\n        // \"merge\" with \"in\" frames\n        frames = this.options.in\n          ? [\n              {...this.options.in[0], ...frames![0]},\n              ...this.options.in.slice(1),\n              frames![1],\n            ]\n          : frames;\n        // adjust z so always on top...\n        z++;\n        frames!.forEach((f) => (f.zIndex = z));\n      } else if (this.options.in) {\n        frames = [...this.options.in, {}];\n      }\n    }\n    this.animate(frames, animationOptions);\n  }\n\n  resetStyles() {\n    if (this._styles !== undefined) {\n      this.element.setAttribute('style', this._styles ?? '');\n      this._styles = undefined;\n    }\n  }\n\n  commitStyles() {\n    this._styles = this.element.getAttribute('style');\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (this.webAnimation as any)?.commitStyles();\n    this.webAnimation?.cancel();\n  }\n\n  override reconnected() {}\n\n  // Experimental animate out functionality.\n  override async disconnected() {\n    if (!this._shouldAnimate) {\n      return;\n    }\n    if (this.options.id !== undefined) {\n      disconnectedProps.set(this.options.id, this._fromValues!);\n    }\n    if (this.options.out === undefined) {\n      return;\n    }\n    this.prepare();\n    await animationFrame();\n    if (this._parentNode?.isConnected) {\n      // put element back in DOM\n      const ref =\n        this._nextSibling && this._nextSibling.parentNode === this._parentNode\n          ? this._nextSibling\n          : null;\n      this._parentNode.insertBefore(this.element, ref);\n      // Optionally move element back to its position before it was detached.\n      if (this.options.stabilizeOut) {\n        // Measure current position after re-attaching.\n        const shifted = this._measure();\n        this.log('stabilizing out');\n        // TODO(sorvell): these nudges could conflict with existing styling\n        // or animation but setting left/top should be rare, especially via\n        // animation.\n        const left =\n          (this._fromValues!.left as number) - (shifted.left as number);\n        const top = (this._fromValues!.top as number) - (shifted.top as number);\n        const isStatic = getComputedStyle(this.element).position === 'static';\n        if (isStatic && (left !== 0 || top !== 0)) {\n          this.element.style.position = 'relative';\n        }\n        if (left !== 0) {\n          this.element.style.left = left + 'px';\n        }\n        if (top !== 0) {\n          this.element.style.top = top + 'px';\n        }\n      }\n    }\n    // These inherit from ancestors. This allows easier synchronization of\n    // child `animate`s within ancestor `animate`s.\n    const keyframeOptions = this._calculateKeyframeOptions(\n      this.options.keyframeOptions\n    );\n    await this.animate(this.options.out, keyframeOptions);\n    this.element.remove();\n  }\n\n  prepare() {\n    this.createFinished();\n  }\n\n  start() {\n    this.options.onStart?.(this);\n  }\n\n  didFinish(didAnimate: boolean) {\n    if (didAnimate) {\n      this.options.onComplete?.(this);\n    }\n    this._fromValues = undefined;\n    this.animatingProperties = undefined;\n    this.frames = undefined;\n    this.resolveFinished();\n  }\n\n  private _getAncestors() {\n    const ancestors = [];\n    for (\n      let p: Node | null | undefined = this.element.parentNode;\n      p;\n      p = p?.parentNode\n    ) {\n      const a = nodeToAnimateMap.get(p!);\n      if (a && !a.isDisabled() && a) {\n        ancestors.push(a);\n      }\n    }\n    return ancestors;\n  }\n\n  protected get isHostRendered() {\n    const hostRendered = renderedHosts.has(this._host!);\n    if (!hostRendered) {\n      this._host!.updateComplete.then(() => {\n        renderedHosts.add(this._host!);\n      });\n    }\n    return hostRendered;\n  }\n\n  private _calculateKeyframeOptions(\n    options: KeyframeAnimationOptions | undefined,\n    ancestors: Animate[] = this._getAncestors()\n  ) {\n    // merges this `animate`'s options over ancestor options over defaults\n    const keyframeOptions = {...defaultKeyframeOptions};\n    ancestors.forEach((a) =>\n      Object.assign(keyframeOptions, a.options.keyframeOptions)\n    );\n    Object.assign(keyframeOptions, options);\n    return keyframeOptions;\n  }\n\n  // Adjust position based on ancestor scaling.\n  private _applyAncestorAdjustments(\n    from: CSSValues,\n    to: CSSValues,\n    ancestors: Animate[]\n  ) {\n    from = {...from};\n    to = {...to};\n    const ancestorProps = ancestors\n      .map((a) => a.animatingProperties)\n      .filter((a) => a !== undefined) as CSSValues[];\n    let dScaleX = 1;\n    let dScaleY = 1;\n    if (ancestorProps !== undefined) {\n      // gather scaling data for ancestors\n      ancestorProps.forEach((a) => {\n        if (a.width) {\n          dScaleX = dScaleX / (a.width as number);\n        }\n        if (a.height) {\n          dScaleY = dScaleY / (a.height as number);\n        }\n      });\n      // Move position by ancestor scaling amount.\n      if (from.left !== undefined && to.left !== undefined) {\n        from.left = dScaleX * (from.left as number);\n        to.left = dScaleX * (to.left as number);\n      }\n      if (from.top !== undefined && to.top !== undefined) {\n        from.top = dScaleY * (from.top as number);\n        to.top = dScaleY * (to.top as number);\n      }\n    }\n    return {from, to};\n  }\n\n  protected calculateKeyframes(from: CSSValues, to: CSSValues, center = false) {\n    const fromFrame: Keyframe = {};\n    const toFrame: Keyframe = {};\n    let hasFrames = false;\n    const props: CSSValues = {};\n    for (const p in to) {\n      const f = from[p],\n        t = to[p];\n      if (p in transformProps) {\n        const tp = transformProps[p as keyof typeof transformProps];\n        if (f === undefined || t === undefined) {\n          continue;\n        }\n        const op = tp(f as number, t as number);\n        if (op.transform !== undefined) {\n          props[p] = op.value!;\n          hasFrames = true;\n          fromFrame.transform = `${fromFrame.transform ?? ''} ${op.transform}`;\n        }\n      } else if (f !== t && f !== undefined && t !== undefined) {\n        hasFrames = true;\n        fromFrame[p] = f;\n        toFrame[p] = t;\n      }\n    }\n    fromFrame.transformOrigin = toFrame.transformOrigin = center\n      ? 'center center'\n      : 'top left';\n    this.animatingProperties = props;\n    return hasFrames ? [fromFrame, toFrame] : undefined;\n  }\n\n  protected async animate(\n    frames: Keyframe[] | undefined,\n    options = this.options.keyframeOptions\n  ) {\n    this.start();\n    this.frames = frames;\n    let didAnimate = false;\n    if (!this.isAnimating() && !this.isDisabled()) {\n      if (this.options.onFrames) {\n        this.frames = frames = this.options.onFrames(this);\n        this.log('modified frames', frames);\n      }\n      if (frames !== undefined) {\n        this.log('animate', [frames, options]);\n        didAnimate = true;\n        this.webAnimation = this.element.animate(frames, options);\n        const controller = this.getController();\n        controller?.add(this);\n        try {\n          await this.webAnimation.finished;\n        } catch (e) {\n          // cancelled.\n        }\n        controller?.remove(this);\n      }\n    }\n    this.didFinish(didAnimate);\n    return didAnimate;\n  }\n\n  protected isAnimating() {\n    return (\n      this.webAnimation?.playState === 'running' || this.webAnimation?.pending\n    );\n  }\n\n  log(message: string, data?: unknown) {\n    if (this.shouldLog && !this.isDisabled()) {\n      console.log(message, this.options.id, data);\n    }\n  }\n}\n\n/**\n * The `animate` directive animates a node's layout between renders.\n * It will perform a \"tweening\" animation between the two states based on\n * the options given. In addition, elements can animate when they initially\n * render to DOM and when they are removed.\n *\n * Options include:\n * * animationOptions:  configure animation via standard KeyframeAnimationOptions\n * * properties: list of properties to animate, defaults to\n * ['left', 'top','width', 'height', 'opacity', 'color', 'background']\n * * disabled: disables animation\n * * guard: function producing values that must change for the `animate` to run\n * * in: keyframes to use when animating in\n * * out: keyframes to use when animating out\n * * skipInitial: skip animating in the first time\n * * id: used to link to other `animate`s via `inId`\n * * inId: id of the `animate` to render from when animating in\n * * onStart: run when the `animate` starts\n * * onComplete: run when the `animate` completes\n * * onFrames: run when the frames are produces, use to modify frames\n */\nexport const animate = directive(Animate);\n", "import {LitElement} from 'lit';\nimport {nothing, AttributePart} from 'lit/html.js';\nimport {directive, PartInfo, PartType} from 'lit/directive.js';\nimport {AsyncDirective} from 'lit/async-directive.js';\n\ninterface Positionables {\n  readonly bottom: number;\n  readonly height: number;\n  readonly left: number;\n  readonly right: number;\n  readonly top: number;\n  readonly width: number;\n}\n\ntype Ref = {value: HTMLElement};\nexport type TargetCallbackOrRef = (() => HTMLElement) | Ref;\n\nexport type Positions = Array<keyof Positionables>;\n\nconst positionedPoints = ['top', 'right', 'bottom', 'left'];\n\nexport class Position extends AsyncDirective {\n  private _host?: LitElement;\n  private _element?: Element;\n  private _targetCallbackOrRef!: TargetCallbackOrRef;\n  private _positions?: Positions;\n\n  constructor(part: PartInfo) {\n    super(part);\n    if (part.type !== PartType.ELEMENT) {\n      throw new Error(\n        'The `position` directive must be used in attribute position.'\n      );\n    }\n  }\n\n  render(_targetCallbackOrRef: TargetCallbackOrRef, _positions: Positions) {\n    return nothing;\n  }\n\n  override update(\n    part: AttributePart,\n    [target, positions]: Parameters<this['render']>\n  ) {\n    if (this._host === undefined) {\n      this._host = part.options?.host as LitElement;\n      this._host.addController(this);\n    }\n    this._element = part.element;\n    this._targetCallbackOrRef = target;\n    this._positions = positions ?? ['left', 'top', 'width', 'height'];\n    return this.render(target, positions);\n  }\n\n  hostUpdated() {\n    this._position();\n  }\n\n  private _position() {\n    const target =\n      typeof this._targetCallbackOrRef === 'function'\n        ? this._targetCallbackOrRef()\n        : this._targetCallbackOrRef?.value;\n    const parent = target.offsetParent;\n    if (target === undefined || !parent) {\n      return;\n    }\n    const tr = target.getBoundingClientRect();\n    const pr = parent.getBoundingClientRect();\n    this._positions?.forEach((p) => {\n      const x = positionedPoints.includes(p) ? tr[p] - pr[p] : tr[p];\n      (this._element as HTMLElement).style[p] = `${x}px`;\n    });\n  }\n}\n\n/**\n * Positions and sizes the element on which the `position()` directive is used\n * relative to the given target element.\n */\nexport const position = directive(Position);\n", "function cycleDetected(): never {\n\tthrow new Error(\"Cycle detected\");\n}\nfunction mutationDetected(): never {\n\tthrow new Error(\"Computed cannot have side-effects\");\n}\n\n// Flags for Computed and Effect.\nconst RUNNING = 1 << 0;\nconst NOTIFIED = 1 << 1;\nconst OUTDATED = 1 << 2;\nconst DISPOSED = 1 << 3;\nconst HAS_ERROR = 1 << 4;\nconst TRACKING = 1 << 5;\n\n// A linked list node used to track dependencies (sources) and dependents (targets).\n// Also used to remember the source's last version number that the target saw.\ntype Node = {\n\t// A source whose value the target depends on.\n\t_source: Signal;\n\t_prevSource?: Node;\n\t_nextSource?: Node;\n\n\t// A target that depends on the source and should be notified when the source changes.\n\t_target: Computed | Effect;\n\t_prevTarget?: Node;\n\t_nextTarget?: Node;\n\n\t// The version number of the source that target has last seen. We use version numbers\n\t// instead of storing the source value, because source values can take arbitrary amount\n\t// of memory, and computeds could hang on to them forever because they're lazily evaluated.\n\t// Use the special value -1 to mark potentially unused but recyclable nodes.\n\t_version: number;\n\n\t// Used to remember & roll back the source's previous `._node` value when entering &\n\t// exiting a new evaluation context.\n\t_rollbackNode?: Node;\n};\n\nfunction startBatch() {\n\tbatchDepth++;\n}\n\nfunction endBatch() {\n\tif (batchDepth > 1) {\n\t\tbatchDepth--;\n\t\treturn;\n\t}\n\n\tlet error: unknown;\n\tlet hasError = false;\n\n\twhile (batchedEffect !== undefined) {\n\t\tlet effect: Effect | undefined = batchedEffect;\n\t\tbatchedEffect = undefined;\n\n\t\tbatchIteration++;\n\n\t\twhile (effect !== undefined) {\n\t\t\tconst next: Effect | undefined = effect._nextBatchedEffect;\n\t\t\teffect._nextBatchedEffect = undefined;\n\t\t\teffect._flags &= ~NOTIFIED;\n\n\t\t\tif (!(effect._flags & DISPOSED) && needsToRecompute(effect)) {\n\t\t\t\ttry {\n\t\t\t\t\teffect._callback();\n\t\t\t\t} catch (err) {\n\t\t\t\t\tif (!hasError) {\n\t\t\t\t\t\terror = err;\n\t\t\t\t\t\thasError = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\teffect = next;\n\t\t}\n\t}\n\tbatchIteration = 0;\n\tbatchDepth--;\n\n\tif (hasError) {\n\t\tthrow error;\n\t}\n}\n\nfunction batch<T>(callback: () => T): T {\n\tif (batchDepth > 0) {\n\t\treturn callback();\n\t}\n\t/*@__INLINE__**/ startBatch();\n\ttry {\n\t\treturn callback();\n\t} finally {\n\t\tendBatch();\n\t}\n}\n\n// Currently evaluated computed or effect.\nlet evalContext: Computed | Effect | undefined = undefined;\n\n// Effects collected into a batch.\nlet batchedEffect: Effect | undefined = undefined;\nlet batchDepth = 0;\nlet batchIteration = 0;\n\n// A global version number for signals, used for fast-pathing repeated\n// computed.peek()/computed.value calls when nothing has changed globally.\nlet globalVersion = 0;\n\nfunction addDependency(signal: Signal): Node | undefined {\n\tif (evalContext === undefined) {\n\t\treturn undefined;\n\t}\n\n\tlet node = signal._node;\n\tif (node === undefined || node._target !== evalContext) {\n\t\t/**\n\t\t * `signal` is a new dependency. Create a new dependency node, and set it\n\t\t * as the tail of the current context's dependency list. e.g:\n\t\t *\n\t\t * { A <-> B       }\n\t\t *         ↑     ↑\n\t\t *        tail  node (new)\n\t\t *               ↓\n\t\t * { A <-> B <-> C }\n\t\t *               ↑\n\t\t *              tail (evalContext._sources)\n\t\t */\n\t\tnode = {\n\t\t\t_version: 0,\n\t\t\t_source: signal,\n\t\t\t_prevSource: evalContext._sources,\n\t\t\t_nextSource: undefined,\n\t\t\t_target: evalContext,\n\t\t\t_prevTarget: undefined,\n\t\t\t_nextTarget: undefined,\n\t\t\t_rollbackNode: node,\n\t\t};\n\n\t\tif (evalContext._sources !== undefined) {\n\t\t\tevalContext._sources._nextSource = node;\n\t\t}\n\t\tevalContext._sources = node;\n\t\tsignal._node = node;\n\n\t\t// Subscribe to change notifications from this dependency if we're in an effect\n\t\t// OR evaluating a computed signal that in turn has subscribers.\n\t\tif (evalContext._flags & TRACKING) {\n\t\t\tsignal._subscribe(node);\n\t\t}\n\t\treturn node;\n\t} else if (node._version === -1) {\n\t\t// `signal` is an existing dependency from a previous evaluation. Reuse it.\n\t\tnode._version = 0;\n\n\t\t/**\n\t\t * If `node` is not already the current tail of the dependency list (i.e.\n\t\t * there is a next node in the list), then make the `node` the new tail. e.g:\n\t\t *\n\t\t * { A <-> B <-> C <-> D }\n\t\t *         ↑           ↑\n\t\t *        node   ┌─── tail (evalContext._sources)\n\t\t *         └─────│─────┐\n\t\t *               ↓     ↓\n\t\t * { A <-> C <-> D <-> B }\n\t\t *                     ↑\n\t\t *                    tail (evalContext._sources)\n\t\t */\n\t\tif (node._nextSource !== undefined) {\n\t\t\tnode._nextSource._prevSource = node._prevSource;\n\n\t\t\tif (node._prevSource !== undefined) {\n\t\t\t\tnode._prevSource._nextSource = node._nextSource;\n\t\t\t}\n\n\t\t\tnode._prevSource = evalContext._sources;\n\t\t\tnode._nextSource = undefined;\n\n\t\t\tevalContext._sources!._nextSource = node;\n\t\t\tevalContext._sources = node;\n\t\t}\n\n\t\t// We can assume that the currently evaluated effect / computed signal is already\n\t\t// subscribed to change notifications from `signal` if needed.\n\t\treturn node;\n\t}\n\treturn undefined;\n}\n\n// @ts-ignore internal Signal is viewed as a function\ndeclare class Signal<T = any> {\n\t/** @internal */\n\t_value: unknown;\n\n\t/**\n\t * @internal\n\t * Version numbers should always be >= 0, because the special value -1 is used\n\t * by Nodes to signify potentially unused but recyclable nodes.\n\t */\n\t_version: number;\n\n\t/** @internal */\n\t_node?: Node;\n\n\t/** @internal */\n\t_targets?: Node;\n\n\tconstructor(value?: T);\n\n\t/** @internal */\n\t_refresh(): boolean;\n\n\t/** @internal */\n\t_subscribe(node: Node): void;\n\n\t/** @internal */\n\t_unsubscribe(node: Node): void;\n\n\tsubscribe(fn: (value: T) => void): () => void;\n\n\tvalueOf(): T;\n\n\ttoString(): string;\n\n\ttoJSON(): T;\n\n\tpeek(): T;\n\n\tget value(): T;\n\tset value(value: T);\n}\n\n/** @internal */\n// @ts-ignore internal Signal is viewed as function\nfunction Signal(this: Signal, value?: unknown) {\n\tthis._value = value;\n\tthis._version = 0;\n\tthis._node = undefined;\n\tthis._targets = undefined;\n}\n\nSignal.prototype._refresh = function () {\n\treturn true;\n};\n\nSignal.prototype._subscribe = function (node) {\n\tif (this._targets !== node && node._prevTarget === undefined) {\n\t\tnode._nextTarget = this._targets;\n\t\tif (this._targets !== undefined) {\n\t\t\tthis._targets._prevTarget = node;\n\t\t}\n\t\tthis._targets = node;\n\t}\n};\n\nSignal.prototype._unsubscribe = function (node) {\n\t// Only run the unsubscribe step if the signal has any subscribers to begin with.\n\tif (this._targets !== undefined) {\n\t\tconst prev = node._prevTarget;\n\t\tconst next = node._nextTarget;\n\t\tif (prev !== undefined) {\n\t\t\tprev._nextTarget = next;\n\t\t\tnode._prevTarget = undefined;\n\t\t}\n\t\tif (next !== undefined) {\n\t\t\tnext._prevTarget = prev;\n\t\t\tnode._nextTarget = undefined;\n\t\t}\n\t\tif (node === this._targets) {\n\t\t\tthis._targets = next;\n\t\t}\n\t}\n};\n\nSignal.prototype.subscribe = function (fn) {\n\tconst signal = this;\n\treturn effect(function (this: Effect) {\n\t\tconst value = signal.value;\n\t\tconst flag = this._flags & TRACKING;\n\t\tthis._flags &= ~TRACKING;\n\t\ttry {\n\t\t\tfn(value);\n\t\t} finally {\n\t\t\tthis._flags |= flag;\n\t\t}\n\t});\n};\n\nSignal.prototype.valueOf = function () {\n\treturn this.value;\n};\n\nSignal.prototype.toString = function () {\n\treturn this.value + \"\";\n};\n\nSignal.prototype.toJSON = function () {\n\treturn this.value;\n};\n\nSignal.prototype.peek = function () {\n\treturn this._value;\n};\n\nObject.defineProperty(Signal.prototype, \"value\", {\n\tget() {\n\t\tconst node = addDependency(this);\n\t\tif (node !== undefined) {\n\t\t\tnode._version = this._version;\n\t\t}\n\t\treturn this._value;\n\t},\n\tset(this: Signal, value) {\n\t\tif (evalContext instanceof Computed) {\n\t\t\tmutationDetected();\n\t\t}\n\n\t\tif (value !== this._value) {\n\t\t\tif (batchIteration > 100) {\n\t\t\t\tcycleDetected();\n\t\t\t}\n\n\t\t\tthis._value = value;\n\t\t\tthis._version++;\n\t\t\tglobalVersion++;\n\n\t\t\t/**@__INLINE__*/ startBatch();\n\t\t\ttry {\n\t\t\t\tfor (\n\t\t\t\t\tlet node = this._targets;\n\t\t\t\t\tnode !== undefined;\n\t\t\t\t\tnode = node._nextTarget\n\t\t\t\t) {\n\t\t\t\t\tnode._target._notify();\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tendBatch();\n\t\t\t}\n\t\t}\n\t},\n});\n\nfunction signal<T>(value: T): Signal<T> {\n\treturn new Signal(value);\n}\n\nfunction needsToRecompute(target: Computed | Effect): boolean {\n\t// Check the dependencies for changed values. The dependency list is already\n\t// in order of use. Therefore if multiple dependencies have changed values, only\n\t// the first used dependency is re-evaluated at this point.\n\tfor (\n\t\tlet node = target._sources;\n\t\tnode !== undefined;\n\t\tnode = node._nextSource\n\t) {\n\t\t// If there's a new version of the dependency before or after refreshing,\n\t\t// or the dependency has something blocking it from refreshing at all (e.g. a\n\t\t// dependency cycle), then we need to recompute.\n\t\tif (\n\t\t\tnode._source._version !== node._version ||\n\t\t\t!node._source._refresh() ||\n\t\t\tnode._source._version !== node._version\n\t\t) {\n\t\t\treturn true;\n\t\t}\n\t}\n\t// If none of the dependencies have changed values since last recompute then\n\t// there's no need to recompute.\n\treturn false;\n}\n\nfunction prepareSources(target: Computed | Effect) {\n\t/**\n\t * 1. Mark all current sources as re-usable nodes (version: -1)\n\t * 2. Set a rollback node if the current node is being used in a different context\n\t * 3. Point 'target._sources' to the tail of the doubly-linked list, e.g:\n\t *\n\t *    { undefined <- A <-> B <-> C -> undefined }\n\t *                   ↑           ↑\n\t *                   │           └──────┐\n\t * target._sources = A; (node is head)  │\n\t *                   ↓                  │\n\t * target._sources = C; (node is tail) ─┘\n\t */\n\tfor (\n\t\tlet node = target._sources;\n\t\tnode !== undefined;\n\t\tnode = node._nextSource\n\t) {\n\t\tconst rollbackNode = node._source._node;\n\t\tif (rollbackNode !== undefined) {\n\t\t\tnode._rollbackNode = rollbackNode;\n\t\t}\n\t\tnode._source._node = node;\n\t\tnode._version = -1;\n\n\t\tif (node._nextSource === undefined) {\n\t\t\ttarget._sources = node;\n\t\t\tbreak;\n\t\t}\n\t}\n}\n\nfunction cleanupSources(target: Computed | Effect) {\n\tlet node = target._sources;\n\tlet head = undefined;\n\n\t/**\n\t * At this point 'target._sources' points to the tail of the doubly-linked list.\n\t * It contains all existing sources + new sources in order of use.\n\t * Iterate backwards until we find the head node while dropping old dependencies.\n\t */\n\twhile (node !== undefined) {\n\t\tconst prev = node._prevSource;\n\n\t\t/**\n\t\t * The node was not re-used, unsubscribe from its change notifications and remove itself\n\t\t * from the doubly-linked list. e.g:\n\t\t *\n\t\t * { A <-> B <-> C }\n\t\t *         ↓\n\t\t *    { A <-> C }\n\t\t */\n\t\tif (node._version === -1) {\n\t\t\tnode._source._unsubscribe(node);\n\n\t\t\tif (prev !== undefined) {\n\t\t\t\tprev._nextSource = node._nextSource;\n\t\t\t}\n\t\t\tif (node._nextSource !== undefined) {\n\t\t\t\tnode._nextSource._prevSource = prev;\n\t\t\t}\n\t\t} else {\n\t\t\t/**\n\t\t\t * The new head is the last node seen which wasn't removed/unsubscribed\n\t\t\t * from the doubly-linked list. e.g:\n\t\t\t *\n\t\t\t * { A <-> B <-> C }\n\t\t\t *   ↑     ↑     ↑\n\t\t\t *   │     │     └ head = node\n\t\t\t *   │     └ head = node\n\t\t\t *   └ head = node\n\t\t\t */\n\t\t\thead = node;\n\t\t}\n\n\t\tnode._source._node = node._rollbackNode;\n\t\tif (node._rollbackNode !== undefined) {\n\t\t\tnode._rollbackNode = undefined;\n\t\t}\n\n\t\tnode = prev;\n\t}\n\n\ttarget._sources = head;\n}\n\ndeclare class Computed<T = any> extends Signal<T> {\n\t_compute: () => T;\n\t_sources?: Node;\n\t_globalVersion: number;\n\t_flags: number;\n\n\tconstructor(compute: () => T);\n\n\t_notify(): void;\n\tget value(): T;\n}\n\nfunction Computed(this: Computed, compute: () => unknown) {\n\tSignal.call(this, undefined);\n\n\tthis._compute = compute;\n\tthis._sources = undefined;\n\tthis._globalVersion = globalVersion - 1;\n\tthis._flags = OUTDATED;\n}\n\nComputed.prototype = new Signal() as Computed;\n\nComputed.prototype._refresh = function () {\n\tthis._flags &= ~NOTIFIED;\n\n\tif (this._flags & RUNNING) {\n\t\treturn false;\n\t}\n\n\t// If this computed signal has subscribed to updates from its dependencies\n\t// (TRACKING flag set) and none of them have notified about changes (OUTDATED\n\t// flag not set), then the computed value can't have changed.\n\tif ((this._flags & (OUTDATED | TRACKING)) === TRACKING) {\n\t\treturn true;\n\t}\n\tthis._flags &= ~OUTDATED;\n\n\tif (this._globalVersion === globalVersion) {\n\t\treturn true;\n\t}\n\tthis._globalVersion = globalVersion;\n\n\t// Mark this computed signal running before checking the dependencies for value\n\t// changes, so that the RUNNING flag can be used to notice cyclical dependencies.\n\tthis._flags |= RUNNING;\n\tif (this._version > 0 && !needsToRecompute(this)) {\n\t\tthis._flags &= ~RUNNING;\n\t\treturn true;\n\t}\n\n\tconst prevContext = evalContext;\n\ttry {\n\t\tprepareSources(this);\n\t\tevalContext = this;\n\t\tconst value = this._compute();\n\t\tif (\n\t\t\tthis._flags & HAS_ERROR ||\n\t\t\tthis._value !== value ||\n\t\t\tthis._version === 0\n\t\t) {\n\t\t\tthis._value = value;\n\t\t\tthis._flags &= ~HAS_ERROR;\n\t\t\tthis._version++;\n\t\t}\n\t} catch (err) {\n\t\tthis._value = err;\n\t\tthis._flags |= HAS_ERROR;\n\t\tthis._version++;\n\t}\n\tevalContext = prevContext;\n\tcleanupSources(this);\n\tthis._flags &= ~RUNNING;\n\treturn true;\n};\n\nComputed.prototype._subscribe = function (node) {\n\tif (this._targets === undefined) {\n\t\tthis._flags |= OUTDATED | TRACKING;\n\n\t\t// A computed signal subscribes lazily to its dependencies when the it\n\t\t// gets its first subscriber.\n\t\tfor (\n\t\t\tlet node = this._sources;\n\t\t\tnode !== undefined;\n\t\t\tnode = node._nextSource\n\t\t) {\n\t\t\tnode._source._subscribe(node);\n\t\t}\n\t}\n\tSignal.prototype._subscribe.call(this, node);\n};\n\nComputed.prototype._unsubscribe = function (node) {\n\t// Only run the unsubscribe step if the computed signal has any subscribers.\n\tif (this._targets !== undefined) {\n\t\tSignal.prototype._unsubscribe.call(this, node);\n\n\t\t// Computed signal unsubscribes from its dependencies when it loses its last subscriber.\n\t\t// This makes it possible for unreferences subgraphs of computed signals to get garbage collected.\n\t\tif (this._targets === undefined) {\n\t\t\tthis._flags &= ~TRACKING;\n\n\t\t\tfor (\n\t\t\t\tlet node = this._sources;\n\t\t\t\tnode !== undefined;\n\t\t\t\tnode = node._nextSource\n\t\t\t) {\n\t\t\t\tnode._source._unsubscribe(node);\n\t\t\t}\n\t\t}\n\t}\n};\n\nComputed.prototype._notify = function () {\n\tif (!(this._flags & NOTIFIED)) {\n\t\tthis._flags |= OUTDATED | NOTIFIED;\n\n\t\tfor (\n\t\t\tlet node = this._targets;\n\t\t\tnode !== undefined;\n\t\t\tnode = node._nextTarget\n\t\t) {\n\t\t\tnode._target._notify();\n\t\t}\n\t}\n};\n\nComputed.prototype.peek = function () {\n\tif (!this._refresh()) {\n\t\tcycleDetected();\n\t}\n\tif (this._flags & HAS_ERROR) {\n\t\tthrow this._value;\n\t}\n\treturn this._value;\n};\n\nObject.defineProperty(Computed.prototype, \"value\", {\n\tget() {\n\t\tif (this._flags & RUNNING) {\n\t\t\tcycleDetected();\n\t\t}\n\t\tconst node = addDependency(this);\n\t\tthis._refresh();\n\t\tif (node !== undefined) {\n\t\t\tnode._version = this._version;\n\t\t}\n\t\tif (this._flags & HAS_ERROR) {\n\t\t\tthrow this._value;\n\t\t}\n\t\treturn this._value;\n\t},\n});\n\ninterface ReadonlySignal<T = any> extends Signal<T> {\n\treadonly value: T;\n}\n\nfunction computed<T>(compute: () => T): ReadonlySignal<T> {\n\treturn new Computed(compute);\n}\n\nfunction cleanupEffect(effect: Effect) {\n\tconst cleanup = effect._cleanup;\n\teffect._cleanup = undefined;\n\n\tif (typeof cleanup === \"function\") {\n\t\t/*@__INLINE__**/ startBatch();\n\n\t\t// Run cleanup functions always outside of any context.\n\t\tconst prevContext = evalContext;\n\t\tevalContext = undefined;\n\t\ttry {\n\t\t\tcleanup();\n\t\t} catch (err) {\n\t\t\teffect._flags &= ~RUNNING;\n\t\t\teffect._flags |= DISPOSED;\n\t\t\tdisposeEffect(effect);\n\t\t\tthrow err;\n\t\t} finally {\n\t\t\tevalContext = prevContext;\n\t\t\tendBatch();\n\t\t}\n\t}\n}\n\nfunction disposeEffect(effect: Effect) {\n\tfor (\n\t\tlet node = effect._sources;\n\t\tnode !== undefined;\n\t\tnode = node._nextSource\n\t) {\n\t\tnode._source._unsubscribe(node);\n\t}\n\teffect._compute = undefined;\n\teffect._sources = undefined;\n\n\tcleanupEffect(effect);\n}\n\nfunction endEffect(this: Effect, prevContext?: Computed | Effect) {\n\tif (evalContext !== this) {\n\t\tthrow new Error(\"Out-of-order effect\");\n\t}\n\tcleanupSources(this);\n\tevalContext = prevContext;\n\n\tthis._flags &= ~RUNNING;\n\tif (this._flags & DISPOSED) {\n\t\tdisposeEffect(this);\n\t}\n\tendBatch();\n}\n\ndeclare class Effect {\n\t_compute?: () => void | (() => void);\n\t_cleanup?: () => void;\n\t_sources?: Node;\n\t_nextBatchedEffect?: Effect;\n\t_flags: number;\n\n\tconstructor(compute: () => void | (() => void));\n\n\t_callback(): void;\n\t_start(): () => void;\n\t_notify(): void;\n\t_dispose(): void;\n}\n\nfunction Effect(this: Effect, compute: () => void | (() => void)) {\n\tthis._compute = compute;\n\tthis._cleanup = undefined;\n\tthis._sources = undefined;\n\tthis._nextBatchedEffect = undefined;\n\tthis._flags = TRACKING;\n}\n\nEffect.prototype._callback = function () {\n\tconst finish = this._start();\n\ttry {\n\t\tif (this._flags & DISPOSED) return;\n\t\tif (this._compute === undefined) return;\n\n\t\tconst cleanup = this._compute();\n\t\tif (typeof cleanup === \"function\") {\n\t\t\tthis._cleanup = cleanup;\n\t\t}\n\t} finally {\n\t\tfinish();\n\t}\n};\n\nEffect.prototype._start = function () {\n\tif (this._flags & RUNNING) {\n\t\tcycleDetected();\n\t}\n\tthis._flags |= RUNNING;\n\tthis._flags &= ~DISPOSED;\n\tcleanupEffect(this);\n\tprepareSources(this);\n\n\t/*@__INLINE__**/ startBatch();\n\tconst prevContext = evalContext;\n\tevalContext = this;\n\treturn endEffect.bind(this, prevContext);\n};\n\nEffect.prototype._notify = function () {\n\tif (!(this._flags & NOTIFIED)) {\n\t\tthis._flags |= NOTIFIED;\n\t\tthis._nextBatchedEffect = batchedEffect;\n\t\tbatchedEffect = this;\n\t}\n};\n\nEffect.prototype._dispose = function () {\n\tthis._flags |= DISPOSED;\n\n\tif (!(this._flags & RUNNING)) {\n\t\tdisposeEffect(this);\n\t}\n};\n\nfunction effect(compute: () => void | (() => void)): () => void {\n\tconst effect = new Effect(compute);\n\ttry {\n\t\teffect._callback();\n\t} catch (err) {\n\t\teffect._dispose();\n\t\tthrow err;\n\t}\n\t// Return a bound function instead of a wrapper like `() => effect._dispose()`,\n\t// because bound functions seem to be just as fast and take up a lot less memory.\n\treturn effect._dispose.bind(effect);\n}\n\nexport { signal, computed, effect, batch, Signal, type ReadonlySignal };\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {effect} from '@preact/signals-core';\nimport type {ReactiveElement} from 'lit';\n\nexport {signal} from '@preact/signals-core';\n\n// params that are going to be passed into any child extending SignalElement\n// tslint:disable-next-line:no-any We do not know the types of constructor\ntype ReactiveElementConstructor = new (...args: any[]) => ReactiveElement;\n\n/**\n * A mixin that hooks Preact signal changes to ReactiveElement.\n *\n * @param Base The class to mix-in and listen to Preact signal changes.\n */\nexport function SignalElement<T extends ReactiveElementConstructor>(\n  Base: T,\n): T {\n  return class SignalElement extends Base {\n    private _disposeEffect?: () => void;\n\n    performUpdate() {\n      if (!this.isUpdatePending) {\n        return;\n      }\n      this._disposeEffect?.();\n      let performingUpdate = true;\n      this._disposeEffect = effect(() => {\n        if (performingUpdate) {\n          performingUpdate = false;\n          super.performUpdate();\n        } else {\n          this.requestUpdate();\n        }\n      });\n    }\n  };\n}\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {signal} from './signal-element.js';\n\n/**\n * Whether or not the sidebar drawer should be open.\n */\nexport const drawerOpenSignal = signal(false);\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {signal} from './signal-element.js';\n\n/**\n * Whether or not the site content should be inert (sidebar is still\n * interactive).\n */\nexport const inertContentSignal = signal(false);\n\n/**\n * Whether or not the sidebar should be inert.\n */\nexport const inertSidebarSignal = signal(false);\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {animate, fadeIn, fadeOut} from '@lit-labs/motion';\nimport {EASING} from '@material/web/internal/motion/animation.js';\nimport {LitElement, PropertyValues, css, html, nothing} from 'lit';\nimport {customElement, property, state} from 'lit/decorators.js';\n\nimport {drawerOpenSignal} from '../signals/drawer-open-state.js';\nimport {inertContentSignal, inertSidebarSignal} from '../signals/inert.js';\nimport {SignalElement} from '../signals/signal-element.js';\n\n/**\n * A layout element that positions the top-app-bar, the main page content, and\n * the side navigation drawer.\n *\n * The drawer will automatically set itself as collapsible at narrower page\n * widths, and position itself inline with the page at wider page widths. Most\n * importantly, this sidebar is SSR compatible.\n */\n@customElement('nav-drawer')\nexport class NavDrawer extends SignalElement(LitElement) {\n  /**\n   * Whether or not the side drawer is collapsible or inline.\n   */\n  @state() private isCollapsible = false;\n\n  /**\n   * Whether or not the TOC should be rendered.\n   */\n  @property({type: Boolean, attribute: 'has-toc'}) hasToc = false;\n\n  @property({attribute: 'page-title'}) pageTitle = '';\n\n  private lastDrawerOpen = drawerOpenSignal.value;\n\n  render() {\n    const showModal = this.isCollapsible && drawerOpenSignal.value;\n\n    // Values taken from internal material motion spec\n    const drawerSlideAnimationDuration = showModal ? 500 : 150;\n    const drawerContentOpacityDuration = showModal ? 300 : 150;\n    const scrimOpacityDuration = 150;\n\n    const drawerSlideAnimationEasing = showModal\n      ? EASING.EMPHASIZED\n      : EASING.EMPHASIZED_ACCELERATE;\n\n    return html`\n      <div class=\"root\">\n        <slot name=\"top-app-bar\"></slot>\n        <div class=\"body  ${drawerOpenSignal.value ? 'open' : ''}\">\n          <div class=\"spacer\" ?inert=${inertSidebarSignal.value}>\n            ${showModal\n              ? html`<div\n                  class=\"scrim\"\n                  @click=${this.onScrimClick}\n                  ${animate({\n                    properties: ['opacity'],\n                    keyframeOptions: {\n                      duration: scrimOpacityDuration,\n                      easing: 'linear',\n                    },\n                    in: fadeIn,\n                    out: fadeOut,\n                  })}></div>`\n              : nothing}\n            <aside\n              ?inert=${this.isCollapsible && !drawerOpenSignal.value}\n              ${animate({\n                properties: ['transform'],\n                keyframeOptions: {\n                  duration: drawerSlideAnimationDuration,\n                  easing: drawerSlideAnimationEasing,\n                },\n              })}>\n              <div class=\"scroll-wrapper\">\n                <slot\n                  ${animate({\n                    properties: ['opacity'],\n                    keyframeOptions: {\n                      duration: drawerContentOpacityDuration,\n                      easing: 'linear',\n                    },\n                  })}></slot>\n              </div>\n            </aside>\n          </div>\n          <div class=\"panes\">\n            ${this.renderTocPane(showModal)}${this.renderContent(showModal)}\n          </div>\n        </div>\n      </div>\n    `;\n  }\n\n  private renderContent(showModal: boolean) {\n    return html` <div\n      class=\"pane content-pane\"\n      ?inert=${showModal || inertContentSignal.value}>\n      <div class=\"scroll-wrapper\">\n        <div class=\"content\">\n          <slot name=\"app-content\"></slot>\n        </div>\n      </div>\n    </div>`;\n  }\n\n  private renderTocPane(showModal: boolean) {\n    if (!this.hasToc) {\n      return nothing;\n    }\n\n    return html` <div\n      class=\"pane toc\"\n      ?inert=${showModal || inertContentSignal.value}>\n      <div class=\"scroll-wrapper\">\n        <p>On this page:</p>\n        <h2>${this.pageTitle}</h2>\n        <slot name=\"toc\"></slot>\n      </div>\n    </div>`;\n  }\n\n  /**\n   * Closes the drawer on scrim click.\n   */\n  private onScrimClick() {\n    drawerOpenSignal.value = false;\n  }\n\n  firstUpdated() {\n    const queryResult = window.matchMedia('(max-width: 1500px)');\n    this.isCollapsible = queryResult.matches;\n\n    // Listen for page resizes to mark the drawer as collapsible.\n    queryResult.addEventListener('change', (e) => {\n      this.isCollapsible = e.matches;\n    });\n  }\n\n  updated(changed: PropertyValues<this>) {\n    super.updated(changed);\n    if (\n      this.lastDrawerOpen !== drawerOpenSignal.value &&\n      drawerOpenSignal.value &&\n      this.isCollapsible\n    ) {\n      (\n        this.querySelector(\n          'md-list.nav md-list-item[tabindex=\"0\"]',\n        ) as HTMLElement\n      )?.focus();\n    }\n  }\n\n  static styles = css`\n    :host {\n      --_drawer-width: var(--catalog-drawer-width, 300px);\n      /* When in wide mode inline start margin is handled by the sidebar */\n      --_pane-margin-inline-start: 0px;\n      --_pane-margin-inline-end: var(--catalog-spacing-l);\n      --_pane-margin-block-end: var(--catalog-spacing-l);\n      --_toc-pane-width: 250px;\n      min-height: 100dvh;\n      display: flex;\n      flex-direction: column;\n    }\n\n    ::slotted(nav) {\n      list-style: none;\n    }\n\n    .body {\n      display: flex;\n      flex-grow: 1;\n    }\n\n    .spacer {\n      position: relative;\n      transition: min-width 0.5s cubic-bezier(0.3, 0, 0, 1);\n    }\n\n    .spacer,\n    aside {\n      min-width: var(--_drawer-width);\n      max-width: var(--_drawer-width);\n    }\n\n    .pane {\n      box-sizing: border-box;\n      overflow: auto;\n      width: 100%;\n      /* Explicit height to make overflow work */\n      height: calc(\n        100dvh - var(--catalog-top-app-bar-height) -\n          var(--_pane-margin-block-end)\n      );\n      background-color: var(--md-sys-color-surface);\n      border-radius: var(--catalog-shape-xl);\n    }\n\n    .pane,\n    .panes {\n      /* emphasized \u2013 duration matching render fn for sidebar */\n      transition: 0.5s cubic-bezier(0.3, 0, 0, 1);\n      transition-property: margin, height, border-radius, max-width, width;\n    }\n\n    .panes {\n      display: flex;\n      justify-content: start;\n      flex-direction: row-reverse;\n      gap: var(--_pane-margin-inline-end);\n      margin-inline: var(--_pane-margin-inline-start)\n        var(--_pane-margin-inline-end);\n      width: 100%;\n      max-width: calc(\n        100% - var(--_drawer-width) - var(--_pane-margin-inline-start) -\n          var(--_pane-margin-inline-end)\n      );\n    }\n\n    .pane.content-pane {\n      flex-grow: 1;\n    }\n\n    .pane.toc {\n      width: auto;\n      box-sizing: border-box;\n      width: var(--_toc-pane-width);\n    }\n\n    .toc .scroll-wrapper {\n      padding-inline: var(--catalog-spacing-xl);\n    }\n\n    .pane.toc p {\n      margin-block: 0;\n      font-size: var(--catalog-label-s-font-size);\n    }\n\n    .pane.toc h2 {\n      margin-block: var(--catalog-spacing-s) var(--catalog-spacing-m);\n      font-size: var(--catalog-headline-s-font-size);\n    }\n\n    .content {\n      flex-grow: 1;\n      display: flex;\n      justify-content: center;\n      box-sizing: border-box;\n      padding-inline: var(--catalog-spacing-xl);\n      width: 100%;\n    }\n\n    .content slot {\n      display: block;\n      width: 100%;\n      max-width: min(100%, var(--_max-width));\n    }\n\n    aside {\n      transition: transform 0.5s cubic-bezier(0.3, 0, 0, 1);\n      position: fixed;\n      isolation: isolate;\n      inset: var(--catalog-top-app-bar-height) 0 0 0;\n      z-index: 12;\n      background-color: var(--md-sys-color-surface-container);\n      overflow: hidden;\n    }\n\n    .scroll-wrapper {\n      overflow-y: auto;\n      max-height: 100%;\n      border-radius: inherit;\n      box-sizing: border-box;\n    }\n\n    .pane .scroll-wrapper {\n      padding-block: var(--catalog-spacing-xl);\n    }\n\n    aside slot {\n      display: block;\n    }\n\n    .scrim {\n      background-color: rgba(0, 0, 0, 0.32);\n    }\n\n    @media (max-width: 900px) {\n      .pane.toc {\n        display: none;\n      }\n    }\n\n    @media (max-width: 1500px) {\n      .spacer {\n        min-width: 0px;\n      }\n\n      .panes {\n        max-width: calc(\n          100% - var(--_pane-margin-inline-start) -\n            var(--_pane-margin-inline-end)\n        );\n      }\n\n      .content {\n        max-width: 100vw;\n        padding-inline: var(--catalog-spacing-xl);\n      }\n\n      .scrim {\n        position: fixed;\n        inset: 0;\n      }\n\n      aside {\n        transition: unset;\n        transform: translateX(-100%);\n        border-radius: 0 var(--catalog-shape-xl) var(--catalog-shape-xl) 0;\n      }\n\n      :host {\n        --_pane-margin-inline-start: var(--catalog-spacing-xl);\n      }\n\n      .open aside {\n        transform: translateX(0);\n      }\n\n      aside slot {\n        opacity: 0;\n      }\n\n      .open aside slot {\n        opacity: 1;\n      }\n\n      .open .scrim {\n        inset: 0;\n        z-index: 11;\n      }\n    }\n\n    @media (max-width: 600px) {\n      .pane {\n        border-end-start-radius: 0;\n        border-end-end-radius: 0;\n      }\n\n      :host {\n        --_pane-margin-block-end: 0px;\n        --_pane-margin-inline-start: 0px;\n        --_pane-margin-inline-end: 0px;\n      }\n    }\n\n    /* On desktop, make the scrollbars less blocky so you can see the border\n     * radius of the pane. On most mobile platforms, these scrollbars are hidden\n     * by default. It'll still unfortunately render on top of the border radius.\n     */\n    @media (pointer: fine) {\n      :host {\n        --_scrollbar-width: 8px;\n      }\n\n      .scroll-wrapper {\n        /* firefox */\n        scrollbar-color: var(--md-sys-color-primary) transparent;\n        scrollbar-width: thin;\n      }\n\n      .content {\n        /* adjust for the scrollbar width */\n        padding-inline-end: calc(\n          var(--catalog-spacing-xl) - var(--_scrollbar-width)\n        );\n      }\n\n      /* Chromium + Safari */\n      .scroll-wrapper::-webkit-scrollbar {\n        background-color: transparent;\n        width: var(--_scrollbar-width);\n      }\n\n      .scroll-wrapper::-webkit-scrollbar-thumb {\n        background-color: var(--md-sys-color-primary);\n        border-radius: calc(var(--_scrollbar-width) / 2);\n      }\n    }\n\n    @media (forced-colors: active) {\n      .pane {\n        border: 1px solid CanvasText;\n      }\n\n      @media (max-width: 1500px) {\n        aside {\n          box-sizing: border-box;\n          border: 1px solid CanvasText;\n        }\n\n        .scrim {\n          background-color: rgba(0, 0, 0, 0.75);\n        }\n      }\n\n      @media (pointer: fine) {\n        .scroll-wrapper {\n          /* firefox */\n          scrollbar-color: CanvasText transparent;\n        }\n\n        .scroll-wrapper::-webkit-scrollbar-thumb {\n          /* Chromium + Safari */\n          background-color: CanvasText;\n        }\n      }\n    }\n  `;\n}\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {html} from 'lit';\n\n/**\n * The Material design logo.\n *\n * Source: Internal google symbols search.\n */\nexport const materialDesign = html` <svg\n  viewBox=\"0 96 960 960\"\n  fill=\"currentColor\">\n  <path\n    d=\"M480 1016q-91 0-171-34.5T169 887q-60-60-94.5-140T40 576q0-91 34.5-171T169 265q60-60 140-94.5T480 136q91 0 171 34.5T791 265q60 60 94.5 140T920 576q0 91-34.5 171T791 887q-60 60-140 94.5T480 1016ZM200 802V351q-38 47-59 104t-21 121q0 65 21 122t59 104Zm54-506h452q-47-38-104-59t-122-21q-65 0-122 21t-104 59Zm226 381 151-301H330l150 301Zm40 99h160V456L520 776Zm-240 0h160L280 456v320Zm200 160q64 0 121.5-21T706 856H254q47 38 104.5 59T480 936Zm280-134q38-47 59-104t21-122q0-64-21-121t-59-104v451Z\" />\n</svg>`;\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport '@material/web/focus/md-focus-ring.js';\nimport '@material/web/icon/icon.js';\nimport '@material/web/iconbutton/icon-button.js';\n\nimport type {MdIconButton} from '@material/web/iconbutton/icon-button.js';\nimport {css, html, LitElement} from 'lit';\nimport {customElement, query, state} from 'lit/decorators.js';\nimport {live} from 'lit/directives/live.js';\n\nimport {drawerOpenSignal} from '../signals/drawer-open-state.js';\nimport {inertContentSignal, inertSidebarSignal} from '../signals/inert.js';\nimport {SignalElement} from '../signals/signal-element.js';\nimport {materialDesign} from '../svg/material-design-logo.js';\n\n/**\n * Top app bar of the catalog.\n */\n@customElement('top-app-bar')\nexport class TopAppBar extends SignalElement(LitElement) {\n  /**\n   * Whether or not the color picker menu is open.\n   */\n  @state() private menuOpen = false;\n  @query('theme-changer') private themeChanger!: HTMLElement;\n\n  render() {\n    return html`\n      <header>\n        <div class=\"default-content\">\n          <section class=\"start\">\n            <md-icon-button\n              toggle\n              class=\"menu-button\"\n              aria-label-selected=\"open navigation menu\"\n              aria-label=\"close navigation menu\"\n              aria-expanded=${drawerOpenSignal.value ? 'false' : 'true'}\n              title=\"${!drawerOpenSignal.value\n                ? 'Open'\n                : 'Close'} navigation menu\"\n              .selected=${live(!drawerOpenSignal.value)}\n              @input=${this.onMenuIconToggle}>\n              <md-icon slot=\"selected\">menu</md-icon>\n              <md-icon>menu_open</md-icon>\n            </md-icon-button>\n            <md-icon-button\n              href=\"/\"\n              class=\"home-button\"\n              title=\"Home\"\n              aria-label=\"Home\">\n              ${materialDesign}\n            </md-icon-button>\n          </section>\n\n          <a href=\"/\" id=\"home-link\">\n            Material Web\n            <md-focus-ring for=\"home-link\"></md-focus-ring>\n          </a>\n\n          <a id=\"skip-to-main\" href=\"#main-content\" tabindex=\"0\">\n            Skip to main content\n          </a>\n\n          <section class=\"end\">\n            <lit-island\n              on:interaction=\"pointerenter,focusin,pointerdown\"\n              import=\"/js/hydration-entrypoints/menu.js\"\n              id=\"menu-island\">\n              <md-icon-button\n                id=\"theme-button\"\n                @click=\"${this.onPaletteClick}\"\n                title=\"Page theme controls\"\n                aria-label=\"Page theme controls\"\n                aria-haspopup=\"dialog\"\n                aria-expanded=${this.menuOpen ? 'true' : 'false'}>\n                <md-icon>palette</md-icon>\n              </md-icon-button>\n              <md-menu\n                anchor=\"theme-button\"\n                menu-corner=\"start-end\"\n                anchor-corner=\"end-end\"\n                default-focus=\"none\"\n                role=\"dialog\"\n                aria-label=\"Page color theme controls\"\n                .open=${this.menuOpen}\n                @opened=${this.onMenuOpened}\n                @closed=${this.onMenuClosed}\n                @keydown=${this.onKeydown}>\n                <theme-changer></theme-changer>\n              </md-menu>\n            </lit-island>\n          </section>\n        </div>\n        <slot></slot>\n      </header>\n    `;\n  }\n\n  /**\n   * Opens the theme changer menu and inerts the rest of the page.\n   */\n  private onPaletteClick() {\n    this.menuOpen = true;\n    inertContentSignal.value = true;\n    inertSidebarSignal.value = true;\n    drawerOpenSignal.value = false;\n  }\n\n  /**\n   * Syncs current menu state with actual menu state and makes the rest of the\n   * page interactive again.\n   */\n  private onMenuClosed() {\n    this.menuOpen = false;\n    inertContentSignal.value = false;\n    inertSidebarSignal.value = false;\n  }\n\n  private onMenuOpened() {\n    this.themeChanger.focus();\n  }\n\n  private onKeydown(e: KeyboardEvent) {\n    if (!e.defaultPrevented && e.key === 'Escape') {\n      e.preventDefault();\n      this.menuOpen = false;\n    }\n  }\n\n  /**\n   * Toggles the sidebar's open state.\n   */\n  private onMenuIconToggle(e: InputEvent) {\n    drawerOpenSignal.value = !(e.target as MdIconButton).selected;\n  }\n\n  static styles = css`\n    :host,\n    header {\n      display: block;\n      height: var(--catalog-top-app-bar-height);\n    }\n\n    header {\n      position: fixed;\n      inset: 0 0 auto 0;\n      display: flex;\n      align-items: center;\n      box-sizing: border-box;\n      padding: var(--catalog-spacing-m) var(--catalog-spacing-l);\n      background-color: var(--md-sys-color-surface-container);\n      color: var(--md-sys-color-on-surface);\n      z-index: 12;\n    }\n\n    .default-content {\n      width: 100%;\n      display: flex;\n      align-items: center;\n    }\n\n    md-icon-button:not(:defined) {\n      width: 40px;\n      height: 40px;\n      display: flex;\n      visibility: hidden;\n    }\n\n    md-icon-button * {\n      display: block;\n    }\n\n    a {\n      color: var(--md-sys-color-primary);\n      font-size: max(var(--catalog-title-l-font-size), 22px);\n      text-decoration: none;\n      padding-inline: 12px;\n      position: relative;\n      outline: none;\n      vertical-align: middle;\n    }\n\n    .start .menu-button {\n      display: none;\n    }\n\n    .start .home-button * {\n      color: var(--md-sys-color-primary);\n    }\n\n    .end {\n      flex-grow: 1;\n      display: flex;\n      justify-content: flex-end;\n    }\n\n    #menu-island {\n      position: relative;\n    }\n\n    #skip-to-main {\n      padding: var(--catalog-spacing-s);\n      border-radius: var(--catalog-shape-m);\n      background-color: var(--md-sys-color-inverse-surface);\n      color: var(--md-sys-color-inverse-on-surface);\n      opacity: 0;\n      position: absolute;\n      pointer-events: none;\n    }\n\n    #skip-to-main:focus-visible {\n      opacity: 1;\n      pointer-events: auto;\n    }\n\n    @media (max-width: 1500px) {\n      .start .home-button {\n        display: none;\n      }\n\n      .start .menu-button {\n        display: flex;\n      }\n    }\n  `;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'top-app-bar': TopAppBar;\n  }\n}\n"],
  "mappings": "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",
  "names": ["notifyChildrenConnectedChanged", "parent", "isConnected", "children", "_$disconnectableChildren", "obj", "_b", "_a", "o", "e", "removeDisconnectableFromParent", "_$parent", "delete", "size", "addDisconnectableToParent", "Set", "has", "add", "installDisconnectAPI", "reparentDisconnectables", "newParent", "this", "notifyChildPartConnectedChanged", "isClearingValue", "fromPartIndex", "value", "_$committedValue", "Array", "isArray", "i", "length", "type", "PartType", "CHILD", "_c", "_$notifyConnectionChanged", "_d", "_$reparentDisconnectables", "AsyncDirective", "Directive", "constructor", "_$initialize", "part", "attributeIndex", "super", "_$isConnected", "_$AO", "isClearingDirective", "r", "reconnected", "call", "disconnected", "setValue", "isSingleExpression", "__part", "_$setValue", "newValues", "__attributeIndex", "controllerMap", "WeakMap", "z", "disconnectedProps", "Map", "renderedHosts", "WeakSet", "animationFrame", "Promise", "resolve", "requestAnimationFrame", "fadeOut", "opacity", "fadeIn", "opacity", "diffOp", "a", "b", "v", "quotientOp", "transformProps", "left", "value", "transform", "top", "width", "height", "defaultKeyframeOptions", "duration", "easing", "defaultCssProperties", "nodeToAnimateMap", "WeakMap", "Animate", "AsyncDirective", "constructor", "part", "super", "this", "_parentNode", "_nextSibling", "_shouldAnimate", "shouldLog", "type", "PartType", "CHILD", "Error", "createFinished", "_a", "resolveFinished", "call", "finished", "Promise", "r", "_resolveFinished", "async", "render", "_options", "nothing", "getController", "controllerMap", "get", "_host", "isDisabled", "options", "disabled", "update", "firstUpdate", "host", "addController", "element", "set", "optionsOrCallback", "_setOptions", "controller", "defaultOptions", "keyframeOptions", "_b", "properties", "_measure", "props", "bounds", "getBoundingClientRect", "computedStyle", "getComputedStyle", "forEach", "p", "asNum", "Number", "isNaN", "String", "_canStart", "dirty", "guard", "previous", "Array", "isArray", "length", "every", "i", "_previousValue", "hasUpdated", "isAnimating", "isConnected", "from", "hostUpdate", "_fromValues", "parentNode", "nextSibling", "skipInitial", "isHostRendered", "frames", "prepare", "animationFrame", "ancestors", "_getAncestors", "animationOptions", "_calculateKeyframeOptions", "toValues", "to", "_applyAncestorAdjustments", "log", "calculateKeyframes", "disconnected", "disconnectedProps", "inId", "delete", "in", "slice", "z", "f", "zIndex", "animate", "resetStyles", "_styles", "setAttribute", "commitStyles", "getAttribute", "webAnimation", "cancel", "reconnected", "id", "out", "t", "ref", "insertBefore", "stabilizeOut", "shifted", "position", "style", "remove", "start", "onStart", "didFinish", "didAnimate", "onComplete", "animatingProperties", "push", "hostRendered", "renderedHosts", "has", "updateComplete", "then", "add", "Object", "assign", "ancestorProps", "map", "filter", "dScaleX", "dScaleY", "center", "e", "fromFrame", "toFrame", "hasFrames", "tp", "op", "transformOrigin", "onFrames", "playState", "pending", "message", "data", "console", "directive", "positionedPoints", "Position", "AsyncDirective", "constructor", "part", "super", "type", "PartType", "ELEMENT", "Error", "render", "_targetCallbackOrRef", "_positions", "nothing", "update", "target", "positions", "this", "_host", "_a", "options", "host", "addController", "_element", "element", "hostUpdated", "_position", "value", "parent", "offsetParent", "tr", "getBoundingClientRect", "pr", "_b", "forEach", "p", "x", "includes", "style", "position", "directive", "cycleDetected", "Error", "endBatch", "batchDepth", "error", "hasError", "batchedEffect", "o", "batchIteration", "effect", "next", "_nextBatchedEffect", "_flags", "needsToRecompute", "_callback", "err", "evalContext", "batchedEffect", "batchDepth", "batchIteration", "globalVersion", "addDependency", "signal", "node", "_node", "_target", "_version", "_source", "_prevSource", "_sources", "_nextSource", "_prevTarget", "_nextTarget", "_rollbackNode", "_flags", "_subscribe", "Signal", "value", "this", "_value", "_targets", "prototype", "_refresh", "_unsubscribe", "prev", "next", "subscribe", "fn", "effect", "flag", "valueOf", "toString", "toJSON", "peek", "Object", "defineProperty", "get", "set", "Computed", "Error", "mutationDetected", "cycleDetected", "_notify", "endBatch", "needsToRecompute", "target", "prepareSources", "rollbackNode", "cleanupSources", "head", "compute", "call", "undefined", "_compute", "_globalVersion", "prevContext", "err", "OUTDATED", "_node2", "cleanupEffect", "effect", "cleanup", "_cleanup", "batchDepth", "prevContext", "evalContext", "err", "_flags", "disposeEffect", "endBatch", "node", "_sources", "_nextSource", "_source", "_unsubscribe", "_compute", "endEffect", "this", "Error", "cleanupSources", "g", "compute", "_nextBatchedEffect", "Effect", "prototype", "_callback", "finish", "_start", "cycleDetected", "prepareSources", "t", "bind", "_notify", "batchedEffect", "_dispose", "b", "u", "u", "e", "i", "e", "i"]
}
