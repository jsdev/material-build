{
  "version": 3,
  "sources": ["../../src/pages/global.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview This file runs logic across every page in the SSG'd catalog and\n * is loaded top-level as a <script type=module>. So this file handles\n * global client-side logic for shared components (e.g. top-app bar) that can't\n * be run on the server in SSR such as accessing localstorage, media queries,\n * and global scroll listeners.\n */\n\nimport {\n  changeColor,\n  changeColorAndMode,\n  changeColorMode,\n  getCurrentMode,\n  getCurrentSeedColor,\n  getCurrentThemeString,\n  getLastSavedAutoColorMode,\n  isModeDark,\n} from '../utils/theme.js';\n\n/**\n * Applies theme-based event listeners such as changing color, mode, and\n * listening to system mode changes.\n */\nfunction applyColorThemeListeners() {\n  document.body.addEventListener('change-color', (event) => {\n    changeColor(event.color);\n  });\n\n  document.body.addEventListener('change-mode', (event) => {\n    changeColorMode(event.mode);\n  });\n\n  // Listen for system color change and applies the new theme if the current\n  // color mode is 'auto'.\n  window\n    .matchMedia('(prefers-color-scheme: dark)')\n    .addEventListener('change', () => {\n      if (getCurrentMode() !== 'auto') {\n        return;\n      }\n\n      changeColor(getCurrentSeedColor()!);\n    });\n}\n\n/**\n * Sets color and mode to '#81ea6c' and 'auto' respectively if there is no\n * material theme saved to localStorage. This is the case in initial navigation\n * to the catalog.\n */\nfunction initializeTheme() {\n  if (!getCurrentThemeString()) {\n    // Generates a primary color close to GM3 baseline primary color.\n    changeColorAndMode('#ECAA2E', 'auto');\n  }\n}\n\n/**\n * Determines whether to update the theme on page navigation if the mode is\n * 'auto'.\n *\n * This is necessary in the edge case where the user has set color mode to\n * 'auto', and the system mode is A. They navigate away from the catalog, and\n * over time the system mode changes to B. When they navigate back to the\n * catalog, the mode may be 'auto', but color theme with mode A is saved instead\n * of B.\n */\nfunction determinePageNavigationAutoMode() {\n  if (getCurrentMode() !== 'auto') {\n    return;\n  }\n\n  const actualColorMode = isModeDark('auto', false) ? 'dark' : 'light';\n  const lastSavedAutoColorMode = getLastSavedAutoColorMode();\n\n  if (actualColorMode !== lastSavedAutoColorMode) {\n    // Recalculate auto mode with the same theme color.\n    changeColorMode('auto');\n  }\n}\n\napplyColorThemeListeners();\ninitializeTheme();\ndeterminePageNavigationAutoMode();\n"],
  "mappings": ";;;;;;;;;;;;;AA6BA,SAAS,2BAA2B;AAClC,WAAS,KAAK,iBAAiB,gBAAgB,CAAC,UAAU;AACxD,gBAAY,MAAM,KAAK;AAAA,EACzB,CAAC;AAED,WAAS,KAAK,iBAAiB,eAAe,CAAC,UAAU;AACvD,oBAAgB,MAAM,IAAI;AAAA,EAC5B,CAAC;AAID,SACG,WAAW,8BAA8B,EACzC,iBAAiB,UAAU,MAAM;AAChC,QAAI,eAAe,MAAM,QAAQ;AAC/B;AAAA,IACF;AAEA,gBAAY,oBAAoB,CAAE;AAAA,EACpC,CAAC;AACL;AAOA,SAAS,kBAAkB;AACzB,MAAI,CAAC,sBAAsB,GAAG;AAE5B,uBAAmB,WAAW,MAAM;AAAA,EACtC;AACF;AAYA,SAAS,kCAAkC;AACzC,MAAI,eAAe,MAAM,QAAQ;AAC/B;AAAA,EACF;AAEA,QAAM,kBAAkB,WAAW,QAAQ,KAAK,IAAI,SAAS;AAC7D,QAAM,yBAAyB,0BAA0B;AAEzD,MAAI,oBAAoB,wBAAwB;AAE9C,oBAAgB,MAAM;AAAA,EACxB;AACF;AAEA,yBAAyB;AACzB,gBAAgB;AAChB,gCAAgC;",
  "names": []
}
